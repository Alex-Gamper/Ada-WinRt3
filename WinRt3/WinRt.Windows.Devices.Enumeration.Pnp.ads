--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.Enumeration.Pnp is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IPnpObject_Interface is interface and WinRt.IInspectable_Interface;
   type IPnpObject is access IPnpObject_Interface'Class;
   type IPnpObject_Ptr is access all IPnpObject;
   type IPnpObject_Array is array (Natural range <>) of IPnpObject;

   type IPnpObjectStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPnpObjectStatics is access IPnpObjectStatics_Interface'Class;

   type IPnpObjectUpdate_Interface is interface and WinRt.IInspectable_Interface;
   type IPnpObjectUpdate is access IPnpObjectUpdate_Interface'Class;
   type IPnpObjectUpdate_Ptr is access all IPnpObjectUpdate;

   type IPnpObjectWatcher_Interface is interface and WinRt.IInspectable_Interface;
   type IPnpObjectWatcher is access IPnpObjectWatcher_Interface'Class;
   type IPnpObjectWatcher_Ptr is access all IPnpObjectWatcher;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type PnpObject is new Ada.Finalization.Limited_Controlled with
      record
         m_IPnpObject : access Windows.Devices.Enumeration.Pnp.IPnpObject;
      end record;
   type PnpObject_Ptr is access all PnpObject;

   type PnpObjectCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_GenericObject : access GenericObject;
      end record;
   type PnpObjectCollection_Ptr is access all PnpObjectCollection;

   type PnpObjectUpdate is new Ada.Finalization.Limited_Controlled with
      record
         m_IPnpObjectUpdate : access Windows.Devices.Enumeration.Pnp.IPnpObjectUpdate;
      end record;
   type PnpObjectUpdate_Ptr is access all PnpObjectUpdate;

   type PnpObjectWatcher is new Ada.Finalization.Limited_Controlled with
      record
         m_IPnpObjectWatcher : access Windows.Devices.Enumeration.Pnp.IPnpObjectWatcher;
      end record;
   type PnpObjectWatcher_Ptr is access all PnpObjectWatcher;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type PnpObjectType is (
      Unknown_e,
      DeviceInterface_e,
      DeviceContainer_e,
      Device_e,
      DeviceInterfaceClass_e,
      AssociationEndpoint_e,
      AssociationEndpointContainer_e,
      AssociationEndpointService_e,
      DevicePanel_e
   );
   for PnpObjectType use (
      Unknown_e => 0,
      DeviceInterface_e => 1,
      DeviceContainer_e => 2,
      Device_e => 3,
      DeviceInterfaceClass_e => 4,
      AssociationEndpoint_e => 5,
      AssociationEndpointContainer_e => 6,
      AssociationEndpointService_e => 7,
      DevicePanel_e => 8
   );
   type PnpObjectType_Ptr is access all PnpObjectType;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IMapView_HString_IInspectable is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.IInspectable);
   IID_IMapView_HString_IInspectable : aliased WinRt.IID := (4010661287, 3227, 24225, (182, 175, 189, 212, 172, 26, 37, 17 ));
   function QInterface_IMapView_HString_IInspectable is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_IInspectable.Kind, IID_IMapView_HString_IInspectable'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IPnpObject is interface and WinRt.IInspectable;

      function get_Type
      (
         this : access IPnpObject_Interface;
         RetVal : access Windows.Devices.Enumeration.Pnp.PnpObjectType
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access IPnpObject_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IPnpObject_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function Update
      (
         this : access IPnpObject_Interface;
         updateInfo : Windows.Devices.Enumeration.Pnp.IPnpObjectUpdate
      )
      return WinRt.Hresult is abstract;

      IID_IPnpObject : aliased WinRt.IID := (2512806488, 29499, 19087, (147, 163, 219, 7, 138, 200, 112, 193 ));

   -----------------------------------------------------------------------------
   -- type IPnpObjectStatics is interface and WinRt.IInspectable;

      function CreateFromIdAsync
      (
         this : access IPnpObjectStatics_Interface;
         type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
         id : WinRt.HString;
         requestedProperties : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindAllAsync
      (
         this : access IPnpObjectStatics_Interface;
         type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
         requestedProperties : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindAllAsync
      (
         this : access IPnpObjectStatics_Interface;
         type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
         requestedProperties : GenericObject;
         aqsFilter : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CreateWatcher
      (
         this : access IPnpObjectStatics_Interface;
         type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
         requestedProperties : GenericObject;
         RetVal : access Windows.Devices.Enumeration.Pnp.IPnpObjectWatcher
      )
      return WinRt.Hresult is abstract;

      function CreateWatcher
      (
         this : access IPnpObjectStatics_Interface;
         type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
         requestedProperties : GenericObject;
         aqsFilter : WinRt.HString;
         RetVal : access Windows.Devices.Enumeration.Pnp.IPnpObjectWatcher
      )
      return WinRt.Hresult is abstract;

      IID_IPnpObjectStatics : aliased WinRt.IID := (3015911997, 53608, 18016, (187, 243, 167, 51, 177, 75, 110, 1 ));

   -----------------------------------------------------------------------------
   -- type IPnpObjectUpdate is interface and WinRt.IInspectable;

      function get_Type
      (
         this : access IPnpObjectUpdate_Interface;
         RetVal : access Windows.Devices.Enumeration.Pnp.PnpObjectType
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access IPnpObjectUpdate_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IPnpObjectUpdate_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPnpObjectUpdate : aliased WinRt.IID := (1868163090, 30, 18500, (188, 198, 67, 40, 134, 133, 106, 23 ));

   -----------------------------------------------------------------------------
   -- type IPnpObjectWatcher is interface and WinRt.IInspectable;

      function add_Added
      (
         this : access IPnpObjectWatcher_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Added
      (
         this : access IPnpObjectWatcher_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Updated
      (
         this : access IPnpObjectWatcher_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Updated
      (
         this : access IPnpObjectWatcher_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Removed
      (
         this : access IPnpObjectWatcher_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Removed
      (
         this : access IPnpObjectWatcher_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_EnumerationCompleted
      (
         this : access IPnpObjectWatcher_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_EnumerationCompleted
      (
         this : access IPnpObjectWatcher_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Stopped
      (
         this : access IPnpObjectWatcher_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Stopped
      (
         this : access IPnpObjectWatcher_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access IPnpObjectWatcher_Interface;
         RetVal : access Windows.Devices.Enumeration.DeviceWatcherStatus
      )
      return WinRt.Hresult is abstract;

      function Start
      (
         this : access IPnpObjectWatcher_Interface
      )
      return WinRt.Hresult is abstract;

      function Stop
      (
         this : access IPnpObjectWatcher_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IPnpObjectWatcher : aliased WinRt.IID := (2211011752, 18290, 19066, (172, 168, 228, 140, 66, 168, 156, 68 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PnpObject

   overriding procedure Initialize (this : in out PnpObject);
   overriding procedure Finalize (this : in out PnpObject);

   -----------------------------------------------------------------------------
   -- Static Interfaces for PnpObject

   function CreateFromIdAsync
   (
      type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
      id : WinRt.WString;
      requestedProperties : GenericObject
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObject;

   function FindAllAsync
   (
      type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
      requestedProperties : GenericObject
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObjectCollection;

   function FindAllAsync
   (
      type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
      requestedProperties : GenericObject;
      aqsFilter : WinRt.WString
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObjectCollection;

   function CreateWatcher
   (
      type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
      requestedProperties : GenericObject
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObjectWatcher;

   function CreateWatcher
   (
      type_x : Windows.Devices.Enumeration.Pnp.PnpObjectType;
      requestedProperties : GenericObject;
      aqsFilter : WinRt.WString
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObjectWatcher;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PnpObject

   function get_Type
   (
      this : in out PnpObject
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObjectType;

   function get_Id
   (
      this : in out PnpObject
   )
   return WinRt.WString;

   function get_Properties
   (
      this : in out PnpObject
   )
   return IMapView_HString_IInspectable.Kind;

   procedure Update
   (
      this : in out PnpObject;
      updateInfo : Windows.Devices.Enumeration.Pnp.PnpObjectUpdate'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PnpObjectCollection

   overriding procedure Initialize (this : in out PnpObjectCollection);
   overriding procedure Finalize (this : in out PnpObjectCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PnpObjectCollection

   -- Generic Interface Windows.Foundation.Collections.IVectorView`1<Windows.Devices.Enumeration.Pnp.PnpObject>
   function GetAt
   (
      this : in out PnpObjectCollection;
      index : WinRt.UInt32
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObject'Class;

   function get_Size
   (
      this : in out PnpObjectCollection
   )
   return WinRt.UInt32;

   function IndexOf
   (
      this : in out PnpObjectCollection;
      value : Windows.Devices.Enumeration.Pnp.PnpObject'Class;
      index : WinRt.UInt32_Ptr
   )
   return WinRt.Boolean;

   function GetMany
   (
      this : in out PnpObjectCollection;
      startIndex : WinRt.UInt32;
      items : Windows.Devices.Enumeration.Pnp.IPnpObject_Array
   )
   return WinRt.UInt32;

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.Devices.Enumeration.Pnp.PnpObject>
   function First
   (
      this : in out PnpObjectCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PnpObjectUpdate

   overriding procedure Initialize (this : in out PnpObjectUpdate);
   overriding procedure Finalize (this : in out PnpObjectUpdate);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PnpObjectUpdate

   function get_Type
   (
      this : in out PnpObjectUpdate
   )
   return WinRt.Windows.Devices.Enumeration.Pnp.PnpObjectType;

   function get_Id
   (
      this : in out PnpObjectUpdate
   )
   return WinRt.WString;

   function get_Properties
   (
      this : in out PnpObjectUpdate
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PnpObjectWatcher

   overriding procedure Initialize (this : in out PnpObjectWatcher);
   overriding procedure Finalize (this : in out PnpObjectWatcher);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PnpObjectWatcher

   function add_Added
   (
      this : in out PnpObjectWatcher;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Added
   (
      this : in out PnpObjectWatcher;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Updated
   (
      this : in out PnpObjectWatcher;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Updated
   (
      this : in out PnpObjectWatcher;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Removed
   (
      this : in out PnpObjectWatcher;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Removed
   (
      this : in out PnpObjectWatcher;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_EnumerationCompleted
   (
      this : in out PnpObjectWatcher;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_EnumerationCompleted
   (
      this : in out PnpObjectWatcher;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Stopped
   (
      this : in out PnpObjectWatcher;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Stopped
   (
      this : in out PnpObjectWatcher;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_Status
   (
      this : in out PnpObjectWatcher
   )
   return WinRt.Windows.Devices.Enumeration.DeviceWatcherStatus;

   procedure Start
   (
      this : in out PnpObjectWatcher
   );

   procedure Stop
   (
      this : in out PnpObjectWatcher
   );

end;
