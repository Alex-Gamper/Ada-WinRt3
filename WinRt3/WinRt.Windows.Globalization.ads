--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.System;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Globalization is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IApplicationLanguagesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IApplicationLanguagesStatics is access IApplicationLanguagesStatics_Interface'Class;

   type IApplicationLanguagesStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IApplicationLanguagesStatics2 is access IApplicationLanguagesStatics2_Interface'Class;

   type ICalendar_Interface is interface and WinRt.IInspectable_Interface;
   type ICalendar is access ICalendar_Interface'Class;
   type ICalendar_Ptr is access all ICalendar;

   type ICalendarFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICalendarFactory is access ICalendarFactory_Interface'Class;

   type ICalendarFactory2_Interface is interface and WinRt.IInspectable_Interface;
   type ICalendarFactory2 is access ICalendarFactory2_Interface'Class;

   type ICalendarIdentifiersStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICalendarIdentifiersStatics is access ICalendarIdentifiersStatics_Interface'Class;

   type ICalendarIdentifiersStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ICalendarIdentifiersStatics2 is access ICalendarIdentifiersStatics2_Interface'Class;

   type ICalendarIdentifiersStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type ICalendarIdentifiersStatics3 is access ICalendarIdentifiersStatics3_Interface'Class;

   type IClockIdentifiersStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IClockIdentifiersStatics is access IClockIdentifiersStatics_Interface'Class;

   type ICurrencyAmount_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyAmount is access ICurrencyAmount_Interface'Class;
   type ICurrencyAmount_Ptr is access all ICurrencyAmount;

   type ICurrencyAmountFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyAmountFactory is access ICurrencyAmountFactory_Interface'Class;

   type ICurrencyIdentifiersStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyIdentifiersStatics is access ICurrencyIdentifiersStatics_Interface'Class;

   type ICurrencyIdentifiersStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyIdentifiersStatics2 is access ICurrencyIdentifiersStatics2_Interface'Class;

   type ICurrencyIdentifiersStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyIdentifiersStatics3 is access ICurrencyIdentifiersStatics3_Interface'Class;

   type IGeographicRegion_Interface is interface and WinRt.IInspectable_Interface;
   type IGeographicRegion is access IGeographicRegion_Interface'Class;
   type IGeographicRegion_Ptr is access all IGeographicRegion;

   type IGeographicRegionFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IGeographicRegionFactory is access IGeographicRegionFactory_Interface'Class;

   type IGeographicRegionStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGeographicRegionStatics is access IGeographicRegionStatics_Interface'Class;

   type IJapanesePhoneme_Interface is interface and WinRt.IInspectable_Interface;
   type IJapanesePhoneme is access IJapanesePhoneme_Interface'Class;
   type IJapanesePhoneme_Ptr is access all IJapanesePhoneme;

   type IJapanesePhoneticAnalyzerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IJapanesePhoneticAnalyzerStatics is access IJapanesePhoneticAnalyzerStatics_Interface'Class;

   type ILanguage_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguage is access ILanguage_Interface'Class;
   type ILanguage_Ptr is access all ILanguage;
   type ILanguage_Array is array (Natural range <>) of ILanguage;

   type ILanguage2_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguage2 is access ILanguage2_Interface'Class;

   type ILanguage3_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguage3 is access ILanguage3_Interface'Class;

   type ILanguageExtensionSubtags_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguageExtensionSubtags is access ILanguageExtensionSubtags_Interface'Class;

   type ILanguageFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguageFactory is access ILanguageFactory_Interface'Class;

   type ILanguageStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguageStatics is access ILanguageStatics_Interface'Class;

   type ILanguageStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguageStatics2 is access ILanguageStatics2_Interface'Class;

   type ILanguageStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type ILanguageStatics3 is access ILanguageStatics3_Interface'Class;

   type INumeralSystemIdentifiersStatics_Interface is interface and WinRt.IInspectable_Interface;
   type INumeralSystemIdentifiersStatics is access INumeralSystemIdentifiersStatics_Interface'Class;

   type INumeralSystemIdentifiersStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type INumeralSystemIdentifiersStatics2 is access INumeralSystemIdentifiersStatics2_Interface'Class;

   type ITimeZoneOnCalendar_Interface is interface and WinRt.IInspectable_Interface;
   type ITimeZoneOnCalendar is access ITimeZoneOnCalendar_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Calendar is new Ada.Finalization.Limited_Controlled with
      record
         m_ICalendar : access Windows.Globalization.ICalendar;
      end record;
   type Calendar_Ptr is access all Calendar;

   type CurrencyAmount is new Ada.Finalization.Limited_Controlled with
      record
         m_ICurrencyAmount : access Windows.Globalization.ICurrencyAmount;
      end record;
   type CurrencyAmount_Ptr is access all CurrencyAmount;

   type GeographicRegion is new Ada.Finalization.Limited_Controlled with
      record
         m_IGeographicRegion : access Windows.Globalization.IGeographicRegion;
      end record;
   type GeographicRegion_Ptr is access all GeographicRegion;

   type JapanesePhoneme is new Ada.Finalization.Limited_Controlled with
      record
         m_IJapanesePhoneme : access Windows.Globalization.IJapanesePhoneme;
      end record;
   type JapanesePhoneme_Ptr is access all JapanesePhoneme;

   type Language is new Ada.Finalization.Limited_Controlled with
      record
         m_ILanguage : access Windows.Globalization.ILanguage;
      end record;
   type Language_Ptr is access all Language;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type DayOfWeek is (
      Sunday_e,
      Monday_e,
      Tuesday_e,
      Wednesday_e,
      Thursday_e,
      Friday_e,
      Saturday_e
   );
   for DayOfWeek use (
      Sunday_e => 0,
      Monday_e => 1,
      Tuesday_e => 2,
      Wednesday_e => 3,
      Thursday_e => 4,
      Friday_e => 5,
      Saturday_e => 6
   );
   type DayOfWeek_Ptr is access all DayOfWeek;

   type LanguageLayoutDirection is (
      Ltr_e,
      Rtl_e,
      TtbLtr_e,
      TtbRtl_e
   );
   for LanguageLayoutDirection use (
      Ltr_e => 0,
      Rtl_e => 1,
      TtbLtr_e => 2,
      TtbRtl_e => 3
   );
   type LanguageLayoutDirection_Ptr is access all LanguageLayoutDirection;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type GlobalizationJapanesePhoneticAnalyzerContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type GlobalizationJapanesePhoneticAnalyzerContract_Ptr is access all GlobalizationJapanesePhoneticAnalyzerContract;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (1353574853, 55413, 23606, (163, 248, 197, 238, 22, 163, 59, 13 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IApplicationLanguagesStatics is interface and WinRt.IInspectable;

      function get_PrimaryLanguageOverride
      (
         this : access IApplicationLanguagesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_PrimaryLanguageOverride
      (
         this : access IApplicationLanguagesStatics_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Languages
      (
         this : access IApplicationLanguagesStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ManifestLanguages
      (
         this : access IApplicationLanguagesStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IApplicationLanguagesStatics : aliased WinRt.IID := (1974732871, 2636, 19090, (149, 101, 253, 99, 201, 95, 122, 237 ));

   -----------------------------------------------------------------------------
   -- type IApplicationLanguagesStatics2 is interface and WinRt.IInspectable;

      function GetLanguagesForUser
      (
         this : access IApplicationLanguagesStatics2_Interface;
         user : Windows.System.IUser;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IApplicationLanguagesStatics2 : aliased WinRt.IID := (502324815, 1835, 19835, (143, 6, 203, 45, 180, 15, 43, 181 ));

   -----------------------------------------------------------------------------
   -- type ICalendar is interface and WinRt.IInspectable;

      function Clone
      (
         this : access ICalendar_Interface;
         RetVal : access Windows.Globalization.ICalendar
      )
      return WinRt.Hresult is abstract;

      function SetToMin
      (
         this : access ICalendar_Interface
      )
      return WinRt.Hresult is abstract;

      function SetToMax
      (
         this : access ICalendar_Interface
      )
      return WinRt.Hresult is abstract;

      function get_Languages
      (
         this : access ICalendar_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_NumeralSystem
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_NumeralSystem
      (
         this : access ICalendar_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetCalendarSystem
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function ChangeCalendarSystem
      (
         this : access ICalendar_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetClock
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function ChangeClock
      (
         this : access ICalendar_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetDateTime
      (
         this : access ICalendar_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function SetDateTime
      (
         this : access ICalendar_Interface;
         value : Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function SetToNow
      (
         this : access ICalendar_Interface
      )
      return WinRt.Hresult is abstract;

      function get_FirstEra
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastEra
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfEras
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Era
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Era
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddEras
      (
         this : access ICalendar_Interface;
         eras : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function EraAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function EraAsString
      (
         this : access ICalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FirstYearInThisEra
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastYearInThisEra
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfYearsInThisEra
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Year
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Year
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddYears
      (
         this : access ICalendar_Interface;
         years : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function YearAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function YearAsTruncatedString
      (
         this : access ICalendar_Interface;
         remainingDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function YearAsPaddedString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FirstMonthInThisYear
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastMonthInThisYear
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfMonthsInThisYear
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Month
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Month
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddMonths
      (
         this : access ICalendar_Interface;
         months : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MonthAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function MonthAsString
      (
         this : access ICalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function MonthAsSoloString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function MonthAsSoloString
      (
         this : access ICalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function MonthAsNumericString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function MonthAsPaddedNumericString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function AddWeeks
      (
         this : access ICalendar_Interface;
         weeks : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_FirstDayInThisMonth
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastDayInThisMonth
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfDaysInThisMonth
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Day
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Day
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddDays
      (
         this : access ICalendar_Interface;
         days : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function DayAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function DayAsPaddedString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DayOfWeek
      (
         this : access ICalendar_Interface;
         RetVal : access Windows.Globalization.DayOfWeek
      )
      return WinRt.Hresult is abstract;

      function DayOfWeekAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function DayOfWeekAsString
      (
         this : access ICalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function DayOfWeekAsSoloString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function DayOfWeekAsSoloString
      (
         this : access ICalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FirstPeriodInThisDay
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastPeriodInThisDay
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfPeriodsInThisDay
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Period
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Period
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddPeriods
      (
         this : access ICalendar_Interface;
         periods : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function PeriodAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function PeriodAsString
      (
         this : access ICalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FirstHourInThisPeriod
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastHourInThisPeriod
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfHoursInThisPeriod
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Hour
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Hour
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddHours
      (
         this : access ICalendar_Interface;
         hours : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function HourAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function HourAsPaddedString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Minute
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Minute
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddMinutes
      (
         this : access ICalendar_Interface;
         minutes : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MinuteAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function MinuteAsPaddedString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Second
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Second
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddSeconds
      (
         this : access ICalendar_Interface;
         seconds : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function SecondAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function SecondAsPaddedString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Nanosecond
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Nanosecond
      (
         this : access ICalendar_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddNanoseconds
      (
         this : access ICalendar_Interface;
         nanoseconds : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function NanosecondAsString
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function NanosecondAsPaddedString
      (
         this : access ICalendar_Interface;
         minDigits : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function Compare
      (
         this : access ICalendar_Interface;
         other : Windows.Globalization.ICalendar;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function CompareDateTime
      (
         this : access ICalendar_Interface;
         other : Windows.Foundation.DateTime;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function CopyTo
      (
         this : access ICalendar_Interface;
         other : Windows.Globalization.ICalendar
      )
      return WinRt.Hresult is abstract;

      function get_FirstMinuteInThisHour
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastMinuteInThisHour
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfMinutesInThisHour
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_FirstSecondInThisMinute
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_LastSecondInThisMinute
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NumberOfSecondsInThisMinute
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ResolvedLanguage
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsDaylightSavingTime
      (
         this : access ICalendar_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICalendar : aliased WinRt.IID := (3392152093, 34521, 16635, (162, 107, 212, 78, 183, 207, 8, 234 ));

   -----------------------------------------------------------------------------
   -- type ICalendarFactory is interface and WinRt.IInspectable;

      function CreateCalendarDefaultCalendarAndClock
      (
         this : access ICalendarFactory_Interface;
         languages : GenericObject;
         RetVal : access Windows.Globalization.ICalendar
      )
      return WinRt.Hresult is abstract;

      function CreateCalendar
      (
         this : access ICalendarFactory_Interface;
         languages : GenericObject;
         calendar_p : WinRt.HString;
         clock : WinRt.HString;
         RetVal : access Windows.Globalization.ICalendar
      )
      return WinRt.Hresult is abstract;

      IID_ICalendarFactory : aliased WinRt.IID := (2213905426, 58731, 19573, (166, 110, 15, 99, 213, 119, 88, 166 ));

   -----------------------------------------------------------------------------
   -- type ICalendarFactory2 is interface and WinRt.IInspectable;

      function CreateCalendarWithTimeZone
      (
         this : access ICalendarFactory2_Interface;
         languages : GenericObject;
         calendar_p : WinRt.HString;
         clock : WinRt.HString;
         timeZoneId : WinRt.HString;
         RetVal : access Windows.Globalization.ICalendar
      )
      return WinRt.Hresult is abstract;

      IID_ICalendarFactory2 : aliased WinRt.IID := (3024828300, 51838, 17808, (158, 114, 234, 43, 236, 26, 81, 21 ));

   -----------------------------------------------------------------------------
   -- type ICalendarIdentifiersStatics is interface and WinRt.IInspectable;

      function get_Gregorian
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Hebrew
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Hijri
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Japanese
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Julian
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Korean
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Taiwan
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Thai
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UmAlQura
      (
         this : access ICalendarIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICalendarIdentifiersStatics : aliased WinRt.IID := (2154119016, 11442, 19487, (181, 144, 240, 245, 43, 244, 253, 26 ));

   -----------------------------------------------------------------------------
   -- type ICalendarIdentifiersStatics2 is interface and WinRt.IInspectable;

      function get_Persian
      (
         this : access ICalendarIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICalendarIdentifiersStatics2 : aliased WinRt.IID := (2113197192, 24528, 17063, (149, 181, 125, 152, 216, 35, 7, 95 ));

   -----------------------------------------------------------------------------
   -- type ICalendarIdentifiersStatics3 is interface and WinRt.IInspectable;

      function get_ChineseLunar
      (
         this : access ICalendarIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_JapaneseLunar
      (
         this : access ICalendarIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KoreanLunar
      (
         this : access ICalendarIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TaiwanLunar
      (
         this : access ICalendarIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_VietnameseLunar
      (
         this : access ICalendarIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICalendarIdentifiersStatics3 : aliased WinRt.IID := (740447267, 8109, 16576, (147, 52, 168, 235, 144, 219, 4, 245 ));

   -----------------------------------------------------------------------------
   -- type IClockIdentifiersStatics is interface and WinRt.IInspectable;

      function get_TwelveHour
      (
         this : access IClockIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TwentyFourHour
      (
         this : access IClockIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IClockIdentifiersStatics : aliased WinRt.IID := (1379403195, 4844, 20355, (188, 49, 177, 180, 55, 107, 8, 8 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyAmount is interface and WinRt.IInspectable;

      function get_Amount
      (
         this : access ICurrencyAmount_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Currency
      (
         this : access ICurrencyAmount_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyAmount : aliased WinRt.IID := (1957992770, 60277, 17466, (149, 179, 125, 114, 63, 86, 249, 60 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyAmountFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access ICurrencyAmountFactory_Interface;
         amount : WinRt.HString;
         currency : WinRt.HString;
         RetVal : access Windows.Globalization.ICurrencyAmount
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyAmountFactory : aliased WinRt.IID := (1222055567, 61243, 19182, (166, 161, 75, 3, 111, 224, 63, 240 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyIdentifiersStatics is interface and WinRt.IInspectable;

      function get_AED
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AFN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ALL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AMD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ANG
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AOA
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ARS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AUD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AWG
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AZN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BAM
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BBD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BDT
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BGN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BHD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BIF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BMD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BND
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BOB
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BRL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BSD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BTN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BWP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BYR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BZD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CAD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CDF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CHF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CLP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CNY
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_COP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CRC
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CUP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CVE
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CZK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DJF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DKK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DOP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DZD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_EGP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ERN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ETB
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_EUR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FJD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FKP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GBP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GEL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GHS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GIP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GMD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GNF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GTQ
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GYD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HKD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HNL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HRK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HTG
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HUF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IDR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ILS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_INR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IQD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IRR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ISK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_JMD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_JOD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_JPY
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KES
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KGS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KHR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KMF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KPW
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KRW
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KWD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KYD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KZT
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LAK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LBP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LKR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LRD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LSL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LTL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LVL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LYD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MAD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MDL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MGA
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MKD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MMK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MNT
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MOP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MRO
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MUR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MVR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MWK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MXN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MYR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MZN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NAD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NGN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NIO
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NOK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NPR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NZD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_OMR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PAB
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PEN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PGK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PHP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PKR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PLN
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PYG
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_QAR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RON
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RSD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RUB
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RWF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SAR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SBD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SCR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SDG
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SEK
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SGD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SHP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SLL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SOS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SRD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_STD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SYP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SZL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_THB
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TJS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TMT
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TND
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TOP
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TRY
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TTD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TWD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TZS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UAH
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UGX
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_USD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UYU
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UZS
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_VEF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_VND
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_VUV
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_WST
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_XAF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_XCD
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_XOF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_XPF
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_XXX
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_YER
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZAR
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZMW
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZWL
      (
         this : access ICurrencyIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyIdentifiersStatics : aliased WinRt.IID := (2669480219, 54662, 18707, (155, 106, 169, 189, 45, 193, 40, 116 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyIdentifiersStatics2 is interface and WinRt.IInspectable;

      function get_BYN
      (
         this : access ICurrencyIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyIdentifiersStatics2 : aliased WinRt.IID := (403995007, 50098, 19507, (149, 145, 152, 0, 17, 149, 13, 55 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyIdentifiersStatics3 is interface and WinRt.IInspectable;

      function get_MRU
      (
         this : access ICurrencyIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SSP
      (
         this : access ICurrencyIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_STN
      (
         this : access ICurrencyIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_VES
      (
         this : access ICurrencyIdentifiersStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyIdentifiersStatics3 : aliased WinRt.IID := (1337080826, 60709, 20301, (133, 127, 35, 127, 23, 72, 194, 28 ));

   -----------------------------------------------------------------------------
   -- type IGeographicRegion is interface and WinRt.IInspectable;

      function get_Code
      (
         this : access IGeographicRegion_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CodeTwoLetter
      (
         this : access IGeographicRegion_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CodeThreeLetter
      (
         this : access IGeographicRegion_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CodeThreeDigit
      (
         this : access IGeographicRegion_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayName
      (
         this : access IGeographicRegion_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NativeName
      (
         this : access IGeographicRegion_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CurrenciesInUse
      (
         this : access IGeographicRegion_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGeographicRegion : aliased WinRt.IID := (32089633, 19044, 20185, (149, 79, 158, 222, 176, 123, 217, 3 ));

   -----------------------------------------------------------------------------
   -- type IGeographicRegionFactory is interface and WinRt.IInspectable;

      function CreateGeographicRegion
      (
         this : access IGeographicRegionFactory_Interface;
         geographicRegionCode : WinRt.HString;
         RetVal : access Windows.Globalization.IGeographicRegion
      )
      return WinRt.Hresult is abstract;

      IID_IGeographicRegionFactory : aliased WinRt.IID := (1396855408, 30644, 17003, (133, 159, 129, 225, 157, 81, 37, 70 ));

   -----------------------------------------------------------------------------
   -- type IGeographicRegionStatics is interface and WinRt.IInspectable;

      function IsSupported
      (
         this : access IGeographicRegionStatics_Interface;
         geographicRegionCode : WinRt.HString;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGeographicRegionStatics : aliased WinRt.IID := (702712180, 31449, 20212, (135, 153, 179, 180, 79, 173, 236, 8 ));

   -----------------------------------------------------------------------------
   -- type IJapanesePhoneme is interface and WinRt.IInspectable;

      function get_DisplayText
      (
         this : access IJapanesePhoneme_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_YomiText
      (
         this : access IJapanesePhoneme_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsPhraseStart
      (
         this : access IJapanesePhoneme_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IJapanesePhoneme : aliased WinRt.IID := (795513600, 59483, 17382, (137, 125, 93, 130, 248, 98, 223, 33 ));

   -----------------------------------------------------------------------------
   -- type IJapanesePhoneticAnalyzerStatics is interface and WinRt.IInspectable;

      function GetWords
      (
         this : access IJapanesePhoneticAnalyzerStatics_Interface;
         input : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetWords
      (
         this : access IJapanesePhoneticAnalyzerStatics_Interface;
         input : WinRt.HString;
         monoRuby : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IJapanesePhoneticAnalyzerStatics : aliased WinRt.IID := (2292948624, 37854, 16818, (180, 213, 142, 219, 34, 127, 209, 194 ));

   -----------------------------------------------------------------------------
   -- type ILanguage is interface and WinRt.IInspectable;

      function get_LanguageTag
      (
         this : access ILanguage_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayName
      (
         this : access ILanguage_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NativeName
      (
         this : access ILanguage_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Script
      (
         this : access ILanguage_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ILanguage : aliased WinRt.IID := (3933841234, 63426, 16997, (177, 189, 196, 222, 196, 228, 240, 128 ));

   -----------------------------------------------------------------------------
   -- type ILanguage2 is interface and WinRt.IInspectable;

      function get_LayoutDirection
      (
         this : access ILanguage2_Interface;
         RetVal : access Windows.Globalization.LanguageLayoutDirection
      )
      return WinRt.Hresult is abstract;

      IID_ILanguage2 : aliased WinRt.IID := (1783096757, 55629, 18566, (164, 4, 165, 165, 185, 213, 180, 148 ));

   -----------------------------------------------------------------------------
   -- type ILanguage3 is interface and WinRt.IInspectable;

      function get_AbbreviatedName
      (
         this : access ILanguage3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ILanguage3 : aliased WinRt.IID := (3333373200, 25626, 23460, (187, 67, 94, 18, 174, 215, 89, 84 ));

   -----------------------------------------------------------------------------
   -- type ILanguageExtensionSubtags is interface and WinRt.IInspectable;

      function GetExtensionSubtags
      (
         this : access ILanguageExtensionSubtags_Interface;
         singleton : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILanguageExtensionSubtags : aliased WinRt.IID := (2105388869, 13965, 17252, (133, 43, 222, 201, 39, 3, 123, 133 ));

   -----------------------------------------------------------------------------
   -- type ILanguageFactory is interface and WinRt.IInspectable;

      function CreateLanguage
      (
         this : access ILanguageFactory_Interface;
         languageTag : WinRt.HString;
         RetVal : access Windows.Globalization.ILanguage
      )
      return WinRt.Hresult is abstract;

      IID_ILanguageFactory : aliased WinRt.IID := (2600620716, 3111, 17656, (183, 146, 151, 147, 251, 102, 198, 62 ));

   -----------------------------------------------------------------------------
   -- type ILanguageStatics is interface and WinRt.IInspectable;

      function IsWellFormed
      (
         this : access ILanguageStatics_Interface;
         languageTag : WinRt.HString;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CurrentInputMethodLanguageTag
      (
         this : access ILanguageStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ILanguageStatics : aliased WinRt.IID := (2990331223, 2149, 18132, (137, 184, 213, 155, 232, 153, 15, 13 ));

   -----------------------------------------------------------------------------
   -- type ILanguageStatics2 is interface and WinRt.IInspectable;

      function TrySetInputMethodLanguageTag
      (
         this : access ILanguageStatics2_Interface;
         languageTag : WinRt.HString;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ILanguageStatics2 : aliased WinRt.IID := (806985582, 37195, 19242, (157, 110, 227, 176, 226, 125, 190, 79 ));

   -----------------------------------------------------------------------------
   -- type ILanguageStatics3 is interface and WinRt.IInspectable;

      function GetMuiCompatibleLanguageListFromLanguageTags
      (
         this : access ILanguageStatics3_Interface;
         languageTags : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILanguageStatics3 : aliased WinRt.IID := (3512650586, 29150, 22354, (149, 66, 250, 197, 180, 242, 114, 97 ));

   -----------------------------------------------------------------------------
   -- type INumeralSystemIdentifiersStatics is interface and WinRt.IInspectable;

      function get_Arab
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ArabExt
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Bali
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Beng
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Cham
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Deva
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FullWide
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Gujr
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Guru
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HaniDec
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Java
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Kali
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Khmr
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Knda
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Lana
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LanaTham
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Laoo
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Latn
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Lepc
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Limb
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Mlym
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Mong
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Mtei
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Mymr
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MymrShan
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Nkoo
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Olck
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Orya
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Saur
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Sund
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Talu
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TamlDec
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Telu
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Thai
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Tibt
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Vaii
      (
         this : access INumeralSystemIdentifiersStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_INumeralSystemIdentifiersStatics : aliased WinRt.IID := (2781242051, 26825, 19773, (183, 101, 151, 32, 41, 226, 29, 236 ));

   -----------------------------------------------------------------------------
   -- type INumeralSystemIdentifiersStatics2 is interface and WinRt.IInspectable;

      function get_Brah
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Osma
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MathBold
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MathDbl
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MathSans
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MathSanb
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MathMono
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZmthBold
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZmthDbl
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZmthSans
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZmthSanb
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ZmthMono
      (
         this : access INumeralSystemIdentifiersStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_INumeralSystemIdentifiersStatics2 : aliased WinRt.IID := (2130719272, 40411, 18996, (145, 4, 2, 96, 192, 145, 167, 199 ));

   -----------------------------------------------------------------------------
   -- type ITimeZoneOnCalendar is interface and WinRt.IInspectable;

      function GetTimeZone
      (
         this : access ITimeZoneOnCalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function ChangeTimeZone
      (
         this : access ITimeZoneOnCalendar_Interface;
         timeZoneId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TimeZoneAsString
      (
         this : access ITimeZoneOnCalendar_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TimeZoneAsString
      (
         this : access ITimeZoneOnCalendar_Interface;
         idealLength : WinRt.Int32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ITimeZoneOnCalendar : aliased WinRt.IID := (3141281253, 18127, 17175, (163, 245, 2, 98, 26, 213, 68, 120 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package ApplicationLanguages is

      function GetLanguagesForUser
      (
         user : Windows.System.User'Class
      )
      return IVectorView_HString.Kind;

      function get_PrimaryLanguageOverride
      return WinRt.WString;

      procedure put_PrimaryLanguageOverride
      (
         value : WinRt.WString
      );

      function get_Languages
      return IVectorView_HString.Kind;

      function get_ManifestLanguages
      return IVectorView_HString.Kind;

   end ApplicationLanguages;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Calendar

   overriding procedure Initialize (this : in out Calendar);
   overriding procedure Finalize (this : in out Calendar);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Calendar

   function Constructor
   (
      languages : GenericObject;
      calendar_p : WinRt.WString;
      clock : WinRt.WString;
      timeZoneId : WinRt.WString
   )
   return Calendar;

   function Constructor return Calendar;

   function Constructor
   (
      languages : GenericObject
   )
   return Calendar;

   function Constructor
   (
      languages : GenericObject;
      calendar_p : WinRt.WString;
      clock : WinRt.WString
   )
   return Calendar;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Calendar

   function Clone
   (
      this : in out Calendar
   )
   return WinRt.Windows.Globalization.Calendar'Class;

   procedure SetToMin
   (
      this : in out Calendar
   );

   procedure SetToMax
   (
      this : in out Calendar
   );

   function get_Languages
   (
      this : in out Calendar
   )
   return IVectorView_HString.Kind;

   function get_NumeralSystem
   (
      this : in out Calendar
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out Calendar;
      value : WinRt.WString
   );

   function GetCalendarSystem
   (
      this : in out Calendar
   )
   return WinRt.WString;

   procedure ChangeCalendarSystem
   (
      this : in out Calendar;
      value : WinRt.WString
   );

   function GetClock
   (
      this : in out Calendar
   )
   return WinRt.WString;

   procedure ChangeClock
   (
      this : in out Calendar;
      value : WinRt.WString
   );

   function GetDateTime
   (
      this : in out Calendar
   )
   return WinRt.Windows.Foundation.DateTime;

   procedure SetDateTime
   (
      this : in out Calendar;
      value : Windows.Foundation.DateTime
   );

   procedure SetToNow
   (
      this : in out Calendar
   );

   function get_FirstEra
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastEra
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfEras
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_Era
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Era
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddEras
   (
      this : in out Calendar;
      eras : WinRt.Int32
   );

   function EraAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function EraAsString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   function get_FirstYearInThisEra
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastYearInThisEra
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfYearsInThisEra
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_Year
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Year
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddYears
   (
      this : in out Calendar;
      years : WinRt.Int32
   );

   function YearAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function YearAsTruncatedString
   (
      this : in out Calendar;
      remainingDigits : WinRt.Int32
   )
   return WinRt.WString;

   function YearAsPaddedString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   function get_FirstMonthInThisYear
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastMonthInThisYear
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfMonthsInThisYear
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_Month
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Month
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddMonths
   (
      this : in out Calendar;
      months : WinRt.Int32
   );

   function MonthAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function MonthAsString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   function MonthAsSoloString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function MonthAsSoloString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   function MonthAsNumericString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function MonthAsPaddedNumericString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   procedure AddWeeks
   (
      this : in out Calendar;
      weeks : WinRt.Int32
   );

   function get_FirstDayInThisMonth
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastDayInThisMonth
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfDaysInThisMonth
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_Day
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Day
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddDays
   (
      this : in out Calendar;
      days : WinRt.Int32
   );

   function DayAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function DayAsPaddedString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   function get_DayOfWeek
   (
      this : in out Calendar
   )
   return WinRt.Windows.Globalization.DayOfWeek;

   function DayOfWeekAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function DayOfWeekAsString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   function DayOfWeekAsSoloString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function DayOfWeekAsSoloString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   function get_FirstPeriodInThisDay
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastPeriodInThisDay
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfPeriodsInThisDay
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_Period
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Period
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddPeriods
   (
      this : in out Calendar;
      periods : WinRt.Int32
   );

   function PeriodAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function PeriodAsString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   function get_FirstHourInThisPeriod
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastHourInThisPeriod
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfHoursInThisPeriod
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_Hour
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Hour
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddHours
   (
      this : in out Calendar;
      hours : WinRt.Int32
   );

   function HourAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function HourAsPaddedString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   function get_Minute
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Minute
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddMinutes
   (
      this : in out Calendar;
      minutes : WinRt.Int32
   );

   function MinuteAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function MinuteAsPaddedString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   function get_Second
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Second
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddSeconds
   (
      this : in out Calendar;
      seconds : WinRt.Int32
   );

   function SecondAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function SecondAsPaddedString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   function get_Nanosecond
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   procedure put_Nanosecond
   (
      this : in out Calendar;
      value : WinRt.Int32
   );

   procedure AddNanoseconds
   (
      this : in out Calendar;
      nanoseconds : WinRt.Int32
   );

   function NanosecondAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function NanosecondAsPaddedString
   (
      this : in out Calendar;
      minDigits : WinRt.Int32
   )
   return WinRt.WString;

   function Compare
   (
      this : in out Calendar;
      other : Windows.Globalization.Calendar'Class
   )
   return WinRt.Int32;

   function CompareDateTime
   (
      this : in out Calendar;
      other : Windows.Foundation.DateTime
   )
   return WinRt.Int32;

   procedure CopyTo
   (
      this : in out Calendar;
      other : Windows.Globalization.Calendar'Class
   );

   function get_FirstMinuteInThisHour
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastMinuteInThisHour
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfMinutesInThisHour
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_FirstSecondInThisMinute
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_LastSecondInThisMinute
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_NumberOfSecondsInThisMinute
   (
      this : in out Calendar
   )
   return WinRt.Int32;

   function get_ResolvedLanguage
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function get_IsDaylightSavingTime
   (
      this : in out Calendar
   )
   return WinRt.Boolean;

   function GetTimeZone
   (
      this : in out Calendar
   )
   return WinRt.WString;

   procedure ChangeTimeZone
   (
      this : in out Calendar;
      timeZoneId : WinRt.WString
   );

   function TimeZoneAsString
   (
      this : in out Calendar
   )
   return WinRt.WString;

   function TimeZoneAsString
   (
      this : in out Calendar;
      idealLength : WinRt.Int32
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CalendarIdentifiers is

      function get_Gregorian
      return WinRt.WString;

      function get_Hebrew
      return WinRt.WString;

      function get_Hijri
      return WinRt.WString;

      function get_Japanese
      return WinRt.WString;

      function get_Julian
      return WinRt.WString;

      function get_Korean
      return WinRt.WString;

      function get_Taiwan
      return WinRt.WString;

      function get_Thai
      return WinRt.WString;

      function get_UmAlQura
      return WinRt.WString;

      function get_ChineseLunar
      return WinRt.WString;

      function get_JapaneseLunar
      return WinRt.WString;

      function get_KoreanLunar
      return WinRt.WString;

      function get_TaiwanLunar
      return WinRt.WString;

      function get_VietnameseLunar
      return WinRt.WString;

      function get_Persian
      return WinRt.WString;

   end CalendarIdentifiers;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package ClockIdentifiers is

      function get_TwelveHour
      return WinRt.WString;

      function get_TwentyFourHour
      return WinRt.WString;

   end ClockIdentifiers;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CurrencyAmount

   overriding procedure Initialize (this : in out CurrencyAmount);
   overriding procedure Finalize (this : in out CurrencyAmount);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CurrencyAmount

   function Constructor
   (
      amount : WinRt.WString;
      currency : WinRt.WString
   )
   return CurrencyAmount;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CurrencyAmount

   function get_Amount
   (
      this : in out CurrencyAmount
   )
   return WinRt.WString;

   function get_Currency
   (
      this : in out CurrencyAmount
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CurrencyIdentifiers is

      function get_AED
      return WinRt.WString;

      function get_AFN
      return WinRt.WString;

      function get_ALL
      return WinRt.WString;

      function get_AMD
      return WinRt.WString;

      function get_ANG
      return WinRt.WString;

      function get_AOA
      return WinRt.WString;

      function get_ARS
      return WinRt.WString;

      function get_AUD
      return WinRt.WString;

      function get_AWG
      return WinRt.WString;

      function get_AZN
      return WinRt.WString;

      function get_BAM
      return WinRt.WString;

      function get_BBD
      return WinRt.WString;

      function get_BDT
      return WinRt.WString;

      function get_BGN
      return WinRt.WString;

      function get_BHD
      return WinRt.WString;

      function get_BIF
      return WinRt.WString;

      function get_BMD
      return WinRt.WString;

      function get_BND
      return WinRt.WString;

      function get_BOB
      return WinRt.WString;

      function get_BRL
      return WinRt.WString;

      function get_BSD
      return WinRt.WString;

      function get_BTN
      return WinRt.WString;

      function get_BWP
      return WinRt.WString;

      function get_BYR
      return WinRt.WString;

      function get_BZD
      return WinRt.WString;

      function get_CAD
      return WinRt.WString;

      function get_CDF
      return WinRt.WString;

      function get_CHF
      return WinRt.WString;

      function get_CLP
      return WinRt.WString;

      function get_CNY
      return WinRt.WString;

      function get_COP
      return WinRt.WString;

      function get_CRC
      return WinRt.WString;

      function get_CUP
      return WinRt.WString;

      function get_CVE
      return WinRt.WString;

      function get_CZK
      return WinRt.WString;

      function get_DJF
      return WinRt.WString;

      function get_DKK
      return WinRt.WString;

      function get_DOP
      return WinRt.WString;

      function get_DZD
      return WinRt.WString;

      function get_EGP
      return WinRt.WString;

      function get_ERN
      return WinRt.WString;

      function get_ETB
      return WinRt.WString;

      function get_EUR
      return WinRt.WString;

      function get_FJD
      return WinRt.WString;

      function get_FKP
      return WinRt.WString;

      function get_GBP
      return WinRt.WString;

      function get_GEL
      return WinRt.WString;

      function get_GHS
      return WinRt.WString;

      function get_GIP
      return WinRt.WString;

      function get_GMD
      return WinRt.WString;

      function get_GNF
      return WinRt.WString;

      function get_GTQ
      return WinRt.WString;

      function get_GYD
      return WinRt.WString;

      function get_HKD
      return WinRt.WString;

      function get_HNL
      return WinRt.WString;

      function get_HRK
      return WinRt.WString;

      function get_HTG
      return WinRt.WString;

      function get_HUF
      return WinRt.WString;

      function get_IDR
      return WinRt.WString;

      function get_ILS
      return WinRt.WString;

      function get_INR
      return WinRt.WString;

      function get_IQD
      return WinRt.WString;

      function get_IRR
      return WinRt.WString;

      function get_ISK
      return WinRt.WString;

      function get_JMD
      return WinRt.WString;

      function get_JOD
      return WinRt.WString;

      function get_JPY
      return WinRt.WString;

      function get_KES
      return WinRt.WString;

      function get_KGS
      return WinRt.WString;

      function get_KHR
      return WinRt.WString;

      function get_KMF
      return WinRt.WString;

      function get_KPW
      return WinRt.WString;

      function get_KRW
      return WinRt.WString;

      function get_KWD
      return WinRt.WString;

      function get_KYD
      return WinRt.WString;

      function get_KZT
      return WinRt.WString;

      function get_LAK
      return WinRt.WString;

      function get_LBP
      return WinRt.WString;

      function get_LKR
      return WinRt.WString;

      function get_LRD
      return WinRt.WString;

      function get_LSL
      return WinRt.WString;

      function get_LTL
      return WinRt.WString;

      function get_LVL
      return WinRt.WString;

      function get_LYD
      return WinRt.WString;

      function get_MAD
      return WinRt.WString;

      function get_MDL
      return WinRt.WString;

      function get_MGA
      return WinRt.WString;

      function get_MKD
      return WinRt.WString;

      function get_MMK
      return WinRt.WString;

      function get_MNT
      return WinRt.WString;

      function get_MOP
      return WinRt.WString;

      function get_MRO
      return WinRt.WString;

      function get_MUR
      return WinRt.WString;

      function get_MVR
      return WinRt.WString;

      function get_MWK
      return WinRt.WString;

      function get_MXN
      return WinRt.WString;

      function get_MYR
      return WinRt.WString;

      function get_MZN
      return WinRt.WString;

      function get_NAD
      return WinRt.WString;

      function get_NGN
      return WinRt.WString;

      function get_NIO
      return WinRt.WString;

      function get_NOK
      return WinRt.WString;

      function get_NPR
      return WinRt.WString;

      function get_NZD
      return WinRt.WString;

      function get_OMR
      return WinRt.WString;

      function get_PAB
      return WinRt.WString;

      function get_PEN
      return WinRt.WString;

      function get_PGK
      return WinRt.WString;

      function get_PHP
      return WinRt.WString;

      function get_PKR
      return WinRt.WString;

      function get_PLN
      return WinRt.WString;

      function get_PYG
      return WinRt.WString;

      function get_QAR
      return WinRt.WString;

      function get_RON
      return WinRt.WString;

      function get_RSD
      return WinRt.WString;

      function get_RUB
      return WinRt.WString;

      function get_RWF
      return WinRt.WString;

      function get_SAR
      return WinRt.WString;

      function get_SBD
      return WinRt.WString;

      function get_SCR
      return WinRt.WString;

      function get_SDG
      return WinRt.WString;

      function get_SEK
      return WinRt.WString;

      function get_SGD
      return WinRt.WString;

      function get_SHP
      return WinRt.WString;

      function get_SLL
      return WinRt.WString;

      function get_SOS
      return WinRt.WString;

      function get_SRD
      return WinRt.WString;

      function get_STD
      return WinRt.WString;

      function get_SYP
      return WinRt.WString;

      function get_SZL
      return WinRt.WString;

      function get_THB
      return WinRt.WString;

      function get_TJS
      return WinRt.WString;

      function get_TMT
      return WinRt.WString;

      function get_TND
      return WinRt.WString;

      function get_TOP
      return WinRt.WString;

      function get_TRY
      return WinRt.WString;

      function get_TTD
      return WinRt.WString;

      function get_TWD
      return WinRt.WString;

      function get_TZS
      return WinRt.WString;

      function get_UAH
      return WinRt.WString;

      function get_UGX
      return WinRt.WString;

      function get_USD
      return WinRt.WString;

      function get_UYU
      return WinRt.WString;

      function get_UZS
      return WinRt.WString;

      function get_VEF
      return WinRt.WString;

      function get_VND
      return WinRt.WString;

      function get_VUV
      return WinRt.WString;

      function get_WST
      return WinRt.WString;

      function get_XAF
      return WinRt.WString;

      function get_XCD
      return WinRt.WString;

      function get_XOF
      return WinRt.WString;

      function get_XPF
      return WinRt.WString;

      function get_XXX
      return WinRt.WString;

      function get_YER
      return WinRt.WString;

      function get_ZAR
      return WinRt.WString;

      function get_ZMW
      return WinRt.WString;

      function get_ZWL
      return WinRt.WString;

      function get_BYN
      return WinRt.WString;

      function get_MRU
      return WinRt.WString;

      function get_SSP
      return WinRt.WString;

      function get_STN
      return WinRt.WString;

      function get_VES
      return WinRt.WString;

   end CurrencyIdentifiers;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GeographicRegion

   overriding procedure Initialize (this : in out GeographicRegion);
   overriding procedure Finalize (this : in out GeographicRegion);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for GeographicRegion

   function Constructor return GeographicRegion;

   function Constructor
   (
      geographicRegionCode : WinRt.WString
   )
   return GeographicRegion;

   -----------------------------------------------------------------------------
   -- Static Interfaces for GeographicRegion

   function IsSupported
   (
      geographicRegionCode : WinRt.WString
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GeographicRegion

   function get_Code
   (
      this : in out GeographicRegion
   )
   return WinRt.WString;

   function get_CodeTwoLetter
   (
      this : in out GeographicRegion
   )
   return WinRt.WString;

   function get_CodeThreeLetter
   (
      this : in out GeographicRegion
   )
   return WinRt.WString;

   function get_CodeThreeDigit
   (
      this : in out GeographicRegion
   )
   return WinRt.WString;

   function get_DisplayName
   (
      this : in out GeographicRegion
   )
   return WinRt.WString;

   function get_NativeName
   (
      this : in out GeographicRegion
   )
   return WinRt.WString;

   function get_CurrenciesInUse
   (
      this : in out GeographicRegion
   )
   return IVectorView_HString.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for JapanesePhoneme

   overriding procedure Initialize (this : in out JapanesePhoneme);
   overriding procedure Finalize (this : in out JapanesePhoneme);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for JapanesePhoneme

   function get_DisplayText
   (
      this : in out JapanesePhoneme
   )
   return WinRt.WString;

   function get_YomiText
   (
      this : in out JapanesePhoneme
   )
   return WinRt.WString;

   function get_IsPhraseStart
   (
      this : in out JapanesePhoneme
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package JapanesePhoneticAnalyzer is

      function GetWords
      (
         input : WinRt.WString
      )
      return WinRt.GenericObject;

      function GetWords
      (
         input : WinRt.WString;
         monoRuby : WinRt.Boolean
      )
      return WinRt.GenericObject;

   end JapanesePhoneticAnalyzer;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Language

   overriding procedure Initialize (this : in out Language);
   overriding procedure Finalize (this : in out Language);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Language

   function Constructor
   (
      languageTag : WinRt.WString
   )
   return Language;

   -----------------------------------------------------------------------------
   -- Static Interfaces for Language

   function IsWellFormed
   (
      languageTag : WinRt.WString
   )
   return WinRt.Boolean;

   function get_CurrentInputMethodLanguageTag
   return WinRt.WString;

   function TrySetInputMethodLanguageTag
   (
      languageTag : WinRt.WString
   )
   return WinRt.Boolean;

   function GetMuiCompatibleLanguageListFromLanguageTags
   (
      languageTags : GenericObject
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Language

   function get_LanguageTag
   (
      this : in out Language
   )
   return WinRt.WString;

   function get_DisplayName
   (
      this : in out Language
   )
   return WinRt.WString;

   function get_NativeName
   (
      this : in out Language
   )
   return WinRt.WString;

   function get_Script
   (
      this : in out Language
   )
   return WinRt.WString;

   function GetExtensionSubtags
   (
      this : in out Language;
      singleton : WinRt.WString
   )
   return IVectorView_HString.Kind;

   function get_LayoutDirection
   (
      this : in out Language
   )
   return WinRt.Windows.Globalization.LanguageLayoutDirection;

   function get_AbbreviatedName
   (
      this : in out Language
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package NumeralSystemIdentifiers is

      function get_Arab
      return WinRt.WString;

      function get_ArabExt
      return WinRt.WString;

      function get_Bali
      return WinRt.WString;

      function get_Beng
      return WinRt.WString;

      function get_Cham
      return WinRt.WString;

      function get_Deva
      return WinRt.WString;

      function get_FullWide
      return WinRt.WString;

      function get_Gujr
      return WinRt.WString;

      function get_Guru
      return WinRt.WString;

      function get_HaniDec
      return WinRt.WString;

      function get_Java
      return WinRt.WString;

      function get_Kali
      return WinRt.WString;

      function get_Khmr
      return WinRt.WString;

      function get_Knda
      return WinRt.WString;

      function get_Lana
      return WinRt.WString;

      function get_LanaTham
      return WinRt.WString;

      function get_Laoo
      return WinRt.WString;

      function get_Latn
      return WinRt.WString;

      function get_Lepc
      return WinRt.WString;

      function get_Limb
      return WinRt.WString;

      function get_Mlym
      return WinRt.WString;

      function get_Mong
      return WinRt.WString;

      function get_Mtei
      return WinRt.WString;

      function get_Mymr
      return WinRt.WString;

      function get_MymrShan
      return WinRt.WString;

      function get_Nkoo
      return WinRt.WString;

      function get_Olck
      return WinRt.WString;

      function get_Orya
      return WinRt.WString;

      function get_Saur
      return WinRt.WString;

      function get_Sund
      return WinRt.WString;

      function get_Talu
      return WinRt.WString;

      function get_TamlDec
      return WinRt.WString;

      function get_Telu
      return WinRt.WString;

      function get_Thai_NumeralSystemIdentifiers
      return WinRt.WString;

      function get_Tibt
      return WinRt.WString;

      function get_Vaii
      return WinRt.WString;

      function get_Brah
      return WinRt.WString;

      function get_Osma
      return WinRt.WString;

      function get_MathBold
      return WinRt.WString;

      function get_MathDbl
      return WinRt.WString;

      function get_MathSans
      return WinRt.WString;

      function get_MathSanb
      return WinRt.WString;

      function get_MathMono
      return WinRt.WString;

      function get_ZmthBold
      return WinRt.WString;

      function get_ZmthDbl
      return WinRt.WString;

      function get_ZmthSans
      return WinRt.WString;

      function get_ZmthSanb
      return WinRt.WString;

      function get_ZmthMono
      return WinRt.WString;

   end NumeralSystemIdentifiers;

end;
