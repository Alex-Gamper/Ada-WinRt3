--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.Geolocation.Geofencing is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IGeofence_Interface is interface and WinRt.IInspectable_Interface;
   type IGeofence is access IGeofence_Interface'Class;
   type IGeofence_Ptr is access all IGeofence;

   type IGeofenceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IGeofenceFactory is access IGeofenceFactory_Interface'Class;

   type IGeofenceMonitor_Interface is interface and WinRt.IInspectable_Interface;
   type IGeofenceMonitor is access IGeofenceMonitor_Interface'Class;
   type IGeofenceMonitor_Ptr is access all IGeofenceMonitor;

   type IGeofenceMonitorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGeofenceMonitorStatics is access IGeofenceMonitorStatics_Interface'Class;

   type IGeofenceStateChangeReport_Interface is interface and WinRt.IInspectable_Interface;
   type IGeofenceStateChangeReport is access IGeofenceStateChangeReport_Interface'Class;
   type IGeofenceStateChangeReport_Ptr is access all IGeofenceStateChangeReport;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Geofence is new Ada.Finalization.Limited_Controlled with
      record
         m_IGeofence : access Windows.Devices.Geolocation.Geofencing.IGeofence;
      end record;
   type Geofence_Ptr is access all Geofence;

   type GeofenceMonitor is new Ada.Finalization.Limited_Controlled with
      record
         m_IGeofenceMonitor : access Windows.Devices.Geolocation.Geofencing.IGeofenceMonitor;
      end record;
   type GeofenceMonitor_Ptr is access all GeofenceMonitor;

   type GeofenceStateChangeReport is new Ada.Finalization.Limited_Controlled with
      record
         m_IGeofenceStateChangeReport : access Windows.Devices.Geolocation.Geofencing.IGeofenceStateChangeReport;
      end record;
   type GeofenceStateChangeReport_Ptr is access all GeofenceStateChangeReport;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type GeofenceMonitorStatus is (
      Ready_e,
      Initializing_e,
      NoData_e,
      Disabled_e,
      NotInitialized_e,
      NotAvailable_e
   );
   for GeofenceMonitorStatus use (
      Ready_e => 0,
      Initializing_e => 1,
      NoData_e => 2,
      Disabled_e => 3,
      NotInitialized_e => 4,
      NotAvailable_e => 5
   );
   type GeofenceMonitorStatus_Ptr is access all GeofenceMonitorStatus;

   type GeofenceRemovalReason is (
      Used_e,
      Expired_e
   );
   for GeofenceRemovalReason use (
      Used_e => 0,
      Expired_e => 1
   );
   type GeofenceRemovalReason_Ptr is access all GeofenceRemovalReason;

   type GeofenceState is (
      None_e,
      Entered_e,
      Exited_e,
      Removed_e
   );
   for GeofenceState use (
      None_e => 0,
      Entered_e => 1,
      Exited_e => 2,
      Removed_e => 4
   );
   type GeofenceState_Ptr is access all GeofenceState;

   type MonitoredGeofenceStates is (
      None_e,
      Entered_e,
      Exited_e,
      Removed_e
   );
   for MonitoredGeofenceStates use (
      None_e => 0,
      Entered_e => 1,
      Exited_e => 2,
      Removed_e => 4
   );
   type MonitoredGeofenceStates_Ptr is access all MonitoredGeofenceStates;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVector_IGeofence is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.Devices.Geolocation.Geofencing.IGeofence);
   IID_IVector_IGeofence : aliased WinRt.IID := (2459875430, 64246, 21159, (128, 223, 49, 57, 71, 46, 203, 183 ));
   function QInterface_IVector_IGeofence is new Generic_QueryInterface (GenericObject_Interface, IVector_IGeofence.Kind, IID_IVector_IGeofence'Access);

   package IVectorView_IGeofenceStateChangeReport is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.Geolocation.Geofencing.IGeofenceStateChangeReport);
   IID_IVectorView_IGeofenceStateChangeReport : aliased WinRt.IID := (2459875430, 64246, 21159, (128, 223, 49, 57, 71, 46, 203, 183 ));
   function QInterface_IVectorView_IGeofenceStateChangeReport is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IGeofenceStateChangeReport.Kind, IID_IVectorView_IGeofenceStateChangeReport'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IGeofence is interface and WinRt.IInspectable;

      function get_StartTime
      (
         this : access IGeofence_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_Duration
      (
         this : access IGeofence_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_DwellTime
      (
         this : access IGeofence_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access IGeofence_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MonitoredStates
      (
         this : access IGeofence_Interface;
         RetVal : access Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates
      )
      return WinRt.Hresult is abstract;

      function get_Geoshape
      (
         this : access IGeofence_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoshape
      )
      return WinRt.Hresult is abstract;

      function get_SingleUse
      (
         this : access IGeofence_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGeofence : aliased WinRt.IID := (2617837603, 60856, 18400, (130, 69, 91, 246, 29, 50, 31, 45 ));

   -----------------------------------------------------------------------------
   -- type IGeofenceFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IGeofenceFactory_Interface;
         id : WinRt.HString;
         geoshape : Windows.Devices.Geolocation.IGeoshape;
         RetVal : access Windows.Devices.Geolocation.Geofencing.IGeofence
      )
      return WinRt.Hresult is abstract;

      function CreateWithMonitorStates
      (
         this : access IGeofenceFactory_Interface;
         id : WinRt.HString;
         geoshape : Windows.Devices.Geolocation.IGeoshape;
         monitoredStates : Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;
         singleUse : WinRt.Boolean;
         RetVal : access Windows.Devices.Geolocation.Geofencing.IGeofence
      )
      return WinRt.Hresult is abstract;

      function CreateWithMonitorStatesAndDwellTime
      (
         this : access IGeofenceFactory_Interface;
         id : WinRt.HString;
         geoshape : Windows.Devices.Geolocation.IGeoshape;
         monitoredStates : Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;
         singleUse : WinRt.Boolean;
         dwellTime : Windows.Foundation.TimeSpan;
         RetVal : access Windows.Devices.Geolocation.Geofencing.IGeofence
      )
      return WinRt.Hresult is abstract;

      function CreateWithMonitorStatesDwellTimeStartTimeAndDuration
      (
         this : access IGeofenceFactory_Interface;
         id : WinRt.HString;
         geoshape : Windows.Devices.Geolocation.IGeoshape;
         monitoredStates : Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;
         singleUse : WinRt.Boolean;
         dwellTime : Windows.Foundation.TimeSpan;
         startTime : Windows.Foundation.DateTime;
         duration : Windows.Foundation.TimeSpan;
         RetVal : access Windows.Devices.Geolocation.Geofencing.IGeofence
      )
      return WinRt.Hresult is abstract;

      IID_IGeofenceFactory : aliased WinRt.IID := (2216649291, 12895, 19344, (188, 167, 43, 128, 34, 169, 55, 150 ));

   -----------------------------------------------------------------------------
   -- type IGeofenceMonitor is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IGeofenceMonitor_Interface;
         RetVal : access Windows.Devices.Geolocation.Geofencing.GeofenceMonitorStatus
      )
      return WinRt.Hresult is abstract;

      function get_Geofences
      (
         this : access IGeofenceMonitor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_LastKnownGeoposition
      (
         this : access IGeofenceMonitor_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoposition
      )
      return WinRt.Hresult is abstract;

      function add_GeofenceStateChanged
      (
         this : access IGeofenceMonitor_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_GeofenceStateChanged
      (
         this : access IGeofenceMonitor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function ReadReports
      (
         this : access IGeofenceMonitor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_StatusChanged
      (
         this : access IGeofenceMonitor_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StatusChanged
      (
         this : access IGeofenceMonitor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IGeofenceMonitor : aliased WinRt.IID := (1276075896, 7199, 17953, (187, 189, 131, 59, 146, 36, 114, 38 ));

   -----------------------------------------------------------------------------
   -- type IGeofenceMonitorStatics is interface and WinRt.IInspectable;

      function get_Current
      (
         this : access IGeofenceMonitorStatics_Interface;
         RetVal : access Windows.Devices.Geolocation.Geofencing.IGeofenceMonitor
      )
      return WinRt.Hresult is abstract;

      IID_IGeofenceMonitorStatics : aliased WinRt.IID := (768815055, 32373, 18585, (172, 227, 43, 208, 166, 92, 206, 6 ));

   -----------------------------------------------------------------------------
   -- type IGeofenceStateChangeReport is interface and WinRt.IInspectable;

      function get_NewState
      (
         this : access IGeofenceStateChangeReport_Interface;
         RetVal : access Windows.Devices.Geolocation.Geofencing.GeofenceState
      )
      return WinRt.Hresult is abstract;

      function get_Geofence
      (
         this : access IGeofenceStateChangeReport_Interface;
         RetVal : access Windows.Devices.Geolocation.Geofencing.IGeofence
      )
      return WinRt.Hresult is abstract;

      function get_Geoposition
      (
         this : access IGeofenceStateChangeReport_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoposition
      )
      return WinRt.Hresult is abstract;

      function get_RemovalReason
      (
         this : access IGeofenceStateChangeReport_Interface;
         RetVal : access Windows.Devices.Geolocation.Geofencing.GeofenceRemovalReason
      )
      return WinRt.Hresult is abstract;

      IID_IGeofenceStateChangeReport : aliased WinRt.IID := (2586065944, 9316, 19593, (190, 5, 179, 255, 255, 91, 171, 197 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Geofence

   overriding procedure Initialize (this : in out Geofence);
   overriding procedure Finalize (this : in out Geofence);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Geofence

   function Constructor
   (
      id : WinRt.WString;
      geoshape : Windows.Devices.Geolocation.IGeoshape
   )
   return Geofence;

   function Constructor
   (
      id : WinRt.WString;
      geoshape : Windows.Devices.Geolocation.IGeoshape;
      monitoredStates : Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;
      singleUse : WinRt.Boolean
   )
   return Geofence;

   function Constructor
   (
      id : WinRt.WString;
      geoshape : Windows.Devices.Geolocation.IGeoshape;
      monitoredStates : Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;
      singleUse : WinRt.Boolean;
      dwellTime : Windows.Foundation.TimeSpan
   )
   return Geofence;

   function Constructor
   (
      id : WinRt.WString;
      geoshape : Windows.Devices.Geolocation.IGeoshape;
      monitoredStates : Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;
      singleUse : WinRt.Boolean;
      dwellTime : Windows.Foundation.TimeSpan;
      startTime : Windows.Foundation.DateTime;
      duration : Windows.Foundation.TimeSpan
   )
   return Geofence;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Geofence

   function get_StartTime
   (
      this : in out Geofence
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_Duration
   (
      this : in out Geofence
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_DwellTime
   (
      this : in out Geofence
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_Id
   (
      this : in out Geofence
   )
   return WinRt.WString;

   function get_MonitoredStates
   (
      this : in out Geofence
   )
   return WinRt.Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates;

   function get_Geoshape
   (
      this : in out Geofence
   )
   return WinRt.Windows.Devices.Geolocation.IGeoshape;

   function get_SingleUse
   (
      this : in out Geofence
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GeofenceMonitor

   overriding procedure Initialize (this : in out GeofenceMonitor);
   overriding procedure Finalize (this : in out GeofenceMonitor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GeofenceMonitor

   function get_Current
   return WinRt.Windows.Devices.Geolocation.Geofencing.GeofenceMonitor;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GeofenceMonitor

   function get_Status
   (
      this : in out GeofenceMonitor
   )
   return WinRt.Windows.Devices.Geolocation.Geofencing.GeofenceMonitorStatus;

   function get_Geofences
   (
      this : in out GeofenceMonitor
   )
   return IVector_IGeofence.Kind;

   function get_LastKnownGeoposition
   (
      this : in out GeofenceMonitor
   )
   return WinRt.Windows.Devices.Geolocation.Geoposition'Class;

   function add_GeofenceStateChanged
   (
      this : in out GeofenceMonitor;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_GeofenceStateChanged
   (
      this : in out GeofenceMonitor;
      token : Windows.Foundation.EventRegistrationToken
   );

   function ReadReports
   (
      this : in out GeofenceMonitor
   )
   return IVectorView_IGeofenceStateChangeReport.Kind;

   function add_StatusChanged
   (
      this : in out GeofenceMonitor;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_StatusChanged
   (
      this : in out GeofenceMonitor;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GeofenceStateChangeReport

   overriding procedure Initialize (this : in out GeofenceStateChangeReport);
   overriding procedure Finalize (this : in out GeofenceStateChangeReport);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GeofenceStateChangeReport

   function get_NewState
   (
      this : in out GeofenceStateChangeReport
   )
   return WinRt.Windows.Devices.Geolocation.Geofencing.GeofenceState;

   function get_Geofence
   (
      this : in out GeofenceStateChangeReport
   )
   return WinRt.Windows.Devices.Geolocation.Geofencing.Geofence'Class;

   function get_Geoposition
   (
      this : in out GeofenceStateChangeReport
   )
   return WinRt.Windows.Devices.Geolocation.Geoposition'Class;

   function get_RemovalReason
   (
      this : in out GeofenceStateChangeReport
   )
   return WinRt.Windows.Devices.Geolocation.Geofencing.GeofenceRemovalReason;

end;
