--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Numerics;
limited with WinRt.Windows.Perception.Spatial;
limited with WinRt.Windows.UI.Input;
limited with WinRt.Windows.UI.Input.Spatial;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Perception.People is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IEyesPose_Interface is interface and WinRt.IInspectable_Interface;
   type IEyesPose is access all IEyesPose_Interface'Class;
   type IEyesPose_Ptr is access all IEyesPose;

   type IEyesPoseStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IEyesPoseStatics is access all IEyesPoseStatics_Interface'Class;

   type IHandMeshObserver_Interface is interface and WinRt.IInspectable_Interface;
   type IHandMeshObserver is access all IHandMeshObserver_Interface'Class;
   type IHandMeshObserver_Ptr is access all IHandMeshObserver;

   type IHandMeshVertexState_Interface is interface and WinRt.IInspectable_Interface;
   type IHandMeshVertexState is access all IHandMeshVertexState_Interface'Class;
   type IHandMeshVertexState_Ptr is access all IHandMeshVertexState;

   type IHandPose_Interface is interface and WinRt.IInspectable_Interface;
   type IHandPose is access all IHandPose_Interface'Class;
   type IHandPose_Ptr is access all IHandPose;

   type IHeadPose_Interface is interface and WinRt.IInspectable_Interface;
   type IHeadPose is access all IHeadPose_Interface'Class;
   type IHeadPose_Ptr is access all IHeadPose;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type EyesPose is new Ada.Finalization.Limited_Controlled with
      record
         m_IEyesPose : access Windows.Perception.People.IEyesPose;
      end record;
   type EyesPose_Ptr is access all EyesPose;

   type HandMeshObserver is new Ada.Finalization.Limited_Controlled with
      record
         m_IHandMeshObserver : access Windows.Perception.People.IHandMeshObserver;
      end record;
   type HandMeshObserver_Ptr is access all HandMeshObserver;

   type HandMeshVertexState is new Ada.Finalization.Limited_Controlled with
      record
         m_IHandMeshVertexState : access Windows.Perception.People.IHandMeshVertexState;
      end record;
   type HandMeshVertexState_Ptr is access all HandMeshVertexState;

   type HandPose is new Ada.Finalization.Limited_Controlled with
      record
         m_IHandPose : access Windows.Perception.People.IHandPose;
      end record;
   type HandPose_Ptr is access all HandPose;

   type HeadPose is new Ada.Finalization.Limited_Controlled with
      record
         m_IHeadPose : access Windows.Perception.People.IHeadPose;
      end record;
   type HeadPose_Ptr is access all HeadPose;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type HandJointKind is (
      Palm_e,
      Wrist_e,
      ThumbMetacarpal_e,
      ThumbProximal_e,
      ThumbDistal_e,
      ThumbTip_e,
      IndexMetacarpal_e,
      IndexProximal_e,
      IndexIntermediate_e,
      IndexDistal_e,
      IndexTip_e,
      MiddleMetacarpal_e,
      MiddleProximal_e,
      MiddleIntermediate_e,
      MiddleDistal_e,
      MiddleTip_e,
      RingMetacarpal_e,
      RingProximal_e,
      RingIntermediate_e,
      RingDistal_e,
      RingTip_e,
      LittleMetacarpal_e,
      LittleProximal_e,
      LittleIntermediate_e,
      LittleDistal_e,
      LittleTip_e
   );
   for HandJointKind use (
      Palm_e => 0,
      Wrist_e => 1,
      ThumbMetacarpal_e => 2,
      ThumbProximal_e => 3,
      ThumbDistal_e => 4,
      ThumbTip_e => 5,
      IndexMetacarpal_e => 6,
      IndexProximal_e => 7,
      IndexIntermediate_e => 8,
      IndexDistal_e => 9,
      IndexTip_e => 10,
      MiddleMetacarpal_e => 11,
      MiddleProximal_e => 12,
      MiddleIntermediate_e => 13,
      MiddleDistal_e => 14,
      MiddleTip_e => 15,
      RingMetacarpal_e => 16,
      RingProximal_e => 17,
      RingIntermediate_e => 18,
      RingDistal_e => 19,
      RingTip_e => 20,
      LittleMetacarpal_e => 21,
      LittleProximal_e => 22,
      LittleIntermediate_e => 23,
      LittleDistal_e => 24,
      LittleTip_e => 25
   );
   type HandJointKind_Ptr is access all HandJointKind;
   type HandJointKind_Array is array (Natural range <>) of aliased HandJointKind;

   type JointPoseAccuracy is (
      High_e,
      Approximate_e
   );
   for JointPoseAccuracy use (
      High_e => 0,
      Approximate_e => 1
   );
   type JointPoseAccuracy_Ptr is access all JointPoseAccuracy;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type HandMeshVertex is record
      Position : WinRt.Windows.Foundation.Numerics.Vector3;
      Normal : WinRt.Windows.Foundation.Numerics.Vector3;
   end record with Convention => C_Pass_By_Copy;
   type HandMeshVertex_Ptr is access all HandMeshVertex;
   type HandMeshVertex_Array is array (Natural range <>) of aliased HandMeshVertex;

   type JointPose is record
      Orientation : WinRt.Windows.Foundation.Numerics.Quaternion;
      Position : WinRt.Windows.Foundation.Numerics.Vector3;
      Radius : WinRt.Single;
      Accuracy : Windows.Perception.People.JointPoseAccuracy;
   end record with Convention => C_Pass_By_Copy;
   type JointPose_Ptr is access all JointPose;
   type JointPose_Array is array (Natural range <>) of aliased JointPose;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IEyesPose is interface and WinRt.IInspectable;

      function get_IsCalibrationValid
      (
         this : access IEyesPose_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Gaze
      (
         this : access IEyesPose_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_UpdateTimestamp
      (
         this : access IEyesPose_Interface;
         RetVal : access Windows.Perception.IPerceptionTimestamp
      )
      return WinRt.Hresult is abstract;

      IID_IEyesPose : aliased WinRt.IID := (1747622691, 35358, 23430, (160, 96, 144, 111, 250, 203, 98, 164 ));

   -----------------------------------------------------------------------------
   -- type IEyesPoseStatics is interface and WinRt.IInspectable;

      function IsSupported
      (
         this : access IEyesPoseStatics_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function RequestAccessAsync
      (
         this : access IEyesPoseStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IEyesPoseStatics : aliased WinRt.IID := (486503443, 45599, 21696, (128, 193, 230, 13, 153, 76, 165, 140 ));

   -----------------------------------------------------------------------------
   -- type IHandMeshObserver is interface and WinRt.IInspectable;

      function get_Source
      (
         this : access IHandMeshObserver_Interface;
         RetVal : access Windows.UI.Input.Spatial.ISpatialInteractionSource
      )
      return WinRt.Hresult is abstract;

      function get_TriangleIndexCount
      (
         this : access IHandMeshObserver_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_VertexCount
      (
         this : access IHandMeshObserver_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function GetTriangleIndices
      (
         this : access IHandMeshObserver_Interface;
         indicesSize : WinRt.UInt32;
         indices : WinRt.UInt16_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetVertexStateForPose
      (
         this : access IHandMeshObserver_Interface;
         handPose_p : Windows.Perception.People.IHandPose;
         RetVal : access Windows.Perception.People.IHandMeshVertexState
      )
      return WinRt.Hresult is abstract;

      function get_NeutralPose
      (
         this : access IHandMeshObserver_Interface;
         RetVal : access Windows.Perception.People.IHandPose
      )
      return WinRt.Hresult is abstract;

      function get_NeutralPoseVersion
      (
         this : access IHandMeshObserver_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ModelId
      (
         this : access IHandMeshObserver_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IHandMeshObserver : aliased WinRt.IID := (2242785483, 28611, 21956, (167, 180, 41, 227, 56, 150, 202, 105 ));

   -----------------------------------------------------------------------------
   -- type IHandMeshVertexState is interface and WinRt.IInspectable;

      function get_CoordinateSystem
      (
         this : access IHandMeshVertexState_Interface;
         RetVal : access Windows.Perception.Spatial.ISpatialCoordinateSystem
      )
      return WinRt.Hresult is abstract;

      function GetVertices
      (
         this : access IHandMeshVertexState_Interface;
         verticesSize : WinRt.UInt32;
         vertices : Windows.Perception.People.HandMeshVertex_Ptr
      )
      return WinRt.Hresult is abstract;

      function get_UpdateTimestamp
      (
         this : access IHandMeshVertexState_Interface;
         RetVal : access Windows.Perception.IPerceptionTimestamp
      )
      return WinRt.Hresult is abstract;

      IID_IHandMeshVertexState : aliased WinRt.IID := (74211311, 7563, 21982, (171, 44, 28, 212, 36, 136, 109, 143 ));

   -----------------------------------------------------------------------------
   -- type IHandPose is interface and WinRt.IInspectable;

      function TryGetJoint
      (
         this : access IHandPose_Interface;
         coordinateSystem : Windows.Perception.Spatial.ISpatialCoordinateSystem;
         joint : Windows.Perception.People.HandJointKind;
         jointPose : Windows.Perception.People.JointPose_Ptr;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function TryGetJoints
      (
         this : access IHandPose_Interface;
         coordinateSystem : Windows.Perception.Spatial.ISpatialCoordinateSystem;
         jointsSize : WinRt.UInt32;
         joints : Windows.Perception.People.HandJointKind_Ptr;
         jointPosesSize : WinRt.UInt32;
         jointPoses : Windows.Perception.People.JointPose_Ptr;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetRelativeJoint
      (
         this : access IHandPose_Interface;
         joint : Windows.Perception.People.HandJointKind;
         referenceJoint : Windows.Perception.People.HandJointKind;
         RetVal : access Windows.Perception.People.JointPose
      )
      return WinRt.Hresult is abstract;

      function GetRelativeJoints
      (
         this : access IHandPose_Interface;
         jointsSize : WinRt.UInt32;
         joints : Windows.Perception.People.HandJointKind_Ptr;
         referenceJointsSize : WinRt.UInt32;
         referenceJoints : Windows.Perception.People.HandJointKind_Ptr;
         jointPosesSize : WinRt.UInt32;
         jointPoses : Windows.Perception.People.JointPose_Ptr
      )
      return WinRt.Hresult is abstract;

      IID_IHandPose : aliased WinRt.IID := (1301866394, 47880, 23817, (145, 222, 223, 13, 211, 250, 228, 108 ));

   -----------------------------------------------------------------------------
   -- type IHeadPose is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IHeadPose_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_ForwardDirection
      (
         this : access IHeadPose_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_UpDirection
      (
         this : access IHeadPose_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      IID_IHeadPose : aliased WinRt.IID := (2136655269, 18907, 14239, (148, 41, 50, 162, 250, 243, 79, 166 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EyesPose

   overriding procedure Initialize (this : in out EyesPose);
   overriding procedure Finalize (this : in out EyesPose);

   -----------------------------------------------------------------------------
   -- Static Interfaces for EyesPose

   function IsSupported
   return WinRt.Boolean;

   function RequestAccessAsync
   return WinRt.Windows.UI.Input.GazeInputAccessStatus;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EyesPose

   function get_IsCalibrationValid
   (
      this : in out EyesPose
   )
   return WinRt.Boolean;

   function get_Gaze
   (
      this : in out EyesPose
   )
   return WinRt.GenericObject;

   function get_UpdateTimestamp
   (
      this : in out EyesPose
   )
   return WinRt.Windows.Perception.PerceptionTimestamp'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HandMeshObserver

   overriding procedure Initialize (this : in out HandMeshObserver);
   overriding procedure Finalize (this : in out HandMeshObserver);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HandMeshObserver

   function get_Source
   (
      this : in out HandMeshObserver
   )
   return WinRt.Windows.UI.Input.Spatial.SpatialInteractionSource'Class;

   function get_TriangleIndexCount
   (
      this : in out HandMeshObserver
   )
   return WinRt.UInt32;

   function get_VertexCount
   (
      this : in out HandMeshObserver
   )
   return WinRt.UInt32;

   procedure GetTriangleIndices
   (
      this : in out HandMeshObserver;
      indices : WinRt.UInt16_Array
   );

   function GetVertexStateForPose
   (
      this : in out HandMeshObserver;
      handPose_p : Windows.Perception.People.HandPose'Class
   )
   return WinRt.Windows.Perception.People.HandMeshVertexState'Class;

   function get_NeutralPose
   (
      this : in out HandMeshObserver
   )
   return WinRt.Windows.Perception.People.HandPose'Class;

   function get_NeutralPoseVersion
   (
      this : in out HandMeshObserver
   )
   return WinRt.Int32;

   function get_ModelId
   (
      this : in out HandMeshObserver
   )
   return WinRt.Int32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HandMeshVertexState

   overriding procedure Initialize (this : in out HandMeshVertexState);
   overriding procedure Finalize (this : in out HandMeshVertexState);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HandMeshVertexState

   function get_CoordinateSystem
   (
      this : in out HandMeshVertexState
   )
   return WinRt.Windows.Perception.Spatial.SpatialCoordinateSystem'Class;

   procedure GetVertices
   (
      this : in out HandMeshVertexState;
      vertices : Windows.Perception.People.HandMeshVertex_Array
   );

   function get_UpdateTimestamp
   (
      this : in out HandMeshVertexState
   )
   return WinRt.Windows.Perception.PerceptionTimestamp'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HandPose

   overriding procedure Initialize (this : in out HandPose);
   overriding procedure Finalize (this : in out HandPose);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HandPose

   function TryGetJoint
   (
      this : in out HandPose;
      coordinateSystem : Windows.Perception.Spatial.SpatialCoordinateSystem'Class;
      joint : Windows.Perception.People.HandJointKind;
      jointPose : Windows.Perception.People.JointPose_Ptr
   )
   return WinRt.Boolean;

   function TryGetJoints
   (
      this : in out HandPose;
      coordinateSystem : Windows.Perception.Spatial.SpatialCoordinateSystem'Class;
      joints : Windows.Perception.People.HandJointKind_Array;
      jointPoses : Windows.Perception.People.JointPose_Array
   )
   return WinRt.Boolean;

   function GetRelativeJoint
   (
      this : in out HandPose;
      joint : Windows.Perception.People.HandJointKind;
      referenceJoint : Windows.Perception.People.HandJointKind
   )
   return WinRt.Windows.Perception.People.JointPose;

   procedure GetRelativeJoints
   (
      this : in out HandPose;
      joints : Windows.Perception.People.HandJointKind_Array;
      referenceJoints : Windows.Perception.People.HandJointKind_Array;
      jointPoses : Windows.Perception.People.JointPose_Array
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HeadPose

   overriding procedure Initialize (this : in out HeadPose);
   overriding procedure Finalize (this : in out HeadPose);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HeadPose

   function get_Position
   (
      this : in out HeadPose
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   function get_ForwardDirection
   (
      this : in out HeadPose
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   function get_UpDirection
   (
      this : in out HeadPose
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

end;
