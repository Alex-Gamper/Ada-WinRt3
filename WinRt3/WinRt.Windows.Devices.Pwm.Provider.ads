--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.Pwm.Provider is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IPwmControllerProvider_Interface is interface and WinRt.IInspectable_Interface;
   type IPwmControllerProvider is access all IPwmControllerProvider_Interface'Class;

   type IPwmProvider_Interface is interface and WinRt.IInspectable_Interface;
   type IPwmProvider is access all IPwmProvider_Interface'Class;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IPwmControllerProvider is interface and WinRt.IInspectable;

      function get_PinCount
      (
         this : access IPwmControllerProvider_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ActualFrequency
      (
         this : access IPwmControllerProvider_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function SetDesiredFrequency
      (
         this : access IPwmControllerProvider_Interface;
         frequency : WinRt.Double;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_MaxFrequency
      (
         this : access IPwmControllerProvider_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_MinFrequency
      (
         this : access IPwmControllerProvider_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function AcquirePin
      (
         this : access IPwmControllerProvider_Interface;
         pin : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function ReleasePin
      (
         this : access IPwmControllerProvider_Interface;
         pin : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function EnablePin
      (
         this : access IPwmControllerProvider_Interface;
         pin : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function DisablePin
      (
         this : access IPwmControllerProvider_Interface;
         pin : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function SetPulseParameters
      (
         this : access IPwmControllerProvider_Interface;
         pin : WinRt.Int32;
         dutyCycle : WinRt.Double;
         invertPolarity : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPwmControllerProvider : aliased WinRt.IID := (318789947, 58083, 16548, (183, 217, 72, 223, 240, 55, 122, 82 ));

   -----------------------------------------------------------------------------
   -- type IPwmProvider is interface and WinRt.IInspectable;

      function GetControllers
      (
         this : access IPwmProvider_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPwmProvider : aliased WinRt.IID := (2737836584, 21233, 18352, (147, 73, 102, 186, 67, 210, 89, 2 ));

end;
