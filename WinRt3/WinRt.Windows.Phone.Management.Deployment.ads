--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.ApplicationModel;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Management.Deployment;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Phone.Management.Deployment is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IEnterprise_Interface is interface and WinRt.IInspectable_Interface;
   type IEnterprise is access all IEnterprise_Interface'Class;
   type IEnterprise_Ptr is access all IEnterprise;

   type IEnterpriseEnrollmentManager_Interface is interface and WinRt.IInspectable_Interface;
   type IEnterpriseEnrollmentManager is access all IEnterpriseEnrollmentManager_Interface'Class;

   type IEnterpriseEnrollmentResult_Interface is interface and WinRt.IInspectable_Interface;
   type IEnterpriseEnrollmentResult is access all IEnterpriseEnrollmentResult_Interface'Class;
   type IEnterpriseEnrollmentResult_Ptr is access all IEnterpriseEnrollmentResult;

   type IInstallationManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IInstallationManagerStatics is access all IInstallationManagerStatics_Interface'Class;

   type IInstallationManagerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IInstallationManagerStatics2 is access all IInstallationManagerStatics2_Interface'Class;

   type IPackageInstallResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageInstallResult is access all IPackageInstallResult_Interface'Class;
   type IPackageInstallResult_Ptr is access all IPackageInstallResult;

   type IPackageInstallResult2_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageInstallResult2 is access all IPackageInstallResult2_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Enterprise is new Ada.Finalization.Limited_Controlled with
      record
         m_IEnterprise : access Windows.Phone.Management.Deployment.IEnterprise;
      end record;
   type Enterprise_Ptr is access all Enterprise;

   type EnterpriseEnrollmentResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IEnterpriseEnrollmentResult : access Windows.Phone.Management.Deployment.IEnterpriseEnrollmentResult;
      end record;
   type EnterpriseEnrollmentResult_Ptr is access all EnterpriseEnrollmentResult;

   type PackageInstallResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageInstallResult : access Windows.Phone.Management.Deployment.IPackageInstallResult;
      end record;
   type PackageInstallResult_Ptr is access all PackageInstallResult;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type EnterpriseEnrollmentStatus is (
      Success_e,
      CancelledByUser_e,
      UnknownFailure_e
   );
   for EnterpriseEnrollmentStatus use (
      Success_e => 0,
      CancelledByUser_e => 1,
      UnknownFailure_e => 2
   );
   type EnterpriseEnrollmentStatus_Ptr is access all EnterpriseEnrollmentStatus;

   type EnterpriseStatus is (
      Enrolled_e,
      Disabled_e,
      Revoked_e,
      Expired_e
   );
   for EnterpriseStatus use (
      Enrolled_e => 0,
      Disabled_e => 1,
      Revoked_e => 2,
      Expired_e => 3
   );
   type EnterpriseStatus_Ptr is access all EnterpriseStatus;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IEnterprise is interface and WinRt.IInspectable;

      function get_Id
      (
         this : access IEnterprise_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access IEnterprise_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_WorkplaceId
      (
         this : access IEnterprise_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_EnrollmentValidFrom
      (
         this : access IEnterprise_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_EnrollmentValidTo
      (
         this : access IEnterprise_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access IEnterprise_Interface;
         RetVal : access Windows.Phone.Management.Deployment.EnterpriseStatus
      )
      return WinRt.Hresult is abstract;

      IID_IEnterprise : aliased WinRt.IID := (2522427277, 34156, 17446, (169, 71, 176, 99, 7, 113, 128, 120 ));

   -----------------------------------------------------------------------------
   -- type IEnterpriseEnrollmentManager is interface and WinRt.IInspectable;

      function get_EnrolledEnterprises
      (
         this : access IEnterpriseEnrollmentManager_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_CurrentEnterprise
      (
         this : access IEnterpriseEnrollmentManager_Interface;
         RetVal : access Windows.Phone.Management.Deployment.IEnterprise
      )
      return WinRt.Hresult is abstract;

      function ValidateEnterprisesAsync
      (
         this : access IEnterpriseEnrollmentManager_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function RequestEnrollmentAsync
      (
         this : access IEnterpriseEnrollmentManager_Interface;
         enrollmentToken : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestUnenrollmentAsync
      (
         this : access IEnterpriseEnrollmentManager_Interface;
         enterprise_p : Windows.Phone.Management.Deployment.IEnterprise;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IEnterpriseEnrollmentManager : aliased WinRt.IID := (553251728, 11369, 16856, (136, 230, 228, 179, 136, 64, 38, 203 ));

   -----------------------------------------------------------------------------
   -- type IEnterpriseEnrollmentResult is interface and WinRt.IInspectable;

      function get_EnrolledEnterprise
      (
         this : access IEnterpriseEnrollmentResult_Interface;
         RetVal : access Windows.Phone.Management.Deployment.IEnterprise
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access IEnterpriseEnrollmentResult_Interface;
         RetVal : access Windows.Phone.Management.Deployment.EnterpriseEnrollmentStatus
      )
      return WinRt.Hresult is abstract;

      IID_IEnterpriseEnrollmentResult : aliased WinRt.IID := (2683772134, 37083, 17218, (179, 38, 23, 41, 170, 145, 48, 28 ));

   -----------------------------------------------------------------------------
   -- type IInstallationManagerStatics is interface and WinRt.IInspectable;

      function AddPackageAsync
      (
         this : access IInstallationManagerStatics_Interface;
         title : WinRt.HString;
         sourceLocation : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AddPackageAsync
      (
         this : access IInstallationManagerStatics_Interface;
         title : WinRt.HString;
         sourceLocation : Windows.Foundation.IUriRuntimeClass;
         instanceId : WinRt.HString;
         offerId : WinRt.HString;
         license : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetPendingPackageInstalls
      (
         this : access IInstallationManagerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForCurrentPublisher
      (
         this : access IInstallationManagerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IInstallationManagerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IInstallationManagerStatics : aliased WinRt.IID := (2459608888, 36169, 17068, (128, 201, 180, 173, 121, 60, 67, 242 ));

   -----------------------------------------------------------------------------
   -- type IInstallationManagerStatics2 is interface and WinRt.IInspectable;

      function RemovePackageAsync
      (
         this : access IInstallationManagerStatics2_Interface;
         packageFullName : WinRt.HString;
         removalOptions : Windows.Management.Deployment.RemovalOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RegisterPackageAsync
      (
         this : access IInstallationManagerStatics2_Interface;
         manifestUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IInstallationManagerStatics2_Interface;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IInstallationManagerStatics2 : aliased WinRt.IID := (2087464125, 64074, 19598, (171, 151, 217, 89, 69, 47, 25, 229 ));

   -----------------------------------------------------------------------------
   -- type IPackageInstallResult is interface and WinRt.IInspectable;

      function get_ProductId
      (
         this : access IPackageInstallResult_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_InstallState
      (
         this : access IPackageInstallResult_Interface;
         RetVal : access Windows.Management.Deployment.PackageInstallState
      )
      return WinRt.Hresult is abstract;

      IID_IPackageInstallResult : aliased WinRt.IID := (870903509, 3966, 17523, (150, 124, 125, 110, 28, 14, 125, 225 ));

   -----------------------------------------------------------------------------
   -- type IPackageInstallResult2 is interface and WinRt.IInspectable;

      function get_ErrorText
      (
         this : access IPackageInstallResult2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPackageInstallResult2 : aliased WinRt.IID := (1900665097, 16377, 16877, (167, 23, 43, 198, 95, 252, 97, 210 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Enterprise

   overriding procedure Initialize (this : in out Enterprise);
   overriding procedure Finalize (this : in out Enterprise);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Enterprise

   function get_Id
   (
      this : in out Enterprise
   )
   return WinRt.Guid;

   function get_Name
   (
      this : in out Enterprise
   )
   return WinRt.WString;

   function get_WorkplaceId
   (
      this : in out Enterprise
   )
   return WinRt.Int32;

   function get_EnrollmentValidFrom
   (
      this : in out Enterprise
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_EnrollmentValidTo
   (
      this : in out Enterprise
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_Status
   (
      this : in out Enterprise
   )
   return WinRt.Windows.Phone.Management.Deployment.EnterpriseStatus;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package EnterpriseEnrollmentManager is

      function get_EnrolledEnterprises
      return WinRt.GenericObject;

      function get_CurrentEnterprise
      return WinRt.Windows.Phone.Management.Deployment.Enterprise;

      procedure ValidateEnterprisesAsync;

      function RequestEnrollmentAsync
      (
         enrollmentToken : WinRt.WString
      )
      return WinRt.Windows.Phone.Management.Deployment.EnterpriseEnrollmentResult;

      function RequestUnenrollmentAsync
      (
         enterprise_p : Windows.Phone.Management.Deployment.Enterprise'Class
      )
      return WinRt.Boolean;

   end EnterpriseEnrollmentManager;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EnterpriseEnrollmentResult

   overriding procedure Initialize (this : in out EnterpriseEnrollmentResult);
   overriding procedure Finalize (this : in out EnterpriseEnrollmentResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EnterpriseEnrollmentResult

   function get_EnrolledEnterprise
   (
      this : in out EnterpriseEnrollmentResult
   )
   return WinRt.Windows.Phone.Management.Deployment.Enterprise'Class;

   function get_Status
   (
      this : in out EnterpriseEnrollmentResult
   )
   return WinRt.Windows.Phone.Management.Deployment.EnterpriseEnrollmentStatus;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package InstallationManager is

      function RemovePackageAsync
      (
         packageFullName : WinRt.WString;
         removalOptions : Windows.Management.Deployment.RemovalOptions
      )
      return WinRt.Windows.Phone.Management.Deployment.PackageInstallResult;

      function RegisterPackageAsync
      (
         manifestUri : Windows.Foundation.Uri'Class;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions
      )
      return WinRt.Windows.Phone.Management.Deployment.PackageInstallResult;

      function FindPackages
      (
         packageName : WinRt.WString;
         packagePublisher : WinRt.WString
      )
      return WinRt.GenericObject;

      function AddPackageAsync
      (
         title : WinRt.WString;
         sourceLocation : Windows.Foundation.Uri'Class
      )
      return WinRt.Windows.Phone.Management.Deployment.PackageInstallResult;

      function AddPackageAsync
      (
         title : WinRt.WString;
         sourceLocation : Windows.Foundation.Uri'Class;
         instanceId : WinRt.WString;
         offerId : WinRt.WString;
         license : Windows.Foundation.Uri'Class
      )
      return WinRt.Windows.Phone.Management.Deployment.PackageInstallResult;

      function GetPendingPackageInstalls
      return WinRt.GenericObject;

      function FindPackagesForCurrentPublisher
      return WinRt.GenericObject;

      function FindPackages
      return WinRt.GenericObject;

   end InstallationManager;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageInstallResult

   overriding procedure Initialize (this : in out PackageInstallResult);
   overriding procedure Finalize (this : in out PackageInstallResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageInstallResult

   function get_ProductId
   (
      this : in out PackageInstallResult
   )
   return WinRt.WString;

   function get_InstallState
   (
      this : in out PackageInstallResult
   )
   return WinRt.Windows.Management.Deployment.PackageInstallState;

   function get_ErrorText
   (
      this : in out PackageInstallResult
   )
   return WinRt.WString;

end;
