--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Media.Core;
limited with WinRt.Windows.Media.MediaProperties;
limited with WinRt.Windows.Storage;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Media.Transcoding is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IMediaTranscoder_Interface is interface and WinRt.IInspectable_Interface;
   type IMediaTranscoder is access IMediaTranscoder_Interface'Class;
   type IMediaTranscoder_Ptr is access all IMediaTranscoder;

   type IMediaTranscoder2_Interface is interface and WinRt.IInspectable_Interface;
   type IMediaTranscoder2 is access IMediaTranscoder2_Interface'Class;

   type IPrepareTranscodeResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPrepareTranscodeResult is access IPrepareTranscodeResult_Interface'Class;
   type IPrepareTranscodeResult_Ptr is access all IPrepareTranscodeResult;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type MediaTranscoder is new Ada.Finalization.Limited_Controlled with
      record
         m_IMediaTranscoder : access Windows.Media.Transcoding.IMediaTranscoder;
      end record;
   type MediaTranscoder_Ptr is access all MediaTranscoder;

   type PrepareTranscodeResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPrepareTranscodeResult : access Windows.Media.Transcoding.IPrepareTranscodeResult;
      end record;
   type PrepareTranscodeResult_Ptr is access all PrepareTranscodeResult;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type MediaVideoProcessingAlgorithm is (
      Default_e,
      MrfCrf444_e
   );
   for MediaVideoProcessingAlgorithm use (
      Default_e => 0,
      MrfCrf444_e => 1
   );
   type MediaVideoProcessingAlgorithm_Ptr is access MediaVideoProcessingAlgorithm;

   type TranscodeFailureReason is (
      None_e,
      Unknown_e,
      InvalidProfile_e,
      CodecNotFound_e
   );
   for TranscodeFailureReason use (
      None_e => 0,
      Unknown_e => 1,
      InvalidProfile_e => 2,
      CodecNotFound_e => 3
   );
   type TranscodeFailureReason_Ptr is access TranscodeFailureReason;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IMediaTranscoder is interface and WinRt.IInspectable;

      function put_TrimStartTime
      (
         this : access IMediaTranscoder_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_TrimStartTime
      (
         this : access IMediaTranscoder_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_TrimStopTime
      (
         this : access IMediaTranscoder_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_TrimStopTime
      (
         this : access IMediaTranscoder_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_AlwaysReencode
      (
         this : access IMediaTranscoder_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_AlwaysReencode
      (
         this : access IMediaTranscoder_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_HardwareAccelerationEnabled
      (
         this : access IMediaTranscoder_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_HardwareAccelerationEnabled
      (
         this : access IMediaTranscoder_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function AddAudioEffect
      (
         this : access IMediaTranscoder_Interface;
         activatableClassId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function AddAudioEffect
      (
         this : access IMediaTranscoder_Interface;
         activatableClassId : WinRt.HString;
         effectRequired : WinRt.Boolean;
         configuration : Windows.Foundation.Collections.IPropertySet
      )
      return WinRt.Hresult is abstract;

      function AddVideoEffect
      (
         this : access IMediaTranscoder_Interface;
         activatableClassId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function AddVideoEffect
      (
         this : access IMediaTranscoder_Interface;
         activatableClassId : WinRt.HString;
         effectRequired : WinRt.Boolean;
         configuration : Windows.Foundation.Collections.IPropertySet
      )
      return WinRt.Hresult is abstract;

      function ClearEffects
      (
         this : access IMediaTranscoder_Interface
      )
      return WinRt.Hresult is abstract;

      function PrepareFileTranscodeAsync
      (
         this : access IMediaTranscoder_Interface;
         source : Windows.Storage.IStorageFile;
         destination : Windows.Storage.IStorageFile;
         profile : Windows.Media.MediaProperties.IMediaEncodingProfile;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function PrepareStreamTranscodeAsync
      (
         this : access IMediaTranscoder_Interface;
         source : Windows.Storage.Streams.IRandomAccessStream;
         destination : Windows.Storage.Streams.IRandomAccessStream;
         profile : Windows.Media.MediaProperties.IMediaEncodingProfile;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMediaTranscoder : aliased WinRt.IID := (420256210, 41130, 19764, (134, 188, 238, 209, 177, 44, 47, 91 ));

   -----------------------------------------------------------------------------
   -- type IMediaTranscoder2 is interface and WinRt.IInspectable;

      function PrepareMediaStreamSourceTranscodeAsync
      (
         this : access IMediaTranscoder2_Interface;
         source : Windows.Media.Core.IMediaSource;
         destination : Windows.Storage.Streams.IRandomAccessStream;
         profile : Windows.Media.MediaProperties.IMediaEncodingProfile;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_VideoProcessingAlgorithm
      (
         this : access IMediaTranscoder2_Interface;
         value : Windows.Media.Transcoding.MediaVideoProcessingAlgorithm
      )
      return WinRt.Hresult is abstract;

      function get_VideoProcessingAlgorithm
      (
         this : access IMediaTranscoder2_Interface;
         RetVal : access Windows.Media.Transcoding.MediaVideoProcessingAlgorithm
      )
      return WinRt.Hresult is abstract;

      IID_IMediaTranscoder2 : aliased WinRt.IID := (1079188852, 13792, 20228, (133, 116, 202, 139, 196, 229, 160, 130 ));

   -----------------------------------------------------------------------------
   -- type IPrepareTranscodeResult is interface and WinRt.IInspectable;

      function get_CanTranscode
      (
         this : access IPrepareTranscodeResult_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_FailureReason
      (
         this : access IPrepareTranscodeResult_Interface;
         RetVal : access Windows.Media.Transcoding.TranscodeFailureReason
      )
      return WinRt.Hresult is abstract;

      function TranscodeAsync
      (
         this : access IPrepareTranscodeResult_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IPrepareTranscodeResult : aliased WinRt.IID := (99769806, 39247, 18996, (157, 104, 151, 204, 206, 23, 48, 214 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MediaTranscoder

   overriding procedure Initialize (this : in out MediaTranscoder);
   overriding procedure Finalize (this : in out MediaTranscoder);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MediaTranscoder

   function Constructor return MediaTranscoder;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MediaTranscoder

   procedure put_TrimStartTime
   (
      this : in out MediaTranscoder;
      value : Windows.Foundation.TimeSpan
   );

   function get_TrimStartTime
   (
      this : in out MediaTranscoder
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_TrimStopTime
   (
      this : in out MediaTranscoder;
      value : Windows.Foundation.TimeSpan
   );

   function get_TrimStopTime
   (
      this : in out MediaTranscoder
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_AlwaysReencode
   (
      this : in out MediaTranscoder;
      value : WinRt.Boolean
   );

   function get_AlwaysReencode
   (
      this : in out MediaTranscoder
   )
   return WinRt.Boolean;

   procedure put_HardwareAccelerationEnabled
   (
      this : in out MediaTranscoder;
      value : WinRt.Boolean
   );

   function get_HardwareAccelerationEnabled
   (
      this : in out MediaTranscoder
   )
   return WinRt.Boolean;

   procedure AddAudioEffect
   (
      this : in out MediaTranscoder;
      activatableClassId : WinRt.WString
   );

   procedure AddAudioEffect
   (
      this : in out MediaTranscoder;
      activatableClassId : WinRt.WString;
      effectRequired : WinRt.Boolean;
      configuration : Windows.Foundation.Collections.IPropertySet
   );

   procedure AddVideoEffect
   (
      this : in out MediaTranscoder;
      activatableClassId : WinRt.WString
   );

   procedure AddVideoEffect
   (
      this : in out MediaTranscoder;
      activatableClassId : WinRt.WString;
      effectRequired : WinRt.Boolean;
      configuration : Windows.Foundation.Collections.IPropertySet
   );

   procedure ClearEffects
   (
      this : in out MediaTranscoder
   );

   function PrepareFileTranscodeAsync
   (
      this : in out MediaTranscoder;
      source : Windows.Storage.IStorageFile;
      destination : Windows.Storage.IStorageFile;
      profile : Windows.Media.MediaProperties.MediaEncodingProfile'Class
   )
   return WinRt.Windows.Media.Transcoding.PrepareTranscodeResult'Class;

   function PrepareStreamTranscodeAsync
   (
      this : in out MediaTranscoder;
      source : Windows.Storage.Streams.IRandomAccessStream;
      destination : Windows.Storage.Streams.IRandomAccessStream;
      profile : Windows.Media.MediaProperties.MediaEncodingProfile'Class
   )
   return WinRt.Windows.Media.Transcoding.PrepareTranscodeResult'Class;

   function PrepareMediaStreamSourceTranscodeAsync
   (
      this : in out MediaTranscoder;
      source : Windows.Media.Core.IMediaSource;
      destination : Windows.Storage.Streams.IRandomAccessStream;
      profile : Windows.Media.MediaProperties.MediaEncodingProfile'Class
   )
   return WinRt.Windows.Media.Transcoding.PrepareTranscodeResult'Class;

   procedure put_VideoProcessingAlgorithm
   (
      this : in out MediaTranscoder;
      value : Windows.Media.Transcoding.MediaVideoProcessingAlgorithm
   );

   function get_VideoProcessingAlgorithm
   (
      this : in out MediaTranscoder
   )
   return WinRt.Windows.Media.Transcoding.MediaVideoProcessingAlgorithm;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrepareTranscodeResult

   overriding procedure Initialize (this : in out PrepareTranscodeResult);
   overriding procedure Finalize (this : in out PrepareTranscodeResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrepareTranscodeResult

   function get_CanTranscode
   (
      this : in out PrepareTranscodeResult
   )
   return WinRt.Boolean;

   function get_FailureReason
   (
      this : in out PrepareTranscodeResult
   )
   return WinRt.Windows.Media.Transcoding.TranscodeFailureReason;

   procedure TranscodeAsync
   (
      this : in out PrepareTranscodeResult
   );

end;
