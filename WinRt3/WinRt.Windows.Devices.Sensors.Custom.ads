--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.Sensors.Custom is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ICustomSensor_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomSensor is access all ICustomSensor_Interface'Class;
   type ICustomSensor_Ptr is access all ICustomSensor;

   type ICustomSensor2_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomSensor2 is access all ICustomSensor2_Interface'Class;

   type ICustomSensorReading_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomSensorReading is access all ICustomSensorReading_Interface'Class;
   type ICustomSensorReading_Ptr is access all ICustomSensorReading;

   type ICustomSensorReading2_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomSensorReading2 is access all ICustomSensorReading2_Interface'Class;

   type ICustomSensorReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomSensorReadingChangedEventArgs is access all ICustomSensorReadingChangedEventArgs_Interface'Class;
   type ICustomSensorReadingChangedEventArgs_Ptr is access all ICustomSensorReadingChangedEventArgs;

   type ICustomSensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomSensorStatics is access all ICustomSensorStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type CustomSensor is new Ada.Finalization.Limited_Controlled with
      record
         m_ICustomSensor : access Windows.Devices.Sensors.Custom.ICustomSensor;
      end record;
   type CustomSensor_Ptr is access all CustomSensor;

   type CustomSensorReading is new Ada.Finalization.Limited_Controlled with
      record
         m_ICustomSensorReading : access Windows.Devices.Sensors.Custom.ICustomSensorReading;
      end record;
   type CustomSensorReading_Ptr is access all CustomSensorReading;

   type CustomSensorReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ICustomSensorReadingChangedEventArgs : access Windows.Devices.Sensors.Custom.ICustomSensorReadingChangedEventArgs;
      end record;
   type CustomSensorReadingChangedEventArgs_Ptr is access all CustomSensorReadingChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IMapView_HString_IInspectable is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.IInspectable);
   IID_IMapView_HString_IInspectable : aliased WinRt.IID := (4291191457, 37369, 20771, (137, 66, 88, 168, 216, 171, 130, 226 ));
   function QInterface_IMapView_HString_IInspectable is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_IInspectable.Kind, IID_IMapView_HString_IInspectable'Access);

   package IReference_TimeSpan is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.TimeSpan);
   IID_IReference_TimeSpan : aliased WinRt.IID := (4293925357, 47251, 24072, (175, 203, 20, 12, 43, 243, 57, 140 ));
   function QInterface_IReference_TimeSpan is new Generic_QueryInterface (GenericObject_Interface, IReference_TimeSpan.Kind, IID_IReference_TimeSpan'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ICustomSensor is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access ICustomSensor_Interface;
         RetVal : access Windows.Devices.Sensors.Custom.ICustomSensorReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access ICustomSensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access ICustomSensor_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access ICustomSensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DeviceId
      (
         this : access ICustomSensor_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access ICustomSensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access ICustomSensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICustomSensor : aliased WinRt.IID := (2704734637, 16436, 19277, (153, 221, 83, 26, 172, 100, 156, 9 ));

   -----------------------------------------------------------------------------
   -- type ICustomSensor2 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access ICustomSensor2_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access ICustomSensor2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access ICustomSensor2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_ICustomSensor2 : aliased WinRt.IID := (551235857, 60504, 19871, (191, 189, 231, 120, 37, 8, 133, 16 ));

   -----------------------------------------------------------------------------
   -- type ICustomSensorReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access ICustomSensorReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access ICustomSensorReading_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICustomSensorReading : aliased WinRt.IID := (1677741901, 17514, 17254, (168, 122, 95, 150, 50, 104, 236, 83 ));

   -----------------------------------------------------------------------------
   -- type ICustomSensorReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access ICustomSensorReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICustomSensorReading2 : aliased WinRt.IID := (574396650, 49011, 18834, (154, 72, 211, 200, 151, 89, 76, 203 ));

   -----------------------------------------------------------------------------
   -- type ICustomSensorReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access ICustomSensorReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.Custom.ICustomSensorReading
      )
      return WinRt.Hresult is abstract;

      IID_ICustomSensorReadingChangedEventArgs : aliased WinRt.IID := (1797267491, 53245, 19649, (143, 240, 226, 24, 35, 215, 111, 204 ));

   -----------------------------------------------------------------------------
   -- type ICustomSensorStatics is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access ICustomSensorStatics_Interface;
         interfaceId : WinRt.Guid;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access ICustomSensorStatics_Interface;
         sensorId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICustomSensorStatics : aliased WinRt.IID := (2569032399, 62498, 19581, (131, 107, 231, 220, 116, 167, 18, 75 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CustomSensor

   overriding procedure Initialize (this : in out CustomSensor);
   overriding procedure Finalize (this : in out CustomSensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for CustomSensor

   function GetDeviceSelector
   (
      interfaceId : WinRt.Guid
   )
   return WinRt.WString;

   function FromIdAsync
   (
      sensorId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Custom.CustomSensor;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CustomSensor

   function GetCurrentReading
   (
      this : in out CustomSensor
   )
   return WinRt.Windows.Devices.Sensors.Custom.CustomSensorReading'Class;

   function get_MinimumReportInterval
   (
      this : in out CustomSensor
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out CustomSensor;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out CustomSensor
   )
   return WinRt.UInt32;

   function get_DeviceId
   (
      this : in out CustomSensor
   )
   return WinRt.WString;

   function add_ReadingChanged
   (
      this : in out CustomSensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out CustomSensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure put_ReportLatency
   (
      this : in out CustomSensor;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out CustomSensor
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out CustomSensor
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CustomSensorReading

   overriding procedure Initialize (this : in out CustomSensorReading);
   overriding procedure Finalize (this : in out CustomSensorReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CustomSensorReading

   function get_Timestamp
   (
      this : in out CustomSensorReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_Properties
   (
      this : in out CustomSensorReading
   )
   return IMapView_HString_IInspectable.Kind;

   function get_PerformanceCount
   (
      this : in out CustomSensorReading
   )
   return IReference_TimeSpan.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CustomSensorReadingChangedEventArgs

   overriding procedure Initialize (this : in out CustomSensorReadingChangedEventArgs);
   overriding procedure Finalize (this : in out CustomSensorReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CustomSensorReadingChangedEventArgs

   function get_Reading
   (
      this : in out CustomSensorReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.Custom.CustomSensorReading'Class;

end;
