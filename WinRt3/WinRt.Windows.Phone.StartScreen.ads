--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
limited with WinRt.Windows.UI.Notifications;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Phone.StartScreen is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IDualSimTile_Interface is interface and WinRt.IInspectable_Interface;
   type IDualSimTile is access all IDualSimTile_Interface'Class;
   type IDualSimTile_Ptr is access all IDualSimTile;

   type IDualSimTileStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IDualSimTileStatics is access all IDualSimTileStatics_Interface'Class;

   type IToastNotificationManagerStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IToastNotificationManagerStatics3 is access all IToastNotificationManagerStatics3_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type DualSimTile is new Ada.Finalization.Limited_Controlled with
      record
         m_IDualSimTile : access Windows.Phone.StartScreen.IDualSimTile;
      end record;
   type DualSimTile_Ptr is access all DualSimTile;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type DualSimTileContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type DualSimTileContract_Ptr is access all DualSimTileContract;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IDualSimTile is interface and WinRt.IInspectable;

      function put_DisplayName
      (
         this : access IDualSimTile_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayName
      (
         this : access IDualSimTile_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsPinnedToStart
      (
         this : access IDualSimTile_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function CreateAsync
      (
         this : access IDualSimTile_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function UpdateAsync
      (
         this : access IDualSimTile_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function DeleteAsync
      (
         this : access IDualSimTile_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IDualSimTile : aliased WinRt.IID := (339390995, 53343, 16449, (161, 140, 62, 63, 203, 117, 180, 30 ));

   -----------------------------------------------------------------------------
   -- type IDualSimTileStatics is interface and WinRt.IInspectable;

      function GetTileForSim2
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.Phone.StartScreen.IDualSimTile
      )
      return WinRt.Hresult is abstract;

      function UpdateDisplayNameForSim1Async
      (
         this : access IDualSimTileStatics_Interface;
         name : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CreateTileUpdaterForSim1
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.UI.Notifications.ITileUpdater
      )
      return WinRt.Hresult is abstract;

      function CreateTileUpdaterForSim2
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.UI.Notifications.ITileUpdater
      )
      return WinRt.Hresult is abstract;

      function CreateBadgeUpdaterForSim1
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.UI.Notifications.IBadgeUpdater
      )
      return WinRt.Hresult is abstract;

      function CreateBadgeUpdaterForSim2
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.UI.Notifications.IBadgeUpdater
      )
      return WinRt.Hresult is abstract;

      function CreateToastNotifierForSim1
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.UI.Notifications.IToastNotifier
      )
      return WinRt.Hresult is abstract;

      function CreateToastNotifierForSim2
      (
         this : access IDualSimTileStatics_Interface;
         RetVal : access Windows.UI.Notifications.IToastNotifier
      )
      return WinRt.Hresult is abstract;

      IID_IDualSimTileStatics : aliased WinRt.IID := (1347845278, 50575, 19913, (182, 232, 250, 103, 119, 238, 235, 55 ));

   -----------------------------------------------------------------------------
   -- type IToastNotificationManagerStatics3 is interface and WinRt.IInspectable;

      function CreateToastNotifierForSecondaryTile
      (
         this : access IToastNotificationManagerStatics3_Interface;
         tileId : WinRt.HString;
         RetVal : access Windows.UI.Notifications.IToastNotifier
      )
      return WinRt.Hresult is abstract;

      IID_IToastNotificationManagerStatics3 : aliased WinRt.IID := (655881547, 20703, 17493, (142, 110, 65, 224, 252, 142, 19, 206 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DualSimTile

   overriding procedure Initialize (this : in out DualSimTile);
   overriding procedure Finalize (this : in out DualSimTile);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for DualSimTile

   function Constructor return DualSimTile;

   -----------------------------------------------------------------------------
   -- Static Interfaces for DualSimTile

   function GetTileForSim2
   return WinRt.Windows.Phone.StartScreen.DualSimTile;

   function UpdateDisplayNameForSim1Async
   (
      name : WinRt.WString
   )
   return WinRt.Boolean;

   function CreateTileUpdaterForSim1
   return WinRt.Windows.UI.Notifications.TileUpdater;

   function CreateTileUpdaterForSim2
   return WinRt.Windows.UI.Notifications.TileUpdater;

   function CreateBadgeUpdaterForSim1
   return WinRt.Windows.UI.Notifications.BadgeUpdater;

   function CreateBadgeUpdaterForSim2
   return WinRt.Windows.UI.Notifications.BadgeUpdater;

   function CreateToastNotifierForSim1
   return WinRt.Windows.UI.Notifications.ToastNotifier;

   function CreateToastNotifierForSim2
   return WinRt.Windows.UI.Notifications.ToastNotifier;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DualSimTile

   procedure put_DisplayName
   (
      this : in out DualSimTile;
      value : WinRt.WString
   );

   function get_DisplayName
   (
      this : in out DualSimTile
   )
   return WinRt.WString;

   function get_IsPinnedToStart
   (
      this : in out DualSimTile
   )
   return WinRt.Boolean;

   function CreateAsync
   (
      this : in out DualSimTile
   )
   return WinRt.Boolean;

   function UpdateAsync
   (
      this : in out DualSimTile
   )
   return WinRt.Boolean;

   function DeleteAsync
   (
      this : in out DualSimTile
   )
   return WinRt.Boolean;

end;
