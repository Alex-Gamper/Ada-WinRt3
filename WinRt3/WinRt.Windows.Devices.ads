--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.Devices.Adc.Provider;
limited with WinRt.Windows.Devices.Gpio.Provider;
limited with WinRt.Windows.Devices.I2c.Provider;
limited with WinRt.Windows.Devices.Pwm.Provider;
limited with WinRt.Windows.Devices.Spi.Provider;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ILowLevelDevicesAggregateProvider_Interface is interface and WinRt.IInspectable_Interface;
   type ILowLevelDevicesAggregateProvider is access ILowLevelDevicesAggregateProvider_Interface'Class;
   type ILowLevelDevicesAggregateProvider_Ptr is access all ILowLevelDevicesAggregateProvider;

   type ILowLevelDevicesAggregateProviderFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ILowLevelDevicesAggregateProviderFactory is access ILowLevelDevicesAggregateProviderFactory_Interface'Class;

   type ILowLevelDevicesController_Interface is interface and WinRt.IInspectable_Interface;
   type ILowLevelDevicesController is access ILowLevelDevicesController_Interface'Class;
   type ILowLevelDevicesController_Ptr is access all ILowLevelDevicesController;

   type ILowLevelDevicesControllerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILowLevelDevicesControllerStatics is access ILowLevelDevicesControllerStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type LowLevelDevicesAggregateProvider is new Ada.Finalization.Limited_Controlled with
      record
         m_ILowLevelDevicesAggregateProvider : access Windows.Devices.ILowLevelDevicesAggregateProvider;
      end record;
   type LowLevelDevicesAggregateProvider_Ptr is access all LowLevelDevicesAggregateProvider;

   type LowLevelDevicesController is new Ada.Finalization.Limited_Controlled with
      record
         m_ILowLevelDevicesController : access Windows.Devices.ILowLevelDevicesController;
      end record;
   type LowLevelDevicesController_Ptr is access all LowLevelDevicesController;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type DevicesLowLevelContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type DevicesLowLevelContract_Ptr is access DevicesLowLevelContract;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ILowLevelDevicesAggregateProvider is interface and WinRt.IInspectable;

      function get_AdcControllerProvider
      (
         this : access ILowLevelDevicesAggregateProvider_Interface;
         RetVal : access Windows.Devices.Adc.Provider.IAdcControllerProvider
      )
      return WinRt.Hresult is abstract;

      function get_PwmControllerProvider
      (
         this : access ILowLevelDevicesAggregateProvider_Interface;
         RetVal : access Windows.Devices.Pwm.Provider.IPwmControllerProvider
      )
      return WinRt.Hresult is abstract;

      function get_GpioControllerProvider
      (
         this : access ILowLevelDevicesAggregateProvider_Interface;
         RetVal : access Windows.Devices.Gpio.Provider.IGpioControllerProvider
      )
      return WinRt.Hresult is abstract;

      function get_I2cControllerProvider
      (
         this : access ILowLevelDevicesAggregateProvider_Interface;
         RetVal : access Windows.Devices.I2c.Provider.II2cControllerProvider
      )
      return WinRt.Hresult is abstract;

      function get_SpiControllerProvider
      (
         this : access ILowLevelDevicesAggregateProvider_Interface;
         RetVal : access Windows.Devices.Spi.Provider.ISpiControllerProvider
      )
      return WinRt.Hresult is abstract;

      IID_ILowLevelDevicesAggregateProvider : aliased WinRt.IID := (2805880348, 43713, 20167, (168, 82, 71, 159, 112, 96, 208, 31 ));

   -----------------------------------------------------------------------------
   -- type ILowLevelDevicesAggregateProviderFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access ILowLevelDevicesAggregateProviderFactory_Interface;
         adc : Windows.Devices.Adc.Provider.IAdcControllerProvider;
         pwm : Windows.Devices.Pwm.Provider.IPwmControllerProvider;
         gpio : Windows.Devices.Gpio.Provider.IGpioControllerProvider;
         i2c : Windows.Devices.I2c.Provider.II2cControllerProvider;
         spi : Windows.Devices.Spi.Provider.ISpiControllerProvider;
         RetVal : access Windows.Devices.ILowLevelDevicesAggregateProvider
      )
      return WinRt.Hresult is abstract;

      IID_ILowLevelDevicesAggregateProviderFactory : aliased WinRt.IID := (2596580086, 13427, 18014, (150, 213, 54, 40, 26, 44, 87, 175 ));

   -----------------------------------------------------------------------------
   -- type ILowLevelDevicesController is interface and WinRt.IInspectable;

      IID_ILowLevelDevicesController : aliased WinRt.IID := (784481748, 6043, 17886, (155, 57, 58, 224, 37, 39, 222, 82 ));

   -----------------------------------------------------------------------------
   -- type ILowLevelDevicesControllerStatics is interface and WinRt.IInspectable;

      function get_DefaultProvider
      (
         this : access ILowLevelDevicesControllerStatics_Interface;
         RetVal : access Windows.Devices.ILowLevelDevicesAggregateProvider
      )
      return WinRt.Hresult is abstract;

      function put_DefaultProvider
      (
         this : access ILowLevelDevicesControllerStatics_Interface;
         value : Windows.Devices.ILowLevelDevicesAggregateProvider
      )
      return WinRt.Hresult is abstract;

      IID_ILowLevelDevicesControllerStatics : aliased WinRt.IID := (155095658, 64715, 17300, (166, 151, 25, 222, 99, 124, 45, 179 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LowLevelDevicesAggregateProvider

   overriding procedure Initialize (this : in out LowLevelDevicesAggregateProvider);
   overriding procedure Finalize (this : in out LowLevelDevicesAggregateProvider);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for LowLevelDevicesAggregateProvider

   function Constructor
   (
      adc : Windows.Devices.Adc.Provider.IAdcControllerProvider;
      pwm : Windows.Devices.Pwm.Provider.IPwmControllerProvider;
      gpio : Windows.Devices.Gpio.Provider.IGpioControllerProvider;
      i2c : Windows.Devices.I2c.Provider.II2cControllerProvider;
      spi : Windows.Devices.Spi.Provider.ISpiControllerProvider
   )
   return LowLevelDevicesAggregateProvider;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LowLevelDevicesAggregateProvider

   function get_AdcControllerProvider
   (
      this : in out LowLevelDevicesAggregateProvider
   )
   return WinRt.Windows.Devices.Adc.Provider.IAdcControllerProvider;

   function get_PwmControllerProvider
   (
      this : in out LowLevelDevicesAggregateProvider
   )
   return WinRt.Windows.Devices.Pwm.Provider.IPwmControllerProvider;

   function get_GpioControllerProvider
   (
      this : in out LowLevelDevicesAggregateProvider
   )
   return WinRt.Windows.Devices.Gpio.Provider.IGpioControllerProvider;

   function get_I2cControllerProvider
   (
      this : in out LowLevelDevicesAggregateProvider
   )
   return WinRt.Windows.Devices.I2c.Provider.II2cControllerProvider;

   function get_SpiControllerProvider
   (
      this : in out LowLevelDevicesAggregateProvider
   )
   return WinRt.Windows.Devices.Spi.Provider.ISpiControllerProvider;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LowLevelDevicesController

   overriding procedure Initialize (this : in out LowLevelDevicesController);
   overriding procedure Finalize (this : in out LowLevelDevicesController);

   -----------------------------------------------------------------------------
   -- Static Interfaces for LowLevelDevicesController

   function get_DefaultProvider
   return WinRt.Windows.Devices.ILowLevelDevicesAggregateProvider;

   procedure put_DefaultProvider
   (
      value : Windows.Devices.ILowLevelDevicesAggregateProvider
   );

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LowLevelDevicesController

end;
