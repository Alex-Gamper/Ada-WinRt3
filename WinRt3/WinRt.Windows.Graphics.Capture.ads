--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
limited with WinRt.Windows.Graphics.DirectX;
limited with WinRt.Windows.Graphics.DirectX.Direct3D11;
limited with WinRt.Windows.System;
limited with WinRt.Windows.UI.Composition;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Graphics.Capture is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IDirect3D11CaptureFrame_Interface is interface and WinRt.IInspectable_Interface;
   type IDirect3D11CaptureFrame is access all IDirect3D11CaptureFrame_Interface'Class;
   type IDirect3D11CaptureFrame_Ptr is access all IDirect3D11CaptureFrame;

   type IDirect3D11CaptureFramePool_Interface is interface and WinRt.IInspectable_Interface;
   type IDirect3D11CaptureFramePool is access all IDirect3D11CaptureFramePool_Interface'Class;
   type IDirect3D11CaptureFramePool_Ptr is access all IDirect3D11CaptureFramePool;

   type IDirect3D11CaptureFramePoolStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IDirect3D11CaptureFramePoolStatics is access all IDirect3D11CaptureFramePoolStatics_Interface'Class;

   type IDirect3D11CaptureFramePoolStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IDirect3D11CaptureFramePoolStatics2 is access all IDirect3D11CaptureFramePoolStatics2_Interface'Class;

   type IGraphicsCaptureItem_Interface is interface and WinRt.IInspectable_Interface;
   type IGraphicsCaptureItem is access all IGraphicsCaptureItem_Interface'Class;
   type IGraphicsCaptureItem_Ptr is access all IGraphicsCaptureItem;

   type IGraphicsCaptureItemStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGraphicsCaptureItemStatics is access all IGraphicsCaptureItemStatics_Interface'Class;

   type IGraphicsCapturePicker_Interface is interface and WinRt.IInspectable_Interface;
   type IGraphicsCapturePicker is access all IGraphicsCapturePicker_Interface'Class;
   type IGraphicsCapturePicker_Ptr is access all IGraphicsCapturePicker;

   type IGraphicsCaptureSession_Interface is interface and WinRt.IInspectable_Interface;
   type IGraphicsCaptureSession is access all IGraphicsCaptureSession_Interface'Class;
   type IGraphicsCaptureSession_Ptr is access all IGraphicsCaptureSession;

   type IGraphicsCaptureSession2_Interface is interface and WinRt.IInspectable_Interface;
   type IGraphicsCaptureSession2 is access all IGraphicsCaptureSession2_Interface'Class;

   type IGraphicsCaptureSessionStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGraphicsCaptureSessionStatics is access all IGraphicsCaptureSessionStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Direct3D11CaptureFrame is new Ada.Finalization.Limited_Controlled with
      record
         m_IDirect3D11CaptureFrame : access Windows.Graphics.Capture.IDirect3D11CaptureFrame;
      end record;
   type Direct3D11CaptureFrame_Ptr is access all Direct3D11CaptureFrame;

   type Direct3D11CaptureFramePool is new Ada.Finalization.Limited_Controlled with
      record
         m_IDirect3D11CaptureFramePool : access Windows.Graphics.Capture.IDirect3D11CaptureFramePool;
      end record;
   type Direct3D11CaptureFramePool_Ptr is access all Direct3D11CaptureFramePool;

   type GraphicsCaptureItem is new Ada.Finalization.Limited_Controlled with
      record
         m_IGraphicsCaptureItem : access Windows.Graphics.Capture.IGraphicsCaptureItem;
      end record;
   type GraphicsCaptureItem_Ptr is access all GraphicsCaptureItem;

   type GraphicsCapturePicker is new Ada.Finalization.Limited_Controlled with
      record
         m_IGraphicsCapturePicker : access Windows.Graphics.Capture.IGraphicsCapturePicker;
      end record;
   type GraphicsCapturePicker_Ptr is access all GraphicsCapturePicker;

   type GraphicsCaptureSession is new Ada.Finalization.Limited_Controlled with
      record
         m_IGraphicsCaptureSession : access Windows.Graphics.Capture.IGraphicsCaptureSession;
      end record;
   type GraphicsCaptureSession_Ptr is access all GraphicsCaptureSession;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IDirect3D11CaptureFrame is interface and WinRt.IInspectable;

      function get_Surface
      (
         this : access IDirect3D11CaptureFrame_Interface;
         RetVal : access Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface
      )
      return WinRt.Hresult is abstract;

      function get_SystemRelativeTime
      (
         this : access IDirect3D11CaptureFrame_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ContentSize
      (
         this : access IDirect3D11CaptureFrame_Interface;
         RetVal : access Windows.Graphics.SizeInt32
      )
      return WinRt.Hresult is abstract;

      IID_IDirect3D11CaptureFrame : aliased WinRt.IID := (4199597603, 14554, 19250, (172, 243, 250, 151, 52, 173, 128, 14 ));

   -----------------------------------------------------------------------------
   -- type IDirect3D11CaptureFramePool is interface and WinRt.IInspectable;

      function Recreate
      (
         this : access IDirect3D11CaptureFramePool_Interface;
         device : Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         numberOfBuffers : WinRt.Int32;
         size : Windows.Graphics.SizeInt32
      )
      return WinRt.Hresult is abstract;

      function TryGetNextFrame
      (
         this : access IDirect3D11CaptureFramePool_Interface;
         RetVal : access Windows.Graphics.Capture.IDirect3D11CaptureFrame
      )
      return WinRt.Hresult is abstract;

      function add_FrameArrived
      (
         this : access IDirect3D11CaptureFramePool_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_FrameArrived
      (
         this : access IDirect3D11CaptureFramePool_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function CreateCaptureSession
      (
         this : access IDirect3D11CaptureFramePool_Interface;
         item : Windows.Graphics.Capture.IGraphicsCaptureItem;
         RetVal : access Windows.Graphics.Capture.IGraphicsCaptureSession
      )
      return WinRt.Hresult is abstract;

      function get_DispatcherQueue
      (
         this : access IDirect3D11CaptureFramePool_Interface;
         RetVal : access Windows.System.IDispatcherQueue
      )
      return WinRt.Hresult is abstract;

      IID_IDirect3D11CaptureFramePool : aliased WinRt.IID := (619408674, 6517, 16942, (130, 231, 120, 13, 189, 141, 223, 36 ));

   -----------------------------------------------------------------------------
   -- type IDirect3D11CaptureFramePoolStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access IDirect3D11CaptureFramePoolStatics_Interface;
         device : Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         numberOfBuffers : WinRt.Int32;
         size : Windows.Graphics.SizeInt32;
         RetVal : access Windows.Graphics.Capture.IDirect3D11CaptureFramePool
      )
      return WinRt.Hresult is abstract;

      IID_IDirect3D11CaptureFramePoolStatics : aliased WinRt.IID := (2005140842, 26538, 19795, (174, 84, 16, 136, 213, 168, 202, 33 ));

   -----------------------------------------------------------------------------
   -- type IDirect3D11CaptureFramePoolStatics2 is interface and WinRt.IInspectable;

      function CreateFreeThreaded
      (
         this : access IDirect3D11CaptureFramePoolStatics2_Interface;
         device : Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         numberOfBuffers : WinRt.Int32;
         size : Windows.Graphics.SizeInt32;
         RetVal : access Windows.Graphics.Capture.IDirect3D11CaptureFramePool
      )
      return WinRt.Hresult is abstract;

      IID_IDirect3D11CaptureFramePoolStatics2 : aliased WinRt.IID := (1486557247, 27580, 24053, (169, 145, 2, 226, 139, 59, 102, 213 ));

   -----------------------------------------------------------------------------
   -- type IGraphicsCaptureItem is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IGraphicsCaptureItem_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access IGraphicsCaptureItem_Interface;
         RetVal : access Windows.Graphics.SizeInt32
      )
      return WinRt.Hresult is abstract;

      function add_Closed
      (
         this : access IGraphicsCaptureItem_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IGraphicsCaptureItem_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IGraphicsCaptureItem : aliased WinRt.IID := (2042886491, 12791, 20162, (164, 100, 99, 46, 245, 211, 7, 96 ));

   -----------------------------------------------------------------------------
   -- type IGraphicsCaptureItemStatics is interface and WinRt.IInspectable;

      function CreateFromVisual
      (
         this : access IGraphicsCaptureItemStatics_Interface;
         visual : Windows.UI.Composition.IVisual;
         RetVal : access Windows.Graphics.Capture.IGraphicsCaptureItem
      )
      return WinRt.Hresult is abstract;

      IID_IGraphicsCaptureItemStatics : aliased WinRt.IID := (2826878629, 17788, 22408, (171, 71, 12, 241, 211, 99, 126, 116 ));

   -----------------------------------------------------------------------------
   -- type IGraphicsCapturePicker is interface and WinRt.IInspectable;

      function PickSingleItemAsync
      (
         this : access IGraphicsCapturePicker_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGraphicsCapturePicker : aliased WinRt.IID := (1511461299, 44409, 19274, (147, 54, 19, 24, 253, 222, 53, 57 ));

   -----------------------------------------------------------------------------
   -- type IGraphicsCaptureSession is interface and WinRt.IInspectable;

      function StartCapture
      (
         this : access IGraphicsCaptureSession_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IGraphicsCaptureSession : aliased WinRt.IID := (2169389737, 63247, 19159, (147, 155, 253, 220, 198, 235, 136, 13 ));

   -----------------------------------------------------------------------------
   -- type IGraphicsCaptureSession2 is interface and WinRt.IInspectable;

      function get_IsCursorCaptureEnabled
      (
         this : access IGraphicsCaptureSession2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCursorCaptureEnabled
      (
         this : access IGraphicsCaptureSession2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGraphicsCaptureSession2 : aliased WinRt.IID := (741977664, 32046, 20548, (128, 78, 139, 103, 153, 212, 207, 158 ));

   -----------------------------------------------------------------------------
   -- type IGraphicsCaptureSessionStatics is interface and WinRt.IInspectable;

      function IsSupported
      (
         this : access IGraphicsCaptureSessionStatics_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGraphicsCaptureSessionStatics : aliased WinRt.IID := (572826944, 22900, 18858, (178, 50, 8, 130, 83, 111, 76, 181 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Direct3D11CaptureFrame

   overriding procedure Initialize (this : in out Direct3D11CaptureFrame);
   overriding procedure Finalize (this : in out Direct3D11CaptureFrame);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Direct3D11CaptureFrame

   function get_Surface
   (
      this : in out Direct3D11CaptureFrame
   )
   return WinRt.Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface;

   function get_SystemRelativeTime
   (
      this : in out Direct3D11CaptureFrame
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_ContentSize
   (
      this : in out Direct3D11CaptureFrame
   )
   return WinRt.Windows.Graphics.SizeInt32;

   procedure Close
   (
      this : in out Direct3D11CaptureFrame
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Direct3D11CaptureFramePool

   overriding procedure Initialize (this : in out Direct3D11CaptureFramePool);
   overriding procedure Finalize (this : in out Direct3D11CaptureFramePool);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Direct3D11CaptureFramePool

   function CreateFreeThreaded
   (
      device : Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      numberOfBuffers : WinRt.Int32;
      size : Windows.Graphics.SizeInt32
   )
   return WinRt.Windows.Graphics.Capture.Direct3D11CaptureFramePool;

   function Create
   (
      device : Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      numberOfBuffers : WinRt.Int32;
      size : Windows.Graphics.SizeInt32
   )
   return WinRt.Windows.Graphics.Capture.Direct3D11CaptureFramePool;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Direct3D11CaptureFramePool

   procedure Recreate
   (
      this : in out Direct3D11CaptureFramePool;
      device : Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      numberOfBuffers : WinRt.Int32;
      size : Windows.Graphics.SizeInt32
   );

   function TryGetNextFrame
   (
      this : in out Direct3D11CaptureFramePool
   )
   return WinRt.Windows.Graphics.Capture.Direct3D11CaptureFrame'Class;

   function add_FrameArrived
   (
      this : in out Direct3D11CaptureFramePool;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_FrameArrived
   (
      this : in out Direct3D11CaptureFramePool;
      token : Windows.Foundation.EventRegistrationToken
   );

   function CreateCaptureSession
   (
      this : in out Direct3D11CaptureFramePool;
      item : Windows.Graphics.Capture.GraphicsCaptureItem'Class
   )
   return WinRt.Windows.Graphics.Capture.GraphicsCaptureSession'Class;

   function get_DispatcherQueue
   (
      this : in out Direct3D11CaptureFramePool
   )
   return WinRt.Windows.System.DispatcherQueue'Class;

   procedure Close
   (
      this : in out Direct3D11CaptureFramePool
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GraphicsCaptureItem

   overriding procedure Initialize (this : in out GraphicsCaptureItem);
   overriding procedure Finalize (this : in out GraphicsCaptureItem);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GraphicsCaptureItem

   function CreateFromVisual
   (
      visual : Windows.UI.Composition.Visual'Class
   )
   return WinRt.Windows.Graphics.Capture.GraphicsCaptureItem;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GraphicsCaptureItem

   function get_DisplayName
   (
      this : in out GraphicsCaptureItem
   )
   return WinRt.WString;

   function get_Size
   (
      this : in out GraphicsCaptureItem
   )
   return WinRt.Windows.Graphics.SizeInt32;

   function add_Closed
   (
      this : in out GraphicsCaptureItem;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out GraphicsCaptureItem;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GraphicsCapturePicker

   overriding procedure Initialize (this : in out GraphicsCapturePicker);
   overriding procedure Finalize (this : in out GraphicsCapturePicker);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for GraphicsCapturePicker

   function Constructor return GraphicsCapturePicker;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GraphicsCapturePicker

   function PickSingleItemAsync
   (
      this : in out GraphicsCapturePicker
   )
   return WinRt.Windows.Graphics.Capture.GraphicsCaptureItem'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GraphicsCaptureSession

   overriding procedure Initialize (this : in out GraphicsCaptureSession);
   overriding procedure Finalize (this : in out GraphicsCaptureSession);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GraphicsCaptureSession

   function IsSupported
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GraphicsCaptureSession

   procedure StartCapture
   (
      this : in out GraphicsCaptureSession
   );

   function get_IsCursorCaptureEnabled
   (
      this : in out GraphicsCaptureSession
   )
   return WinRt.Boolean;

   procedure put_IsCursorCaptureEnabled
   (
      this : in out GraphicsCaptureSession;
      value : WinRt.Boolean
   );

   procedure Close
   (
      this : in out GraphicsCaptureSession
   );

end;
