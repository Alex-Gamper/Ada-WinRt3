--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Phone.System.UserProfile.GameServices.Core is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IGameService_Interface is interface and WinRt.IInspectable_Interface;
   type IGameService is access all IGameService_Interface'Class;

   type IGameService2_Interface is interface and WinRt.IInspectable_Interface;
   type IGameService2 is access all IGameService2_Interface'Class;

   type IGameServicePropertyCollection_Interface is interface and WinRt.IInspectable_Interface;
   type IGameServicePropertyCollection is access all IGameServicePropertyCollection_Interface'Class;
   type IGameServicePropertyCollection_Ptr is access all IGameServicePropertyCollection;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type GameServicePropertyCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_IGameServicePropertyCollection : access Windows.Phone.System.UserProfile.GameServices.Core.IGameServicePropertyCollection;
      end record;
   type GameServicePropertyCollection_Ptr is access all GameServicePropertyCollection;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type GameServiceGameOutcome is (
      None_e,
      Win_e,
      Loss_e,
      Tie_e
   );
   for GameServiceGameOutcome use (
      None_e => 0,
      Win_e => 1,
      Loss_e => 2,
      Tie_e => 3
   );
   type GameServiceGameOutcome_Ptr is access all GameServiceGameOutcome;

   type GameServiceScoreKind is (
      Number_e,
      Time_e
   );
   for GameServiceScoreKind use (
      Number_e => 0,
      Time_e => 1
   );
   type GameServiceScoreKind_Ptr is access all GameServiceScoreKind;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IGameService is interface and WinRt.IInspectable;

      function get_ServiceUri
      (
         this : access IGameService_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function GetGamerProfileAsync
      (
         this : access IGameService_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetInstalledGameItemsAsync
      (
         this : access IGameService_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetPartnerTokenAsync
      (
         this : access IGameService_Interface;
         audienceUri : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetPrivilegesAsync
      (
         this : access IGameService_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GrantAchievement
      (
         this : access IGameService_Interface;
         achievementId : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function GrantAvatarAward
      (
         this : access IGameService_Interface;
         avatarAwardId : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function PostResult
      (
         this : access IGameService_Interface;
         gameVariant : WinRt.UInt32;
         scoreKind : Windows.Phone.System.UserProfile.GameServices.Core.GameServiceScoreKind;
         scoreValue : WinRt.Int64;
         gameOutcome : Windows.Phone.System.UserProfile.GameServices.Core.GameServiceGameOutcome;
         buffer : Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      IID_IGameService : aliased WinRt.IID := (774721688, 18601, 20220, (175, 214, 142, 109, 160, 144, 3, 251 ));

   -----------------------------------------------------------------------------
   -- type IGameService2 is interface and WinRt.IInspectable;

      function NotifyPartnerTokenExpired
      (
         this : access IGameService2_Interface;
         audienceUri : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function GetAuthenticationStatus
      (
         this : access IGameService2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IGameService2 : aliased WinRt.IID := (3526774518, 59927, 19429, (141, 138, 200, 96, 136, 94, 5, 31 ));

   -----------------------------------------------------------------------------
   -- type IGameServicePropertyCollection is interface and WinRt.IInspectable;

      function GetPropertyAsync
      (
         this : access IGameServicePropertyCollection_Interface;
         propertyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGameServicePropertyCollection : aliased WinRt.IID := (132480968, 57019, 17929, (156, 200, 82, 157, 22, 188, 43, 217 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package GameService is

      function get_ServiceUri
      return WinRt.Windows.Foundation.Uri;

      function GetGamerProfileAsync
      return WinRt.Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection;

      function GetInstalledGameItemsAsync
      return WinRt.Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection;

      function GetPartnerTokenAsync
      (
         audienceUri : Windows.Foundation.Uri'Class
      )
      return WinRt.WString;

      function GetPrivilegesAsync
      return WinRt.WString;

      procedure GrantAchievement
      (
         achievementId : WinRt.UInt32
      );

      procedure GrantAvatarAward
      (
         avatarAwardId : WinRt.UInt32
      );

      procedure PostResult
      (
         gameVariant : WinRt.UInt32;
         scoreKind : Windows.Phone.System.UserProfile.GameServices.Core.GameServiceScoreKind;
         scoreValue : WinRt.Int64;
         gameOutcome : Windows.Phone.System.UserProfile.GameServices.Core.GameServiceGameOutcome;
         buffer : Windows.Storage.Streams.IBuffer
      );

      procedure NotifyPartnerTokenExpired
      (
         audienceUri : Windows.Foundation.Uri'Class
      );

      function GetAuthenticationStatus
      return WinRt.UInt32;

   end GameService;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GameServicePropertyCollection

   overriding procedure Initialize (this : in out GameServicePropertyCollection);
   overriding procedure Finalize (this : in out GameServicePropertyCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GameServicePropertyCollection

   function GetPropertyAsync
   (
      this : in out GameServicePropertyCollection;
      propertyName : WinRt.WString
   )
   return WinRt.IInspectable;

end;
