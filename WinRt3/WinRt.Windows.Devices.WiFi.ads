--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Networking.Connectivity;
limited with WinRt.Windows.Security.Credentials;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.WiFi is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IWiFiAdapter_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiAdapter is access all IWiFiAdapter_Interface'Class;
   type IWiFiAdapter_Ptr is access all IWiFiAdapter;

   type IWiFiAdapter2_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiAdapter2 is access all IWiFiAdapter2_Interface'Class;

   type IWiFiAdapterStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiAdapterStatics is access all IWiFiAdapterStatics_Interface'Class;

   type IWiFiAvailableNetwork_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiAvailableNetwork is access all IWiFiAvailableNetwork_Interface'Class;
   type IWiFiAvailableNetwork_Ptr is access all IWiFiAvailableNetwork;

   type IWiFiConnectionResult_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiConnectionResult is access all IWiFiConnectionResult_Interface'Class;
   type IWiFiConnectionResult_Ptr is access all IWiFiConnectionResult;

   type IWiFiNetworkReport_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiNetworkReport is access all IWiFiNetworkReport_Interface'Class;
   type IWiFiNetworkReport_Ptr is access all IWiFiNetworkReport;

   type IWiFiWpsConfigurationResult_Interface is interface and WinRt.IInspectable_Interface;
   type IWiFiWpsConfigurationResult is access all IWiFiWpsConfigurationResult_Interface'Class;
   type IWiFiWpsConfigurationResult_Ptr is access all IWiFiWpsConfigurationResult;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type WiFiAdapter is new Ada.Finalization.Limited_Controlled with
      record
         m_IWiFiAdapter : access Windows.Devices.WiFi.IWiFiAdapter;
      end record;
   type WiFiAdapter_Ptr is access all WiFiAdapter;

   type WiFiAvailableNetwork is new Ada.Finalization.Limited_Controlled with
      record
         m_IWiFiAvailableNetwork : access Windows.Devices.WiFi.IWiFiAvailableNetwork;
      end record;
   type WiFiAvailableNetwork_Ptr is access all WiFiAvailableNetwork;

   type WiFiConnectionResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IWiFiConnectionResult : access Windows.Devices.WiFi.IWiFiConnectionResult;
      end record;
   type WiFiConnectionResult_Ptr is access all WiFiConnectionResult;

   type WiFiNetworkReport is new Ada.Finalization.Limited_Controlled with
      record
         m_IWiFiNetworkReport : access Windows.Devices.WiFi.IWiFiNetworkReport;
      end record;
   type WiFiNetworkReport_Ptr is access all WiFiNetworkReport;

   type WiFiWpsConfigurationResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IWiFiWpsConfigurationResult : access Windows.Devices.WiFi.IWiFiWpsConfigurationResult;
      end record;
   type WiFiWpsConfigurationResult_Ptr is access all WiFiWpsConfigurationResult;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type WiFiAccessStatus is (
      Unspecified_e,
      Allowed_e,
      DeniedByUser_e,
      DeniedBySystem_e
   );
   for WiFiAccessStatus use (
      Unspecified_e => 0,
      Allowed_e => 1,
      DeniedByUser_e => 2,
      DeniedBySystem_e => 3
   );
   type WiFiAccessStatus_Ptr is access all WiFiAccessStatus;

   type WiFiConnectionMethod is (
      Default_e,
      WpsPin_e,
      WpsPushButton_e
   );
   for WiFiConnectionMethod use (
      Default_e => 0,
      WpsPin_e => 1,
      WpsPushButton_e => 2
   );
   type WiFiConnectionMethod_Ptr is access all WiFiConnectionMethod;

   type WiFiConnectionStatus is (
      UnspecifiedFailure_e,
      Success_e,
      AccessRevoked_e,
      InvalidCredential_e,
      NetworkNotAvailable_e,
      Timeout_e,
      UnsupportedAuthenticationProtocol_e
   );
   for WiFiConnectionStatus use (
      UnspecifiedFailure_e => 0,
      Success_e => 1,
      AccessRevoked_e => 2,
      InvalidCredential_e => 3,
      NetworkNotAvailable_e => 4,
      Timeout_e => 5,
      UnsupportedAuthenticationProtocol_e => 6
   );
   type WiFiConnectionStatus_Ptr is access all WiFiConnectionStatus;

   type WiFiNetworkKind is (
      Any_e,
      Infrastructure_e,
      Adhoc_e
   );
   for WiFiNetworkKind use (
      Any_e => 0,
      Infrastructure_e => 1,
      Adhoc_e => 2
   );
   type WiFiNetworkKind_Ptr is access all WiFiNetworkKind;

   type WiFiPhyKind is (
      Unknown_e,
      Fhss_e,
      Dsss_e,
      IRBaseband_e,
      Ofdm_e,
      Hrdsss_e,
      Erp_e,
      HT_e,
      Vht_e,
      Dmg_e,
      HE_e
   );
   for WiFiPhyKind use (
      Unknown_e => 0,
      Fhss_e => 1,
      Dsss_e => 2,
      IRBaseband_e => 3,
      Ofdm_e => 4,
      Hrdsss_e => 5,
      Erp_e => 6,
      HT_e => 7,
      Vht_e => 8,
      Dmg_e => 9,
      HE_e => 10
   );
   type WiFiPhyKind_Ptr is access all WiFiPhyKind;

   type WiFiReconnectionKind is (
      Automatic_e,
      Manual_e
   );
   for WiFiReconnectionKind use (
      Automatic_e => 0,
      Manual_e => 1
   );
   type WiFiReconnectionKind_Ptr is access all WiFiReconnectionKind;

   type WiFiWpsConfigurationStatus is (
      UnspecifiedFailure_e,
      Success_e,
      Timeout_e
   );
   for WiFiWpsConfigurationStatus use (
      UnspecifiedFailure_e => 0,
      Success_e => 1,
      Timeout_e => 2
   );
   type WiFiWpsConfigurationStatus_Ptr is access all WiFiWpsConfigurationStatus;

   type WiFiWpsKind is (
      Unknown_e,
      Pin_e,
      PushButton_e,
      Nfc_e,
      Ethernet_e,
      Usb_e
   );
   for WiFiWpsKind use (
      Unknown_e => 0,
      Pin_e => 1,
      PushButton_e => 2,
      Nfc_e => 3,
      Ethernet_e => 4,
      Usb_e => 5
   );
   type WiFiWpsKind_Ptr is access all WiFiWpsKind;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_IWiFiAvailableNetwork is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.WiFi.IWiFiAvailableNetwork);
   IID_IVectorView_IWiFiAvailableNetwork : aliased WinRt.IID := (2508213552, 17737, 24544, (188, 27, 98, 133, 10, 121, 160, 17 ));
   function QInterface_IVectorView_IWiFiAvailableNetwork is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IWiFiAvailableNetwork.Kind, IID_IVectorView_IWiFiAvailableNetwork'Access);

   package IVectorView_WiFiWpsKind is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.WiFi.WiFiWpsKind);
   IID_IVectorView_WiFiWpsKind : aliased WinRt.IID := (4141468733, 32438, 22465, (141, 149, 114, 9, 86, 47, 236, 18 ));
   function QInterface_IVectorView_WiFiWpsKind is new Generic_QueryInterface (GenericObject_Interface, IVectorView_WiFiWpsKind.Kind, IID_IVectorView_WiFiWpsKind'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IWiFiAdapter is interface and WinRt.IInspectable;

      function get_NetworkAdapter
      (
         this : access IWiFiAdapter_Interface;
         RetVal : access Windows.Networking.Connectivity.INetworkAdapter
      )
      return WinRt.Hresult is abstract;

      function ScanAsync
      (
         this : access IWiFiAdapter_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function get_NetworkReport
      (
         this : access IWiFiAdapter_Interface;
         RetVal : access Windows.Devices.WiFi.IWiFiNetworkReport
      )
      return WinRt.Hresult is abstract;

      function add_AvailableNetworksChanged
      (
         this : access IWiFiAdapter_Interface;
         args : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AvailableNetworksChanged
      (
         this : access IWiFiAdapter_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IWiFiAdapter_Interface;
         availableNetwork : Windows.Devices.WiFi.IWiFiAvailableNetwork;
         reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IWiFiAdapter_Interface;
         availableNetwork : Windows.Devices.WiFi.IWiFiAvailableNetwork;
         reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
         passwordCredential : Windows.Security.Credentials.IPasswordCredential;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IWiFiAdapter_Interface;
         availableNetwork : Windows.Devices.WiFi.IWiFiAvailableNetwork;
         reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
         passwordCredential : Windows.Security.Credentials.IPasswordCredential;
         ssid : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function Disconnect
      (
         this : access IWiFiAdapter_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiAdapter : aliased WinRt.IID := (2797921315, 15733, 17316, (185, 222, 17, 226, 107, 114, 217, 176 ));

   -----------------------------------------------------------------------------
   -- type IWiFiAdapter2 is interface and WinRt.IInspectable;

      function GetWpsConfigurationAsync
      (
         this : access IWiFiAdapter2_Interface;
         availableNetwork : Windows.Devices.WiFi.IWiFiAvailableNetwork;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IWiFiAdapter2_Interface;
         availableNetwork : Windows.Devices.WiFi.IWiFiAvailableNetwork;
         reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
         passwordCredential : Windows.Security.Credentials.IPasswordCredential;
         ssid : WinRt.HString;
         connectionMethod : Windows.Devices.WiFi.WiFiConnectionMethod;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiAdapter2 : aliased WinRt.IID := (1539592221, 33252, 17725, (148, 48, 31, 202, 251, 173, 214, 182 ));

   -----------------------------------------------------------------------------
   -- type IWiFiAdapterStatics is interface and WinRt.IInspectable;

      function FindAllAdaptersAsync
      (
         this : access IWiFiAdapterStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IWiFiAdapterStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IWiFiAdapterStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestAccessAsync
      (
         this : access IWiFiAdapterStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiAdapterStatics : aliased WinRt.IID := (3659922909, 53836, 17379, (170, 189, 196, 101, 159, 115, 15, 153 ));

   -----------------------------------------------------------------------------
   -- type IWiFiAvailableNetwork is interface and WinRt.IInspectable;

      function get_Uptime
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Ssid
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Bssid
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ChannelCenterFrequencyInKilohertz
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_NetworkRssiInDecibelMilliwatts
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_SignalBars
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      function get_NetworkKind
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access Windows.Devices.WiFi.WiFiNetworkKind
      )
      return WinRt.Hresult is abstract;

      function get_PhyKind
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access Windows.Devices.WiFi.WiFiPhyKind
      )
      return WinRt.Hresult is abstract;

      function get_SecuritySettings
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access Windows.Networking.Connectivity.INetworkSecuritySettings
      )
      return WinRt.Hresult is abstract;

      function get_BeaconInterval
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_IsWiFiDirect
      (
         this : access IWiFiAvailableNetwork_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiAvailableNetwork : aliased WinRt.IID := (652829254, 6206, 18180, (152, 38, 113, 180, 162, 240, 246, 104 ));

   -----------------------------------------------------------------------------
   -- type IWiFiConnectionResult is interface and WinRt.IInspectable;

      function get_ConnectionStatus
      (
         this : access IWiFiConnectionResult_Interface;
         RetVal : access Windows.Devices.WiFi.WiFiConnectionStatus
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiConnectionResult : aliased WinRt.IID := (339468249, 50045, 16574, (165, 200, 133, 123, 206, 133, 169, 49 ));

   -----------------------------------------------------------------------------
   -- type IWiFiNetworkReport is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IWiFiNetworkReport_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_AvailableNetworks
      (
         this : access IWiFiNetworkReport_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiNetworkReport : aliased WinRt.IID := (2502221522, 22801, 17502, (129, 148, 190, 79, 26, 112, 72, 149 ));

   -----------------------------------------------------------------------------
   -- type IWiFiWpsConfigurationResult is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IWiFiWpsConfigurationResult_Interface;
         RetVal : access Windows.Devices.WiFi.WiFiWpsConfigurationStatus
      )
      return WinRt.Hresult is abstract;

      function get_SupportedWpsKinds
      (
         this : access IWiFiWpsConfigurationResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWiFiWpsConfigurationResult : aliased WinRt.IID := (1739888753, 6126, 17105, (177, 79, 90, 17, 241, 34, 111, 181 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WiFiAdapter

   overriding procedure Initialize (this : in out WiFiAdapter);
   overriding procedure Finalize (this : in out WiFiAdapter);

   -----------------------------------------------------------------------------
   -- Static Interfaces for WiFiAdapter

   function FindAllAdaptersAsync
   return WinRt.GenericObject;

   function GetDeviceSelector
   return WinRt.WString;

   function FromIdAsync
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.WiFi.WiFiAdapter;

   function RequestAccessAsync
   return WinRt.Windows.Devices.WiFi.WiFiAccessStatus;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WiFiAdapter

   function get_NetworkAdapter
   (
      this : in out WiFiAdapter
   )
   return WinRt.Windows.Networking.Connectivity.NetworkAdapter'Class;

   procedure ScanAsync
   (
      this : in out WiFiAdapter
   );

   function get_NetworkReport
   (
      this : in out WiFiAdapter
   )
   return WinRt.Windows.Devices.WiFi.WiFiNetworkReport'Class;

   function add_AvailableNetworksChanged
   (
      this : in out WiFiAdapter;
      args : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AvailableNetworksChanged
   (
      this : in out WiFiAdapter;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   function ConnectAsync
   (
      this : in out WiFiAdapter;
      availableNetwork : Windows.Devices.WiFi.WiFiAvailableNetwork'Class;
      reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind
   )
   return WinRt.Windows.Devices.WiFi.WiFiConnectionResult'Class;

   function ConnectAsync
   (
      this : in out WiFiAdapter;
      availableNetwork : Windows.Devices.WiFi.WiFiAvailableNetwork'Class;
      reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
      passwordCredential : Windows.Security.Credentials.PasswordCredential'Class
   )
   return WinRt.Windows.Devices.WiFi.WiFiConnectionResult'Class;

   function ConnectAsync
   (
      this : in out WiFiAdapter;
      availableNetwork : Windows.Devices.WiFi.WiFiAvailableNetwork'Class;
      reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
      passwordCredential : Windows.Security.Credentials.PasswordCredential'Class;
      ssid : WinRt.WString
   )
   return WinRt.Windows.Devices.WiFi.WiFiConnectionResult'Class;

   procedure Disconnect
   (
      this : in out WiFiAdapter
   );

   function GetWpsConfigurationAsync
   (
      this : in out WiFiAdapter;
      availableNetwork : Windows.Devices.WiFi.WiFiAvailableNetwork'Class
   )
   return WinRt.Windows.Devices.WiFi.WiFiWpsConfigurationResult'Class;

   function ConnectAsync
   (
      this : in out WiFiAdapter;
      availableNetwork : Windows.Devices.WiFi.WiFiAvailableNetwork'Class;
      reconnectionKind : Windows.Devices.WiFi.WiFiReconnectionKind;
      passwordCredential : Windows.Security.Credentials.PasswordCredential'Class;
      ssid : WinRt.WString;
      connectionMethod : Windows.Devices.WiFi.WiFiConnectionMethod
   )
   return WinRt.Windows.Devices.WiFi.WiFiConnectionResult'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WiFiAvailableNetwork

   overriding procedure Initialize (this : in out WiFiAvailableNetwork);
   overriding procedure Finalize (this : in out WiFiAvailableNetwork);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WiFiAvailableNetwork

   function get_Uptime
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_Ssid
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.WString;

   function get_Bssid
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.WString;

   function get_ChannelCenterFrequencyInKilohertz
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Int32;

   function get_NetworkRssiInDecibelMilliwatts
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Double;

   function get_SignalBars
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Byte;

   function get_NetworkKind
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Windows.Devices.WiFi.WiFiNetworkKind;

   function get_PhyKind
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Windows.Devices.WiFi.WiFiPhyKind;

   function get_SecuritySettings
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Windows.Networking.Connectivity.NetworkSecuritySettings'Class;

   function get_BeaconInterval
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_IsWiFiDirect
   (
      this : in out WiFiAvailableNetwork
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WiFiConnectionResult

   overriding procedure Initialize (this : in out WiFiConnectionResult);
   overriding procedure Finalize (this : in out WiFiConnectionResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WiFiConnectionResult

   function get_ConnectionStatus
   (
      this : in out WiFiConnectionResult
   )
   return WinRt.Windows.Devices.WiFi.WiFiConnectionStatus;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WiFiNetworkReport

   overriding procedure Initialize (this : in out WiFiNetworkReport);
   overriding procedure Finalize (this : in out WiFiNetworkReport);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WiFiNetworkReport

   function get_Timestamp
   (
      this : in out WiFiNetworkReport
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_AvailableNetworks
   (
      this : in out WiFiNetworkReport
   )
   return IVectorView_IWiFiAvailableNetwork.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WiFiWpsConfigurationResult

   overriding procedure Initialize (this : in out WiFiWpsConfigurationResult);
   overriding procedure Finalize (this : in out WiFiWpsConfigurationResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WiFiWpsConfigurationResult

   function get_Status
   (
      this : in out WiFiWpsConfigurationResult
   )
   return WinRt.Windows.Devices.WiFi.WiFiWpsConfigurationStatus;

   function get_SupportedWpsKinds
   (
      this : in out WiFiWpsConfigurationResult
   )
   return IVectorView_WiFiWpsKind.Kind;

end;
