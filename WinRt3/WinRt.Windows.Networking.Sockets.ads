--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.ApplicationModel.Background;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Networking.Connectivity;
limited with WinRt.Windows.Security.Credentials;
limited with WinRt.Windows.Security.Cryptography.Certificates;
limited with WinRt.Windows.Storage.Streams;
limited with WinRt.Windows.Web;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Networking.Sockets is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IControlChannelTrigger_Interface is interface and WinRt.IInspectable_Interface;
   type IControlChannelTrigger is access all IControlChannelTrigger_Interface'Class;
   type IControlChannelTrigger_Ptr is access all IControlChannelTrigger;

   type IControlChannelTrigger2_Interface is interface and WinRt.IInspectable_Interface;
   type IControlChannelTrigger2 is access all IControlChannelTrigger2_Interface'Class;

   type IControlChannelTriggerEventDetails_Interface is interface and WinRt.IInspectable_Interface;
   type IControlChannelTriggerEventDetails is access all IControlChannelTriggerEventDetails_Interface'Class;

   type IControlChannelTriggerFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IControlChannelTriggerFactory is access all IControlChannelTriggerFactory_Interface'Class;

   type IControlChannelTriggerResetEventDetails_Interface is interface and WinRt.IInspectable_Interface;
   type IControlChannelTriggerResetEventDetails is access all IControlChannelTriggerResetEventDetails_Interface'Class;

   type IDatagramSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocket is access all IDatagramSocket_Interface'Class;
   type IDatagramSocket_Ptr is access all IDatagramSocket;

   type IDatagramSocket2_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocket2 is access all IDatagramSocket2_Interface'Class;

   type IDatagramSocket3_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocket3 is access all IDatagramSocket3_Interface'Class;

   type IDatagramSocketControl_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocketControl is access all IDatagramSocketControl_Interface'Class;
   type IDatagramSocketControl_Ptr is access all IDatagramSocketControl;

   type IDatagramSocketControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocketControl2 is access all IDatagramSocketControl2_Interface'Class;

   type IDatagramSocketControl3_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocketControl3 is access all IDatagramSocketControl3_Interface'Class;

   type IDatagramSocketInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocketInformation is access all IDatagramSocketInformation_Interface'Class;
   type IDatagramSocketInformation_Ptr is access all IDatagramSocketInformation;

   type IDatagramSocketMessageReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocketMessageReceivedEventArgs is access all IDatagramSocketMessageReceivedEventArgs_Interface'Class;
   type IDatagramSocketMessageReceivedEventArgs_Ptr is access all IDatagramSocketMessageReceivedEventArgs;

   type IDatagramSocketStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IDatagramSocketStatics is access all IDatagramSocketStatics_Interface'Class;

   type IMessageWebSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocket is access all IMessageWebSocket_Interface'Class;
   type IMessageWebSocket_Ptr is access all IMessageWebSocket;

   type IMessageWebSocket2_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocket2 is access all IMessageWebSocket2_Interface'Class;

   type IMessageWebSocket3_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocket3 is access all IMessageWebSocket3_Interface'Class;

   type IMessageWebSocketControl_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocketControl is access all IMessageWebSocketControl_Interface'Class;
   type IMessageWebSocketControl_Ptr is access all IMessageWebSocketControl;

   type IMessageWebSocketControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocketControl2 is access all IMessageWebSocketControl2_Interface'Class;

   type IMessageWebSocketMessageReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocketMessageReceivedEventArgs is access all IMessageWebSocketMessageReceivedEventArgs_Interface'Class;
   type IMessageWebSocketMessageReceivedEventArgs_Ptr is access all IMessageWebSocketMessageReceivedEventArgs;

   type IMessageWebSocketMessageReceivedEventArgs2_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageWebSocketMessageReceivedEventArgs2 is access all IMessageWebSocketMessageReceivedEventArgs2_Interface'Class;

   type IServerMessageWebSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IServerMessageWebSocket is access all IServerMessageWebSocket_Interface'Class;
   type IServerMessageWebSocket_Ptr is access all IServerMessageWebSocket;

   type IServerMessageWebSocketControl_Interface is interface and WinRt.IInspectable_Interface;
   type IServerMessageWebSocketControl is access all IServerMessageWebSocketControl_Interface'Class;
   type IServerMessageWebSocketControl_Ptr is access all IServerMessageWebSocketControl;

   type IServerMessageWebSocketInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IServerMessageWebSocketInformation is access all IServerMessageWebSocketInformation_Interface'Class;
   type IServerMessageWebSocketInformation_Ptr is access all IServerMessageWebSocketInformation;

   type IServerStreamWebSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IServerStreamWebSocket is access all IServerStreamWebSocket_Interface'Class;
   type IServerStreamWebSocket_Ptr is access all IServerStreamWebSocket;

   type IServerStreamWebSocketInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IServerStreamWebSocketInformation is access all IServerStreamWebSocketInformation_Interface'Class;
   type IServerStreamWebSocketInformation_Ptr is access all IServerStreamWebSocketInformation;

   type ISocketActivityContext_Interface is interface and WinRt.IInspectable_Interface;
   type ISocketActivityContext is access all ISocketActivityContext_Interface'Class;
   type ISocketActivityContext_Ptr is access all ISocketActivityContext;

   type ISocketActivityContextFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ISocketActivityContextFactory is access all ISocketActivityContextFactory_Interface'Class;

   type ISocketActivityInformation_Interface is interface and WinRt.IInspectable_Interface;
   type ISocketActivityInformation is access all ISocketActivityInformation_Interface'Class;
   type ISocketActivityInformation_Ptr is access all ISocketActivityInformation;

   type ISocketActivityInformationStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISocketActivityInformationStatics is access all ISocketActivityInformationStatics_Interface'Class;

   type ISocketActivityTriggerDetails_Interface is interface and WinRt.IInspectable_Interface;
   type ISocketActivityTriggerDetails is access all ISocketActivityTriggerDetails_Interface'Class;
   type ISocketActivityTriggerDetails_Ptr is access all ISocketActivityTriggerDetails;

   type ISocketErrorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISocketErrorStatics is access all ISocketErrorStatics_Interface'Class;

   type IStreamSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocket is access all IStreamSocket_Interface'Class;
   type IStreamSocket_Ptr is access all IStreamSocket;

   type IStreamSocket2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocket2 is access all IStreamSocket2_Interface'Class;

   type IStreamSocket3_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocket3 is access all IStreamSocket3_Interface'Class;

   type IStreamSocketControl_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketControl is access all IStreamSocketControl_Interface'Class;
   type IStreamSocketControl_Ptr is access all IStreamSocketControl;

   type IStreamSocketControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketControl2 is access all IStreamSocketControl2_Interface'Class;

   type IStreamSocketControl3_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketControl3 is access all IStreamSocketControl3_Interface'Class;

   type IStreamSocketControl4_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketControl4 is access all IStreamSocketControl4_Interface'Class;

   type IStreamSocketInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketInformation is access all IStreamSocketInformation_Interface'Class;
   type IStreamSocketInformation_Ptr is access all IStreamSocketInformation;

   type IStreamSocketInformation2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketInformation2 is access all IStreamSocketInformation2_Interface'Class;

   type IStreamSocketListener_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListener is access all IStreamSocketListener_Interface'Class;
   type IStreamSocketListener_Ptr is access all IStreamSocketListener;

   type IStreamSocketListener2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListener2 is access all IStreamSocketListener2_Interface'Class;

   type IStreamSocketListener3_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListener3 is access all IStreamSocketListener3_Interface'Class;

   type IStreamSocketListenerConnectionReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListenerConnectionReceivedEventArgs is access all IStreamSocketListenerConnectionReceivedEventArgs_Interface'Class;
   type IStreamSocketListenerConnectionReceivedEventArgs_Ptr is access all IStreamSocketListenerConnectionReceivedEventArgs;

   type IStreamSocketListenerControl_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListenerControl is access all IStreamSocketListenerControl_Interface'Class;
   type IStreamSocketListenerControl_Ptr is access all IStreamSocketListenerControl;

   type IStreamSocketListenerControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListenerControl2 is access all IStreamSocketListenerControl2_Interface'Class;

   type IStreamSocketListenerInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketListenerInformation is access all IStreamSocketListenerInformation_Interface'Class;
   type IStreamSocketListenerInformation_Ptr is access all IStreamSocketListenerInformation;

   type IStreamSocketStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamSocketStatics is access all IStreamSocketStatics_Interface'Class;

   type IStreamWebSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamWebSocket is access all IStreamWebSocket_Interface'Class;
   type IStreamWebSocket_Ptr is access all IStreamWebSocket;

   type IStreamWebSocket2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamWebSocket2 is access all IStreamWebSocket2_Interface'Class;

   type IStreamWebSocketControl_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamWebSocketControl is access all IStreamWebSocketControl_Interface'Class;
   type IStreamWebSocketControl_Ptr is access all IStreamWebSocketControl;

   type IStreamWebSocketControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IStreamWebSocketControl2 is access all IStreamWebSocketControl2_Interface'Class;

   type IWebSocket_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocket is access all IWebSocket_Interface'Class;

   type IWebSocketClosedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketClosedEventArgs is access all IWebSocketClosedEventArgs_Interface'Class;
   type IWebSocketClosedEventArgs_Ptr is access all IWebSocketClosedEventArgs;

   type IWebSocketControl_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketControl is access all IWebSocketControl_Interface'Class;

   type IWebSocketControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketControl2 is access all IWebSocketControl2_Interface'Class;

   type IWebSocketErrorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketErrorStatics is access all IWebSocketErrorStatics_Interface'Class;

   type IWebSocketInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketInformation is access all IWebSocketInformation_Interface'Class;
   type IWebSocketInformation_Ptr is access all IWebSocketInformation;

   type IWebSocketInformation2_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketInformation2 is access all IWebSocketInformation2_Interface'Class;

   type IWebSocketServerCustomValidationRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IWebSocketServerCustomValidationRequestedEventArgs is access all IWebSocketServerCustomValidationRequestedEventArgs_Interface'Class;
   type IWebSocketServerCustomValidationRequestedEventArgs_Ptr is access all IWebSocketServerCustomValidationRequestedEventArgs;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type ControlChannelTrigger is new Ada.Finalization.Limited_Controlled with
      record
         m_IControlChannelTrigger : access Windows.Networking.Sockets.IControlChannelTrigger;
      end record;
   type ControlChannelTrigger_Ptr is access all ControlChannelTrigger;

   type DatagramSocket is new Ada.Finalization.Limited_Controlled with
      record
         m_IDatagramSocket : access Windows.Networking.Sockets.IDatagramSocket;
      end record;
   type DatagramSocket_Ptr is access all DatagramSocket;

   type DatagramSocketControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IDatagramSocketControl : access Windows.Networking.Sockets.IDatagramSocketControl;
      end record;
   type DatagramSocketControl_Ptr is access all DatagramSocketControl;

   type DatagramSocketInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IDatagramSocketInformation : access Windows.Networking.Sockets.IDatagramSocketInformation;
      end record;
   type DatagramSocketInformation_Ptr is access all DatagramSocketInformation;

   type DatagramSocketMessageReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IDatagramSocketMessageReceivedEventArgs : access Windows.Networking.Sockets.IDatagramSocketMessageReceivedEventArgs;
      end record;
   type DatagramSocketMessageReceivedEventArgs_Ptr is access all DatagramSocketMessageReceivedEventArgs;

   type MessageWebSocket is new Ada.Finalization.Limited_Controlled with
      record
         m_IMessageWebSocket : access Windows.Networking.Sockets.IMessageWebSocket;
      end record;
   type MessageWebSocket_Ptr is access all MessageWebSocket;

   type MessageWebSocketControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IMessageWebSocketControl : access Windows.Networking.Sockets.IMessageWebSocketControl;
      end record;
   type MessageWebSocketControl_Ptr is access all MessageWebSocketControl;

   type MessageWebSocketInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IWebSocketInformation : access Windows.Networking.Sockets.IWebSocketInformation;
      end record;
   type MessageWebSocketInformation_Ptr is access all MessageWebSocketInformation;

   type MessageWebSocketMessageReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMessageWebSocketMessageReceivedEventArgs : access Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs;
      end record;
   type MessageWebSocketMessageReceivedEventArgs_Ptr is access all MessageWebSocketMessageReceivedEventArgs;

   type ServerMessageWebSocket is new Ada.Finalization.Limited_Controlled with
      record
         m_IServerMessageWebSocket : access Windows.Networking.Sockets.IServerMessageWebSocket;
      end record;
   type ServerMessageWebSocket_Ptr is access all ServerMessageWebSocket;

   type ServerMessageWebSocketControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IServerMessageWebSocketControl : access Windows.Networking.Sockets.IServerMessageWebSocketControl;
      end record;
   type ServerMessageWebSocketControl_Ptr is access all ServerMessageWebSocketControl;

   type ServerMessageWebSocketInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IServerMessageWebSocketInformation : access Windows.Networking.Sockets.IServerMessageWebSocketInformation;
      end record;
   type ServerMessageWebSocketInformation_Ptr is access all ServerMessageWebSocketInformation;

   type ServerStreamWebSocket is new Ada.Finalization.Limited_Controlled with
      record
         m_IServerStreamWebSocket : access Windows.Networking.Sockets.IServerStreamWebSocket;
      end record;
   type ServerStreamWebSocket_Ptr is access all ServerStreamWebSocket;

   type ServerStreamWebSocketInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IServerStreamWebSocketInformation : access Windows.Networking.Sockets.IServerStreamWebSocketInformation;
      end record;
   type ServerStreamWebSocketInformation_Ptr is access all ServerStreamWebSocketInformation;

   type SocketActivityContext is new Ada.Finalization.Limited_Controlled with
      record
         m_ISocketActivityContext : access Windows.Networking.Sockets.ISocketActivityContext;
      end record;
   type SocketActivityContext_Ptr is access all SocketActivityContext;

   type SocketActivityInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_ISocketActivityInformation : access Windows.Networking.Sockets.ISocketActivityInformation;
      end record;
   type SocketActivityInformation_Ptr is access all SocketActivityInformation;

   type SocketActivityTriggerDetails is new Ada.Finalization.Limited_Controlled with
      record
         m_ISocketActivityTriggerDetails : access Windows.Networking.Sockets.ISocketActivityTriggerDetails;
      end record;
   type SocketActivityTriggerDetails_Ptr is access all SocketActivityTriggerDetails;

   type StreamSocket is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocket : access Windows.Networking.Sockets.IStreamSocket;
      end record;
   type StreamSocket_Ptr is access all StreamSocket;

   type StreamSocketControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocketControl : access Windows.Networking.Sockets.IStreamSocketControl;
      end record;
   type StreamSocketControl_Ptr is access all StreamSocketControl;

   type StreamSocketInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocketInformation : access Windows.Networking.Sockets.IStreamSocketInformation;
      end record;
   type StreamSocketInformation_Ptr is access all StreamSocketInformation;

   type StreamSocketListener is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocketListener : access Windows.Networking.Sockets.IStreamSocketListener;
      end record;
   type StreamSocketListener_Ptr is access all StreamSocketListener;

   type StreamSocketListenerConnectionReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocketListenerConnectionReceivedEventArgs : access Windows.Networking.Sockets.IStreamSocketListenerConnectionReceivedEventArgs;
      end record;
   type StreamSocketListenerConnectionReceivedEventArgs_Ptr is access all StreamSocketListenerConnectionReceivedEventArgs;

   type StreamSocketListenerControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocketListenerControl : access Windows.Networking.Sockets.IStreamSocketListenerControl;
      end record;
   type StreamSocketListenerControl_Ptr is access all StreamSocketListenerControl;

   type StreamSocketListenerInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamSocketListenerInformation : access Windows.Networking.Sockets.IStreamSocketListenerInformation;
      end record;
   type StreamSocketListenerInformation_Ptr is access all StreamSocketListenerInformation;

   type StreamWebSocket is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamWebSocket : access Windows.Networking.Sockets.IStreamWebSocket;
      end record;
   type StreamWebSocket_Ptr is access all StreamWebSocket;

   type StreamWebSocketControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreamWebSocketControl : access Windows.Networking.Sockets.IStreamWebSocketControl;
      end record;
   type StreamWebSocketControl_Ptr is access all StreamWebSocketControl;

   type StreamWebSocketInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IWebSocketInformation : access Windows.Networking.Sockets.IWebSocketInformation;
      end record;
   type StreamWebSocketInformation_Ptr is access all StreamWebSocketInformation;

   type WebSocketClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IWebSocketClosedEventArgs : access Windows.Networking.Sockets.IWebSocketClosedEventArgs;
      end record;
   type WebSocketClosedEventArgs_Ptr is access all WebSocketClosedEventArgs;

   type WebSocketKeepAlive is new Ada.Finalization.Limited_Controlled with
      record
         m_IBackgroundTask : access Windows.ApplicationModel.Background.IBackgroundTask;
      end record;
   type WebSocketKeepAlive_Ptr is access all WebSocketKeepAlive;

   type WebSocketServerCustomValidationRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IWebSocketServerCustomValidationRequestedEventArgs : access Windows.Networking.Sockets.IWebSocketServerCustomValidationRequestedEventArgs;
      end record;
   type WebSocketServerCustomValidationRequestedEventArgs_Ptr is access all WebSocketServerCustomValidationRequestedEventArgs;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type ControlChannelTriggerResetReason is (
      FastUserSwitched_e,
      LowPowerExit_e,
      QuietHoursExit_e,
      ApplicationRestart_e
   );
   for ControlChannelTriggerResetReason use (
      FastUserSwitched_e => 0,
      LowPowerExit_e => 1,
      QuietHoursExit_e => 2,
      ApplicationRestart_e => 3
   );
   type ControlChannelTriggerResetReason_Ptr is access all ControlChannelTriggerResetReason;

   type ControlChannelTriggerResourceType is (
      RequestSoftwareSlot_e,
      RequestHardwareSlot_e
   );
   for ControlChannelTriggerResourceType use (
      RequestSoftwareSlot_e => 0,
      RequestHardwareSlot_e => 1
   );
   type ControlChannelTriggerResourceType_Ptr is access all ControlChannelTriggerResourceType;

   type ControlChannelTriggerStatus is (
      HardwareSlotRequested_e,
      SoftwareSlotAllocated_e,
      HardwareSlotAllocated_e,
      PolicyError_e,
      SystemError_e,
      TransportDisconnected_e,
      ServiceUnavailable_e
   );
   for ControlChannelTriggerStatus use (
      HardwareSlotRequested_e => 0,
      SoftwareSlotAllocated_e => 1,
      HardwareSlotAllocated_e => 2,
      PolicyError_e => 3,
      SystemError_e => 4,
      TransportDisconnected_e => 5,
      ServiceUnavailable_e => 6
   );
   type ControlChannelTriggerStatus_Ptr is access all ControlChannelTriggerStatus;

   type MessageWebSocketReceiveMode is (
      FullMessage_e,
      PartialMessage_e
   );
   for MessageWebSocketReceiveMode use (
      FullMessage_e => 0,
      PartialMessage_e => 1
   );
   type MessageWebSocketReceiveMode_Ptr is access all MessageWebSocketReceiveMode;

   type SocketActivityConnectedStandbyAction is (
      DoNotWake_e,
      Wake_e
   );
   for SocketActivityConnectedStandbyAction use (
      DoNotWake_e => 0,
      Wake_e => 1
   );
   type SocketActivityConnectedStandbyAction_Ptr is access all SocketActivityConnectedStandbyAction;

   type SocketActivityKind is (
      None_e,
      StreamSocketListener_e,
      DatagramSocket_e,
      StreamSocket_e
   );
   for SocketActivityKind use (
      None_e => 0,
      StreamSocketListener_e => 1,
      DatagramSocket_e => 2,
      StreamSocket_e => 3
   );
   type SocketActivityKind_Ptr is access all SocketActivityKind;

   type SocketActivityTriggerReason is (
      None_e,
      SocketActivity_e,
      ConnectionAccepted_e,
      KeepAliveTimerExpired_e,
      SocketClosed_e
   );
   for SocketActivityTriggerReason use (
      None_e => 0,
      SocketActivity_e => 1,
      ConnectionAccepted_e => 2,
      KeepAliveTimerExpired_e => 3,
      SocketClosed_e => 4
   );
   type SocketActivityTriggerReason_Ptr is access all SocketActivityTriggerReason;

   type SocketErrorStatus is (
      Unknown_e,
      OperationAborted_e,
      HttpInvalidServerResponse_e,
      ConnectionTimedOut_e,
      AddressFamilyNotSupported_e,
      SocketTypeNotSupported_e,
      HostNotFound_e,
      NoDataRecordOfRequestedType_e,
      NonAuthoritativeHostNotFound_e,
      ClassTypeNotFound_e,
      AddressAlreadyInUse_e,
      CannotAssignRequestedAddress_e,
      ConnectionRefused_e,
      NetworkIsUnreachable_e,
      UnreachableHost_e,
      NetworkIsDown_e,
      NetworkDroppedConnectionOnReset_e,
      SoftwareCausedConnectionAbort_e,
      ConnectionResetByPeer_e,
      HostIsDown_e,
      NoAddressesFound_e,
      TooManyOpenFiles_e,
      MessageTooLong_e,
      CertificateExpired_e,
      CertificateUntrustedRoot_e,
      CertificateCommonNameIsIncorrect_e,
      CertificateWrongUsage_e,
      CertificateRevoked_e,
      CertificateNoRevocationCheck_e,
      CertificateRevocationServerOffline_e,
      CertificateIsInvalid_e
   );
   for SocketErrorStatus use (
      Unknown_e => 0,
      OperationAborted_e => 1,
      HttpInvalidServerResponse_e => 2,
      ConnectionTimedOut_e => 3,
      AddressFamilyNotSupported_e => 4,
      SocketTypeNotSupported_e => 5,
      HostNotFound_e => 6,
      NoDataRecordOfRequestedType_e => 7,
      NonAuthoritativeHostNotFound_e => 8,
      ClassTypeNotFound_e => 9,
      AddressAlreadyInUse_e => 10,
      CannotAssignRequestedAddress_e => 11,
      ConnectionRefused_e => 12,
      NetworkIsUnreachable_e => 13,
      UnreachableHost_e => 14,
      NetworkIsDown_e => 15,
      NetworkDroppedConnectionOnReset_e => 16,
      SoftwareCausedConnectionAbort_e => 17,
      ConnectionResetByPeer_e => 18,
      HostIsDown_e => 19,
      NoAddressesFound_e => 20,
      TooManyOpenFiles_e => 21,
      MessageTooLong_e => 22,
      CertificateExpired_e => 23,
      CertificateUntrustedRoot_e => 24,
      CertificateCommonNameIsIncorrect_e => 25,
      CertificateWrongUsage_e => 26,
      CertificateRevoked_e => 27,
      CertificateNoRevocationCheck_e => 28,
      CertificateRevocationServerOffline_e => 29,
      CertificateIsInvalid_e => 30
   );
   type SocketErrorStatus_Ptr is access all SocketErrorStatus;

   type SocketMessageType is (
      Binary_e,
      Utf8_e
   );
   for SocketMessageType use (
      Binary_e => 0,
      Utf8_e => 1
   );
   type SocketMessageType_Ptr is access all SocketMessageType;

   type SocketProtectionLevel is (
      PlainSocket_e,
      Ssl_e,
      SslAllowNullEncryption_e,
      BluetoothEncryptionAllowNullAuthentication_e,
      BluetoothEncryptionWithAuthentication_e,
      Ssl3AllowWeakEncryption_e,
      Tls10_e,
      Tls11_e,
      Tls12_e,
      Unspecified_e
   );
   for SocketProtectionLevel use (
      PlainSocket_e => 0,
      Ssl_e => 1,
      SslAllowNullEncryption_e => 2,
      BluetoothEncryptionAllowNullAuthentication_e => 3,
      BluetoothEncryptionWithAuthentication_e => 4,
      Ssl3AllowWeakEncryption_e => 5,
      Tls10_e => 6,
      Tls11_e => 7,
      Tls12_e => 8,
      Unspecified_e => 9
   );
   type SocketProtectionLevel_Ptr is access all SocketProtectionLevel;

   type SocketQualityOfService is (
      Normal_e,
      LowLatency_e
   );
   for SocketQualityOfService use (
      Normal_e => 0,
      LowLatency_e => 1
   );
   type SocketQualityOfService_Ptr is access all SocketQualityOfService;

   type SocketSslErrorSeverity is (
      None_e,
      Ignorable_e,
      Fatal_e
   );
   for SocketSslErrorSeverity use (
      None_e => 0,
      Ignorable_e => 1,
      Fatal_e => 2
   );
   type SocketSslErrorSeverity_Ptr is access all SocketSslErrorSeverity;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type BandwidthStatistics is record
      OutboundBitsPerSecond : WinRt.UInt64;
      InboundBitsPerSecond : WinRt.UInt64;
      OutboundBitsPerSecondInstability : WinRt.UInt64;
      InboundBitsPerSecondInstability : WinRt.UInt64;
      OutboundBandwidthPeaked : WinRt.Boolean;
      InboundBandwidthPeaked : WinRt.Boolean;
   end record with Convention => C_Pass_By_Copy;
   type BandwidthStatistics_Ptr is access all BandwidthStatistics;

   type ControlChannelTriggerContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type ControlChannelTriggerContract_Ptr is access all ControlChannelTriggerContract;

   type RoundTripTimeStatistics is record
      Variance : WinRt.UInt32;
      Max : WinRt.UInt32;
      Min : WinRt.UInt32;
      Sum : WinRt.UInt32;
   end record with Convention => C_Pass_By_Copy;
   type RoundTripTimeStatistics_Ptr is access all RoundTripTimeStatistics;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVector_HString is new WinRt.Windows.Foundation.Collections.IVector (WinRt.HString);
   IID_IVector_HString : aliased WinRt.IID := (1981689863, 6559, 20734, (151, 159, 38, 112, 177, 146, 90, 141 ));
   function QInterface_IVector_HString is new Generic_QueryInterface (GenericObject_Interface, IVector_HString.Kind, IID_IVector_HString'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IControlChannelTrigger is interface and WinRt.IInspectable;

      function get_ControlChannelTriggerId
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ServerKeepAliveIntervalInMinutes
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ServerKeepAliveIntervalInMinutes
      (
         this : access IControlChannelTrigger_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CurrentKeepAliveIntervalInMinutes
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TransportObject
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function get_KeepAliveTrigger
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access Windows.ApplicationModel.Background.IBackgroundTrigger
      )
      return WinRt.Hresult is abstract;

      function get_PushNotificationTrigger
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access Windows.ApplicationModel.Background.IBackgroundTrigger
      )
      return WinRt.Hresult is abstract;

      function UsingTransport
      (
         this : access IControlChannelTrigger_Interface;
         transport : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function WaitForPushEnabled
      (
         this : access IControlChannelTrigger_Interface;
         RetVal : access Windows.Networking.Sockets.ControlChannelTriggerStatus
      )
      return WinRt.Hresult is abstract;

      function DecreaseNetworkKeepAliveInterval
      (
         this : access IControlChannelTrigger_Interface
      )
      return WinRt.Hresult is abstract;

      function FlushTransport
      (
         this : access IControlChannelTrigger_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IControlChannelTrigger : aliased WinRt.IID := (2098475431, 61078, 16616, (161, 153, 135, 3, 205, 150, 158, 195 ));

   -----------------------------------------------------------------------------
   -- type IControlChannelTrigger2 is interface and WinRt.IInspectable;

      function get_IsWakeFromLowPowerSupported
      (
         this : access IControlChannelTrigger2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IControlChannelTrigger2 : aliased WinRt.IID := (2936066615, 20926, 17684, (151, 37, 53, 86, 225, 135, 149, 128 ));

   -----------------------------------------------------------------------------
   -- type IControlChannelTriggerEventDetails is interface and WinRt.IInspectable;

      function get_ControlChannelTrigger
      (
         this : access IControlChannelTriggerEventDetails_Interface;
         RetVal : access Windows.Networking.Sockets.IControlChannelTrigger
      )
      return WinRt.Hresult is abstract;

      IID_IControlChannelTriggerEventDetails : aliased WinRt.IID := (456581191, 35259, 16950, (150, 172, 113, 208, 18, 187, 72, 105 ));

   -----------------------------------------------------------------------------
   -- type IControlChannelTriggerFactory is interface and WinRt.IInspectable;

      function CreateControlChannelTrigger
      (
         this : access IControlChannelTriggerFactory_Interface;
         channelId : WinRt.HString;
         serverKeepAliveIntervalInMinutes : WinRt.UInt32;
         RetVal : access Windows.Networking.Sockets.IControlChannelTrigger
      )
      return WinRt.Hresult is abstract;

      function CreateControlChannelTriggerEx
      (
         this : access IControlChannelTriggerFactory_Interface;
         channelId : WinRt.HString;
         serverKeepAliveIntervalInMinutes : WinRt.UInt32;
         resourceRequestType : Windows.Networking.Sockets.ControlChannelTriggerResourceType;
         RetVal : access Windows.Networking.Sockets.IControlChannelTrigger
      )
      return WinRt.Hresult is abstract;

      IID_IControlChannelTriggerFactory : aliased WinRt.IID := (3662380272, 36209, 17519, (136, 195, 185, 81, 132, 162, 214, 205 ));

   -----------------------------------------------------------------------------
   -- type IControlChannelTriggerResetEventDetails is interface and WinRt.IInspectable;

      function get_ResetReason
      (
         this : access IControlChannelTriggerResetEventDetails_Interface;
         RetVal : access Windows.Networking.Sockets.ControlChannelTriggerResetReason
      )
      return WinRt.Hresult is abstract;

      function get_HardwareSlotReset
      (
         this : access IControlChannelTriggerResetEventDetails_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SoftwareSlotReset
      (
         this : access IControlChannelTriggerResetEventDetails_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IControlChannelTriggerResetEventDetails : aliased WinRt.IID := (1750139790, 36548, 17150, (155, 178, 33, 233, 27, 123, 252, 177 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocket is interface and WinRt.IInspectable;

      function get_Control
      (
         this : access IDatagramSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IDatagramSocketControl
      )
      return WinRt.Hresult is abstract;

      function get_Information
      (
         this : access IDatagramSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IDatagramSocketInformation
      )
      return WinRt.Hresult is abstract;

      function get_OutputStream
      (
         this : access IDatagramSocket_Interface;
         RetVal : access Windows.Storage.Streams.IOutputStream
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IDatagramSocket_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IDatagramSocket_Interface;
         endpointPair : Windows.Networking.IEndpointPair;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function BindServiceNameAsync
      (
         this : access IDatagramSocket_Interface;
         localServiceName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function BindEndpointAsync
      (
         this : access IDatagramSocket_Interface;
         localHostName : Windows.Networking.IHostName;
         localServiceName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function JoinMulticastGroup
      (
         this : access IDatagramSocket_Interface;
         host : Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function GetOutputStreamAsync
      (
         this : access IDatagramSocket_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetOutputStreamAsync
      (
         this : access IDatagramSocket_Interface;
         endpointPair : Windows.Networking.IEndpointPair;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_MessageReceived
      (
         this : access IDatagramSocket_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MessageReceived
      (
         this : access IDatagramSocket_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocket : aliased WinRt.IID := (2145541051, 50108, 18039, (132, 70, 202, 40, 164, 101, 163, 175 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocket2 is interface and WinRt.IInspectable;

      function BindServiceNameAsync
      (
         this : access IDatagramSocket2_Interface;
         localServiceName : WinRt.HString;
         adapter : Windows.Networking.Connectivity.INetworkAdapter;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocket2 : aliased WinRt.IID := (3627787092, 39581, 16773, (162, 10, 20, 36, 201, 194, 167, 205 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocket3 is interface and WinRt.IInspectable;

      function CancelIOAsync
      (
         this : access IDatagramSocket3_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function EnableTransferOwnership
      (
         this : access IDatagramSocket3_Interface;
         taskId : WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function EnableTransferOwnership
      (
         this : access IDatagramSocket3_Interface;
         taskId : WinRt.Guid;
         connectedStandbyAction : Windows.Networking.Sockets.SocketActivityConnectedStandbyAction
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IDatagramSocket3_Interface;
         socketId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IDatagramSocket3_Interface;
         socketId : WinRt.HString;
         data : Windows.Networking.Sockets.ISocketActivityContext
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IDatagramSocket3_Interface;
         socketId : WinRt.HString;
         data : Windows.Networking.Sockets.ISocketActivityContext;
         keepAliveTime : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocket3 : aliased WinRt.IID := (928272137, 43922, 17158, (154, 193, 12, 56, 18, 131, 217, 198 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocketControl is interface and WinRt.IInspectable;

      function get_QualityOfService
      (
         this : access IDatagramSocketControl_Interface;
         RetVal : access Windows.Networking.Sockets.SocketQualityOfService
      )
      return WinRt.Hresult is abstract;

      function put_QualityOfService
      (
         this : access IDatagramSocketControl_Interface;
         value : Windows.Networking.Sockets.SocketQualityOfService
      )
      return WinRt.Hresult is abstract;

      function get_OutboundUnicastHopLimit
      (
         this : access IDatagramSocketControl_Interface;
         RetVal : access WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      function put_OutboundUnicastHopLimit
      (
         this : access IDatagramSocketControl_Interface;
         value : WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocketControl : aliased WinRt.IID := (1387020078, 13466, 16693, (187, 88, 183, 155, 38, 71, 211, 144 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocketControl2 is interface and WinRt.IInspectable;

      function get_InboundBufferSizeInBytes
      (
         this : access IDatagramSocketControl2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_InboundBufferSizeInBytes
      (
         this : access IDatagramSocketControl2_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DontFragment
      (
         this : access IDatagramSocketControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DontFragment
      (
         this : access IDatagramSocketControl2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocketControl2 : aliased WinRt.IID := (871028162, 38812, 17429, (130, 161, 60, 250, 246, 70, 193, 146 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocketControl3 is interface and WinRt.IInspectable;

      function get_MulticastOnly
      (
         this : access IDatagramSocketControl3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_MulticastOnly
      (
         this : access IDatagramSocketControl3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocketControl3 : aliased WinRt.IID := (3572204118, 8045, 17816, (155, 87, 212, 42, 0, 29, 243, 73 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocketInformation is interface and WinRt.IInspectable;

      function get_LocalAddress
      (
         this : access IDatagramSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_LocalPort
      (
         this : access IDatagramSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RemoteAddress
      (
         this : access IDatagramSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_RemotePort
      (
         this : access IDatagramSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocketInformation : aliased WinRt.IID := (1595561626, 22011, 18637, (151, 6, 122, 151, 79, 123, 21, 133 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocketMessageReceivedEventArgs is interface and WinRt.IInspectable;

      function get_RemoteAddress
      (
         this : access IDatagramSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_RemotePort
      (
         this : access IDatagramSocketMessageReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LocalAddress
      (
         this : access IDatagramSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function GetDataReader
      (
         this : access IDatagramSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Storage.Streams.IDataReader
      )
      return WinRt.Hresult is abstract;

      function GetDataStream
      (
         this : access IDatagramSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Storage.Streams.IInputStream
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocketMessageReceivedEventArgs : aliased WinRt.IID := (2653805730, 5906, 19684, (177, 121, 140, 101, 44, 109, 16, 126 ));

   -----------------------------------------------------------------------------
   -- type IDatagramSocketStatics is interface and WinRt.IInspectable;

      function GetEndpointPairsAsync
      (
         this : access IDatagramSocketStatics_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetEndpointPairsAsync
      (
         this : access IDatagramSocketStatics_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         sortOptions : Windows.Networking.HostNameSortOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IDatagramSocketStatics : aliased WinRt.IID := (3922078446, 5268, 18977, (187, 126, 133, 137, 252, 117, 29, 157 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocket is interface and WinRt.IInspectable;

      function get_Control
      (
         this : access IMessageWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IMessageWebSocketControl
      )
      return WinRt.Hresult is abstract;

      function get_Information
      (
         this : access IMessageWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IWebSocketInformation
      )
      return WinRt.Hresult is abstract;

      function add_MessageReceived
      (
         this : access IMessageWebSocket_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MessageReceived
      (
         this : access IMessageWebSocket_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocket : aliased WinRt.IID := (863141128, 13525, 18246, (173, 123, 141, 222, 91, 194, 239, 136 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocket2 is interface and WinRt.IInspectable;

      function add_ServerCustomValidationRequested
      (
         this : access IMessageWebSocket2_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ServerCustomValidationRequested
      (
         this : access IMessageWebSocket2_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocket2 : aliased WinRt.IID := (3201355495, 63944, 17418, (154, 213, 115, 114, 129, 217, 116, 46 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocket3 is interface and WinRt.IInspectable;

      function SendNonfinalFrameAsync
      (
         this : access IMessageWebSocket3_Interface;
         data : Windows.Storage.Streams.IBuffer;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SendFinalFrameAsync
      (
         this : access IMessageWebSocket3_Interface;
         data : Windows.Storage.Streams.IBuffer;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocket3 : aliased WinRt.IID := (1507450619, 29103, 17225, (132, 135, 145, 31, 207, 104, 21, 151 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocketControl is interface and WinRt.IInspectable;

      function get_MaxMessageSize
      (
         this : access IMessageWebSocketControl_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_MaxMessageSize
      (
         this : access IMessageWebSocketControl_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MessageType
      (
         this : access IMessageWebSocketControl_Interface;
         RetVal : access Windows.Networking.Sockets.SocketMessageType
      )
      return WinRt.Hresult is abstract;

      function put_MessageType
      (
         this : access IMessageWebSocketControl_Interface;
         value : Windows.Networking.Sockets.SocketMessageType
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocketControl : aliased WinRt.IID := (2165848202, 50729, 20234, (128, 251, 129, 252, 5, 83, 136, 98 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocketControl2 is interface and WinRt.IInspectable;

      function get_DesiredUnsolicitedPongInterval
      (
         this : access IMessageWebSocketControl2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_DesiredUnsolicitedPongInterval
      (
         this : access IMessageWebSocketControl2_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ActualUnsolicitedPongInterval
      (
         this : access IMessageWebSocketControl2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ReceiveMode
      (
         this : access IMessageWebSocketControl2_Interface;
         RetVal : access Windows.Networking.Sockets.MessageWebSocketReceiveMode
      )
      return WinRt.Hresult is abstract;

      function put_ReceiveMode
      (
         this : access IMessageWebSocketControl2_Interface;
         value : Windows.Networking.Sockets.MessageWebSocketReceiveMode
      )
      return WinRt.Hresult is abstract;

      function get_ClientCertificate
      (
         this : access IMessageWebSocketControl2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function put_ClientCertificate
      (
         this : access IMessageWebSocketControl2_Interface;
         value : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocketControl2 : aliased WinRt.IID := (3809466257, 2060, 16394, (167, 18, 39, 223, 169, 231, 68, 216 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocketMessageReceivedEventArgs is interface and WinRt.IInspectable;

      function get_MessageType
      (
         this : access IMessageWebSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Networking.Sockets.SocketMessageType
      )
      return WinRt.Hresult is abstract;

      function GetDataReader
      (
         this : access IMessageWebSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Storage.Streams.IDataReader
      )
      return WinRt.Hresult is abstract;

      function GetDataStream
      (
         this : access IMessageWebSocketMessageReceivedEventArgs_Interface;
         RetVal : access Windows.Storage.Streams.IInputStream
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocketMessageReceivedEventArgs : aliased WinRt.IID := (1200366252, 19531, 17133, (158, 215, 30, 249, 249, 79, 163, 213 ));

   -----------------------------------------------------------------------------
   -- type IMessageWebSocketMessageReceivedEventArgs2 is interface and WinRt.IInspectable;

      function get_IsMessageComplete
      (
         this : access IMessageWebSocketMessageReceivedEventArgs2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMessageWebSocketMessageReceivedEventArgs2 : aliased WinRt.IID := (2311980797, 56687, 18951, (135, 249, 249, 235, 77, 137, 216, 61 ));

   -----------------------------------------------------------------------------
   -- type IServerMessageWebSocket is interface and WinRt.IInspectable;

      function add_MessageReceived
      (
         this : access IServerMessageWebSocket_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MessageReceived
      (
         this : access IServerMessageWebSocket_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_Control
      (
         this : access IServerMessageWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IServerMessageWebSocketControl
      )
      return WinRt.Hresult is abstract;

      function get_Information
      (
         this : access IServerMessageWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IServerMessageWebSocketInformation
      )
      return WinRt.Hresult is abstract;

      function get_OutputStream
      (
         this : access IServerMessageWebSocket_Interface;
         RetVal : access Windows.Storage.Streams.IOutputStream
      )
      return WinRt.Hresult is abstract;

      function add_Closed
      (
         this : access IServerMessageWebSocket_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IServerMessageWebSocket_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function Close
      (
         this : access IServerMessageWebSocket_Interface;
         code : WinRt.UInt16;
         reason : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IServerMessageWebSocket : aliased WinRt.IID := (3819737664, 33083, 24317, (126, 17, 174, 35, 5, 252, 119, 241 ));

   -----------------------------------------------------------------------------
   -- type IServerMessageWebSocketControl is interface and WinRt.IInspectable;

      function get_MessageType
      (
         this : access IServerMessageWebSocketControl_Interface;
         RetVal : access Windows.Networking.Sockets.SocketMessageType
      )
      return WinRt.Hresult is abstract;

      function put_MessageType
      (
         this : access IServerMessageWebSocketControl_Interface;
         value : Windows.Networking.Sockets.SocketMessageType
      )
      return WinRt.Hresult is abstract;

      IID_IServerMessageWebSocketControl : aliased WinRt.IID := (1774383185, 7199, 22650, (69, 25, 33, 129, 97, 1, 146, 183 ));

   -----------------------------------------------------------------------------
   -- type IServerMessageWebSocketInformation is interface and WinRt.IInspectable;

      function get_BandwidthStatistics
      (
         this : access IServerMessageWebSocketInformation_Interface;
         RetVal : access Windows.Networking.Sockets.BandwidthStatistics
      )
      return WinRt.Hresult is abstract;

      function get_Protocol
      (
         this : access IServerMessageWebSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LocalAddress
      (
         this : access IServerMessageWebSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      IID_IServerMessageWebSocketInformation : aliased WinRt.IID := (4231181407, 17480, 21765, (108, 201, 9, 175, 168, 145, 95, 93 ));

   -----------------------------------------------------------------------------
   -- type IServerStreamWebSocket is interface and WinRt.IInspectable;

      function get_Information
      (
         this : access IServerStreamWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IServerStreamWebSocketInformation
      )
      return WinRt.Hresult is abstract;

      function get_InputStream
      (
         this : access IServerStreamWebSocket_Interface;
         RetVal : access Windows.Storage.Streams.IInputStream
      )
      return WinRt.Hresult is abstract;

      function get_OutputStream
      (
         this : access IServerStreamWebSocket_Interface;
         RetVal : access Windows.Storage.Streams.IOutputStream
      )
      return WinRt.Hresult is abstract;

      function add_Closed
      (
         this : access IServerStreamWebSocket_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IServerStreamWebSocket_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function Close
      (
         this : access IServerStreamWebSocket_Interface;
         code : WinRt.UInt16;
         reason : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IServerStreamWebSocket : aliased WinRt.IID := (753753023, 29942, 21988, (121, 223, 145, 50, 104, 13, 254, 232 ));

   -----------------------------------------------------------------------------
   -- type IServerStreamWebSocketInformation is interface and WinRt.IInspectable;

      function get_BandwidthStatistics
      (
         this : access IServerStreamWebSocketInformation_Interface;
         RetVal : access Windows.Networking.Sockets.BandwidthStatistics
      )
      return WinRt.Hresult is abstract;

      function get_Protocol
      (
         this : access IServerStreamWebSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LocalAddress
      (
         this : access IServerStreamWebSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      IID_IServerStreamWebSocketInformation : aliased WinRt.IID := (4231181407, 17480, 21765, (108, 201, 9, 171, 168, 145, 95, 93 ));

   -----------------------------------------------------------------------------
   -- type ISocketActivityContext is interface and WinRt.IInspectable;

      function get_Data
      (
         this : access ISocketActivityContext_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      IID_ISocketActivityContext : aliased WinRt.IID := (1135627620, 19589, 17302, (166, 55, 29, 151, 63, 110, 189, 73 ));

   -----------------------------------------------------------------------------
   -- type ISocketActivityContextFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISocketActivityContextFactory_Interface;
         data : Windows.Storage.Streams.IBuffer;
         RetVal : access Windows.Networking.Sockets.ISocketActivityContext
      )
      return WinRt.Hresult is abstract;

      IID_ISocketActivityContextFactory : aliased WinRt.IID := (3114255299, 2188, 17288, (131, 174, 37, 37, 19, 142, 4, 154 ));

   -----------------------------------------------------------------------------
   -- type ISocketActivityInformation is interface and WinRt.IInspectable;

      function get_TaskId
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SocketKind
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access Windows.Networking.Sockets.SocketActivityKind
      )
      return WinRt.Hresult is abstract;

      function get_Context
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access Windows.Networking.Sockets.ISocketActivityContext
      )
      return WinRt.Hresult is abstract;

      function get_DatagramSocket
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access Windows.Networking.Sockets.IDatagramSocket
      )
      return WinRt.Hresult is abstract;

      function get_StreamSocket
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocket
      )
      return WinRt.Hresult is abstract;

      function get_StreamSocketListener
      (
         this : access ISocketActivityInformation_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocketListener
      )
      return WinRt.Hresult is abstract;

      IID_ISocketActivityInformation : aliased WinRt.IID := (2374648548, 43134, 19316, (153, 104, 24, 91, 37, 17, 222, 254 ));

   -----------------------------------------------------------------------------
   -- type ISocketActivityInformationStatics is interface and WinRt.IInspectable;

      function get_AllSockets
      (
         this : access ISocketActivityInformationStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ISocketActivityInformationStatics : aliased WinRt.IID := (2238755962, 32381, 18230, (128, 65, 19, 39, 166, 84, 60, 86 ));

   -----------------------------------------------------------------------------
   -- type ISocketActivityTriggerDetails is interface and WinRt.IInspectable;

      function get_Reason
      (
         this : access ISocketActivityTriggerDetails_Interface;
         RetVal : access Windows.Networking.Sockets.SocketActivityTriggerReason
      )
      return WinRt.Hresult is abstract;

      function get_SocketInformation
      (
         this : access ISocketActivityTriggerDetails_Interface;
         RetVal : access Windows.Networking.Sockets.ISocketActivityInformation
      )
      return WinRt.Hresult is abstract;

      IID_ISocketActivityTriggerDetails : aliased WinRt.IID := (1173620391, 64671, 20353, (172, 173, 53, 95, 239, 81, 230, 123 ));

   -----------------------------------------------------------------------------
   -- type ISocketErrorStatics is interface and WinRt.IInspectable;

      function GetStatus
      (
         this : access ISocketErrorStatics_Interface;
         hresult : WinRt.Int32;
         RetVal : access Windows.Networking.Sockets.SocketErrorStatus
      )
      return WinRt.Hresult is abstract;

      IID_ISocketErrorStatics : aliased WinRt.IID := (2189637620, 32086, 19854, (183, 180, 160, 125, 215, 193, 188, 169 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocket is interface and WinRt.IInspectable;

      function get_Control
      (
         this : access IStreamSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocketControl
      )
      return WinRt.Hresult is abstract;

      function get_Information
      (
         this : access IStreamSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocketInformation
      )
      return WinRt.Hresult is abstract;

      function get_InputStream
      (
         this : access IStreamSocket_Interface;
         RetVal : access Windows.Storage.Streams.IInputStream
      )
      return WinRt.Hresult is abstract;

      function get_OutputStream
      (
         this : access IStreamSocket_Interface;
         RetVal : access Windows.Storage.Streams.IOutputStream
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IStreamSocket_Interface;
         endpointPair : Windows.Networking.IEndpointPair;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IStreamSocket_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IStreamSocket_Interface;
         endpointPair : Windows.Networking.IEndpointPair;
         protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IStreamSocket_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function UpgradeToSslAsync
      (
         this : access IStreamSocket_Interface;
         protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
         validationHostName : Windows.Networking.IHostName;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocket : aliased WinRt.IID := (1772236019, 64635, 18519, (175, 56, 246, 231, 222, 106, 91, 73 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocket2 is interface and WinRt.IInspectable;

      function ConnectAsync
      (
         this : access IStreamSocket2_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
         adapter : Windows.Networking.Connectivity.INetworkAdapter;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocket2 : aliased WinRt.IID := (701556085, 62228, 19721, (173, 240, 15, 189, 150, 127, 189, 159 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocket3 is interface and WinRt.IInspectable;

      function CancelIOAsync
      (
         this : access IStreamSocket3_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function EnableTransferOwnership
      (
         this : access IStreamSocket3_Interface;
         taskId : WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function EnableTransferOwnership
      (
         this : access IStreamSocket3_Interface;
         taskId : WinRt.Guid;
         connectedStandbyAction : Windows.Networking.Sockets.SocketActivityConnectedStandbyAction
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IStreamSocket3_Interface;
         socketId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IStreamSocket3_Interface;
         socketId : WinRt.HString;
         data : Windows.Networking.Sockets.ISocketActivityContext
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IStreamSocket3_Interface;
         socketId : WinRt.HString;
         data : Windows.Networking.Sockets.ISocketActivityContext;
         keepAliveTime : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocket3 : aliased WinRt.IID := (1061358336, 40232, 18516, (186, 195, 35, 1, 148, 30, 194, 35 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketControl is interface and WinRt.IInspectable;

      function get_NoDelay
      (
         this : access IStreamSocketControl_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_NoDelay
      (
         this : access IStreamSocketControl_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_KeepAlive
      (
         this : access IStreamSocketControl_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_KeepAlive
      (
         this : access IStreamSocketControl_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_OutboundBufferSizeInBytes
      (
         this : access IStreamSocketControl_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_OutboundBufferSizeInBytes
      (
         this : access IStreamSocketControl_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_QualityOfService
      (
         this : access IStreamSocketControl_Interface;
         RetVal : access Windows.Networking.Sockets.SocketQualityOfService
      )
      return WinRt.Hresult is abstract;

      function put_QualityOfService
      (
         this : access IStreamSocketControl_Interface;
         value : Windows.Networking.Sockets.SocketQualityOfService
      )
      return WinRt.Hresult is abstract;

      function get_OutboundUnicastHopLimit
      (
         this : access IStreamSocketControl_Interface;
         RetVal : access WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      function put_OutboundUnicastHopLimit
      (
         this : access IStreamSocketControl_Interface;
         value : WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketControl : aliased WinRt.IID := (4263882225, 37547, 19187, (153, 146, 15, 76, 133, 227, 108, 196 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketControl2 is interface and WinRt.IInspectable;

      function get_IgnorableServerCertificateErrors
      (
         this : access IStreamSocketControl2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketControl2 : aliased WinRt.IID := (3268450902, 1551, 17601, (184, 226, 31, 191, 96, 189, 98, 197 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketControl3 is interface and WinRt.IInspectable;

      function get_SerializeConnectionAttempts
      (
         this : access IStreamSocketControl3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_SerializeConnectionAttempts
      (
         this : access IStreamSocketControl3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ClientCertificate
      (
         this : access IStreamSocketControl3_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function put_ClientCertificate
      (
         this : access IStreamSocketControl3_Interface;
         value : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketControl3 : aliased WinRt.IID := (3312075852, 20084, 16446, (137, 76, 179, 28, 174, 92, 115, 66 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketControl4 is interface and WinRt.IInspectable;

      function get_MinProtectionLevel
      (
         this : access IStreamSocketControl4_Interface;
         RetVal : access Windows.Networking.Sockets.SocketProtectionLevel
      )
      return WinRt.Hresult is abstract;

      function put_MinProtectionLevel
      (
         this : access IStreamSocketControl4_Interface;
         value : Windows.Networking.Sockets.SocketProtectionLevel
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketControl4 : aliased WinRt.IID := (2521705277, 60455, 18568, (179, 206, 199, 75, 65, 132, 35, 173 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketInformation is interface and WinRt.IInspectable;

      function get_LocalAddress
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_LocalPort
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RemoteHostName
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_RemoteAddress
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_RemoteServiceName
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RemotePort
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RoundTripTimeStatistics
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Networking.Sockets.RoundTripTimeStatistics
      )
      return WinRt.Hresult is abstract;

      function get_BandwidthStatistics
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Networking.Sockets.BandwidthStatistics
      )
      return WinRt.Hresult is abstract;

      function get_ProtectionLevel
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Networking.Sockets.SocketProtectionLevel
      )
      return WinRt.Hresult is abstract;

      function get_SessionKey
      (
         this : access IStreamSocketInformation_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketInformation : aliased WinRt.IID := (998288944, 24168, 16901, (136, 240, 220, 133, 210, 226, 93, 237 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketInformation2 is interface and WinRt.IInspectable;

      function get_ServerCertificateErrorSeverity
      (
         this : access IStreamSocketInformation2_Interface;
         RetVal : access Windows.Networking.Sockets.SocketSslErrorSeverity
      )
      return WinRt.Hresult is abstract;

      function get_ServerCertificateErrors
      (
         this : access IStreamSocketInformation2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ServerCertificate
      (
         this : access IStreamSocketInformation2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function get_ServerIntermediateCertificates
      (
         this : access IStreamSocketInformation2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketInformation2 : aliased WinRt.IID := (314737746, 19420, 20196, (151, 106, 207, 19, 14, 157, 146, 227 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListener is interface and WinRt.IInspectable;

      function get_Control
      (
         this : access IStreamSocketListener_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocketListenerControl
      )
      return WinRt.Hresult is abstract;

      function get_Information
      (
         this : access IStreamSocketListener_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocketListenerInformation
      )
      return WinRt.Hresult is abstract;

      function BindServiceNameAsync
      (
         this : access IStreamSocketListener_Interface;
         localServiceName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function BindEndpointAsync
      (
         this : access IStreamSocketListener_Interface;
         localHostName : Windows.Networking.IHostName;
         localServiceName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function add_ConnectionReceived
      (
         this : access IStreamSocketListener_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ConnectionReceived
      (
         this : access IStreamSocketListener_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListener : aliased WinRt.IID := (4283511863, 57247, 19952, (191, 130, 14, 197, 215, 179, 90, 174 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListener2 is interface and WinRt.IInspectable;

      function BindServiceNameAsync
      (
         this : access IStreamSocketListener2_Interface;
         localServiceName : WinRt.HString;
         protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function BindServiceNameAsync
      (
         this : access IStreamSocketListener2_Interface;
         localServiceName : WinRt.HString;
         protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
         adapter : Windows.Networking.Connectivity.INetworkAdapter;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListener2 : aliased WinRt.IID := (1703788862, 47934, 17496, (178, 50, 237, 16, 136, 105, 75, 152 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListener3 is interface and WinRt.IInspectable;

      function CancelIOAsync
      (
         this : access IStreamSocketListener3_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function EnableTransferOwnership
      (
         this : access IStreamSocketListener3_Interface;
         taskId : WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function EnableTransferOwnership
      (
         this : access IStreamSocketListener3_Interface;
         taskId : WinRt.Guid;
         connectedStandbyAction : Windows.Networking.Sockets.SocketActivityConnectedStandbyAction
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IStreamSocketListener3_Interface;
         socketId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TransferOwnership
      (
         this : access IStreamSocketListener3_Interface;
         socketId : WinRt.HString;
         data : Windows.Networking.Sockets.ISocketActivityContext
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListener3 : aliased WinRt.IID := (1201152028, 48632, 18713, (133, 66, 40, 212, 80, 231, 69, 7 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListenerConnectionReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Socket
      (
         this : access IStreamSocketListenerConnectionReceivedEventArgs_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamSocket
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListenerConnectionReceivedEventArgs : aliased WinRt.IID := (205991593, 14143, 17531, (133, 177, 221, 212, 84, 136, 3, 186 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListenerControl is interface and WinRt.IInspectable;

      function get_QualityOfService
      (
         this : access IStreamSocketListenerControl_Interface;
         RetVal : access Windows.Networking.Sockets.SocketQualityOfService
      )
      return WinRt.Hresult is abstract;

      function put_QualityOfService
      (
         this : access IStreamSocketListenerControl_Interface;
         value : Windows.Networking.Sockets.SocketQualityOfService
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListenerControl : aliased WinRt.IID := (551077238, 36234, 19898, (151, 34, 161, 108, 77, 152, 73, 128 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListenerControl2 is interface and WinRt.IInspectable;

      function get_NoDelay
      (
         this : access IStreamSocketListenerControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_NoDelay
      (
         this : access IStreamSocketListenerControl2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_KeepAlive
      (
         this : access IStreamSocketListenerControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_KeepAlive
      (
         this : access IStreamSocketListenerControl2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_OutboundBufferSizeInBytes
      (
         this : access IStreamSocketListenerControl2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_OutboundBufferSizeInBytes
      (
         this : access IStreamSocketListenerControl2_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_OutboundUnicastHopLimit
      (
         this : access IStreamSocketListenerControl2_Interface;
         RetVal : access WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      function put_OutboundUnicastHopLimit
      (
         this : access IStreamSocketListenerControl2_Interface;
         value : WinRt.Byte
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListenerControl2 : aliased WinRt.IID := (2492184165, 11326, 16459, (184, 176, 142, 178, 73, 162, 176, 161 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketListenerInformation is interface and WinRt.IInspectable;

      function get_LocalPort
      (
         this : access IStreamSocketListenerInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketListenerInformation : aliased WinRt.IID := (3861620783, 42554, 17163, (191, 98, 41, 233, 62, 86, 51, 180 ));

   -----------------------------------------------------------------------------
   -- type IStreamSocketStatics is interface and WinRt.IInspectable;

      function GetEndpointPairsAsync
      (
         this : access IStreamSocketStatics_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetEndpointPairsAsync
      (
         this : access IStreamSocketStatics_Interface;
         remoteHostName : Windows.Networking.IHostName;
         remoteServiceName : WinRt.HString;
         sortOptions : Windows.Networking.HostNameSortOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IStreamSocketStatics : aliased WinRt.IID := (2753608778, 28206, 19189, (181, 86, 53, 90, 224, 205, 79, 41 ));

   -----------------------------------------------------------------------------
   -- type IStreamWebSocket is interface and WinRt.IInspectable;

      function get_Control
      (
         this : access IStreamWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IStreamWebSocketControl
      )
      return WinRt.Hresult is abstract;

      function get_Information
      (
         this : access IStreamWebSocket_Interface;
         RetVal : access Windows.Networking.Sockets.IWebSocketInformation
      )
      return WinRt.Hresult is abstract;

      function get_InputStream
      (
         this : access IStreamWebSocket_Interface;
         RetVal : access Windows.Storage.Streams.IInputStream
      )
      return WinRt.Hresult is abstract;

      IID_IStreamWebSocket : aliased WinRt.IID := (3175762392, 45705, 17851, (151, 235, 199, 82, 82, 5, 168, 67 ));

   -----------------------------------------------------------------------------
   -- type IStreamWebSocket2 is interface and WinRt.IInspectable;

      function add_ServerCustomValidationRequested
      (
         this : access IStreamWebSocket2_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ServerCustomValidationRequested
      (
         this : access IStreamWebSocket2_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IStreamWebSocket2 : aliased WinRt.IID := (2857175243, 37877, 18040, (130, 54, 87, 204, 229, 65, 126, 213 ));

   -----------------------------------------------------------------------------
   -- type IStreamWebSocketControl is interface and WinRt.IInspectable;

      function get_NoDelay
      (
         this : access IStreamWebSocketControl_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_NoDelay
      (
         this : access IStreamWebSocketControl_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IStreamWebSocketControl : aliased WinRt.IID := (3035920561, 42074, 18651, (149, 58, 100, 91, 125, 150, 76, 7 ));

   -----------------------------------------------------------------------------
   -- type IStreamWebSocketControl2 is interface and WinRt.IInspectable;

      function get_DesiredUnsolicitedPongInterval
      (
         this : access IStreamWebSocketControl2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_DesiredUnsolicitedPongInterval
      (
         this : access IStreamWebSocketControl2_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ActualUnsolicitedPongInterval
      (
         this : access IStreamWebSocketControl2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ClientCertificate
      (
         this : access IStreamWebSocketControl2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function put_ClientCertificate
      (
         this : access IStreamWebSocketControl2_Interface;
         value : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      IID_IStreamWebSocketControl2 : aliased WinRt.IID := (559783806, 64088, 16602, (159, 17, 164, 141, 175, 233, 80, 55 ));

   -----------------------------------------------------------------------------
   -- type IWebSocket is interface and WinRt.IInspectable;

      function get_OutputStream
      (
         this : access IWebSocket_Interface;
         RetVal : access Windows.Storage.Streams.IOutputStream
      )
      return WinRt.Hresult is abstract;

      function ConnectAsync
      (
         this : access IWebSocket_Interface;
         uri : Windows.Foundation.IUriRuntimeClass;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function SetRequestHeader
      (
         this : access IWebSocket_Interface;
         headerName : WinRt.HString;
         headerValue : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function add_Closed
      (
         this : access IWebSocket_Interface;
         eventHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IWebSocket_Interface;
         eventCookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function Close
      (
         this : access IWebSocket_Interface;
         code : WinRt.UInt16;
         reason : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocket : aliased WinRt.IID := (4168563055, 39345, 19992, (188, 8, 133, 12, 154, 223, 21, 110 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketClosedEventArgs is interface and WinRt.IInspectable;

      function get_Code
      (
         this : access IWebSocketClosedEventArgs_Interface;
         RetVal : access WinRt.UInt16
      )
      return WinRt.Hresult is abstract;

      function get_Reason
      (
         this : access IWebSocketClosedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketClosedEventArgs : aliased WinRt.IID := (3468135687, 53416, 18179, (160, 145, 200, 194, 192, 145, 91, 195 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketControl is interface and WinRt.IInspectable;

      function get_OutboundBufferSizeInBytes
      (
         this : access IWebSocketControl_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_OutboundBufferSizeInBytes
      (
         this : access IWebSocketControl_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ServerCredential
      (
         this : access IWebSocketControl_Interface;
         RetVal : access Windows.Security.Credentials.IPasswordCredential
      )
      return WinRt.Hresult is abstract;

      function put_ServerCredential
      (
         this : access IWebSocketControl_Interface;
         value : Windows.Security.Credentials.IPasswordCredential
      )
      return WinRt.Hresult is abstract;

      function get_ProxyCredential
      (
         this : access IWebSocketControl_Interface;
         RetVal : access Windows.Security.Credentials.IPasswordCredential
      )
      return WinRt.Hresult is abstract;

      function put_ProxyCredential
      (
         this : access IWebSocketControl_Interface;
         value : Windows.Security.Credentials.IPasswordCredential
      )
      return WinRt.Hresult is abstract;

      function get_SupportedProtocols
      (
         this : access IWebSocketControl_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketControl : aliased WinRt.IID := (784645571, 55717, 17754, (152, 17, 222, 36, 212, 83, 55, 233 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketControl2 is interface and WinRt.IInspectable;

      function get_IgnorableServerCertificateErrors
      (
         this : access IWebSocketControl2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketControl2 : aliased WinRt.IID := (2042871299, 62154, 17950, (175, 78, 150, 101, 188, 45, 6, 32 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketErrorStatics is interface and WinRt.IInspectable;

      function GetStatus
      (
         this : access IWebSocketErrorStatics_Interface;
         hresult : WinRt.Int32;
         RetVal : access Windows.Web.WebErrorStatus
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketErrorStatics : aliased WinRt.IID := (667808603, 8033, 18185, (142, 2, 97, 40, 58, 218, 78, 157 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketInformation is interface and WinRt.IInspectable;

      function get_LocalAddress
      (
         this : access IWebSocketInformation_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function get_BandwidthStatistics
      (
         this : access IWebSocketInformation_Interface;
         RetVal : access Windows.Networking.Sockets.BandwidthStatistics
      )
      return WinRt.Hresult is abstract;

      function get_Protocol
      (
         this : access IWebSocketInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketInformation : aliased WinRt.IID := (1577181974, 51498, 18341, (178, 95, 7, 132, 118, 57, 209, 129 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketInformation2 is interface and WinRt.IInspectable;

      function get_ServerCertificate
      (
         this : access IWebSocketInformation2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function get_ServerCertificateErrorSeverity
      (
         this : access IWebSocketInformation2_Interface;
         RetVal : access Windows.Networking.Sockets.SocketSslErrorSeverity
      )
      return WinRt.Hresult is abstract;

      function get_ServerCertificateErrors
      (
         this : access IWebSocketInformation2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ServerIntermediateCertificates
      (
         this : access IWebSocketInformation2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketInformation2 : aliased WinRt.IID := (3458021838, 41399, 19779, (130, 105, 141, 91, 152, 27, 212, 122 ));

   -----------------------------------------------------------------------------
   -- type IWebSocketServerCustomValidationRequestedEventArgs is interface and WinRt.IInspectable;

      function get_ServerCertificate
      (
         this : access IWebSocketServerCustomValidationRequestedEventArgs_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function get_ServerCertificateErrorSeverity
      (
         this : access IWebSocketServerCustomValidationRequestedEventArgs_Interface;
         RetVal : access Windows.Networking.Sockets.SocketSslErrorSeverity
      )
      return WinRt.Hresult is abstract;

      function get_ServerCertificateErrors
      (
         this : access IWebSocketServerCustomValidationRequestedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ServerIntermediateCertificates
      (
         this : access IWebSocketServerCustomValidationRequestedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function Reject
      (
         this : access IWebSocketServerCustomValidationRequestedEventArgs_Interface
      )
      return WinRt.Hresult is abstract;

      function GetDeferral
      (
         this : access IWebSocketServerCustomValidationRequestedEventArgs_Interface;
         RetVal : access Windows.Foundation.IDeferral
      )
      return WinRt.Hresult is abstract;

      IID_IWebSocketServerCustomValidationRequestedEventArgs : aliased WinRt.IID := (4293918280, 554, 19127, (139, 54, 225, 10, 244, 100, 14, 107 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ControlChannelTrigger

   overriding procedure Initialize (this : in out ControlChannelTrigger);
   overriding procedure Finalize (this : in out ControlChannelTrigger);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ControlChannelTrigger

   function Constructor
   (
      channelId : WinRt.WString;
      serverKeepAliveIntervalInMinutes : WinRt.UInt32
   )
   return ControlChannelTrigger;

   function Constructor
   (
      channelId : WinRt.WString;
      serverKeepAliveIntervalInMinutes : WinRt.UInt32;
      resourceRequestType : Windows.Networking.Sockets.ControlChannelTriggerResourceType
   )
   return ControlChannelTrigger;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ControlChannelTrigger

   function get_ControlChannelTriggerId
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.WString;

   function get_ServerKeepAliveIntervalInMinutes
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.UInt32;

   procedure put_ServerKeepAliveIntervalInMinutes
   (
      this : in out ControlChannelTrigger;
      value : WinRt.UInt32
   );

   function get_CurrentKeepAliveIntervalInMinutes
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.UInt32;

   function get_TransportObject
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.IInspectable;

   function get_KeepAliveTrigger
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.Windows.ApplicationModel.Background.IBackgroundTrigger;

   function get_PushNotificationTrigger
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.Windows.ApplicationModel.Background.IBackgroundTrigger;

   procedure UsingTransport
   (
      this : in out ControlChannelTrigger;
      transport : WinRt.IInspectable
   );

   function WaitForPushEnabled
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.Windows.Networking.Sockets.ControlChannelTriggerStatus;

   procedure DecreaseNetworkKeepAliveInterval
   (
      this : in out ControlChannelTrigger
   );

   procedure FlushTransport
   (
      this : in out ControlChannelTrigger
   );

   procedure Close
   (
      this : in out ControlChannelTrigger
   );

   function get_IsWakeFromLowPowerSupported
   (
      this : in out ControlChannelTrigger
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DatagramSocket

   overriding procedure Initialize (this : in out DatagramSocket);
   overriding procedure Finalize (this : in out DatagramSocket);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for DatagramSocket

   function Constructor return DatagramSocket;

   -----------------------------------------------------------------------------
   -- Static Interfaces for DatagramSocket

   function GetEndpointPairsAsync
   (
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString
   )
   return WinRt.GenericObject;

   function GetEndpointPairsAsync
   (
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString;
      sortOptions : Windows.Networking.HostNameSortOptions
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DatagramSocket

   function get_Control
   (
      this : in out DatagramSocket
   )
   return WinRt.Windows.Networking.Sockets.DatagramSocketControl'Class;

   function get_Information
   (
      this : in out DatagramSocket
   )
   return WinRt.Windows.Networking.Sockets.DatagramSocketInformation'Class;

   function get_OutputStream
   (
      this : in out DatagramSocket
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   procedure ConnectAsync
   (
      this : in out DatagramSocket;
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString
   );

   procedure ConnectAsync
   (
      this : in out DatagramSocket;
      endpointPair : Windows.Networking.EndpointPair'Class
   );

   procedure BindServiceNameAsync
   (
      this : in out DatagramSocket;
      localServiceName : WinRt.WString
   );

   procedure BindEndpointAsync
   (
      this : in out DatagramSocket;
      localHostName : Windows.Networking.HostName'Class;
      localServiceName : WinRt.WString
   );

   procedure JoinMulticastGroup
   (
      this : in out DatagramSocket;
      host : Windows.Networking.HostName'Class
   );

   function GetOutputStreamAsync
   (
      this : in out DatagramSocket;
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   function GetOutputStreamAsync
   (
      this : in out DatagramSocket;
      endpointPair : Windows.Networking.EndpointPair'Class
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   function add_MessageReceived
   (
      this : in out DatagramSocket;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MessageReceived
   (
      this : in out DatagramSocket;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out DatagramSocket
   );

   procedure BindServiceNameAsync
   (
      this : in out DatagramSocket;
      localServiceName : WinRt.WString;
      adapter : Windows.Networking.Connectivity.NetworkAdapter'Class
   );

   procedure CancelIOAsync
   (
      this : in out DatagramSocket
   );

   procedure EnableTransferOwnership
   (
      this : in out DatagramSocket;
      taskId : WinRt.Guid
   );

   procedure EnableTransferOwnership
   (
      this : in out DatagramSocket;
      taskId : WinRt.Guid;
      connectedStandbyAction : Windows.Networking.Sockets.SocketActivityConnectedStandbyAction
   );

   procedure TransferOwnership
   (
      this : in out DatagramSocket;
      socketId : WinRt.WString
   );

   procedure TransferOwnership
   (
      this : in out DatagramSocket;
      socketId : WinRt.WString;
      data : Windows.Networking.Sockets.SocketActivityContext'Class
   );

   procedure TransferOwnership
   (
      this : in out DatagramSocket;
      socketId : WinRt.WString;
      data : Windows.Networking.Sockets.SocketActivityContext'Class;
      keepAliveTime : Windows.Foundation.TimeSpan
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DatagramSocketControl

   overriding procedure Initialize (this : in out DatagramSocketControl);
   overriding procedure Finalize (this : in out DatagramSocketControl);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DatagramSocketControl

   function get_QualityOfService
   (
      this : in out DatagramSocketControl
   )
   return WinRt.Windows.Networking.Sockets.SocketQualityOfService;

   procedure put_QualityOfService
   (
      this : in out DatagramSocketControl;
      value : Windows.Networking.Sockets.SocketQualityOfService
   );

   function get_OutboundUnicastHopLimit
   (
      this : in out DatagramSocketControl
   )
   return WinRt.Byte;

   procedure put_OutboundUnicastHopLimit
   (
      this : in out DatagramSocketControl;
      value : WinRt.Byte
   );

   function get_InboundBufferSizeInBytes
   (
      this : in out DatagramSocketControl
   )
   return WinRt.UInt32;

   procedure put_InboundBufferSizeInBytes
   (
      this : in out DatagramSocketControl;
      value : WinRt.UInt32
   );

   function get_DontFragment
   (
      this : in out DatagramSocketControl
   )
   return WinRt.Boolean;

   procedure put_DontFragment
   (
      this : in out DatagramSocketControl;
      value : WinRt.Boolean
   );

   function get_MulticastOnly
   (
      this : in out DatagramSocketControl
   )
   return WinRt.Boolean;

   procedure put_MulticastOnly
   (
      this : in out DatagramSocketControl;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DatagramSocketInformation

   overriding procedure Initialize (this : in out DatagramSocketInformation);
   overriding procedure Finalize (this : in out DatagramSocketInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DatagramSocketInformation

   function get_LocalAddress
   (
      this : in out DatagramSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_LocalPort
   (
      this : in out DatagramSocketInformation
   )
   return WinRt.WString;

   function get_RemoteAddress
   (
      this : in out DatagramSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_RemotePort
   (
      this : in out DatagramSocketInformation
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DatagramSocketMessageReceivedEventArgs

   overriding procedure Initialize (this : in out DatagramSocketMessageReceivedEventArgs);
   overriding procedure Finalize (this : in out DatagramSocketMessageReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DatagramSocketMessageReceivedEventArgs

   function get_RemoteAddress
   (
      this : in out DatagramSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_RemotePort
   (
      this : in out DatagramSocketMessageReceivedEventArgs
   )
   return WinRt.WString;

   function get_LocalAddress
   (
      this : in out DatagramSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Networking.HostName'Class;

   function GetDataReader
   (
      this : in out DatagramSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Storage.Streams.DataReader'Class;

   function GetDataStream
   (
      this : in out DatagramSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Storage.Streams.IInputStream;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MessageWebSocket

   overriding procedure Initialize (this : in out MessageWebSocket);
   overriding procedure Finalize (this : in out MessageWebSocket);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MessageWebSocket

   function Constructor return MessageWebSocket;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MessageWebSocket

   function get_Control
   (
      this : in out MessageWebSocket
   )
   return WinRt.Windows.Networking.Sockets.MessageWebSocketControl'Class;

   function get_Information
   (
      this : in out MessageWebSocket
   )
   return WinRt.Windows.Networking.Sockets.MessageWebSocketInformation'Class;

   function add_MessageReceived
   (
      this : in out MessageWebSocket;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MessageReceived
   (
      this : in out MessageWebSocket;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   function get_OutputStream
   (
      this : in out MessageWebSocket
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   procedure ConnectAsync
   (
      this : in out MessageWebSocket;
      uri : Windows.Foundation.Uri'Class
   );

   procedure SetRequestHeader
   (
      this : in out MessageWebSocket;
      headerName : WinRt.WString;
      headerValue : WinRt.WString
   );

   function add_Closed
   (
      this : in out MessageWebSocket;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out MessageWebSocket;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out MessageWebSocket;
      code : WinRt.UInt16;
      reason : WinRt.WString
   );

   procedure Close
   (
      this : in out MessageWebSocket
   );

   function add_ServerCustomValidationRequested
   (
      this : in out MessageWebSocket;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ServerCustomValidationRequested
   (
      this : in out MessageWebSocket;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   function SendNonfinalFrameAsync
   (
      this : in out MessageWebSocket;
      data : Windows.Storage.Streams.IBuffer
   )
   return WinRt.UInt32;

   function SendFinalFrameAsync
   (
      this : in out MessageWebSocket;
      data : Windows.Storage.Streams.IBuffer
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MessageWebSocketControl

   overriding procedure Initialize (this : in out MessageWebSocketControl);
   overriding procedure Finalize (this : in out MessageWebSocketControl);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MessageWebSocketControl

   function get_MaxMessageSize
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.UInt32;

   procedure put_MaxMessageSize
   (
      this : in out MessageWebSocketControl;
      value : WinRt.UInt32
   );

   function get_MessageType
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Networking.Sockets.SocketMessageType;

   procedure put_MessageType
   (
      this : in out MessageWebSocketControl;
      value : Windows.Networking.Sockets.SocketMessageType
   );

   function get_OutboundBufferSizeInBytes
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.UInt32;

   procedure put_OutboundBufferSizeInBytes
   (
      this : in out MessageWebSocketControl;
      value : WinRt.UInt32
   );

   function get_ServerCredential
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Security.Credentials.PasswordCredential'Class;

   procedure put_ServerCredential
   (
      this : in out MessageWebSocketControl;
      value : Windows.Security.Credentials.PasswordCredential'Class
   );

   function get_ProxyCredential
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Security.Credentials.PasswordCredential'Class;

   procedure put_ProxyCredential
   (
      this : in out MessageWebSocketControl;
      value : Windows.Security.Credentials.PasswordCredential'Class
   );

   function get_SupportedProtocols
   (
      this : in out MessageWebSocketControl
   )
   return IVector_HString.Kind;

   function get_IgnorableServerCertificateErrors
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.GenericObject;

   function get_DesiredUnsolicitedPongInterval
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_DesiredUnsolicitedPongInterval
   (
      this : in out MessageWebSocketControl;
      value : Windows.Foundation.TimeSpan
   );

   function get_ActualUnsolicitedPongInterval
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_ReceiveMode
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Networking.Sockets.MessageWebSocketReceiveMode;

   procedure put_ReceiveMode
   (
      this : in out MessageWebSocketControl;
      value : Windows.Networking.Sockets.MessageWebSocketReceiveMode
   );

   function get_ClientCertificate
   (
      this : in out MessageWebSocketControl
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   procedure put_ClientCertificate
   (
      this : in out MessageWebSocketControl;
      value : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MessageWebSocketInformation

   overriding procedure Initialize (this : in out MessageWebSocketInformation);
   overriding procedure Finalize (this : in out MessageWebSocketInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MessageWebSocketInformation

   function get_LocalAddress
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_BandwidthStatistics
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.BandwidthStatistics;

   function get_Protocol
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.WString;

   function get_ServerCertificate
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   function get_ServerCertificateErrorSeverity
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.SocketSslErrorSeverity;

   function get_ServerCertificateErrors
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.GenericObject;

   function get_ServerIntermediateCertificates
   (
      this : in out MessageWebSocketInformation
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MessageWebSocketMessageReceivedEventArgs

   overriding procedure Initialize (this : in out MessageWebSocketMessageReceivedEventArgs);
   overriding procedure Finalize (this : in out MessageWebSocketMessageReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MessageWebSocketMessageReceivedEventArgs

   function get_MessageType
   (
      this : in out MessageWebSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Networking.Sockets.SocketMessageType;

   function GetDataReader
   (
      this : in out MessageWebSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Storage.Streams.DataReader'Class;

   function GetDataStream
   (
      this : in out MessageWebSocketMessageReceivedEventArgs
   )
   return WinRt.Windows.Storage.Streams.IInputStream;

   function get_IsMessageComplete
   (
      this : in out MessageWebSocketMessageReceivedEventArgs
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ServerMessageWebSocket

   overriding procedure Initialize (this : in out ServerMessageWebSocket);
   overriding procedure Finalize (this : in out ServerMessageWebSocket);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ServerMessageWebSocket

   function add_MessageReceived
   (
      this : in out ServerMessageWebSocket;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MessageReceived
   (
      this : in out ServerMessageWebSocket;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_Control
   (
      this : in out ServerMessageWebSocket
   )
   return WinRt.Windows.Networking.Sockets.ServerMessageWebSocketControl'Class;

   function get_Information
   (
      this : in out ServerMessageWebSocket
   )
   return WinRt.Windows.Networking.Sockets.ServerMessageWebSocketInformation'Class;

   function get_OutputStream
   (
      this : in out ServerMessageWebSocket
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   function add_Closed
   (
      this : in out ServerMessageWebSocket;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ServerMessageWebSocket;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ServerMessageWebSocket;
      code : WinRt.UInt16;
      reason : WinRt.WString
   );

   procedure Close
   (
      this : in out ServerMessageWebSocket
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ServerMessageWebSocketControl

   overriding procedure Initialize (this : in out ServerMessageWebSocketControl);
   overriding procedure Finalize (this : in out ServerMessageWebSocketControl);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ServerMessageWebSocketControl

   function get_MessageType
   (
      this : in out ServerMessageWebSocketControl
   )
   return WinRt.Windows.Networking.Sockets.SocketMessageType;

   procedure put_MessageType
   (
      this : in out ServerMessageWebSocketControl;
      value : Windows.Networking.Sockets.SocketMessageType
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ServerMessageWebSocketInformation

   overriding procedure Initialize (this : in out ServerMessageWebSocketInformation);
   overriding procedure Finalize (this : in out ServerMessageWebSocketInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ServerMessageWebSocketInformation

   function get_BandwidthStatistics
   (
      this : in out ServerMessageWebSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.BandwidthStatistics;

   function get_Protocol
   (
      this : in out ServerMessageWebSocketInformation
   )
   return WinRt.WString;

   function get_LocalAddress
   (
      this : in out ServerMessageWebSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ServerStreamWebSocket

   overriding procedure Initialize (this : in out ServerStreamWebSocket);
   overriding procedure Finalize (this : in out ServerStreamWebSocket);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ServerStreamWebSocket

   function get_Information
   (
      this : in out ServerStreamWebSocket
   )
   return WinRt.Windows.Networking.Sockets.ServerStreamWebSocketInformation'Class;

   function get_InputStream
   (
      this : in out ServerStreamWebSocket
   )
   return WinRt.Windows.Storage.Streams.IInputStream;

   function get_OutputStream
   (
      this : in out ServerStreamWebSocket
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   function add_Closed
   (
      this : in out ServerStreamWebSocket;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ServerStreamWebSocket;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ServerStreamWebSocket;
      code : WinRt.UInt16;
      reason : WinRt.WString
   );

   procedure Close
   (
      this : in out ServerStreamWebSocket
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ServerStreamWebSocketInformation

   overriding procedure Initialize (this : in out ServerStreamWebSocketInformation);
   overriding procedure Finalize (this : in out ServerStreamWebSocketInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ServerStreamWebSocketInformation

   function get_BandwidthStatistics
   (
      this : in out ServerStreamWebSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.BandwidthStatistics;

   function get_Protocol
   (
      this : in out ServerStreamWebSocketInformation
   )
   return WinRt.WString;

   function get_LocalAddress
   (
      this : in out ServerStreamWebSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SocketActivityContext

   overriding procedure Initialize (this : in out SocketActivityContext);
   overriding procedure Finalize (this : in out SocketActivityContext);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SocketActivityContext

   function Constructor
   (
      data : Windows.Storage.Streams.IBuffer
   )
   return SocketActivityContext;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SocketActivityContext

   function get_Data
   (
      this : in out SocketActivityContext
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SocketActivityInformation

   overriding procedure Initialize (this : in out SocketActivityInformation);
   overriding procedure Finalize (this : in out SocketActivityInformation);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SocketActivityInformation

   function get_AllSockets
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SocketActivityInformation

   function get_TaskId
   (
      this : in out SocketActivityInformation
   )
   return WinRt.Guid;

   function get_Id
   (
      this : in out SocketActivityInformation
   )
   return WinRt.WString;

   function get_SocketKind
   (
      this : in out SocketActivityInformation
   )
   return WinRt.Windows.Networking.Sockets.SocketActivityKind;

   function get_Context
   (
      this : in out SocketActivityInformation
   )
   return WinRt.Windows.Networking.Sockets.SocketActivityContext'Class;

   function get_DatagramSocket
   (
      this : in out SocketActivityInformation
   )
   return WinRt.Windows.Networking.Sockets.DatagramSocket'Class;

   function get_StreamSocket
   (
      this : in out SocketActivityInformation
   )
   return WinRt.Windows.Networking.Sockets.StreamSocket'Class;

   function get_StreamSocketListener
   (
      this : in out SocketActivityInformation
   )
   return WinRt.Windows.Networking.Sockets.StreamSocketListener'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SocketActivityTriggerDetails

   overriding procedure Initialize (this : in out SocketActivityTriggerDetails);
   overriding procedure Finalize (this : in out SocketActivityTriggerDetails);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SocketActivityTriggerDetails

   function get_Reason
   (
      this : in out SocketActivityTriggerDetails
   )
   return WinRt.Windows.Networking.Sockets.SocketActivityTriggerReason;

   function get_SocketInformation
   (
      this : in out SocketActivityTriggerDetails
   )
   return WinRt.Windows.Networking.Sockets.SocketActivityInformation'Class;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package SocketError is

      function GetStatus
      (
         hresult : WinRt.Int32
      )
      return WinRt.Windows.Networking.Sockets.SocketErrorStatus;

   end SocketError;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocket

   overriding procedure Initialize (this : in out StreamSocket);
   overriding procedure Finalize (this : in out StreamSocket);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for StreamSocket

   function Constructor return StreamSocket;

   -----------------------------------------------------------------------------
   -- Static Interfaces for StreamSocket

   function GetEndpointPairsAsync_StreamSocket
   (
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString
   )
   return WinRt.GenericObject;

   function GetEndpointPairsAsync_StreamSocket
   (
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString;
      sortOptions : Windows.Networking.HostNameSortOptions
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocket

   function get_Control
   (
      this : in out StreamSocket
   )
   return WinRt.Windows.Networking.Sockets.StreamSocketControl'Class;

   function get_Information
   (
      this : in out StreamSocket
   )
   return WinRt.Windows.Networking.Sockets.StreamSocketInformation'Class;

   function get_InputStream
   (
      this : in out StreamSocket
   )
   return WinRt.Windows.Storage.Streams.IInputStream;

   function get_OutputStream
   (
      this : in out StreamSocket
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   procedure ConnectAsync
   (
      this : in out StreamSocket;
      endpointPair : Windows.Networking.EndpointPair'Class
   );

   procedure ConnectAsync
   (
      this : in out StreamSocket;
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString
   );

   procedure ConnectAsync
   (
      this : in out StreamSocket;
      endpointPair : Windows.Networking.EndpointPair'Class;
      protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel
   );

   procedure ConnectAsync
   (
      this : in out StreamSocket;
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString;
      protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel
   );

   procedure UpgradeToSslAsync
   (
      this : in out StreamSocket;
      protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
      validationHostName : Windows.Networking.HostName'Class
   );

   procedure Close
   (
      this : in out StreamSocket
   );

   procedure ConnectAsync
   (
      this : in out StreamSocket;
      remoteHostName : Windows.Networking.HostName'Class;
      remoteServiceName : WinRt.WString;
      protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
      adapter : Windows.Networking.Connectivity.NetworkAdapter'Class
   );

   procedure CancelIOAsync
   (
      this : in out StreamSocket
   );

   procedure EnableTransferOwnership
   (
      this : in out StreamSocket;
      taskId : WinRt.Guid
   );

   procedure EnableTransferOwnership
   (
      this : in out StreamSocket;
      taskId : WinRt.Guid;
      connectedStandbyAction : Windows.Networking.Sockets.SocketActivityConnectedStandbyAction
   );

   procedure TransferOwnership
   (
      this : in out StreamSocket;
      socketId : WinRt.WString
   );

   procedure TransferOwnership
   (
      this : in out StreamSocket;
      socketId : WinRt.WString;
      data : Windows.Networking.Sockets.SocketActivityContext'Class
   );

   procedure TransferOwnership
   (
      this : in out StreamSocket;
      socketId : WinRt.WString;
      data : Windows.Networking.Sockets.SocketActivityContext'Class;
      keepAliveTime : Windows.Foundation.TimeSpan
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocketControl

   overriding procedure Initialize (this : in out StreamSocketControl);
   overriding procedure Finalize (this : in out StreamSocketControl);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocketControl

   function get_NoDelay
   (
      this : in out StreamSocketControl
   )
   return WinRt.Boolean;

   procedure put_NoDelay
   (
      this : in out StreamSocketControl;
      value : WinRt.Boolean
   );

   function get_KeepAlive
   (
      this : in out StreamSocketControl
   )
   return WinRt.Boolean;

   procedure put_KeepAlive
   (
      this : in out StreamSocketControl;
      value : WinRt.Boolean
   );

   function get_OutboundBufferSizeInBytes
   (
      this : in out StreamSocketControl
   )
   return WinRt.UInt32;

   procedure put_OutboundBufferSizeInBytes
   (
      this : in out StreamSocketControl;
      value : WinRt.UInt32
   );

   function get_QualityOfService
   (
      this : in out StreamSocketControl
   )
   return WinRt.Windows.Networking.Sockets.SocketQualityOfService;

   procedure put_QualityOfService
   (
      this : in out StreamSocketControl;
      value : Windows.Networking.Sockets.SocketQualityOfService
   );

   function get_OutboundUnicastHopLimit
   (
      this : in out StreamSocketControl
   )
   return WinRt.Byte;

   procedure put_OutboundUnicastHopLimit
   (
      this : in out StreamSocketControl;
      value : WinRt.Byte
   );

   function get_IgnorableServerCertificateErrors
   (
      this : in out StreamSocketControl
   )
   return WinRt.GenericObject;

   function get_SerializeConnectionAttempts
   (
      this : in out StreamSocketControl
   )
   return WinRt.Boolean;

   procedure put_SerializeConnectionAttempts
   (
      this : in out StreamSocketControl;
      value : WinRt.Boolean
   );

   function get_ClientCertificate
   (
      this : in out StreamSocketControl
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   procedure put_ClientCertificate
   (
      this : in out StreamSocketControl;
      value : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   function get_MinProtectionLevel
   (
      this : in out StreamSocketControl
   )
   return WinRt.Windows.Networking.Sockets.SocketProtectionLevel;

   procedure put_MinProtectionLevel
   (
      this : in out StreamSocketControl;
      value : Windows.Networking.Sockets.SocketProtectionLevel
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocketInformation

   overriding procedure Initialize (this : in out StreamSocketInformation);
   overriding procedure Finalize (this : in out StreamSocketInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocketInformation

   function get_LocalAddress
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_LocalPort
   (
      this : in out StreamSocketInformation
   )
   return WinRt.WString;

   function get_RemoteHostName
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_RemoteAddress
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_RemoteServiceName
   (
      this : in out StreamSocketInformation
   )
   return WinRt.WString;

   function get_RemotePort
   (
      this : in out StreamSocketInformation
   )
   return WinRt.WString;

   function get_RoundTripTimeStatistics
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.RoundTripTimeStatistics;

   function get_BandwidthStatistics
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.BandwidthStatistics;

   function get_ProtectionLevel
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.SocketProtectionLevel;

   function get_SessionKey
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_ServerCertificateErrorSeverity
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.SocketSslErrorSeverity;

   function get_ServerCertificateErrors
   (
      this : in out StreamSocketInformation
   )
   return WinRt.GenericObject;

   function get_ServerCertificate
   (
      this : in out StreamSocketInformation
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   function get_ServerIntermediateCertificates
   (
      this : in out StreamSocketInformation
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocketListener

   overriding procedure Initialize (this : in out StreamSocketListener);
   overriding procedure Finalize (this : in out StreamSocketListener);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for StreamSocketListener

   function Constructor return StreamSocketListener;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocketListener

   function get_Control
   (
      this : in out StreamSocketListener
   )
   return WinRt.Windows.Networking.Sockets.StreamSocketListenerControl'Class;

   function get_Information
   (
      this : in out StreamSocketListener
   )
   return WinRt.Windows.Networking.Sockets.StreamSocketListenerInformation'Class;

   procedure BindServiceNameAsync
   (
      this : in out StreamSocketListener;
      localServiceName : WinRt.WString
   );

   procedure BindEndpointAsync
   (
      this : in out StreamSocketListener;
      localHostName : Windows.Networking.HostName'Class;
      localServiceName : WinRt.WString
   );

   function add_ConnectionReceived
   (
      this : in out StreamSocketListener;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ConnectionReceived
   (
      this : in out StreamSocketListener;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out StreamSocketListener
   );

   procedure BindServiceNameAsync
   (
      this : in out StreamSocketListener;
      localServiceName : WinRt.WString;
      protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel
   );

   procedure BindServiceNameAsync
   (
      this : in out StreamSocketListener;
      localServiceName : WinRt.WString;
      protectionLevel : Windows.Networking.Sockets.SocketProtectionLevel;
      adapter : Windows.Networking.Connectivity.NetworkAdapter'Class
   );

   procedure CancelIOAsync
   (
      this : in out StreamSocketListener
   );

   procedure EnableTransferOwnership
   (
      this : in out StreamSocketListener;
      taskId : WinRt.Guid
   );

   procedure EnableTransferOwnership
   (
      this : in out StreamSocketListener;
      taskId : WinRt.Guid;
      connectedStandbyAction : Windows.Networking.Sockets.SocketActivityConnectedStandbyAction
   );

   procedure TransferOwnership
   (
      this : in out StreamSocketListener;
      socketId : WinRt.WString
   );

   procedure TransferOwnership
   (
      this : in out StreamSocketListener;
      socketId : WinRt.WString;
      data : Windows.Networking.Sockets.SocketActivityContext'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocketListenerConnectionReceivedEventArgs

   overriding procedure Initialize (this : in out StreamSocketListenerConnectionReceivedEventArgs);
   overriding procedure Finalize (this : in out StreamSocketListenerConnectionReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocketListenerConnectionReceivedEventArgs

   function get_Socket
   (
      this : in out StreamSocketListenerConnectionReceivedEventArgs
   )
   return WinRt.Windows.Networking.Sockets.StreamSocket'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocketListenerControl

   overriding procedure Initialize (this : in out StreamSocketListenerControl);
   overriding procedure Finalize (this : in out StreamSocketListenerControl);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocketListenerControl

   function get_QualityOfService
   (
      this : in out StreamSocketListenerControl
   )
   return WinRt.Windows.Networking.Sockets.SocketQualityOfService;

   procedure put_QualityOfService
   (
      this : in out StreamSocketListenerControl;
      value : Windows.Networking.Sockets.SocketQualityOfService
   );

   function get_NoDelay
   (
      this : in out StreamSocketListenerControl
   )
   return WinRt.Boolean;

   procedure put_NoDelay
   (
      this : in out StreamSocketListenerControl;
      value : WinRt.Boolean
   );

   function get_KeepAlive
   (
      this : in out StreamSocketListenerControl
   )
   return WinRt.Boolean;

   procedure put_KeepAlive
   (
      this : in out StreamSocketListenerControl;
      value : WinRt.Boolean
   );

   function get_OutboundBufferSizeInBytes
   (
      this : in out StreamSocketListenerControl
   )
   return WinRt.UInt32;

   procedure put_OutboundBufferSizeInBytes
   (
      this : in out StreamSocketListenerControl;
      value : WinRt.UInt32
   );

   function get_OutboundUnicastHopLimit
   (
      this : in out StreamSocketListenerControl
   )
   return WinRt.Byte;

   procedure put_OutboundUnicastHopLimit
   (
      this : in out StreamSocketListenerControl;
      value : WinRt.Byte
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamSocketListenerInformation

   overriding procedure Initialize (this : in out StreamSocketListenerInformation);
   overriding procedure Finalize (this : in out StreamSocketListenerInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamSocketListenerInformation

   function get_LocalPort
   (
      this : in out StreamSocketListenerInformation
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamWebSocket

   overriding procedure Initialize (this : in out StreamWebSocket);
   overriding procedure Finalize (this : in out StreamWebSocket);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for StreamWebSocket

   function Constructor return StreamWebSocket;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamWebSocket

   function get_Control
   (
      this : in out StreamWebSocket
   )
   return WinRt.Windows.Networking.Sockets.StreamWebSocketControl'Class;

   function get_Information
   (
      this : in out StreamWebSocket
   )
   return WinRt.Windows.Networking.Sockets.StreamWebSocketInformation'Class;

   function get_InputStream
   (
      this : in out StreamWebSocket
   )
   return WinRt.Windows.Storage.Streams.IInputStream;

   function get_OutputStream
   (
      this : in out StreamWebSocket
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   procedure ConnectAsync
   (
      this : in out StreamWebSocket;
      uri : Windows.Foundation.Uri'Class
   );

   procedure SetRequestHeader
   (
      this : in out StreamWebSocket;
      headerName : WinRt.WString;
      headerValue : WinRt.WString
   );

   function add_Closed
   (
      this : in out StreamWebSocket;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out StreamWebSocket;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out StreamWebSocket;
      code : WinRt.UInt16;
      reason : WinRt.WString
   );

   procedure Close
   (
      this : in out StreamWebSocket
   );

   function add_ServerCustomValidationRequested
   (
      this : in out StreamWebSocket;
      eventHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ServerCustomValidationRequested
   (
      this : in out StreamWebSocket;
      eventCookie : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamWebSocketControl

   overriding procedure Initialize (this : in out StreamWebSocketControl);
   overriding procedure Finalize (this : in out StreamWebSocketControl);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamWebSocketControl

   function get_NoDelay
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.Boolean;

   procedure put_NoDelay
   (
      this : in out StreamWebSocketControl;
      value : WinRt.Boolean
   );

   function get_OutboundBufferSizeInBytes
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.UInt32;

   procedure put_OutboundBufferSizeInBytes
   (
      this : in out StreamWebSocketControl;
      value : WinRt.UInt32
   );

   function get_ServerCredential
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.Windows.Security.Credentials.PasswordCredential'Class;

   procedure put_ServerCredential
   (
      this : in out StreamWebSocketControl;
      value : Windows.Security.Credentials.PasswordCredential'Class
   );

   function get_ProxyCredential
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.Windows.Security.Credentials.PasswordCredential'Class;

   procedure put_ProxyCredential
   (
      this : in out StreamWebSocketControl;
      value : Windows.Security.Credentials.PasswordCredential'Class
   );

   function get_SupportedProtocols
   (
      this : in out StreamWebSocketControl
   )
   return IVector_HString.Kind;

   function get_IgnorableServerCertificateErrors
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.GenericObject;

   function get_DesiredUnsolicitedPongInterval
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_DesiredUnsolicitedPongInterval
   (
      this : in out StreamWebSocketControl;
      value : Windows.Foundation.TimeSpan
   );

   function get_ActualUnsolicitedPongInterval
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_ClientCertificate
   (
      this : in out StreamWebSocketControl
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   procedure put_ClientCertificate
   (
      this : in out StreamWebSocketControl;
      value : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreamWebSocketInformation

   overriding procedure Initialize (this : in out StreamWebSocketInformation);
   overriding procedure Finalize (this : in out StreamWebSocketInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreamWebSocketInformation

   function get_LocalAddress
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.Windows.Networking.HostName'Class;

   function get_BandwidthStatistics
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.BandwidthStatistics;

   function get_Protocol
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.WString;

   function get_ServerCertificate
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   function get_ServerCertificateErrorSeverity
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.Windows.Networking.Sockets.SocketSslErrorSeverity;

   function get_ServerCertificateErrors
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.GenericObject;

   function get_ServerIntermediateCertificates
   (
      this : in out StreamWebSocketInformation
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WebSocketClosedEventArgs

   overriding procedure Initialize (this : in out WebSocketClosedEventArgs);
   overriding procedure Finalize (this : in out WebSocketClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WebSocketClosedEventArgs

   function get_Code
   (
      this : in out WebSocketClosedEventArgs
   )
   return WinRt.UInt16;

   function get_Reason
   (
      this : in out WebSocketClosedEventArgs
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package WebSocketError is

      function GetStatus
      (
         hresult : WinRt.Int32
      )
      return WinRt.Windows.Web.WebErrorStatus;

   end WebSocketError;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WebSocketKeepAlive

   overriding procedure Initialize (this : in out WebSocketKeepAlive);
   overriding procedure Finalize (this : in out WebSocketKeepAlive);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for WebSocketKeepAlive

   function Constructor return WebSocketKeepAlive;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WebSocketKeepAlive

   procedure Run
   (
      this : in out WebSocketKeepAlive;
      taskInstance : Windows.ApplicationModel.Background.IBackgroundTaskInstance
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WebSocketServerCustomValidationRequestedEventArgs

   overriding procedure Initialize (this : in out WebSocketServerCustomValidationRequestedEventArgs);
   overriding procedure Finalize (this : in out WebSocketServerCustomValidationRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WebSocketServerCustomValidationRequestedEventArgs

   function get_ServerCertificate
   (
      this : in out WebSocketServerCustomValidationRequestedEventArgs
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   function get_ServerCertificateErrorSeverity
   (
      this : in out WebSocketServerCustomValidationRequestedEventArgs
   )
   return WinRt.Windows.Networking.Sockets.SocketSslErrorSeverity;

   function get_ServerCertificateErrors
   (
      this : in out WebSocketServerCustomValidationRequestedEventArgs
   )
   return WinRt.GenericObject;

   function get_ServerIntermediateCertificates
   (
      this : in out WebSocketServerCustomValidationRequestedEventArgs
   )
   return WinRt.GenericObject;

   procedure Reject
   (
      this : in out WebSocketServerCustomValidationRequestedEventArgs
   );

   function GetDeferral
   (
      this : in out WebSocketServerCustomValidationRequestedEventArgs
   )
   return WinRt.Windows.Foundation.Deferral'Class;

end;
