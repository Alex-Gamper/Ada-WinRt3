--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Data.Xml.Dom;
with WinRt.Windows.Foundation; use WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;
--------------------------------------------------------------------------------
package body WinRt.Windows.Graphics.Printing.PrintTicket is

   package IAsyncOperation_WorkflowPrintTicketValidationResult is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.Graphics.Printing.PrintTicket.IWorkflowPrintTicketValidationResult);
   package AsyncOperationCompletedHandler_WorkflowPrintTicketValidationResult is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.Graphics.Printing.PrintTicket.IWorkflowPrintTicketValidationResult);

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrintTicketCapabilities

   procedure Initialize (this : in out PrintTicketCapabilities) is
   begin
      null;
   end;

   procedure Finalize (this : in out PrintTicketCapabilities) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPrintTicketCapabilities, IPrintTicketCapabilities_Ptr);
   begin
      if this.m_IPrintTicketCapabilities /= null then
         if this.m_IPrintTicketCapabilities.all /= null then
            RefCount := this.m_IPrintTicketCapabilities.all.Release;
            Free (this.m_IPrintTicketCapabilities);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrintTicketCapabilities

   function get_Name
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketCapabilities.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNamespace
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketCapabilities.all.get_XmlNamespace (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNode
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
   begin
      Hr := this.m_IPrintTicketCapabilities.all.get_XmlNode (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_DocumentBindingFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentBindingFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentCollateFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentCollateFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentDuplexFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentDuplexFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentHolePunchFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentHolePunchFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentInputBinFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentInputBinFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentNUpFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentNUpFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentStapleFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_DocumentStapleFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_JobPasscodeFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_JobPasscodeFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageBorderlessFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageBorderlessFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageMediaSizeFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageMediaSizeFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageMediaTypeFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageMediaTypeFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageOrientationFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageOrientationFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageOutputColorFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageOutputColorFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageOutputQualityFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageOutputQualityFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageResolutionFeature
   (
      this : in out PrintTicketCapabilities
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.get_PageResolutionFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function GetFeature
   (
      this : in out PrintTicketCapabilities;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IPrintTicketCapabilities.all.GetFeature (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   function GetParameterDefinition
   (
      this : in out PrintTicketCapabilities;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterDefinition'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterDefinition;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterDefinition do
         Hr := this.m_IPrintTicketCapabilities.all.GetParameterDefinition (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketParameterDefinition := new Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterDefinition;
         Retval.m_IPrintTicketParameterDefinition.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrintTicketFeature

   procedure Initialize (this : in out PrintTicketFeature) is
   begin
      null;
   end;

   procedure Finalize (this : in out PrintTicketFeature) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPrintTicketFeature, IPrintTicketFeature_Ptr);
   begin
      if this.m_IPrintTicketFeature /= null then
         if this.m_IPrintTicketFeature.all /= null then
            RefCount := this.m_IPrintTicketFeature.all.Release;
            Free (this.m_IPrintTicketFeature);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrintTicketFeature

   function get_Name
   (
      this : in out PrintTicketFeature
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketFeature.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNamespace
   (
      this : in out PrintTicketFeature
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketFeature.all.get_XmlNamespace (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNode
   (
      this : in out PrintTicketFeature
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
   begin
      Hr := this.m_IPrintTicketFeature.all.get_XmlNode (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_DisplayName
   (
      this : in out PrintTicketFeature
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketFeature.all.get_DisplayName (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function GetOption
   (
      this : in out PrintTicketFeature;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketOption'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketOption;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketOption do
         Hr := this.m_IPrintTicketFeature.all.GetOption (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketOption := new Windows.Graphics.Printing.PrintTicket.IPrintTicketOption;
         Retval.m_IPrintTicketOption.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   function get_Options
   (
      this : in out PrintTicketFeature
   )
   return IVectorView_IPrintTicketOption.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVectorView_IPrintTicketOption.Kind;
   begin
      Hr := this.m_IPrintTicketFeature.all.get_Options (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVectorView_IPrintTicketOption (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function GetSelectedOption
   (
      this : in out PrintTicketFeature
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketOption'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketOption;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketOption do
         Hr := this.m_IPrintTicketFeature.all.GetSelectedOption (m_ComRetVal'Access);
         Retval.m_IPrintTicketOption := new Windows.Graphics.Printing.PrintTicket.IPrintTicketOption;
         Retval.m_IPrintTicketOption.all := m_ComRetVal;
      end return;
   end;

   procedure SetSelectedOption
   (
      this : in out PrintTicketFeature;
      value : Windows.Graphics.Printing.PrintTicket.PrintTicketOption'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IPrintTicketFeature.all.SetSelectedOption (value.m_IPrintTicketOption.all);
   end;

   function get_SelectionType
   (
      this : in out PrintTicketFeature
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeatureSelectionType is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.PrintTicketFeatureSelectionType;
   begin
      Hr := this.m_IPrintTicketFeature.all.get_SelectionType (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrintTicketOption

   procedure Initialize (this : in out PrintTicketOption) is
   begin
      null;
   end;

   procedure Finalize (this : in out PrintTicketOption) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPrintTicketOption, IPrintTicketOption_Ptr);
   begin
      if this.m_IPrintTicketOption /= null then
         if this.m_IPrintTicketOption.all /= null then
            RefCount := this.m_IPrintTicketOption.all.Release;
            Free (this.m_IPrintTicketOption);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrintTicketOption

   function get_Name
   (
      this : in out PrintTicketOption
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketOption.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNamespace
   (
      this : in out PrintTicketOption
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketOption.all.get_XmlNamespace (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNode
   (
      this : in out PrintTicketOption
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
   begin
      Hr := this.m_IPrintTicketOption.all.get_XmlNode (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_DisplayName
   (
      this : in out PrintTicketOption
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketOption.all.get_DisplayName (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function GetPropertyNode
   (
      this : in out PrintTicketOption;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      Hr := this.m_IPrintTicketOption.all.GetPropertyNode (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
      Hr := WindowsDeleteString (HStr_name);
      Hr := WindowsDeleteString (HStr_xmlNamespace);
      return m_ComRetVal;
   end;

   function GetScoredPropertyNode
   (
      this : in out PrintTicketOption;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      Hr := this.m_IPrintTicketOption.all.GetScoredPropertyNode (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
      Hr := WindowsDeleteString (HStr_name);
      Hr := WindowsDeleteString (HStr_xmlNamespace);
      return m_ComRetVal;
   end;

   function GetPropertyValue
   (
      this : in out PrintTicketOption;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValue'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketValue;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValue do
         Hr := this.m_IPrintTicketOption.all.GetPropertyValue (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketValue := new Windows.Graphics.Printing.PrintTicket.IPrintTicketValue;
         Retval.m_IPrintTicketValue.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   function GetScoredPropertyValue
   (
      this : in out PrintTicketOption;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValue'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketValue;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValue do
         Hr := this.m_IPrintTicketOption.all.GetScoredPropertyValue (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketValue := new Windows.Graphics.Printing.PrintTicket.IPrintTicketValue;
         Retval.m_IPrintTicketValue.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrintTicketParameterDefinition

   procedure Initialize (this : in out PrintTicketParameterDefinition) is
   begin
      null;
   end;

   procedure Finalize (this : in out PrintTicketParameterDefinition) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPrintTicketParameterDefinition, IPrintTicketParameterDefinition_Ptr);
   begin
      if this.m_IPrintTicketParameterDefinition /= null then
         if this.m_IPrintTicketParameterDefinition.all /= null then
            RefCount := this.m_IPrintTicketParameterDefinition.all.Release;
            Free (this.m_IPrintTicketParameterDefinition);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrintTicketParameterDefinition

   function get_Name
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNamespace
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_XmlNamespace (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNode
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_XmlNode (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_DataType
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterDataType is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.PrintTicketParameterDataType;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_DataType (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_UnitType
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_UnitType (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_RangeMin
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.Int32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Int32;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_RangeMin (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_RangeMax
   (
      this : in out PrintTicketParameterDefinition
   )
   return WinRt.Int32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Int32;
   begin
      Hr := this.m_IPrintTicketParameterDefinition.all.get_RangeMax (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrintTicketParameterInitializer

   procedure Initialize (this : in out PrintTicketParameterInitializer) is
   begin
      null;
   end;

   procedure Finalize (this : in out PrintTicketParameterInitializer) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPrintTicketParameterInitializer, IPrintTicketParameterInitializer_Ptr);
   begin
      if this.m_IPrintTicketParameterInitializer /= null then
         if this.m_IPrintTicketParameterInitializer.all /= null then
            RefCount := this.m_IPrintTicketParameterInitializer.all.Release;
            Free (this.m_IPrintTicketParameterInitializer);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrintTicketParameterInitializer

   function get_Name
   (
      this : in out PrintTicketParameterInitializer
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketParameterInitializer.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNamespace
   (
      this : in out PrintTicketParameterInitializer
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketParameterInitializer.all.get_XmlNamespace (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNode
   (
      this : in out PrintTicketParameterInitializer
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
   begin
      Hr := this.m_IPrintTicketParameterInitializer.all.get_XmlNode (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_Value
   (
      this : in out PrintTicketParameterInitializer;
      value : Windows.Graphics.Printing.PrintTicket.PrintTicketValue'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IPrintTicketParameterInitializer.all.put_Value (value.m_IPrintTicketValue.all);
   end;

   function get_Value
   (
      this : in out PrintTicketParameterInitializer
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValue'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketValue;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValue do
         Hr := this.m_IPrintTicketParameterInitializer.all.get_Value (m_ComRetVal'Access);
         Retval.m_IPrintTicketValue := new Windows.Graphics.Printing.PrintTicket.IPrintTicketValue;
         Retval.m_IPrintTicketValue.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PrintTicketValue

   procedure Initialize (this : in out PrintTicketValue) is
   begin
      null;
   end;

   procedure Finalize (this : in out PrintTicketValue) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPrintTicketValue, IPrintTicketValue_Ptr);
   begin
      if this.m_IPrintTicketValue /= null then
         if this.m_IPrintTicketValue.all /= null then
            RefCount := this.m_IPrintTicketValue.all.Release;
            Free (this.m_IPrintTicketValue);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PrintTicketValue

   function get_Type
   (
      this : in out PrintTicketValue
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketValueType is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.PrintTicketValueType;
   begin
      Hr := this.m_IPrintTicketValue.all.get_Type (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function GetValueAsInteger
   (
      this : in out PrintTicketValue
   )
   return WinRt.Int32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Int32;
   begin
      Hr := this.m_IPrintTicketValue.all.GetValueAsInteger (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function GetValueAsString
   (
      this : in out PrintTicketValue
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IPrintTicketValue.all.GetValueAsString (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WorkflowPrintTicket

   procedure Initialize (this : in out WorkflowPrintTicket) is
   begin
      null;
   end;

   procedure Finalize (this : in out WorkflowPrintTicket) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IWorkflowPrintTicket, IWorkflowPrintTicket_Ptr);
   begin
      if this.m_IWorkflowPrintTicket /= null then
         if this.m_IWorkflowPrintTicket.all /= null then
            RefCount := this.m_IWorkflowPrintTicket.all.Release;
            Free (this.m_IWorkflowPrintTicket);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WorkflowPrintTicket

   function get_Name
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IWorkflowPrintTicket.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNamespace
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IWorkflowPrintTicket.all.get_XmlNamespace (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_XmlNode
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Data.Xml.Dom.IXmlNode is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Data.Xml.Dom.IXmlNode;
   begin
      Hr := this.m_IWorkflowPrintTicket.all.get_XmlNode (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function GetCapabilities
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketCapabilities'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketCapabilities;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketCapabilities do
         Hr := this.m_IWorkflowPrintTicket.all.GetCapabilities (m_ComRetVal'Access);
         Retval.m_IPrintTicketCapabilities := new Windows.Graphics.Printing.PrintTicket.IPrintTicketCapabilities;
         Retval.m_IPrintTicketCapabilities.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentBindingFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentBindingFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentCollateFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentCollateFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentDuplexFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentDuplexFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentHolePunchFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentHolePunchFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentInputBinFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentInputBinFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentNUpFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentNUpFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_DocumentStapleFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_DocumentStapleFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_JobPasscodeFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_JobPasscodeFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageBorderlessFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageBorderlessFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageMediaSizeFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageMediaSizeFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageMediaTypeFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageMediaTypeFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageOrientationFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageOrientationFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageOutputColorFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageOutputColorFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageOutputQualityFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageOutputQualityFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function get_PageResolutionFeature
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.get_PageResolutionFeature (m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
      end return;
   end;

   function GetFeature
   (
      this : in out WorkflowPrintTicket;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketFeature do
         Hr := this.m_IWorkflowPrintTicket.all.GetFeature (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketFeature := new Windows.Graphics.Printing.PrintTicket.IPrintTicketFeature;
         Retval.m_IPrintTicketFeature.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   procedure NotifyXmlChangedAsync
   (
      this : in out WorkflowPrintTicket
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IWorkflowPrintTicket.all.NotifyXmlChangedAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   function ValidateAsync
   (
      this : in out WorkflowPrintTicket
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicketValidationResult'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_WorkflowPrintTicketValidationResult.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_WorkflowPrintTicketValidationResult.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.Graphics.Printing.PrintTicket.IWorkflowPrintTicketValidationResult;
      m_IID            : aliased WinRt.IID := (4101803905, 9199, 23144, (136, 64, 112, 7, 71, 177, 9, 153 )); -- Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicketValidationResult;
      m_HandlerIID     : aliased WinRt.IID := (990642168, 3403, 20971, (176, 64, 73, 61, 225, 173, 218, 185 ));
      m_Handler        : AsyncOperationCompletedHandler_WorkflowPrintTicketValidationResult.Kind := new AsyncOperationCompletedHandler_WorkflowPrintTicketValidationResult.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_WorkflowPrintTicketValidationResult.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_WorkflowPrintTicketValidationResult.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_WorkflowPrintTicketValidationResult.Kind_Delegate, AsyncOperationCompletedHandler_WorkflowPrintTicketValidationResult.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicketValidationResult do
         Hr := this.m_IWorkflowPrintTicket.all.ValidateAsync (m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IWorkflowPrintTicketValidationResult := new Windows.Graphics.Printing.PrintTicket.IWorkflowPrintTicketValidationResult;
                  Retval.m_IWorkflowPrintTicketValidationResult.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   function GetParameterInitializer
   (
      this : in out WorkflowPrintTicket;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterInitializer'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterInitializer;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterInitializer do
         Hr := this.m_IWorkflowPrintTicket.all.GetParameterInitializer (HStr_name, HStr_xmlNamespace, m_ComRetVal'Access);
         Retval.m_IPrintTicketParameterInitializer := new Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterInitializer;
         Retval.m_IPrintTicketParameterInitializer.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   function SetParameterInitializerAsInteger
   (
      this : in out WorkflowPrintTicket;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString;
      integerValue : WinRt.Int32
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterInitializer'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterInitializer;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterInitializer do
         Hr := this.m_IWorkflowPrintTicket.all.SetParameterInitializerAsInteger (HStr_name, HStr_xmlNamespace, integerValue, m_ComRetVal'Access);
         Retval.m_IPrintTicketParameterInitializer := new Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterInitializer;
         Retval.m_IPrintTicketParameterInitializer.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
      end return;
   end;

   function SetParameterInitializerAsString
   (
      this : in out WorkflowPrintTicket;
      name : WinRt.WString;
      xmlNamespace : WinRt.WString;
      stringValue : WinRt.WString
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterInitializer'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterInitializer;
      HStr_name : WinRt.HString := To_HString (name);
      HStr_xmlNamespace : WinRt.HString := To_HString (xmlNamespace);
      HStr_stringValue : WinRt.HString := To_HString (stringValue);
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.PrintTicketParameterInitializer do
         Hr := this.m_IWorkflowPrintTicket.all.SetParameterInitializerAsString (HStr_name, HStr_xmlNamespace, HStr_stringValue, m_ComRetVal'Access);
         Retval.m_IPrintTicketParameterInitializer := new Windows.Graphics.Printing.PrintTicket.IPrintTicketParameterInitializer;
         Retval.m_IPrintTicketParameterInitializer.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_xmlNamespace);
         Hr := WindowsDeleteString (HStr_stringValue);
      end return;
   end;

   function MergeAndValidateTicket
   (
      this : in out WorkflowPrintTicket;
      deltaShemaTicket : Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket'Class
   )
   return WinRt.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Graphics.Printing.PrintTicket.IWorkflowPrintTicket;
   begin
      return RetVal : WinRt.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket do
         Hr := this.m_IWorkflowPrintTicket.all.MergeAndValidateTicket (deltaShemaTicket.m_IWorkflowPrintTicket.all, m_ComRetVal'Access);
         Retval.m_IWorkflowPrintTicket := new Windows.Graphics.Printing.PrintTicket.IWorkflowPrintTicket;
         Retval.m_IWorkflowPrintTicket.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WorkflowPrintTicketValidationResult

   procedure Initialize (this : in out WorkflowPrintTicketValidationResult) is
   begin
      null;
   end;

   procedure Finalize (this : in out WorkflowPrintTicketValidationResult) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IWorkflowPrintTicketValidationResult, IWorkflowPrintTicketValidationResult_Ptr);
   begin
      if this.m_IWorkflowPrintTicketValidationResult /= null then
         if this.m_IWorkflowPrintTicketValidationResult.all /= null then
            RefCount := this.m_IWorkflowPrintTicketValidationResult.all.Release;
            Free (this.m_IWorkflowPrintTicketValidationResult);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WorkflowPrintTicketValidationResult

   function get_Validated
   (
      this : in out WorkflowPrintTicketValidationResult
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IWorkflowPrintTicketValidationResult.all.get_Validated (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_ExtendedError
   (
      this : in out WorkflowPrintTicketValidationResult
   )
   return WinRt.Windows.Foundation.HResult is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.HResult;
   begin
      Hr := this.m_IWorkflowPrintTicketValidationResult.all.get_ExtendedError (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

end;
