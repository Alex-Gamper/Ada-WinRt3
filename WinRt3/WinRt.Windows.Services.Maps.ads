--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.Devices.Geolocation;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.UI.Popups;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Services.Maps is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IEnhancedWaypoint_Interface is interface and WinRt.IInspectable_Interface;
   type IEnhancedWaypoint is access IEnhancedWaypoint_Interface'Class;
   type IEnhancedWaypoint_Ptr is access all IEnhancedWaypoint;

   type IEnhancedWaypointFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IEnhancedWaypointFactory is access IEnhancedWaypointFactory_Interface'Class;

   type IManeuverWarning_Interface is interface and WinRt.IInspectable_Interface;
   type IManeuverWarning is access IManeuverWarning_Interface'Class;
   type IManeuverWarning_Ptr is access all IManeuverWarning;

   type IMapAddress_Interface is interface and WinRt.IInspectable_Interface;
   type IMapAddress is access IMapAddress_Interface'Class;
   type IMapAddress_Ptr is access all IMapAddress;

   type IMapAddress2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapAddress2 is access IMapAddress2_Interface'Class;

   type IMapLocation_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLocation is access IMapLocation_Interface'Class;
   type IMapLocation_Ptr is access all IMapLocation;

   type IMapLocationFinderResult_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLocationFinderResult is access IMapLocationFinderResult_Interface'Class;
   type IMapLocationFinderResult_Ptr is access all IMapLocationFinderResult;

   type IMapLocationFinderStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLocationFinderStatics is access IMapLocationFinderStatics_Interface'Class;

   type IMapLocationFinderStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLocationFinderStatics2 is access IMapLocationFinderStatics2_Interface'Class;

   type IMapManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapManagerStatics is access IMapManagerStatics_Interface'Class;

   type IMapRoute_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRoute is access IMapRoute_Interface'Class;
   type IMapRoute_Ptr is access all IMapRoute;

   type IMapRoute2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRoute2 is access IMapRoute2_Interface'Class;

   type IMapRoute3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRoute3 is access IMapRoute3_Interface'Class;

   type IMapRoute4_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRoute4 is access IMapRoute4_Interface'Class;

   type IMapRouteDrivingOptions_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteDrivingOptions is access IMapRouteDrivingOptions_Interface'Class;
   type IMapRouteDrivingOptions_Ptr is access all IMapRouteDrivingOptions;

   type IMapRouteDrivingOptions2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteDrivingOptions2 is access IMapRouteDrivingOptions2_Interface'Class;

   type IMapRouteFinderResult_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteFinderResult is access IMapRouteFinderResult_Interface'Class;
   type IMapRouteFinderResult_Ptr is access all IMapRouteFinderResult;

   type IMapRouteFinderResult2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteFinderResult2 is access IMapRouteFinderResult2_Interface'Class;

   type IMapRouteFinderStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteFinderStatics is access IMapRouteFinderStatics_Interface'Class;

   type IMapRouteFinderStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteFinderStatics2 is access IMapRouteFinderStatics2_Interface'Class;

   type IMapRouteFinderStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteFinderStatics3 is access IMapRouteFinderStatics3_Interface'Class;

   type IMapRouteLeg_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteLeg is access IMapRouteLeg_Interface'Class;
   type IMapRouteLeg_Ptr is access all IMapRouteLeg;

   type IMapRouteLeg2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteLeg2 is access IMapRouteLeg2_Interface'Class;

   type IMapRouteManeuver_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteManeuver is access IMapRouteManeuver_Interface'Class;
   type IMapRouteManeuver_Ptr is access all IMapRouteManeuver;

   type IMapRouteManeuver2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteManeuver2 is access IMapRouteManeuver2_Interface'Class;

   type IMapRouteManeuver3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteManeuver3 is access IMapRouteManeuver3_Interface'Class;

   type IMapServiceStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapServiceStatics is access IMapServiceStatics_Interface'Class;

   type IMapServiceStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapServiceStatics2 is access IMapServiceStatics2_Interface'Class;

   type IMapServiceStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapServiceStatics3 is access IMapServiceStatics3_Interface'Class;

   type IMapServiceStatics4_Interface is interface and WinRt.IInspectable_Interface;
   type IMapServiceStatics4 is access IMapServiceStatics4_Interface'Class;

   type IPlaceInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IPlaceInfo is access IPlaceInfo_Interface'Class;
   type IPlaceInfo_Ptr is access all IPlaceInfo;

   type IPlaceInfoCreateOptions_Interface is interface and WinRt.IInspectable_Interface;
   type IPlaceInfoCreateOptions is access IPlaceInfoCreateOptions_Interface'Class;
   type IPlaceInfoCreateOptions_Ptr is access all IPlaceInfoCreateOptions;

   type IPlaceInfoStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPlaceInfoStatics is access IPlaceInfoStatics_Interface'Class;

   type IPlaceInfoStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IPlaceInfoStatics2 is access IPlaceInfoStatics2_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type EnhancedWaypoint is new Ada.Finalization.Limited_Controlled with
      record
         m_IEnhancedWaypoint : access Windows.Services.Maps.IEnhancedWaypoint;
      end record;
   type EnhancedWaypoint_Ptr is access all EnhancedWaypoint;

   type ManeuverWarning is new Ada.Finalization.Limited_Controlled with
      record
         m_IManeuverWarning : access Windows.Services.Maps.IManeuverWarning;
      end record;
   type ManeuverWarning_Ptr is access all ManeuverWarning;

   type MapAddress is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapAddress : access Windows.Services.Maps.IMapAddress;
      end record;
   type MapAddress_Ptr is access all MapAddress;

   type MapLocation is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapLocation : access Windows.Services.Maps.IMapLocation;
      end record;
   type MapLocation_Ptr is access all MapLocation;

   type MapLocationFinderResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapLocationFinderResult : access Windows.Services.Maps.IMapLocationFinderResult;
      end record;
   type MapLocationFinderResult_Ptr is access all MapLocationFinderResult;

   type MapRoute is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRoute : access Windows.Services.Maps.IMapRoute;
      end record;
   type MapRoute_Ptr is access all MapRoute;

   type MapRouteDrivingOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRouteDrivingOptions : access Windows.Services.Maps.IMapRouteDrivingOptions;
      end record;
   type MapRouteDrivingOptions_Ptr is access all MapRouteDrivingOptions;

   type MapRouteFinderResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRouteFinderResult : access Windows.Services.Maps.IMapRouteFinderResult;
      end record;
   type MapRouteFinderResult_Ptr is access all MapRouteFinderResult;

   type MapRouteLeg is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRouteLeg : access Windows.Services.Maps.IMapRouteLeg;
      end record;
   type MapRouteLeg_Ptr is access all MapRouteLeg;

   type MapRouteManeuver is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRouteManeuver : access Windows.Services.Maps.IMapRouteManeuver;
      end record;
   type MapRouteManeuver_Ptr is access all MapRouteManeuver;

   type PlaceInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IPlaceInfo : access Windows.Services.Maps.IPlaceInfo;
      end record;
   type PlaceInfo_Ptr is access all PlaceInfo;

   type PlaceInfoCreateOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_IPlaceInfoCreateOptions : access Windows.Services.Maps.IPlaceInfoCreateOptions;
      end record;
   type PlaceInfoCreateOptions_Ptr is access all PlaceInfoCreateOptions;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type ManeuverWarningKind is (
      None_e,
      Accident_e,
      AdministrativeDivisionChange_e,
      Alert_e,
      BlockedRoad_e,
      CheckTimetable_e,
      Congestion_e,
      Construction_e,
      CountryChange_e,
      DisabledVehicle_e,
      GateAccess_e,
      GetOffTransit_e,
      GetOnTransit_e,
      IllegalUTurn_e,
      MassTransit_e,
      Miscellaneous_e,
      NoIncident_e,
      Other_e,
      OtherNews_e,
      OtherTrafficIncidents_e,
      PlannedEvent_e,
      PrivateRoad_e,
      RestrictedTurn_e,
      RoadClosures_e,
      RoadHazard_e,
      ScheduledConstruction_e,
      SeasonalClosures_e,
      Tollbooth_e,
      TollRoad_e,
      TollZoneEnter_e,
      TollZoneExit_e,
      TrafficFlow_e,
      TransitLineChange_e,
      UnpavedRoad_e,
      UnscheduledConstruction_e,
      Weather_e
   );
   for ManeuverWarningKind use (
      None_e => 0,
      Accident_e => 1,
      AdministrativeDivisionChange_e => 2,
      Alert_e => 3,
      BlockedRoad_e => 4,
      CheckTimetable_e => 5,
      Congestion_e => 6,
      Construction_e => 7,
      CountryChange_e => 8,
      DisabledVehicle_e => 9,
      GateAccess_e => 10,
      GetOffTransit_e => 11,
      GetOnTransit_e => 12,
      IllegalUTurn_e => 13,
      MassTransit_e => 14,
      Miscellaneous_e => 15,
      NoIncident_e => 16,
      Other_e => 17,
      OtherNews_e => 18,
      OtherTrafficIncidents_e => 19,
      PlannedEvent_e => 20,
      PrivateRoad_e => 21,
      RestrictedTurn_e => 22,
      RoadClosures_e => 23,
      RoadHazard_e => 24,
      ScheduledConstruction_e => 25,
      SeasonalClosures_e => 26,
      Tollbooth_e => 27,
      TollRoad_e => 28,
      TollZoneEnter_e => 29,
      TollZoneExit_e => 30,
      TrafficFlow_e => 31,
      TransitLineChange_e => 32,
      UnpavedRoad_e => 33,
      UnscheduledConstruction_e => 34,
      Weather_e => 35
   );
   type ManeuverWarningKind_Ptr is access ManeuverWarningKind;

   type ManeuverWarningSeverity is (
      None_e,
      LowImpact_e,
      Minor_e,
      Moderate_e,
      Serious_e
   );
   for ManeuverWarningSeverity use (
      None_e => 0,
      LowImpact_e => 1,
      Minor_e => 2,
      Moderate_e => 3,
      Serious_e => 4
   );
   type ManeuverWarningSeverity_Ptr is access ManeuverWarningSeverity;

   type MapLocationDesiredAccuracy is (
      High_e,
      Low_e
   );
   for MapLocationDesiredAccuracy use (
      High_e => 0,
      Low_e => 1
   );
   type MapLocationDesiredAccuracy_Ptr is access MapLocationDesiredAccuracy;

   type MapLocationFinderStatus is (
      Success_e,
      UnknownError_e,
      InvalidCredentials_e,
      BadLocation_e,
      IndexFailure_e,
      NetworkFailure_e,
      NotSupported_e
   );
   for MapLocationFinderStatus use (
      Success_e => 0,
      UnknownError_e => 1,
      InvalidCredentials_e => 2,
      BadLocation_e => 3,
      IndexFailure_e => 4,
      NetworkFailure_e => 5,
      NotSupported_e => 6
   );
   type MapLocationFinderStatus_Ptr is access MapLocationFinderStatus;

   type MapManeuverNotices is (
      None_e,
      Toll_e,
      Unpaved_e
   );
   for MapManeuverNotices use (
      None_e => 0,
      Toll_e => 1,
      Unpaved_e => 2
   );
   type MapManeuverNotices_Ptr is access MapManeuverNotices;

   type MapRouteFinderStatus is (
      Success_e,
      UnknownError_e,
      InvalidCredentials_e,
      NoRouteFound_e,
      NoRouteFoundWithGivenOptions_e,
      StartPointNotFound_e,
      EndPointNotFound_e,
      NoPedestrianRouteFound_e,
      NetworkFailure_e,
      NotSupported_e
   );
   for MapRouteFinderStatus use (
      Success_e => 0,
      UnknownError_e => 1,
      InvalidCredentials_e => 2,
      NoRouteFound_e => 3,
      NoRouteFoundWithGivenOptions_e => 4,
      StartPointNotFound_e => 5,
      EndPointNotFound_e => 6,
      NoPedestrianRouteFound_e => 7,
      NetworkFailure_e => 8,
      NotSupported_e => 9
   );
   type MapRouteFinderStatus_Ptr is access MapRouteFinderStatus;

   type MapRouteManeuverKind is (
      None_e,
      Start_e,
      Stopover_e,
      StopoverResume_e,
      End_e,
      GoStraight_e,
      UTurnLeft_e,
      UTurnRight_e,
      TurnKeepLeft_e,
      TurnKeepRight_e,
      TurnLightLeft_e,
      TurnLightRight_e,
      TurnLeft_e,
      TurnRight_e,
      TurnHardLeft_e,
      TurnHardRight_e,
      FreewayEnterLeft_e,
      FreewayEnterRight_e,
      FreewayLeaveLeft_e,
      FreewayLeaveRight_e,
      FreewayContinueLeft_e,
      FreewayContinueRight_e,
      TrafficCircleLeft_e,
      TrafficCircleRight_e,
      TakeFerry_e
   );
   for MapRouteManeuverKind use (
      None_e => 0,
      Start_e => 1,
      Stopover_e => 2,
      StopoverResume_e => 3,
      End_e => 4,
      GoStraight_e => 5,
      UTurnLeft_e => 6,
      UTurnRight_e => 7,
      TurnKeepLeft_e => 8,
      TurnKeepRight_e => 9,
      TurnLightLeft_e => 10,
      TurnLightRight_e => 11,
      TurnLeft_e => 12,
      TurnRight_e => 13,
      TurnHardLeft_e => 14,
      TurnHardRight_e => 15,
      FreewayEnterLeft_e => 16,
      FreewayEnterRight_e => 17,
      FreewayLeaveLeft_e => 18,
      FreewayLeaveRight_e => 19,
      FreewayContinueLeft_e => 20,
      FreewayContinueRight_e => 21,
      TrafficCircleLeft_e => 22,
      TrafficCircleRight_e => 23,
      TakeFerry_e => 24
   );
   type MapRouteManeuverKind_Ptr is access MapRouteManeuverKind;

   type MapRouteOptimization is (
      Time_e,
      Distance_e,
      TimeWithTraffic_e,
      Scenic_e
   );
   for MapRouteOptimization use (
      Time_e => 0,
      Distance_e => 1,
      TimeWithTraffic_e => 2,
      Scenic_e => 3
   );
   type MapRouteOptimization_Ptr is access MapRouteOptimization;

   type MapRouteRestrictions is (
      None_e,
      Highways_e,
      TollRoads_e,
      Ferries_e,
      Tunnels_e,
      DirtRoads_e,
      Motorail_e
   );
   for MapRouteRestrictions use (
      None_e => 0,
      Highways_e => 1,
      TollRoads_e => 2,
      Ferries_e => 4,
      Tunnels_e => 8,
      DirtRoads_e => 16,
      Motorail_e => 32
   );
   type MapRouteRestrictions_Ptr is access MapRouteRestrictions;

   type MapServiceDataUsagePreference is (
      Default_e,
      OfflineMapDataOnly_e
   );
   for MapServiceDataUsagePreference use (
      Default_e => 0,
      OfflineMapDataOnly_e => 1
   );
   type MapServiceDataUsagePreference_Ptr is access MapServiceDataUsagePreference;

   type TrafficCongestion is (
      Unknown_e,
      Light_e,
      Mild_e,
      Medium_e,
      Heavy_e
   );
   for TrafficCongestion use (
      Unknown_e => 0,
      Light_e => 1,
      Mild_e => 2,
      Medium_e => 3,
      Heavy_e => 4
   );
   type TrafficCongestion_Ptr is access TrafficCongestion;

   type WaypointKind is (
      Stop_e,
      Via_e
   );
   for WaypointKind use (
      Stop_e => 0,
      Via_e => 1
   );
   type WaypointKind_Ptr is access WaypointKind;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type GuidanceContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type GuidanceContract_Ptr is access GuidanceContract;

   type LocalSearchContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type LocalSearchContract_Ptr is access LocalSearchContract;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_IMapLocation is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.IMapLocation);
   IID_IVectorView_IMapLocation : aliased WinRt.IID := (2386512612, 23896, 23412, (157, 63, 96, 151, 136, 148, 114, 212 ));
   function QInterface_IVectorView_IMapLocation is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IMapLocation.Kind, IID_IVectorView_IMapLocation'Access);

   package IVectorView_IMapRouteLeg is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.IMapRouteLeg);
   IID_IVectorView_IMapRouteLeg : aliased WinRt.IID := (1826059587, 28620, 24355, (176, 61, 209, 185, 225, 101, 88, 105 ));
   function QInterface_IVectorView_IMapRouteLeg is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IMapRouteLeg.Kind, IID_IVectorView_IMapRouteLeg'Access);

   package IReference_Double is new WinRt.Windows.Foundation.IReference (WinRt.Double);
   IID_IReference_Double : aliased WinRt.IID := (597272742, 50537, 22264, (165, 21, 97, 107, 5, 105, 136, 13 ));
   function QInterface_IReference_Double is new Generic_QueryInterface (GenericObject_Interface, IReference_Double.Kind, IID_IReference_Double'Access);

   package IReference_DateTime is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.DateTime);
   IID_IReference_DateTime : aliased WinRt.IID := (2926492396, 35052, 21739, (185, 153, 51, 220, 58, 141, 14, 235 ));
   function QInterface_IReference_DateTime is new Generic_QueryInterface (GenericObject_Interface, IReference_DateTime.Kind, IID_IReference_DateTime'Access);

   package IVectorView_IMapRoute is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.IMapRoute);
   IID_IVectorView_IMapRoute : aliased WinRt.IID := (1811484410, 37195, 20711, (137, 237, 245, 242, 87, 159, 82, 223 ));
   function QInterface_IVectorView_IMapRoute is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IMapRoute.Kind, IID_IVectorView_IMapRoute'Access);

   package IVectorView_IMapRouteManeuver is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.IMapRouteManeuver);
   IID_IVectorView_IMapRouteManeuver : aliased WinRt.IID := (3779490813, 43862, 24469, (172, 113, 167, 62, 187, 123, 18, 60 ));
   function QInterface_IVectorView_IMapRouteManeuver is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IMapRouteManeuver.Kind, IID_IVectorView_IMapRouteManeuver'Access);

   package IVectorView_IManeuverWarning is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.IManeuverWarning);
   IID_IVectorView_IManeuverWarning : aliased WinRt.IID := (4117699054, 14460, 23042, (145, 206, 224, 67, 154, 228, 239, 198 ));
   function QInterface_IVectorView_IManeuverWarning is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IManeuverWarning.Kind, IID_IVectorView_IManeuverWarning'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IEnhancedWaypoint is interface and WinRt.IInspectable;

      function get_Point
      (
         this : access IEnhancedWaypoint_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_Kind
      (
         this : access IEnhancedWaypoint_Interface;
         RetVal : access Windows.Services.Maps.WaypointKind
      )
      return WinRt.Hresult is abstract;

      IID_IEnhancedWaypoint : aliased WinRt.IID := (3978726516, 22803, 4582, (139, 119, 134, 243, 12, 168, 147, 211 ));

   -----------------------------------------------------------------------------
   -- type IEnhancedWaypointFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IEnhancedWaypointFactory_Interface;
         point : Windows.Devices.Geolocation.IGeopoint;
         kind : Windows.Services.Maps.WaypointKind;
         RetVal : access Windows.Services.Maps.IEnhancedWaypoint
      )
      return WinRt.Hresult is abstract;

      IID_IEnhancedWaypointFactory : aliased WinRt.IID := (2944828535, 41642, 18141, (182, 69, 35, 179, 27, 138, 166, 199 ));

   -----------------------------------------------------------------------------
   -- type IManeuverWarning is interface and WinRt.IInspectable;

      function get_Kind
      (
         this : access IManeuverWarning_Interface;
         RetVal : access Windows.Services.Maps.ManeuverWarningKind
      )
      return WinRt.Hresult is abstract;

      function get_Severity
      (
         this : access IManeuverWarning_Interface;
         RetVal : access Windows.Services.Maps.ManeuverWarningSeverity
      )
      return WinRt.Hresult is abstract;

      IID_IManeuverWarning : aliased WinRt.IID := (3248713098, 9776, 17272, (158, 74, 110, 68, 37, 61, 206, 186 ));

   -----------------------------------------------------------------------------
   -- type IMapAddress is interface and WinRt.IInspectable;

      function get_BuildingName
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BuildingFloor
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BuildingRoom
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BuildingWing
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_StreetNumber
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Street
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Neighborhood
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_District
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Town
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Region
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RegionCode
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Country
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CountryCode
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PostCode
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Continent
      (
         this : access IMapAddress_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapAddress : aliased WinRt.IID := (3483871603, 41908, 17556, (179, 255, 203, 169, 77, 182, 150, 153 ));

   -----------------------------------------------------------------------------
   -- type IMapAddress2 is interface and WinRt.IInspectable;

      function get_FormattedAddress
      (
         this : access IMapAddress2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapAddress2 : aliased WinRt.IID := (1976397297, 58797, 17833, (191, 64, 108, 242, 86, 193, 221, 19 ));

   -----------------------------------------------------------------------------
   -- type IMapLocation is interface and WinRt.IInspectable;

      function get_Point
      (
         this : access IMapLocation_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_DisplayName
      (
         this : access IMapLocation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IMapLocation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Address
      (
         this : access IMapLocation_Interface;
         RetVal : access Windows.Services.Maps.IMapAddress
      )
      return WinRt.Hresult is abstract;

      IID_IMapLocation : aliased WinRt.IID := (1007107927, 3492, 17128, (158, 226, 169, 111, 207, 35, 113, 220 ));

   -----------------------------------------------------------------------------
   -- type IMapLocationFinderResult is interface and WinRt.IInspectable;

      function get_Locations
      (
         this : access IMapLocationFinderResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access IMapLocationFinderResult_Interface;
         RetVal : access Windows.Services.Maps.MapLocationFinderStatus
      )
      return WinRt.Hresult is abstract;

      IID_IMapLocationFinderResult : aliased WinRt.IID := (1139929465, 59596, 17910, (190, 210, 84, 204, 191, 150, 93, 154 ));

   -----------------------------------------------------------------------------
   -- type IMapLocationFinderStatics is interface and WinRt.IInspectable;

      function FindLocationsAtAsync
      (
         this : access IMapLocationFinderStatics_Interface;
         queryPoint : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindLocationsAsync
      (
         this : access IMapLocationFinderStatics_Interface;
         searchText : WinRt.HString;
         referencePoint : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindLocationsAsync
      (
         this : access IMapLocationFinderStatics_Interface;
         searchText : WinRt.HString;
         referencePoint : Windows.Devices.Geolocation.IGeopoint;
         maxCount : WinRt.UInt32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapLocationFinderStatics : aliased WinRt.IID := (831183709, 7261, 20277, (162, 223, 170, 202, 148, 149, 149, 23 ));

   -----------------------------------------------------------------------------
   -- type IMapLocationFinderStatics2 is interface and WinRt.IInspectable;

      function FindLocationsAtAsync
      (
         this : access IMapLocationFinderStatics2_Interface;
         queryPoint : Windows.Devices.Geolocation.IGeopoint;
         accuracy : Windows.Services.Maps.MapLocationDesiredAccuracy;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapLocationFinderStatics2 : aliased WinRt.IID := (2509933462, 25733, 19965, (133, 26, 51, 172, 49, 126, 58, 246 ));

   -----------------------------------------------------------------------------
   -- type IMapManagerStatics is interface and WinRt.IInspectable;

      function ShowDownloadedMapsUI
      (
         this : access IMapManagerStatics_Interface
      )
      return WinRt.Hresult is abstract;

      function ShowMapsUpdateUI
      (
         this : access IMapManagerStatics_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IMapManagerStatics : aliased WinRt.IID := (937682197, 33460, 19796, (143, 217, 175, 38, 36, 179, 1, 28 ));

   -----------------------------------------------------------------------------
   -- type IMapRoute is interface and WinRt.IInspectable;

      function get_BoundingBox
      (
         this : access IMapRoute_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoboundingBox
      )
      return WinRt.Hresult is abstract;

      function get_LengthInMeters
      (
         this : access IMapRoute_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_EstimatedDuration
      (
         this : access IMapRoute_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Path
      (
         this : access IMapRoute_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function get_Legs
      (
         this : access IMapRoute_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_IsTrafficBased
      (
         this : access IMapRoute_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapRoute : aliased WinRt.IID := (4211586866, 22605, 17795, (156, 96, 100, 31, 234, 39, 67, 73 ));

   -----------------------------------------------------------------------------
   -- type IMapRoute2 is interface and WinRt.IInspectable;

      function get_ViolatedRestrictions
      (
         this : access IMapRoute2_Interface;
         RetVal : access Windows.Services.Maps.MapRouteRestrictions
      )
      return WinRt.Hresult is abstract;

      function get_HasBlockedRoads
      (
         this : access IMapRoute2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapRoute2 : aliased WinRt.IID := (3519403020, 8723, 19120, (162, 96, 70, 179, 129, 105, 190, 172 ));

   -----------------------------------------------------------------------------
   -- type IMapRoute3 is interface and WinRt.IInspectable;

      function get_DurationWithoutTraffic
      (
         this : access IMapRoute3_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_TrafficCongestion
      (
         this : access IMapRoute3_Interface;
         RetVal : access Windows.Services.Maps.TrafficCongestion
      )
      return WinRt.Hresult is abstract;

      IID_IMapRoute3 : aliased WinRt.IID := (2240618158, 62125, 17055, (187, 55, 205, 33, 9, 79, 252, 146 ));

   -----------------------------------------------------------------------------
   -- type IMapRoute4 is interface and WinRt.IInspectable;

      function get_IsScenic
      (
         this : access IMapRoute4_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapRoute4 : aliased WinRt.IID := (913083557, 12371, 20385, (128, 255, 212, 117, 243, 237, 30, 110 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteDrivingOptions is interface and WinRt.IInspectable;

      function get_MaxAlternateRouteCount
      (
         this : access IMapRouteDrivingOptions_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_MaxAlternateRouteCount
      (
         this : access IMapRouteDrivingOptions_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_InitialHeading
      (
         this : access IMapRouteDrivingOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_InitialHeading
      (
         this : access IMapRouteDrivingOptions_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_RouteOptimization
      (
         this : access IMapRouteDrivingOptions_Interface;
         RetVal : access Windows.Services.Maps.MapRouteOptimization
      )
      return WinRt.Hresult is abstract;

      function put_RouteOptimization
      (
         this : access IMapRouteDrivingOptions_Interface;
         value : Windows.Services.Maps.MapRouteOptimization
      )
      return WinRt.Hresult is abstract;

      function get_RouteRestrictions
      (
         this : access IMapRouteDrivingOptions_Interface;
         RetVal : access Windows.Services.Maps.MapRouteRestrictions
      )
      return WinRt.Hresult is abstract;

      function put_RouteRestrictions
      (
         this : access IMapRouteDrivingOptions_Interface;
         value : Windows.Services.Maps.MapRouteRestrictions
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteDrivingOptions : aliased WinRt.IID := (1746220621, 50908, 18071, (164, 82, 177, 143, 143, 11, 103, 161 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteDrivingOptions2 is interface and WinRt.IInspectable;

      function get_DepartureTime
      (
         this : access IMapRouteDrivingOptions2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_DepartureTime
      (
         this : access IMapRouteDrivingOptions2_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteDrivingOptions2 : aliased WinRt.IID := (903644784, 49816, 18640, (181, 173, 130, 84, 96, 100, 86, 3 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteFinderResult is interface and WinRt.IInspectable;

      function get_Route
      (
         this : access IMapRouteFinderResult_Interface;
         RetVal : access Windows.Services.Maps.IMapRoute
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access IMapRouteFinderResult_Interface;
         RetVal : access Windows.Services.Maps.MapRouteFinderStatus
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteFinderResult : aliased WinRt.IID := (2825429786, 37922, 18092, (140, 161, 177, 97, 77, 75, 251, 226 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteFinderResult2 is interface and WinRt.IInspectable;

      function get_AlternateRoutes
      (
         this : access IMapRouteFinderResult2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteFinderResult2 : aliased WinRt.IID := (544250989, 55564, 18120, (145, 198, 125, 75, 228, 239, 178, 21 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteFinderStatics is interface and WinRt.IInspectable;

      function GetDrivingRouteAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         startPoint : Windows.Devices.Geolocation.IGeopoint;
         endPoint : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         startPoint : Windows.Devices.Geolocation.IGeopoint;
         endPoint : Windows.Devices.Geolocation.IGeopoint;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         startPoint : Windows.Devices.Geolocation.IGeopoint;
         endPoint : Windows.Devices.Geolocation.IGeopoint;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         startPoint : Windows.Devices.Geolocation.IGeopoint;
         endPoint : Windows.Devices.Geolocation.IGeopoint;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions;
         headingInDegrees : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteFromWaypointsAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         wayPoints : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteFromWaypointsAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         wayPoints : GenericObject;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteFromWaypointsAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         wayPoints : GenericObject;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteFromWaypointsAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         wayPoints : GenericObject;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions;
         headingInDegrees : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetWalkingRouteAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         startPoint : Windows.Devices.Geolocation.IGeopoint;
         endPoint : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetWalkingRouteFromWaypointsAsync
      (
         this : access IMapRouteFinderStatics_Interface;
         wayPoints : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteFinderStatics : aliased WinRt.IID := (3097871631, 7268, 19514, (129, 235, 31, 124, 21, 42, 251, 187 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteFinderStatics2 is interface and WinRt.IInspectable;

      function GetDrivingRouteAsync
      (
         this : access IMapRouteFinderStatics2_Interface;
         startPoint : Windows.Devices.Geolocation.IGeopoint;
         endPoint : Windows.Devices.Geolocation.IGeopoint;
         options : Windows.Services.Maps.IMapRouteDrivingOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteFinderStatics2 : aliased WinRt.IID := (2949393523, 30560, 18863, (179, 189, 186, 241, 53, 183, 3, 225 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteFinderStatics3 is interface and WinRt.IInspectable;

      function GetDrivingRouteFromEnhancedWaypointsAsync
      (
         this : access IMapRouteFinderStatics3_Interface;
         waypoints : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDrivingRouteFromEnhancedWaypointsAsync
      (
         this : access IMapRouteFinderStatics3_Interface;
         waypoints : GenericObject;
         options : Windows.Services.Maps.IMapRouteDrivingOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteFinderStatics3 : aliased WinRt.IID := (4127818036, 22803, 4582, (139, 119, 134, 243, 12, 168, 147, 211 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteLeg is interface and WinRt.IInspectable;

      function get_BoundingBox
      (
         this : access IMapRouteLeg_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoboundingBox
      )
      return WinRt.Hresult is abstract;

      function get_Path
      (
         this : access IMapRouteLeg_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function get_LengthInMeters
      (
         this : access IMapRouteLeg_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_EstimatedDuration
      (
         this : access IMapRouteLeg_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Maneuvers
      (
         this : access IMapRouteLeg_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteLeg : aliased WinRt.IID := (2532881142, 23482, 19735, (157, 182, 26, 38, 63, 236, 116, 113 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteLeg2 is interface and WinRt.IInspectable;

      function get_DurationWithoutTraffic
      (
         this : access IMapRouteLeg2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_TrafficCongestion
      (
         this : access IMapRouteLeg2_Interface;
         RetVal : access Windows.Services.Maps.TrafficCongestion
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteLeg2 : aliased WinRt.IID := (48367149, 51654, 17848, (142, 84, 26, 16, 181, 122, 23, 232 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteManeuver is interface and WinRt.IInspectable;

      function get_StartingPoint
      (
         this : access IMapRouteManeuver_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_LengthInMeters
      (
         this : access IMapRouteManeuver_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_InstructionText
      (
         this : access IMapRouteManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Kind
      (
         this : access IMapRouteManeuver_Interface;
         RetVal : access Windows.Services.Maps.MapRouteManeuverKind
      )
      return WinRt.Hresult is abstract;

      function get_ExitNumber
      (
         this : access IMapRouteManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ManeuverNotices
      (
         this : access IMapRouteManeuver_Interface;
         RetVal : access Windows.Services.Maps.MapManeuverNotices
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteManeuver : aliased WinRt.IID := (3982235632, 42667, 19813, (160, 134, 250, 138, 126, 52, 13, 242 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteManeuver2 is interface and WinRt.IInspectable;

      function get_StartHeading
      (
         this : access IMapRouteManeuver2_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_EndHeading
      (
         this : access IMapRouteManeuver2_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_StreetName
      (
         this : access IMapRouteManeuver2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteManeuver2 : aliased WinRt.IID := (1568394652, 31899, 16863, (131, 139, 234, 226, 30, 75, 5, 169 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteManeuver3 is interface and WinRt.IInspectable;

      function get_Warnings
      (
         this : access IMapRouteManeuver3_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteManeuver3 : aliased WinRt.IID := (2795583711, 1155, 16742, (133, 190, 185, 147, 54, 193, 24, 117 ));

   -----------------------------------------------------------------------------
   -- type IMapServiceStatics is interface and WinRt.IInspectable;

      function put_ServiceToken
      (
         this : access IMapServiceStatics_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ServiceToken
      (
         this : access IMapServiceStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapServiceStatics : aliased WinRt.IID := (21278085, 49228, 19677, (135, 26, 160, 114, 109, 9, 124, 212 ));

   -----------------------------------------------------------------------------
   -- type IMapServiceStatics2 is interface and WinRt.IInspectable;

      function get_WorldViewRegionCode
      (
         this : access IMapServiceStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapServiceStatics2 : aliased WinRt.IID := (4162404077, 40069, 16553, (136, 150, 15, 195, 253, 43, 124, 42 ));

   -----------------------------------------------------------------------------
   -- type IMapServiceStatics3 is interface and WinRt.IInspectable;

      function get_DataAttributions
      (
         this : access IMapServiceStatics3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapServiceStatics3 : aliased WinRt.IID := (168939040, 25511, 18516, (179, 85, 214, 220, 218, 34, 61, 27 ));

   -----------------------------------------------------------------------------
   -- type IMapServiceStatics4 is interface and WinRt.IInspectable;

      function put_DataUsagePreference
      (
         this : access IMapServiceStatics4_Interface;
         value : Windows.Services.Maps.MapServiceDataUsagePreference
      )
      return WinRt.Hresult is abstract;

      function get_DataUsagePreference
      (
         this : access IMapServiceStatics4_Interface;
         RetVal : access Windows.Services.Maps.MapServiceDataUsagePreference
      )
      return WinRt.Hresult is abstract;

      IID_IMapServiceStatics4 : aliased WinRt.IID := (143272034, 27324, 16910, (148, 95, 76, 253, 137, 198, 115, 86 ));

   -----------------------------------------------------------------------------
   -- type IPlaceInfo is interface and WinRt.IInspectable;

      function Show
      (
         this : access IPlaceInfo_Interface;
         selection : Windows.Foundation.Rect
      )
      return WinRt.Hresult is abstract;

      function Show
      (
         this : access IPlaceInfo_Interface;
         selection : Windows.Foundation.Rect;
         preferredPlacement : Windows.UI.Popups.Placement
      )
      return WinRt.Hresult is abstract;

      function get_Identifier
      (
         this : access IPlaceInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayName
      (
         this : access IPlaceInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayAddress
      (
         this : access IPlaceInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Geoshape
      (
         this : access IPlaceInfo_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoshape
      )
      return WinRt.Hresult is abstract;

      IID_IPlaceInfo : aliased WinRt.IID := (2584219830, 12744, 20330, (159, 24, 149, 11, 76, 56, 149, 26 ));

   -----------------------------------------------------------------------------
   -- type IPlaceInfoCreateOptions is interface and WinRt.IInspectable;

      function put_DisplayName
      (
         this : access IPlaceInfoCreateOptions_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayName
      (
         this : access IPlaceInfoCreateOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_DisplayAddress
      (
         this : access IPlaceInfoCreateOptions_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayAddress
      (
         this : access IPlaceInfoCreateOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPlaceInfoCreateOptions : aliased WinRt.IID := (3442721061, 26609, 19379, (153, 7, 236, 206, 147, 155, 3, 153 ));

   -----------------------------------------------------------------------------
   -- type IPlaceInfoStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access IPlaceInfoStatics_Interface;
         referencePoint : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      function Create
      (
         this : access IPlaceInfoStatics_Interface;
         referencePoint : Windows.Devices.Geolocation.IGeopoint;
         options : Windows.Services.Maps.IPlaceInfoCreateOptions;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      function CreateFromIdentifier
      (
         this : access IPlaceInfoStatics_Interface;
         identifier : WinRt.HString;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      function CreateFromIdentifier
      (
         this : access IPlaceInfoStatics_Interface;
         identifier : WinRt.HString;
         defaultPoint : Windows.Devices.Geolocation.IGeopoint;
         options : Windows.Services.Maps.IPlaceInfoCreateOptions;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      function CreateFromMapLocation
      (
         this : access IPlaceInfoStatics_Interface;
         location : Windows.Services.Maps.IMapLocation;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      function get_IsShowSupported
      (
         this : access IPlaceInfoStatics_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPlaceInfoStatics : aliased WinRt.IID := (2193227633, 27856, 18596, (175, 217, 94, 216, 32, 151, 147, 107 ));

   -----------------------------------------------------------------------------
   -- type IPlaceInfoStatics2 is interface and WinRt.IInspectable;

      function CreateFromAddress
      (
         this : access IPlaceInfoStatics2_Interface;
         displayAddress : WinRt.HString;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      function CreateFromAddress
      (
         this : access IPlaceInfoStatics2_Interface;
         displayAddress : WinRt.HString;
         displayName : WinRt.HString;
         RetVal : access Windows.Services.Maps.IPlaceInfo
      )
      return WinRt.Hresult is abstract;

      IID_IPlaceInfoStatics2 : aliased WinRt.IID := (1930363465, 16455, 17571, (143, 129, 37, 80, 165, 33, 99, 112 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EnhancedWaypoint

   overriding procedure Initialize (this : in out EnhancedWaypoint);
   overriding procedure Finalize (this : in out EnhancedWaypoint);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EnhancedWaypoint

   function Constructor
   (
      point : Windows.Devices.Geolocation.Geopoint'Class;
      kind : Windows.Services.Maps.WaypointKind
   )
   return EnhancedWaypoint;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EnhancedWaypoint

   function get_Point
   (
      this : in out EnhancedWaypoint
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_Kind
   (
      this : in out EnhancedWaypoint
   )
   return WinRt.Windows.Services.Maps.WaypointKind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ManeuverWarning

   overriding procedure Initialize (this : in out ManeuverWarning);
   overriding procedure Finalize (this : in out ManeuverWarning);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ManeuverWarning

   function get_Kind
   (
      this : in out ManeuverWarning
   )
   return WinRt.Windows.Services.Maps.ManeuverWarningKind;

   function get_Severity
   (
      this : in out ManeuverWarning
   )
   return WinRt.Windows.Services.Maps.ManeuverWarningSeverity;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapAddress

   overriding procedure Initialize (this : in out MapAddress);
   overriding procedure Finalize (this : in out MapAddress);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapAddress

   function get_BuildingName
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_BuildingFloor
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_BuildingRoom
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_BuildingWing
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_StreetNumber
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_Street
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_Neighborhood
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_District
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_Town
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_Region
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_RegionCode
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_Country
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_CountryCode
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_PostCode
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_Continent
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   function get_FormattedAddress
   (
      this : in out MapAddress
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapLocation

   overriding procedure Initialize (this : in out MapLocation);
   overriding procedure Finalize (this : in out MapLocation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapLocation

   function get_Point
   (
      this : in out MapLocation
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_DisplayName
   (
      this : in out MapLocation
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out MapLocation
   )
   return WinRt.WString;

   function get_Address
   (
      this : in out MapLocation
   )
   return WinRt.Windows.Services.Maps.MapAddress'Class;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MapLocationFinder is

      function FindLocationsAtAsync
      (
         queryPoint : Windows.Devices.Geolocation.Geopoint'Class;
         accuracy : Windows.Services.Maps.MapLocationDesiredAccuracy
      )
      return WinRt.Windows.Services.Maps.MapLocationFinderResult;

      function FindLocationsAtAsync
      (
         queryPoint : Windows.Devices.Geolocation.Geopoint'Class
      )
      return WinRt.Windows.Services.Maps.MapLocationFinderResult;

      function FindLocationsAsync
      (
         searchText : WinRt.WString;
         referencePoint : Windows.Devices.Geolocation.Geopoint'Class
      )
      return WinRt.Windows.Services.Maps.MapLocationFinderResult;

      function FindLocationsAsync
      (
         searchText : WinRt.WString;
         referencePoint : Windows.Devices.Geolocation.Geopoint'Class;
         maxCount : WinRt.UInt32
      )
      return WinRt.Windows.Services.Maps.MapLocationFinderResult;

   end MapLocationFinder;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapLocationFinderResult

   overriding procedure Initialize (this : in out MapLocationFinderResult);
   overriding procedure Finalize (this : in out MapLocationFinderResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapLocationFinderResult

   function get_Locations
   (
      this : in out MapLocationFinderResult
   )
   return IVectorView_IMapLocation.Kind;

   function get_Status
   (
      this : in out MapLocationFinderResult
   )
   return WinRt.Windows.Services.Maps.MapLocationFinderStatus;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MapManager is

      procedure ShowDownloadedMapsUI;

      procedure ShowMapsUpdateUI;

   end MapManager;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRoute

   overriding procedure Initialize (this : in out MapRoute);
   overriding procedure Finalize (this : in out MapRoute);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRoute

   function get_BoundingBox
   (
      this : in out MapRoute
   )
   return WinRt.Windows.Devices.Geolocation.GeoboundingBox'Class;

   function get_LengthInMeters
   (
      this : in out MapRoute
   )
   return WinRt.Double;

   function get_EstimatedDuration
   (
      this : in out MapRoute
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_Path
   (
      this : in out MapRoute
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   function get_Legs
   (
      this : in out MapRoute
   )
   return IVectorView_IMapRouteLeg.Kind;

   function get_IsTrafficBased
   (
      this : in out MapRoute
   )
   return WinRt.Boolean;

   function get_ViolatedRestrictions
   (
      this : in out MapRoute
   )
   return WinRt.Windows.Services.Maps.MapRouteRestrictions;

   function get_HasBlockedRoads
   (
      this : in out MapRoute
   )
   return WinRt.Boolean;

   function get_DurationWithoutTraffic
   (
      this : in out MapRoute
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_TrafficCongestion
   (
      this : in out MapRoute
   )
   return WinRt.Windows.Services.Maps.TrafficCongestion;

   function get_IsScenic
   (
      this : in out MapRoute
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRouteDrivingOptions

   overriding procedure Initialize (this : in out MapRouteDrivingOptions);
   overriding procedure Finalize (this : in out MapRouteDrivingOptions);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapRouteDrivingOptions

   function Constructor return MapRouteDrivingOptions;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRouteDrivingOptions

   function get_MaxAlternateRouteCount
   (
      this : in out MapRouteDrivingOptions
   )
   return WinRt.UInt32;

   procedure put_MaxAlternateRouteCount
   (
      this : in out MapRouteDrivingOptions;
      value : WinRt.UInt32
   );

   function get_InitialHeading
   (
      this : in out MapRouteDrivingOptions
   )
   return IReference_Double.Kind;

   procedure put_InitialHeading
   (
      this : in out MapRouteDrivingOptions;
      value : GenericObject
   );

   function get_RouteOptimization
   (
      this : in out MapRouteDrivingOptions
   )
   return WinRt.Windows.Services.Maps.MapRouteOptimization;

   procedure put_RouteOptimization
   (
      this : in out MapRouteDrivingOptions;
      value : Windows.Services.Maps.MapRouteOptimization
   );

   function get_RouteRestrictions
   (
      this : in out MapRouteDrivingOptions
   )
   return WinRt.Windows.Services.Maps.MapRouteRestrictions;

   procedure put_RouteRestrictions
   (
      this : in out MapRouteDrivingOptions;
      value : Windows.Services.Maps.MapRouteRestrictions
   );

   function get_DepartureTime
   (
      this : in out MapRouteDrivingOptions
   )
   return IReference_DateTime.Kind;

   procedure put_DepartureTime
   (
      this : in out MapRouteDrivingOptions;
      value : GenericObject
   );

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MapRouteFinder is

      function GetDrivingRouteAsync
      (
         startPoint : Windows.Devices.Geolocation.Geopoint'Class;
         endPoint : Windows.Devices.Geolocation.Geopoint'Class
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteAsync
      (
         startPoint : Windows.Devices.Geolocation.Geopoint'Class;
         endPoint : Windows.Devices.Geolocation.Geopoint'Class;
         optimization : Windows.Services.Maps.MapRouteOptimization
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteAsync
      (
         startPoint : Windows.Devices.Geolocation.Geopoint'Class;
         endPoint : Windows.Devices.Geolocation.Geopoint'Class;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteAsync
      (
         startPoint : Windows.Devices.Geolocation.Geopoint'Class;
         endPoint : Windows.Devices.Geolocation.Geopoint'Class;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions;
         headingInDegrees : WinRt.Double
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteFromWaypointsAsync
      (
         wayPoints : GenericObject
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteFromWaypointsAsync
      (
         wayPoints : GenericObject;
         optimization : Windows.Services.Maps.MapRouteOptimization
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteFromWaypointsAsync
      (
         wayPoints : GenericObject;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteFromWaypointsAsync
      (
         wayPoints : GenericObject;
         optimization : Windows.Services.Maps.MapRouteOptimization;
         restrictions : Windows.Services.Maps.MapRouteRestrictions;
         headingInDegrees : WinRt.Double
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetWalkingRouteAsync
      (
         startPoint : Windows.Devices.Geolocation.Geopoint'Class;
         endPoint : Windows.Devices.Geolocation.Geopoint'Class
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetWalkingRouteFromWaypointsAsync
      (
         wayPoints : GenericObject
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteFromEnhancedWaypointsAsync
      (
         waypoints : GenericObject
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteFromEnhancedWaypointsAsync
      (
         waypoints : GenericObject;
         options : Windows.Services.Maps.MapRouteDrivingOptions'Class
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

      function GetDrivingRouteAsync
      (
         startPoint : Windows.Devices.Geolocation.Geopoint'Class;
         endPoint : Windows.Devices.Geolocation.Geopoint'Class;
         options : Windows.Services.Maps.MapRouteDrivingOptions'Class
      )
      return WinRt.Windows.Services.Maps.MapRouteFinderResult;

   end MapRouteFinder;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRouteFinderResult

   overriding procedure Initialize (this : in out MapRouteFinderResult);
   overriding procedure Finalize (this : in out MapRouteFinderResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRouteFinderResult

   function get_Route
   (
      this : in out MapRouteFinderResult
   )
   return WinRt.Windows.Services.Maps.MapRoute'Class;

   function get_Status
   (
      this : in out MapRouteFinderResult
   )
   return WinRt.Windows.Services.Maps.MapRouteFinderStatus;

   function get_AlternateRoutes
   (
      this : in out MapRouteFinderResult
   )
   return IVectorView_IMapRoute.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRouteLeg

   overriding procedure Initialize (this : in out MapRouteLeg);
   overriding procedure Finalize (this : in out MapRouteLeg);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRouteLeg

   function get_BoundingBox
   (
      this : in out MapRouteLeg
   )
   return WinRt.Windows.Devices.Geolocation.GeoboundingBox'Class;

   function get_Path
   (
      this : in out MapRouteLeg
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   function get_LengthInMeters
   (
      this : in out MapRouteLeg
   )
   return WinRt.Double;

   function get_EstimatedDuration
   (
      this : in out MapRouteLeg
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_Maneuvers
   (
      this : in out MapRouteLeg
   )
   return IVectorView_IMapRouteManeuver.Kind;

   function get_DurationWithoutTraffic
   (
      this : in out MapRouteLeg
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_TrafficCongestion
   (
      this : in out MapRouteLeg
   )
   return WinRt.Windows.Services.Maps.TrafficCongestion;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRouteManeuver

   overriding procedure Initialize (this : in out MapRouteManeuver);
   overriding procedure Finalize (this : in out MapRouteManeuver);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRouteManeuver

   function get_StartingPoint
   (
      this : in out MapRouteManeuver
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_LengthInMeters
   (
      this : in out MapRouteManeuver
   )
   return WinRt.Double;

   function get_InstructionText
   (
      this : in out MapRouteManeuver
   )
   return WinRt.WString;

   function get_Kind
   (
      this : in out MapRouteManeuver
   )
   return WinRt.Windows.Services.Maps.MapRouteManeuverKind;

   function get_ExitNumber
   (
      this : in out MapRouteManeuver
   )
   return WinRt.WString;

   function get_ManeuverNotices
   (
      this : in out MapRouteManeuver
   )
   return WinRt.Windows.Services.Maps.MapManeuverNotices;

   function get_StartHeading
   (
      this : in out MapRouteManeuver
   )
   return WinRt.Double;

   function get_EndHeading
   (
      this : in out MapRouteManeuver
   )
   return WinRt.Double;

   function get_StreetName
   (
      this : in out MapRouteManeuver
   )
   return WinRt.WString;

   function get_Warnings
   (
      this : in out MapRouteManeuver
   )
   return IVectorView_IManeuverWarning.Kind;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MapService is

      procedure put_ServiceToken
      (
         value : WinRt.WString
      );

      function get_ServiceToken
      return WinRt.WString;

      function get_DataAttributions
      return WinRt.WString;

      procedure put_DataUsagePreference
      (
         value : Windows.Services.Maps.MapServiceDataUsagePreference
      );

      function get_DataUsagePreference
      return WinRt.Windows.Services.Maps.MapServiceDataUsagePreference;

      function get_WorldViewRegionCode
      return WinRt.WString;

   end MapService;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PlaceInfo

   overriding procedure Initialize (this : in out PlaceInfo);
   overriding procedure Finalize (this : in out PlaceInfo);

   -----------------------------------------------------------------------------
   -- Static Interfaces for PlaceInfo

   function Create
   (
      referencePoint : Windows.Devices.Geolocation.Geopoint'Class
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   function Create
   (
      referencePoint : Windows.Devices.Geolocation.Geopoint'Class;
      options : Windows.Services.Maps.PlaceInfoCreateOptions'Class
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   function CreateFromIdentifier
   (
      identifier : WinRt.WString
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   function CreateFromIdentifier
   (
      identifier : WinRt.WString;
      defaultPoint : Windows.Devices.Geolocation.Geopoint'Class;
      options : Windows.Services.Maps.PlaceInfoCreateOptions'Class
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   function CreateFromMapLocation
   (
      location : Windows.Services.Maps.MapLocation'Class
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   function get_IsShowSupported
   return WinRt.Boolean;

   function CreateFromAddress
   (
      displayAddress : WinRt.WString
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   function CreateFromAddress
   (
      displayAddress : WinRt.WString;
      displayName : WinRt.WString
   )
   return WinRt.Windows.Services.Maps.PlaceInfo;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PlaceInfo

   procedure Show
   (
      this : in out PlaceInfo;
      selection : Windows.Foundation.Rect
   );

   procedure Show
   (
      this : in out PlaceInfo;
      selection : Windows.Foundation.Rect;
      preferredPlacement : Windows.UI.Popups.Placement
   );

   function get_Identifier
   (
      this : in out PlaceInfo
   )
   return WinRt.WString;

   function get_DisplayName
   (
      this : in out PlaceInfo
   )
   return WinRt.WString;

   function get_DisplayAddress
   (
      this : in out PlaceInfo
   )
   return WinRt.WString;

   function get_Geoshape
   (
      this : in out PlaceInfo
   )
   return WinRt.Windows.Devices.Geolocation.IGeoshape;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PlaceInfoCreateOptions

   overriding procedure Initialize (this : in out PlaceInfoCreateOptions);
   overriding procedure Finalize (this : in out PlaceInfoCreateOptions);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PlaceInfoCreateOptions

   function Constructor return PlaceInfoCreateOptions;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PlaceInfoCreateOptions

   procedure put_DisplayName
   (
      this : in out PlaceInfoCreateOptions;
      value : WinRt.WString
   );

   function get_DisplayName
   (
      this : in out PlaceInfoCreateOptions
   )
   return WinRt.WString;

   procedure put_DisplayAddress
   (
      this : in out PlaceInfoCreateOptions;
      value : WinRt.WString
   );

   function get_DisplayAddress
   (
      this : in out PlaceInfoCreateOptions
   )
   return WinRt.WString;

end;
