--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.System.Update is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ISystemUpdateItem_Interface is interface and WinRt.IInspectable_Interface;
   type ISystemUpdateItem is access ISystemUpdateItem_Interface'Class;
   type ISystemUpdateItem_Ptr is access all ISystemUpdateItem;

   type ISystemUpdateLastErrorInfo_Interface is interface and WinRt.IInspectable_Interface;
   type ISystemUpdateLastErrorInfo is access ISystemUpdateLastErrorInfo_Interface'Class;
   type ISystemUpdateLastErrorInfo_Ptr is access all ISystemUpdateLastErrorInfo;

   type ISystemUpdateManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISystemUpdateManagerStatics is access ISystemUpdateManagerStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type SystemUpdateItem is new Ada.Finalization.Limited_Controlled with
      record
         m_ISystemUpdateItem : access Windows.System.Update.ISystemUpdateItem;
      end record;
   type SystemUpdateItem_Ptr is access all SystemUpdateItem;

   type SystemUpdateLastErrorInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_ISystemUpdateLastErrorInfo : access Windows.System.Update.ISystemUpdateLastErrorInfo;
      end record;
   type SystemUpdateLastErrorInfo_Ptr is access all SystemUpdateLastErrorInfo;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type SystemUpdateAttentionRequiredReason is (
      None_e,
      NetworkRequired_e,
      InsufficientDiskSpace_e,
      InsufficientBattery_e,
      UpdateBlocked_e
   );
   for SystemUpdateAttentionRequiredReason use (
      None_e => 0,
      NetworkRequired_e => 1,
      InsufficientDiskSpace_e => 2,
      InsufficientBattery_e => 3,
      UpdateBlocked_e => 4
   );
   type SystemUpdateAttentionRequiredReason_Ptr is access SystemUpdateAttentionRequiredReason;

   type SystemUpdateItemState is (
      NotStarted_e,
      Initializing_e,
      Preparing_e,
      Calculating_e,
      Downloading_e,
      Installing_e,
      Completed_e,
      RebootRequired_e,
      Error_e
   );
   for SystemUpdateItemState use (
      NotStarted_e => 0,
      Initializing_e => 1,
      Preparing_e => 2,
      Calculating_e => 3,
      Downloading_e => 4,
      Installing_e => 5,
      Completed_e => 6,
      RebootRequired_e => 7,
      Error_e => 8
   );
   type SystemUpdateItemState_Ptr is access SystemUpdateItemState;

   type SystemUpdateManagerState is (
      Idle_e,
      Detecting_e,
      ReadyToDownload_e,
      Downloading_e,
      ReadyToInstall_e,
      Installing_e,
      RebootRequired_e,
      ReadyToFinalize_e,
      Finalizing_e,
      Completed_e,
      AttentionRequired_e,
      Error_e
   );
   for SystemUpdateManagerState use (
      Idle_e => 0,
      Detecting_e => 1,
      ReadyToDownload_e => 2,
      Downloading_e => 3,
      ReadyToInstall_e => 4,
      Installing_e => 5,
      RebootRequired_e => 6,
      ReadyToFinalize_e => 7,
      Finalizing_e => 8,
      Completed_e => 9,
      AttentionRequired_e => 10,
      Error_e => 11
   );
   type SystemUpdateManagerState_Ptr is access SystemUpdateManagerState;

   type SystemUpdateStartInstallAction is (
      UpToReboot_e,
      AllowReboot_e
   );
   for SystemUpdateStartInstallAction use (
      UpToReboot_e => 0,
      AllowReboot_e => 1
   );
   type SystemUpdateStartInstallAction_Ptr is access SystemUpdateStartInstallAction;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ISystemUpdateItem is interface and WinRt.IInspectable;

      function get_State
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access Windows.System.Update.SystemUpdateItemState
      )
      return WinRt.Hresult is abstract;

      function get_Title
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Revision
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DownloadProgress
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_InstallProgress
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access ISystemUpdateItem_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_ISystemUpdateItem : aliased WinRt.IID := (2006401259, 22052, 20894, (168, 226, 9, 233, 23, 59, 63, 183 ));

   -----------------------------------------------------------------------------
   -- type ISystemUpdateLastErrorInfo is interface and WinRt.IInspectable;

      function get_State
      (
         this : access ISystemUpdateLastErrorInfo_Interface;
         RetVal : access Windows.System.Update.SystemUpdateManagerState
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access ISystemUpdateLastErrorInfo_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      function get_IsInteractive
      (
         this : access ISystemUpdateLastErrorInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ISystemUpdateLastErrorInfo : aliased WinRt.IID := (2129168375, 35396, 23406, (189, 7, 122, 236, 228, 17, 110, 169 ));

   -----------------------------------------------------------------------------
   -- type ISystemUpdateManagerStatics is interface and WinRt.IInspectable;

      function IsSupported
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_State
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.System.Update.SystemUpdateManagerState
      )
      return WinRt.Hresult is abstract;

      function add_StateChanged
      (
         this : access ISystemUpdateManagerStatics_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StateChanged
      (
         this : access ISystemUpdateManagerStatics_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_DownloadProgress
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_InstallProgress
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_UserActiveHoursStart
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_UserActiveHoursEnd
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_UserActiveHoursMax
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function TrySetUserActiveHours
      (
         this : access ISystemUpdateManagerStatics_Interface;
         start : Windows.Foundation.TimeSpan;
         end_x : Windows.Foundation.TimeSpan;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_LastUpdateCheckTime
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_LastUpdateInstallTime
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_LastErrorInfo
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.System.Update.ISystemUpdateLastErrorInfo
      )
      return WinRt.Hresult is abstract;

      function GetAutomaticRebootBlockIds
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function BlockAutomaticRebootAsync
      (
         this : access ISystemUpdateManagerStatics_Interface;
         lockId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function UnblockAutomaticRebootAsync
      (
         this : access ISystemUpdateManagerStatics_Interface;
         lockId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      function GetUpdateItems
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_AttentionRequiredReason
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access Windows.System.Update.SystemUpdateAttentionRequiredReason
      )
      return WinRt.Hresult is abstract;

      function SetFlightRing
      (
         this : access ISystemUpdateManagerStatics_Interface;
         flightRing : WinRt.HString;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetFlightRing
      (
         this : access ISystemUpdateManagerStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function StartInstall
      (
         this : access ISystemUpdateManagerStatics_Interface;
         action : Windows.System.Update.SystemUpdateStartInstallAction
      )
      return WinRt.Hresult is abstract;

      function RebootToCompleteInstall
      (
         this : access ISystemUpdateManagerStatics_Interface
      )
      return WinRt.Hresult is abstract;

      function StartCancelUpdates
      (
         this : access ISystemUpdateManagerStatics_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ISystemUpdateManagerStatics : aliased WinRt.IID := (3000237295, 10609, 20926, (180, 26, 139, 215, 3, 187, 112, 26 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SystemUpdateItem

   overriding procedure Initialize (this : in out SystemUpdateItem);
   overriding procedure Finalize (this : in out SystemUpdateItem);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SystemUpdateItem

   function get_State
   (
      this : in out SystemUpdateItem
   )
   return WinRt.Windows.System.Update.SystemUpdateItemState;

   function get_Title
   (
      this : in out SystemUpdateItem
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out SystemUpdateItem
   )
   return WinRt.WString;

   function get_Id
   (
      this : in out SystemUpdateItem
   )
   return WinRt.WString;

   function get_Revision
   (
      this : in out SystemUpdateItem
   )
   return WinRt.UInt32;

   function get_DownloadProgress
   (
      this : in out SystemUpdateItem
   )
   return WinRt.Double;

   function get_InstallProgress
   (
      this : in out SystemUpdateItem
   )
   return WinRt.Double;

   function get_ExtendedError
   (
      this : in out SystemUpdateItem
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SystemUpdateLastErrorInfo

   overriding procedure Initialize (this : in out SystemUpdateLastErrorInfo);
   overriding procedure Finalize (this : in out SystemUpdateLastErrorInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SystemUpdateLastErrorInfo

   function get_State
   (
      this : in out SystemUpdateLastErrorInfo
   )
   return WinRt.Windows.System.Update.SystemUpdateManagerState;

   function get_ExtendedError
   (
      this : in out SystemUpdateLastErrorInfo
   )
   return WinRt.Windows.Foundation.HResult;

   function get_IsInteractive
   (
      this : in out SystemUpdateLastErrorInfo
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package SystemUpdateManager is

      function IsSupported
      return WinRt.Boolean;

      function get_State
      return WinRt.Windows.System.Update.SystemUpdateManagerState;

      function add_StateChanged
      (
         handler : GenericObject
      )
      return WinRt.Windows.Foundation.EventRegistrationToken;

      procedure remove_StateChanged
      (
         token : Windows.Foundation.EventRegistrationToken
      );

      function get_DownloadProgress
      return WinRt.Double;

      function get_InstallProgress
      return WinRt.Double;

      function get_UserActiveHoursStart
      return WinRt.Windows.Foundation.TimeSpan;

      function get_UserActiveHoursEnd
      return WinRt.Windows.Foundation.TimeSpan;

      function get_UserActiveHoursMax
      return WinRt.Int32;

      function TrySetUserActiveHours
      (
         start : Windows.Foundation.TimeSpan;
         end_x : Windows.Foundation.TimeSpan
      )
      return WinRt.Boolean;

      function get_LastUpdateCheckTime
      return WinRt.Windows.Foundation.DateTime;

      function get_LastUpdateInstallTime
      return WinRt.Windows.Foundation.DateTime;

      function get_LastErrorInfo
      return WinRt.Windows.System.Update.SystemUpdateLastErrorInfo;

      function GetAutomaticRebootBlockIds
      return WinRt.GenericObject;

      function BlockAutomaticRebootAsync
      (
         lockId : WinRt.WString
      )
      return WinRt.Boolean;

      function UnblockAutomaticRebootAsync
      (
         lockId : WinRt.WString
      )
      return WinRt.Boolean;

      function get_ExtendedError
      return WinRt.Windows.Foundation.HResult;

      function GetUpdateItems
      return WinRt.GenericObject;

      function get_AttentionRequiredReason
      return WinRt.Windows.System.Update.SystemUpdateAttentionRequiredReason;

      function SetFlightRing
      (
         flightRing : WinRt.WString
      )
      return WinRt.Boolean;

      function GetFlightRing
      return WinRt.WString;

      procedure StartInstall
      (
         action : Windows.System.Update.SystemUpdateStartInstallAction
      );

      procedure RebootToCompleteInstall;

      procedure StartCancelUpdates;

   end SystemUpdateManager;

end;
