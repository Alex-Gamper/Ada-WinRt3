--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.ApplicationModel.Resources.Management is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IIndexedResourceCandidate_Interface is interface and WinRt.IInspectable_Interface;
   type IIndexedResourceCandidate is access all IIndexedResourceCandidate_Interface'Class;
   type IIndexedResourceCandidate_Ptr is access all IIndexedResourceCandidate;

   type IIndexedResourceQualifier_Interface is interface and WinRt.IInspectable_Interface;
   type IIndexedResourceQualifier is access all IIndexedResourceQualifier_Interface'Class;
   type IIndexedResourceQualifier_Ptr is access all IIndexedResourceQualifier;

   type IResourceIndexer_Interface is interface and WinRt.IInspectable_Interface;
   type IResourceIndexer is access all IResourceIndexer_Interface'Class;
   type IResourceIndexer_Ptr is access all IResourceIndexer;

   type IResourceIndexerFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IResourceIndexerFactory is access all IResourceIndexerFactory_Interface'Class;

   type IResourceIndexerFactory2_Interface is interface and WinRt.IInspectable_Interface;
   type IResourceIndexerFactory2 is access all IResourceIndexerFactory2_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type IndexedResourceCandidate is new Ada.Finalization.Limited_Controlled with
      record
         m_IIndexedResourceCandidate : access Windows.ApplicationModel.Resources.Management.IIndexedResourceCandidate;
      end record;
   type IndexedResourceCandidate_Ptr is access all IndexedResourceCandidate;

   type IndexedResourceQualifier is new Ada.Finalization.Limited_Controlled with
      record
         m_IIndexedResourceQualifier : access Windows.ApplicationModel.Resources.Management.IIndexedResourceQualifier;
      end record;
   type IndexedResourceQualifier_Ptr is access all IndexedResourceQualifier;

   type ResourceIndexer is new Ada.Finalization.Limited_Controlled with
      record
         m_IResourceIndexer : access Windows.ApplicationModel.Resources.Management.IResourceIndexer;
      end record;
   type ResourceIndexer_Ptr is access all ResourceIndexer;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type IndexedResourceType is (
      String_e,
      Path_e,
      EmbeddedData_e
   );
   for IndexedResourceType use (
      String_e => 0,
      Path_e => 1,
      EmbeddedData_e => 2
   );
   type IndexedResourceType_Ptr is access all IndexedResourceType;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type ResourceIndexerContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type ResourceIndexerContract_Ptr is access all ResourceIndexerContract;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IMapView_HString_HString is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.HString);
   IID_IMapView_HString_HString : aliased WinRt.IID := (1148180560, 46431, 21800, (159, 36, 147, 228, 11, 48, 62, 186 ));
   function QInterface_IMapView_HString_HString is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_HString.Kind, IID_IMapView_HString_HString'Access);

   package IVectorView_IIndexedResourceQualifier is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.ApplicationModel.Resources.Management.IIndexedResourceQualifier);
   IID_IVectorView_IIndexedResourceQualifier : aliased WinRt.IID := (1148180560, 46431, 21800, (159, 36, 147, 228, 11, 48, 62, 186 ));
   function QInterface_IVectorView_IIndexedResourceQualifier is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IIndexedResourceQualifier.Kind, IID_IVectorView_IIndexedResourceQualifier'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IIndexedResourceCandidate is interface and WinRt.IInspectable;

      function get_Type
      (
         this : access IIndexedResourceCandidate_Interface;
         RetVal : access Windows.ApplicationModel.Resources.Management.IndexedResourceType
      )
      return WinRt.Hresult is abstract;

      function get_Uri
      (
         this : access IIndexedResourceCandidate_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_Metadata
      (
         this : access IIndexedResourceCandidate_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Qualifiers
      (
         this : access IIndexedResourceCandidate_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ValueAsString
      (
         this : access IIndexedResourceCandidate_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetQualifierValue
      (
         this : access IIndexedResourceCandidate_Interface;
         qualifierName : WinRt.HString;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IIndexedResourceCandidate : aliased WinRt.IID := (241278707, 64236, 17428, (169, 215, 84, 172, 213, 149, 63, 41 ));

   -----------------------------------------------------------------------------
   -- type IIndexedResourceQualifier is interface and WinRt.IInspectable;

      function get_QualifierName
      (
         this : access IIndexedResourceQualifier_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_QualifierValue
      (
         this : access IIndexedResourceQualifier_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IIndexedResourceQualifier : aliased WinRt.IID := (3672357787, 54020, 18815, (161, 104, 163, 64, 4, 44, 138, 219 ));

   -----------------------------------------------------------------------------
   -- type IResourceIndexer is interface and WinRt.IInspectable;

      function IndexFilePath
      (
         this : access IResourceIndexer_Interface;
         filePath : Windows.Foundation.IUriRuntimeClass;
         RetVal : access Windows.ApplicationModel.Resources.Management.IIndexedResourceCandidate
      )
      return WinRt.Hresult is abstract;

      function IndexFileContentsAsync
      (
         this : access IResourceIndexer_Interface;
         file : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IResourceIndexer : aliased WinRt.IID := (760019365, 58159, 19122, (135, 72, 150, 53, 10, 1, 109, 163 ));

   -----------------------------------------------------------------------------
   -- type IResourceIndexerFactory is interface and WinRt.IInspectable;

      function CreateResourceIndexer
      (
         this : access IResourceIndexerFactory_Interface;
         projectRoot : Windows.Foundation.IUriRuntimeClass;
         RetVal : access Windows.ApplicationModel.Resources.Management.IResourceIndexer
      )
      return WinRt.Hresult is abstract;

      IID_IResourceIndexerFactory : aliased WinRt.IID := (3101572873, 12749, 19863, (189, 48, 141, 57, 247, 66, 188, 97 ));

   -----------------------------------------------------------------------------
   -- type IResourceIndexerFactory2 is interface and WinRt.IInspectable;

      function CreateResourceIndexerWithExtension
      (
         this : access IResourceIndexerFactory2_Interface;
         projectRoot : Windows.Foundation.IUriRuntimeClass;
         extensionDllPath : Windows.Foundation.IUriRuntimeClass;
         RetVal : access Windows.ApplicationModel.Resources.Management.IResourceIndexer
      )
      return WinRt.Hresult is abstract;

      IID_IResourceIndexerFactory2 : aliased WinRt.IID := (1614868877, 54757, 19296, (146, 1, 205, 39, 156, 188, 254, 217 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for IndexedResourceCandidate

   overriding procedure Initialize (this : in out IndexedResourceCandidate);
   overriding procedure Finalize (this : in out IndexedResourceCandidate);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for IndexedResourceCandidate

   function get_Type
   (
      this : in out IndexedResourceCandidate
   )
   return WinRt.Windows.ApplicationModel.Resources.Management.IndexedResourceType;

   function get_Uri
   (
      this : in out IndexedResourceCandidate
   )
   return WinRt.Windows.Foundation.Uri'Class;

   function get_Metadata
   (
      this : in out IndexedResourceCandidate
   )
   return IMapView_HString_HString.Kind;

   function get_Qualifiers
   (
      this : in out IndexedResourceCandidate
   )
   return IVectorView_IIndexedResourceQualifier.Kind;

   function get_ValueAsString
   (
      this : in out IndexedResourceCandidate
   )
   return WinRt.WString;

   function GetQualifierValue
   (
      this : in out IndexedResourceCandidate;
      qualifierName : WinRt.WString
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for IndexedResourceQualifier

   overriding procedure Initialize (this : in out IndexedResourceQualifier);
   overriding procedure Finalize (this : in out IndexedResourceQualifier);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for IndexedResourceQualifier

   function get_QualifierName
   (
      this : in out IndexedResourceQualifier
   )
   return WinRt.WString;

   function get_QualifierValue
   (
      this : in out IndexedResourceQualifier
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ResourceIndexer

   overriding procedure Initialize (this : in out ResourceIndexer);
   overriding procedure Finalize (this : in out ResourceIndexer);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ResourceIndexer

   function Constructor
   (
      projectRoot : Windows.Foundation.Uri'Class
   )
   return ResourceIndexer;

   function Constructor
   (
      projectRoot : Windows.Foundation.Uri'Class;
      extensionDllPath : Windows.Foundation.Uri'Class
   )
   return ResourceIndexer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ResourceIndexer

   function IndexFilePath
   (
      this : in out ResourceIndexer;
      filePath : Windows.Foundation.Uri'Class
   )
   return WinRt.Windows.ApplicationModel.Resources.Management.IndexedResourceCandidate'Class;

   function IndexFileContentsAsync
   (
      this : in out ResourceIndexer;
      file : Windows.Foundation.Uri'Class
   )
   return WinRt.GenericObject;

end;
