--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.ApplicationModel.Activation;
limited with WinRt.Windows.ApplicationModel.Core;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Storage;
limited with WinRt.Windows.Storage.Streams;
limited with WinRt.Windows.System;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.ApplicationModel is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IAppDisplayInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IAppDisplayInfo is access IAppDisplayInfo_Interface'Class;
   type IAppDisplayInfo_Ptr is access all IAppDisplayInfo;

   type IAppInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IAppInfo is access IAppInfo_Interface'Class;
   type IAppInfo_Ptr is access all IAppInfo;

   type IAppInfo2_Interface is interface and WinRt.IInspectable_Interface;
   type IAppInfo2 is access IAppInfo2_Interface'Class;

   type IAppInfoStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAppInfoStatics is access IAppInfoStatics_Interface'Class;

   type IAppInstallerInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IAppInstallerInfo is access IAppInstallerInfo_Interface'Class;
   type IAppInstallerInfo_Ptr is access all IAppInstallerInfo;

   type IAppInstance_Interface is interface and WinRt.IInspectable_Interface;
   type IAppInstance is access IAppInstance_Interface'Class;
   type IAppInstance_Ptr is access all IAppInstance;

   type IAppInstanceStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAppInstanceStatics is access IAppInstanceStatics_Interface'Class;

   type ICameraApplicationManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICameraApplicationManagerStatics is access ICameraApplicationManagerStatics_Interface'Class;

   type IDesignModeStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IDesignModeStatics is access IDesignModeStatics_Interface'Class;

   type IDesignModeStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IDesignModeStatics2 is access IDesignModeStatics2_Interface'Class;

   type IEnteredBackgroundEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IEnteredBackgroundEventArgs is access IEnteredBackgroundEventArgs_Interface'Class;
   type IEnteredBackgroundEventArgs_Ptr is access all IEnteredBackgroundEventArgs;

   type IFullTrustProcessLauncherStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IFullTrustProcessLauncherStatics is access IFullTrustProcessLauncherStatics_Interface'Class;

   type ILeavingBackgroundEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ILeavingBackgroundEventArgs is access ILeavingBackgroundEventArgs_Interface'Class;
   type ILeavingBackgroundEventArgs_Ptr is access all ILeavingBackgroundEventArgs;

   type ILimitedAccessFeatureRequestResult_Interface is interface and WinRt.IInspectable_Interface;
   type ILimitedAccessFeatureRequestResult is access ILimitedAccessFeatureRequestResult_Interface'Class;
   type ILimitedAccessFeatureRequestResult_Ptr is access all ILimitedAccessFeatureRequestResult;

   type ILimitedAccessFeaturesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILimitedAccessFeaturesStatics is access ILimitedAccessFeaturesStatics_Interface'Class;

   type IPackage_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage is access IPackage_Interface'Class;
   type IPackage_Ptr is access all IPackage;

   type IPackage2_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage2 is access IPackage2_Interface'Class;

   type IPackage3_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage3 is access IPackage3_Interface'Class;

   type IPackage4_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage4 is access IPackage4_Interface'Class;

   type IPackage5_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage5 is access IPackage5_Interface'Class;

   type IPackage6_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage6 is access IPackage6_Interface'Class;

   type IPackage7_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage7 is access IPackage7_Interface'Class;

   type IPackage8_Interface is interface and WinRt.IInspectable_Interface;
   type IPackage8 is access IPackage8_Interface'Class;

   type IPackageCatalog_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalog is access IPackageCatalog_Interface'Class;
   type IPackageCatalog_Ptr is access all IPackageCatalog;

   type IPackageCatalog2_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalog2 is access IPackageCatalog2_Interface'Class;

   type IPackageCatalog3_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalog3 is access IPackageCatalog3_Interface'Class;

   type IPackageCatalog4_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalog4 is access IPackageCatalog4_Interface'Class;

   type IPackageCatalogAddOptionalPackageResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalogAddOptionalPackageResult is access IPackageCatalogAddOptionalPackageResult_Interface'Class;
   type IPackageCatalogAddOptionalPackageResult_Ptr is access all IPackageCatalogAddOptionalPackageResult;

   type IPackageCatalogAddResourcePackageResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalogAddResourcePackageResult is access IPackageCatalogAddResourcePackageResult_Interface'Class;
   type IPackageCatalogAddResourcePackageResult_Ptr is access all IPackageCatalogAddResourcePackageResult;

   type IPackageCatalogRemoveOptionalPackagesResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalogRemoveOptionalPackagesResult is access IPackageCatalogRemoveOptionalPackagesResult_Interface'Class;
   type IPackageCatalogRemoveOptionalPackagesResult_Ptr is access all IPackageCatalogRemoveOptionalPackagesResult;

   type IPackageCatalogRemoveResourcePackagesResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalogRemoveResourcePackagesResult is access IPackageCatalogRemoveResourcePackagesResult_Interface'Class;
   type IPackageCatalogRemoveResourcePackagesResult_Ptr is access all IPackageCatalogRemoveResourcePackagesResult;

   type IPackageCatalogStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageCatalogStatics is access IPackageCatalogStatics_Interface'Class;

   type IPackageContentGroup_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageContentGroup is access IPackageContentGroup_Interface'Class;
   type IPackageContentGroup_Ptr is access all IPackageContentGroup;

   type IPackageContentGroupStagingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageContentGroupStagingEventArgs is access IPackageContentGroupStagingEventArgs_Interface'Class;
   type IPackageContentGroupStagingEventArgs_Ptr is access all IPackageContentGroupStagingEventArgs;

   type IPackageContentGroupStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageContentGroupStatics is access IPackageContentGroupStatics_Interface'Class;

   type IPackageId_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageId is access IPackageId_Interface'Class;
   type IPackageId_Ptr is access all IPackageId;

   type IPackageIdWithMetadata_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageIdWithMetadata is access IPackageIdWithMetadata_Interface'Class;

   type IPackageInstallingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageInstallingEventArgs is access IPackageInstallingEventArgs_Interface'Class;
   type IPackageInstallingEventArgs_Ptr is access all IPackageInstallingEventArgs;

   type IPackageStagingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageStagingEventArgs is access IPackageStagingEventArgs_Interface'Class;
   type IPackageStagingEventArgs_Ptr is access all IPackageStagingEventArgs;

   type IPackageStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageStatics is access IPackageStatics_Interface'Class;

   type IPackageStatus_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageStatus is access IPackageStatus_Interface'Class;
   type IPackageStatus_Ptr is access all IPackageStatus;

   type IPackageStatus2_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageStatus2 is access IPackageStatus2_Interface'Class;

   type IPackageStatusChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageStatusChangedEventArgs is access IPackageStatusChangedEventArgs_Interface'Class;
   type IPackageStatusChangedEventArgs_Ptr is access all IPackageStatusChangedEventArgs;

   type IPackageUninstallingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageUninstallingEventArgs is access IPackageUninstallingEventArgs_Interface'Class;
   type IPackageUninstallingEventArgs_Ptr is access all IPackageUninstallingEventArgs;

   type IPackageUpdateAvailabilityResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageUpdateAvailabilityResult is access IPackageUpdateAvailabilityResult_Interface'Class;
   type IPackageUpdateAvailabilityResult_Ptr is access all IPackageUpdateAvailabilityResult;

   type IPackageUpdatingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageUpdatingEventArgs is access IPackageUpdatingEventArgs_Interface'Class;
   type IPackageUpdatingEventArgs_Ptr is access all IPackageUpdatingEventArgs;

   type IPackageWithMetadata_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageWithMetadata is access IPackageWithMetadata_Interface'Class;

   type IStartupTask_Interface is interface and WinRt.IInspectable_Interface;
   type IStartupTask is access IStartupTask_Interface'Class;
   type IStartupTask_Ptr is access all IStartupTask;

   type IStartupTaskStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IStartupTaskStatics is access IStartupTaskStatics_Interface'Class;

   type ISuspendingDeferral_Interface is interface and WinRt.IInspectable_Interface;
   type ISuspendingDeferral is access ISuspendingDeferral_Interface'Class;
   type ISuspendingDeferral_Ptr is access all ISuspendingDeferral;

   type ISuspendingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ISuspendingEventArgs is access ISuspendingEventArgs_Interface'Class;
   type ISuspendingEventArgs_Ptr is access all ISuspendingEventArgs;

   type ISuspendingOperation_Interface is interface and WinRt.IInspectable_Interface;
   type ISuspendingOperation is access ISuspendingOperation_Interface'Class;
   type ISuspendingOperation_Ptr is access all ISuspendingOperation;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type AppDisplayInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IAppDisplayInfo : access Windows.ApplicationModel.IAppDisplayInfo;
      end record;
   type AppDisplayInfo_Ptr is access all AppDisplayInfo;

   type AppInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IAppInfo : access Windows.ApplicationModel.IAppInfo;
      end record;
   type AppInfo_Ptr is access all AppInfo;

   type AppInstallerInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IAppInstallerInfo : access Windows.ApplicationModel.IAppInstallerInfo;
      end record;
   type AppInstallerInfo_Ptr is access all AppInstallerInfo;

   type AppInstance is new Ada.Finalization.Limited_Controlled with
      record
         m_IAppInstance : access Windows.ApplicationModel.IAppInstance;
      end record;
   type AppInstance_Ptr is access all AppInstance;

   type EnteredBackgroundEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IEnteredBackgroundEventArgs : access Windows.ApplicationModel.IEnteredBackgroundEventArgs;
      end record;
   type EnteredBackgroundEventArgs_Ptr is access all EnteredBackgroundEventArgs;

   type LeavingBackgroundEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ILeavingBackgroundEventArgs : access Windows.ApplicationModel.ILeavingBackgroundEventArgs;
      end record;
   type LeavingBackgroundEventArgs_Ptr is access all LeavingBackgroundEventArgs;

   type LimitedAccessFeatureRequestResult is new Ada.Finalization.Limited_Controlled with
      record
         m_ILimitedAccessFeatureRequestResult : access Windows.ApplicationModel.ILimitedAccessFeatureRequestResult;
      end record;
   type LimitedAccessFeatureRequestResult_Ptr is access all LimitedAccessFeatureRequestResult;

   type Package_x is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackage : access Windows.ApplicationModel.IPackage;
      end record;
   type Package_x_Ptr is access all Package_x;

   type PackageCatalog is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageCatalog : access Windows.ApplicationModel.IPackageCatalog;
      end record;
   type PackageCatalog_Ptr is access all PackageCatalog;

   type PackageCatalogAddOptionalPackageResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageCatalogAddOptionalPackageResult : access Windows.ApplicationModel.IPackageCatalogAddOptionalPackageResult;
      end record;
   type PackageCatalogAddOptionalPackageResult_Ptr is access all PackageCatalogAddOptionalPackageResult;

   type PackageCatalogAddResourcePackageResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageCatalogAddResourcePackageResult : access Windows.ApplicationModel.IPackageCatalogAddResourcePackageResult;
      end record;
   type PackageCatalogAddResourcePackageResult_Ptr is access all PackageCatalogAddResourcePackageResult;

   type PackageCatalogRemoveOptionalPackagesResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageCatalogRemoveOptionalPackagesResult : access Windows.ApplicationModel.IPackageCatalogRemoveOptionalPackagesResult;
      end record;
   type PackageCatalogRemoveOptionalPackagesResult_Ptr is access all PackageCatalogRemoveOptionalPackagesResult;

   type PackageCatalogRemoveResourcePackagesResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageCatalogRemoveResourcePackagesResult : access Windows.ApplicationModel.IPackageCatalogRemoveResourcePackagesResult;
      end record;
   type PackageCatalogRemoveResourcePackagesResult_Ptr is access all PackageCatalogRemoveResourcePackagesResult;

   type PackageContentGroup is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageContentGroup : access Windows.ApplicationModel.IPackageContentGroup;
      end record;
   type PackageContentGroup_Ptr is access all PackageContentGroup;

   type PackageContentGroupStagingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageContentGroupStagingEventArgs : access Windows.ApplicationModel.IPackageContentGroupStagingEventArgs;
      end record;
   type PackageContentGroupStagingEventArgs_Ptr is access all PackageContentGroupStagingEventArgs;

   type PackageId is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageId : access Windows.ApplicationModel.IPackageId;
      end record;
   type PackageId_Ptr is access all PackageId;

   type PackageInstallingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageInstallingEventArgs : access Windows.ApplicationModel.IPackageInstallingEventArgs;
      end record;
   type PackageInstallingEventArgs_Ptr is access all PackageInstallingEventArgs;

   type PackageStagingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageStagingEventArgs : access Windows.ApplicationModel.IPackageStagingEventArgs;
      end record;
   type PackageStagingEventArgs_Ptr is access all PackageStagingEventArgs;

   type PackageStatus is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageStatus : access Windows.ApplicationModel.IPackageStatus;
      end record;
   type PackageStatus_Ptr is access all PackageStatus;

   type PackageStatusChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageStatusChangedEventArgs : access Windows.ApplicationModel.IPackageStatusChangedEventArgs;
      end record;
   type PackageStatusChangedEventArgs_Ptr is access all PackageStatusChangedEventArgs;

   type PackageUninstallingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageUninstallingEventArgs : access Windows.ApplicationModel.IPackageUninstallingEventArgs;
      end record;
   type PackageUninstallingEventArgs_Ptr is access all PackageUninstallingEventArgs;

   type PackageUpdateAvailabilityResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageUpdateAvailabilityResult : access Windows.ApplicationModel.IPackageUpdateAvailabilityResult;
      end record;
   type PackageUpdateAvailabilityResult_Ptr is access all PackageUpdateAvailabilityResult;

   type PackageUpdatingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageUpdatingEventArgs : access Windows.ApplicationModel.IPackageUpdatingEventArgs;
      end record;
   type PackageUpdatingEventArgs_Ptr is access all PackageUpdatingEventArgs;

   type StartupTask is new Ada.Finalization.Limited_Controlled with
      record
         m_IStartupTask : access Windows.ApplicationModel.IStartupTask;
      end record;
   type StartupTask_Ptr is access all StartupTask;

   type SuspendingDeferral is new Ada.Finalization.Limited_Controlled with
      record
         m_ISuspendingDeferral : access Windows.ApplicationModel.ISuspendingDeferral;
      end record;
   type SuspendingDeferral_Ptr is access all SuspendingDeferral;

   type SuspendingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ISuspendingEventArgs : access Windows.ApplicationModel.ISuspendingEventArgs;
      end record;
   type SuspendingEventArgs_Ptr is access all SuspendingEventArgs;

   type SuspendingOperation is new Ada.Finalization.Limited_Controlled with
      record
         m_ISuspendingOperation : access Windows.ApplicationModel.ISuspendingOperation;
      end record;
   type SuspendingOperation_Ptr is access all SuspendingOperation;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type AddResourcePackageOptions is (
      None_e,
      ForceTargetAppShutdown_e,
      ApplyUpdateIfAvailable_e
   );
   for AddResourcePackageOptions use (
      None_e => 0,
      ForceTargetAppShutdown_e => 1,
      ApplyUpdateIfAvailable_e => 2
   );
   type AddResourcePackageOptions_Ptr is access AddResourcePackageOptions;

   type LimitedAccessFeatureStatus is (
      Unavailable_e,
      Available_e,
      AvailableWithoutToken_e,
      Unknown_e
   );
   for LimitedAccessFeatureStatus use (
      Unavailable_e => 0,
      Available_e => 1,
      AvailableWithoutToken_e => 2,
      Unknown_e => 3
   );
   type LimitedAccessFeatureStatus_Ptr is access LimitedAccessFeatureStatus;

   type PackageContentGroupState is (
      NotStaged_e,
      Queued_e,
      Staging_e,
      Staged_e
   );
   for PackageContentGroupState use (
      NotStaged_e => 0,
      Queued_e => 1,
      Staging_e => 2,
      Staged_e => 3
   );
   type PackageContentGroupState_Ptr is access PackageContentGroupState;

   type PackageSignatureKind is (
      None_e,
      Developer_e,
      Enterprise_e,
      Store_e,
      System_e
   );
   for PackageSignatureKind use (
      None_e => 0,
      Developer_e => 1,
      Enterprise_e => 2,
      Store_e => 3,
      System_e => 4
   );
   type PackageSignatureKind_Ptr is access PackageSignatureKind;

   type PackageUpdateAvailability is (
      Unknown_e,
      NoUpdates_e,
      Available_e,
      Required_e,
      Error_e
   );
   for PackageUpdateAvailability use (
      Unknown_e => 0,
      NoUpdates_e => 1,
      Available_e => 2,
      Required_e => 3,
      Error_e => 4
   );
   type PackageUpdateAvailability_Ptr is access PackageUpdateAvailability;

   type StartupTaskState is (
      Disabled_e,
      DisabledByUser_e,
      Enabled_e,
      DisabledByPolicy_e,
      EnabledByPolicy_e
   );
   for StartupTaskState use (
      Disabled_e => 0,
      DisabledByUser_e => 1,
      Enabled_e => 2,
      DisabledByPolicy_e => 3,
      EnabledByPolicy_e => 4
   );
   type StartupTaskState_Ptr is access StartupTaskState;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type FullTrustAppContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type FullTrustAppContract_Ptr is access FullTrustAppContract;

   type PackageInstallProgress is record
      PercentComplete : WinRt.UInt32;
   end record with Convention => C_Pass_By_Copy;
   type PackageInstallProgress_Ptr is access PackageInstallProgress;

   type PackageVersion is record
      Major : WinRt.UInt16;
      Minor : WinRt.UInt16;
      Build : WinRt.UInt16;
      Revision : WinRt.UInt16;
   end record with Convention => C_Pass_By_Copy;
   type PackageVersion_Ptr is access PackageVersion;

   type StartupTaskContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type StartupTaskContract_Ptr is access StartupTaskContract;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IReference_DateTime is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.DateTime);
   IID_IReference_DateTime : aliased WinRt.IID := (427744076, 1891, 21939, (175, 100, 205, 236, 214, 145, 74, 118 ));
   function QInterface_IReference_DateTime is new Generic_QueryInterface (GenericObject_Interface, IReference_DateTime.Kind, IID_IReference_DateTime'Access);

   package IVectorView_IPackage is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.ApplicationModel.IPackage);
   IID_IVectorView_IPackage : aliased WinRt.IID := (2459893342, 26304, 23845, (150, 122, 200, 221, 165, 127, 66, 241 ));
   function QInterface_IVectorView_IPackage is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IPackage.Kind, IID_IVectorView_IPackage'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IAppDisplayInfo is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IAppDisplayInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IAppDisplayInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetLogo
      (
         this : access IAppDisplayInfo_Interface;
         size : Windows.Foundation.Size;
         RetVal : access Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      IID_IAppDisplayInfo : aliased WinRt.IID := (451612931, 58580, 16810, (164, 246, 196, 162, 118, 231, 158, 172 ));

   -----------------------------------------------------------------------------
   -- type IAppInfo is interface and WinRt.IInspectable;

      function get_Id
      (
         this : access IAppInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AppUserModelId
      (
         this : access IAppInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DisplayInfo
      (
         this : access IAppInfo_Interface;
         RetVal : access Windows.ApplicationModel.IAppDisplayInfo
      )
      return WinRt.Hresult is abstract;

      function get_PackageFamilyName
      (
         this : access IAppInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IAppInfo : aliased WinRt.IID := (3481229747, 27145, 19944, (166, 192, 87, 146, 213, 104, 128, 209 ));

   -----------------------------------------------------------------------------
   -- type IAppInfo2 is interface and WinRt.IInspectable;

      function get_Package
      (
         this : access IAppInfo2_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      IID_IAppInfo2 : aliased WinRt.IID := (3192594266, 8344, 17179, (189, 37, 179, 8, 120, 116, 141, 71 ));

   -----------------------------------------------------------------------------
   -- type IAppInfoStatics is interface and WinRt.IInspectable;

      function get_Current
      (
         this : access IAppInfoStatics_Interface;
         RetVal : access Windows.ApplicationModel.IAppInfo
      )
      return WinRt.Hresult is abstract;

      function GetFromAppUserModelId
      (
         this : access IAppInfoStatics_Interface;
         appUserModelId : WinRt.HString;
         RetVal : access Windows.ApplicationModel.IAppInfo
      )
      return WinRt.Hresult is abstract;

      function GetFromAppUserModelIdForUser
      (
         this : access IAppInfoStatics_Interface;
         user : Windows.System.IUser;
         appUserModelId : WinRt.HString;
         RetVal : access Windows.ApplicationModel.IAppInfo
      )
      return WinRt.Hresult is abstract;

      IID_IAppInfoStatics : aliased WinRt.IID := (3474946090, 58507, 20236, (155, 11, 121, 195, 248, 149, 125, 215 ));

   -----------------------------------------------------------------------------
   -- type IAppInstallerInfo is interface and WinRt.IInspectable;

      function get_Uri
      (
         this : access IAppInstallerInfo_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      IID_IAppInstallerInfo : aliased WinRt.IID := (699083456, 54518, 17059, (173, 205, 214, 88, 60, 101, 149, 8 ));

   -----------------------------------------------------------------------------
   -- type IAppInstance is interface and WinRt.IInspectable;

      function get_Key
      (
         this : access IAppInstance_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsCurrentInstance
      (
         this : access IAppInstance_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function RedirectActivationTo
      (
         this : access IAppInstance_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IAppInstance : aliased WinRt.IID := (1734290247, 62047, 17714, (159, 214, 54, 51, 224, 99, 77, 1 ));

   -----------------------------------------------------------------------------
   -- type IAppInstanceStatics is interface and WinRt.IInspectable;

      function get_RecommendedInstance
      (
         this : access IAppInstanceStatics_Interface;
         RetVal : access Windows.ApplicationModel.IAppInstance
      )
      return WinRt.Hresult is abstract;

      function GetActivatedEventArgs
      (
         this : access IAppInstanceStatics_Interface;
         RetVal : access Windows.ApplicationModel.Activation.IActivatedEventArgs
      )
      return WinRt.Hresult is abstract;

      function FindOrRegisterInstanceForKey
      (
         this : access IAppInstanceStatics_Interface;
         key : WinRt.HString;
         RetVal : access Windows.ApplicationModel.IAppInstance
      )
      return WinRt.Hresult is abstract;

      function Unregister
      (
         this : access IAppInstanceStatics_Interface
      )
      return WinRt.Hresult is abstract;

      function GetInstances
      (
         this : access IAppInstanceStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IAppInstanceStatics : aliased WinRt.IID := (2635196287, 40614, 18351, (166, 236, 70, 120, 76, 91, 162, 84 ));

   -----------------------------------------------------------------------------
   -- type ICameraApplicationManagerStatics is interface and WinRt.IInspectable;

      function ShowInstalledApplicationsUI
      (
         this : access ICameraApplicationManagerStatics_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ICameraApplicationManagerStatics : aliased WinRt.IID := (2509888974, 39891, 17244, (128, 84, 193, 173, 213, 0, 40, 254 ));

   -----------------------------------------------------------------------------
   -- type IDesignModeStatics is interface and WinRt.IInspectable;

      function get_DesignModeEnabled
      (
         this : access IDesignModeStatics_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IDesignModeStatics : aliased WinRt.IID := (741905356, 63514, 20090, (184, 87, 118, 168, 8, 135, 225, 133 ));

   -----------------------------------------------------------------------------
   -- type IDesignModeStatics2 is interface and WinRt.IInspectable;

      function get_DesignMode2Enabled
      (
         this : access IDesignModeStatics2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IDesignModeStatics2 : aliased WinRt.IID := (2161082679, 45156, 18520, (190, 200, 62, 186, 34, 53, 117, 53 ));

   -----------------------------------------------------------------------------
   -- type IEnteredBackgroundEventArgs is interface and WinRt.IInspectable;

      function GetDeferral
      (
         this : access IEnteredBackgroundEventArgs_Interface;
         RetVal : access Windows.Foundation.IDeferral
      )
      return WinRt.Hresult is abstract;

      IID_IEnteredBackgroundEventArgs : aliased WinRt.IID := (4146257090, 38951, 16445, (170, 237, 236, 202, 154, 193, 115, 152 ));

   -----------------------------------------------------------------------------
   -- type IFullTrustProcessLauncherStatics is interface and WinRt.IInspectable;

      function LaunchFullTrustProcessForCurrentAppAsync
      (
         this : access IFullTrustProcessLauncherStatics_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function LaunchFullTrustProcessForCurrentAppAsync
      (
         this : access IFullTrustProcessLauncherStatics_Interface;
         parameterGroupId : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function LaunchFullTrustProcessForAppAsync
      (
         this : access IFullTrustProcessLauncherStatics_Interface;
         fullTrustPackageRelativeAppId : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function LaunchFullTrustProcessForAppAsync
      (
         this : access IFullTrustProcessLauncherStatics_Interface;
         fullTrustPackageRelativeAppId : WinRt.HString;
         parameterGroupId : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IFullTrustProcessLauncherStatics : aliased WinRt.IID := (3615785855, 4352, 15467, (164, 85, 246, 38, 44, 195, 49, 182 ));

   -----------------------------------------------------------------------------
   -- type ILeavingBackgroundEventArgs is interface and WinRt.IInspectable;

      function GetDeferral
      (
         this : access ILeavingBackgroundEventArgs_Interface;
         RetVal : access Windows.Foundation.IDeferral
      )
      return WinRt.Hresult is abstract;

      IID_ILeavingBackgroundEventArgs : aliased WinRt.IID := (969338010, 44654, 18169, (160, 122, 207, 194, 63, 136, 115, 62 ));

   -----------------------------------------------------------------------------
   -- type ILimitedAccessFeatureRequestResult is interface and WinRt.IInspectable;

      function get_FeatureId
      (
         this : access ILimitedAccessFeatureRequestResult_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access ILimitedAccessFeatureRequestResult_Interface;
         RetVal : access Windows.ApplicationModel.LimitedAccessFeatureStatus
      )
      return WinRt.Hresult is abstract;

      function get_EstimatedRemovalDate
      (
         this : access ILimitedAccessFeatureRequestResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILimitedAccessFeatureRequestResult : aliased WinRt.IID := (3562100390, 7716, 24029, (171, 180, 97, 136, 171, 164, 213, 191 ));

   -----------------------------------------------------------------------------
   -- type ILimitedAccessFeaturesStatics is interface and WinRt.IInspectable;

      function TryUnlockFeature
      (
         this : access ILimitedAccessFeaturesStatics_Interface;
         featureId : WinRt.HString;
         token : WinRt.HString;
         attestation : WinRt.HString;
         RetVal : access Windows.ApplicationModel.ILimitedAccessFeatureRequestResult
      )
      return WinRt.Hresult is abstract;

      IID_ILimitedAccessFeaturesStatics : aliased WinRt.IID := (2347111124, 12331, 24511, (166, 50, 26, 153, 228, 62, 137, 37 ));

   -----------------------------------------------------------------------------
   -- type IPackage is interface and WinRt.IInspectable;

      function get_Id
      (
         this : access IPackage_Interface;
         RetVal : access Windows.ApplicationModel.IPackageId
      )
      return WinRt.Hresult is abstract;

      function get_InstalledLocation
      (
         this : access IPackage_Interface;
         RetVal : access Windows.Storage.IStorageFolder
      )
      return WinRt.Hresult is abstract;

      function get_IsFramework
      (
         this : access IPackage_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Dependencies
      (
         this : access IPackage_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackage : aliased WinRt.IID := (373061935, 48501, 16700, (191, 35, 177, 254, 123, 149, 216, 37 ));

   -----------------------------------------------------------------------------
   -- type IPackage2 is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IPackage2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PublisherDisplayName
      (
         this : access IPackage2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IPackage2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Logo
      (
         this : access IPackage2_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_IsResourcePackage
      (
         this : access IPackage2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsBundle
      (
         this : access IPackage2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDevelopmentMode
      (
         this : access IPackage2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPackage2 : aliased WinRt.IID := (2791387062, 30344, 19150, (149, 251, 53, 149, 56, 231, 170, 1 ));

   -----------------------------------------------------------------------------
   -- type IPackage3 is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IPackage3_Interface;
         RetVal : access Windows.ApplicationModel.IPackageStatus
      )
      return WinRt.Hresult is abstract;

      function get_InstalledDate
      (
         this : access IPackage3_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function GetAppListEntriesAsync
      (
         this : access IPackage3_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackage3 : aliased WinRt.IID := (1601407841, 63594, 18711, (147, 209, 241, 238, 157, 59, 53, 217 ));

   -----------------------------------------------------------------------------
   -- type IPackage4 is interface and WinRt.IInspectable;

      function get_SignatureKind
      (
         this : access IPackage4_Interface;
         RetVal : access Windows.ApplicationModel.PackageSignatureKind
      )
      return WinRt.Hresult is abstract;

      function get_IsOptional
      (
         this : access IPackage4_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function VerifyContentIntegrityAsync
      (
         this : access IPackage4_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackage4 : aliased WinRt.IID := (1705955758, 47451, 17676, (136, 43, 98, 85, 24, 127, 57, 126 ));

   -----------------------------------------------------------------------------
   -- type IPackage5 is interface and WinRt.IInspectable;

      function GetContentGroupsAsync
      (
         this : access IPackage5_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetContentGroupAsync
      (
         this : access IPackage5_Interface;
         name : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StageContentGroupsAsync
      (
         this : access IPackage5_Interface;
         names : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StageContentGroupsAsync
      (
         this : access IPackage5_Interface;
         names : GenericObject;
         moveToHeadOfQueue : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SetInUseAsync
      (
         this : access IPackage5_Interface;
         inUse : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackage5 : aliased WinRt.IID := (243543508, 55724, 17901, (154, 30, 116, 206, 5, 107, 38, 53 ));

   -----------------------------------------------------------------------------
   -- type IPackage6 is interface and WinRt.IInspectable;

      function GetAppInstallerInfo
      (
         this : access IPackage6_Interface;
         RetVal : access Windows.ApplicationModel.IAppInstallerInfo
      )
      return WinRt.Hresult is abstract;

      function CheckUpdateAvailabilityAsync
      (
         this : access IPackage6_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackage6 : aliased WinRt.IID := (2333792578, 4823, 18260, (174, 78, 99, 140, 188, 14, 58, 46 ));

   -----------------------------------------------------------------------------
   -- type IPackage7 is interface and WinRt.IInspectable;

      function get_MutableLocation
      (
         this : access IPackage7_Interface;
         RetVal : access Windows.Storage.IStorageFolder
      )
      return WinRt.Hresult is abstract;

      function get_EffectiveLocation
      (
         this : access IPackage7_Interface;
         RetVal : access Windows.Storage.IStorageFolder
      )
      return WinRt.Hresult is abstract;

      IID_IPackage7 : aliased WinRt.IID := (2264894769, 41700, 17888, (151, 50, 40, 58, 109, 136, 253, 225 ));

   -----------------------------------------------------------------------------
   -- type IPackage8 is interface and WinRt.IInspectable;

      function get_EffectiveExternalLocation
      (
         this : access IPackage8_Interface;
         RetVal : access Windows.Storage.IStorageFolder
      )
      return WinRt.Hresult is abstract;

      function get_MachineExternalLocation
      (
         this : access IPackage8_Interface;
         RetVal : access Windows.Storage.IStorageFolder
      )
      return WinRt.Hresult is abstract;

      function get_UserExternalLocation
      (
         this : access IPackage8_Interface;
         RetVal : access Windows.Storage.IStorageFolder
      )
      return WinRt.Hresult is abstract;

      function get_InstalledPath
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MutablePath
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_EffectivePath
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_EffectiveExternalPath
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MachineExternalPath
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UserExternalPath
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetLogoAsRandomAccessStreamReference
      (
         this : access IPackage8_Interface;
         size : Windows.Foundation.Size;
         RetVal : access Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      function GetAppListEntries
      (
         this : access IPackage8_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_IsStub
      (
         this : access IPackage8_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPackage8 : aliased WinRt.IID := (743985019, 52778, 19430, (160, 147, 119, 207, 187, 42, 126, 161 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalog is interface and WinRt.IInspectable;

      function add_PackageStaging
      (
         this : access IPackageCatalog_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PackageStaging
      (
         this : access IPackageCatalog_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_PackageInstalling
      (
         this : access IPackageCatalog_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PackageInstalling
      (
         this : access IPackageCatalog_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_PackageUpdating
      (
         this : access IPackageCatalog_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PackageUpdating
      (
         this : access IPackageCatalog_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_PackageUninstalling
      (
         this : access IPackageCatalog_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PackageUninstalling
      (
         this : access IPackageCatalog_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_PackageStatusChanged
      (
         this : access IPackageCatalog_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PackageStatusChanged
      (
         this : access IPackageCatalog_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalog : aliased WinRt.IID := (587872081, 40419, 17477, (190, 116, 145, 251, 50, 90, 190, 254 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalog2 is interface and WinRt.IInspectable;

      function add_PackageContentGroupStaging
      (
         this : access IPackageCatalog2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PackageContentGroupStaging
      (
         this : access IPackageCatalog2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function AddOptionalPackageAsync
      (
         this : access IPackageCatalog2_Interface;
         optionalPackageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalog2 : aliased WinRt.IID := (2527464502, 36855, 17220, (182, 191, 238, 100, 194, 32, 126, 210 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalog3 is interface and WinRt.IInspectable;

      function RemoveOptionalPackagesAsync
      (
         this : access IPackageCatalog3_Interface;
         optionalPackageFamilyNames : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalog3 : aliased WinRt.IID := (2531089544, 34871, 17401, (144, 21, 3, 52, 52, 186, 20, 243 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalog4 is interface and WinRt.IInspectable;

      function AddResourcePackageAsync
      (
         this : access IPackageCatalog4_Interface;
         resourcePackageFamilyName : WinRt.HString;
         resourceID : WinRt.HString;
         options : Windows.ApplicationModel.AddResourcePackageOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RemoveResourcePackagesAsync
      (
         this : access IPackageCatalog4_Interface;
         resourcePackages : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalog4 : aliased WinRt.IID := (3279698331, 17612, 19323, (139, 175, 121, 108, 4, 234, 211, 185 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalogAddOptionalPackageResult is interface and WinRt.IInspectable;

      function get_Package
      (
         this : access IPackageCatalogAddOptionalPackageResult_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access IPackageCatalogAddOptionalPackageResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalogAddOptionalPackageResult : aliased WinRt.IID := (1005653204, 46303, 18355, (169, 99, 226, 250, 131, 47, 125, 211 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalogAddResourcePackageResult is interface and WinRt.IInspectable;

      function get_Package
      (
         this : access IPackageCatalogAddResourcePackageResult_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_IsComplete
      (
         this : access IPackageCatalogAddResourcePackageResult_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access IPackageCatalogAddResourcePackageResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalogAddResourcePackageResult : aliased WinRt.IID := (2520174093, 15895, 18751, (170, 8, 204, 236, 111, 222, 246, 153 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalogRemoveOptionalPackagesResult is interface and WinRt.IInspectable;

      function get_PackagesRemoved
      (
         this : access IPackageCatalogRemoveOptionalPackagesResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access IPackageCatalogRemoveOptionalPackagesResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalogRemoveOptionalPackagesResult : aliased WinRt.IID := (701692283, 55668, 20068, (147, 89, 34, 202, 223, 215, 152, 40 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalogRemoveResourcePackagesResult is interface and WinRt.IInspectable;

      function get_PackagesRemoved
      (
         this : access IPackageCatalogRemoveResourcePackagesResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access IPackageCatalogRemoveResourcePackagesResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalogRemoveResourcePackagesResult : aliased WinRt.IID := (2926679817, 6738, 17185, (135, 179, 229, 161, 161, 121, 129, 167 ));

   -----------------------------------------------------------------------------
   -- type IPackageCatalogStatics is interface and WinRt.IInspectable;

      function OpenForCurrentPackage
      (
         this : access IPackageCatalogStatics_Interface;
         RetVal : access Windows.ApplicationModel.IPackageCatalog
      )
      return WinRt.Hresult is abstract;

      function OpenForCurrentUser
      (
         this : access IPackageCatalogStatics_Interface;
         RetVal : access Windows.ApplicationModel.IPackageCatalog
      )
      return WinRt.Hresult is abstract;

      IID_IPackageCatalogStatics : aliased WinRt.IID := (2710345366, 58971, 17972, (186, 33, 94, 99, 235, 114, 68, 167 ));

   -----------------------------------------------------------------------------
   -- type IPackageContentGroup is interface and WinRt.IInspectable;

      function get_Package
      (
         this : access IPackageContentGroup_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access IPackageContentGroup_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_State
      (
         this : access IPackageContentGroup_Interface;
         RetVal : access Windows.ApplicationModel.PackageContentGroupState
      )
      return WinRt.Hresult is abstract;

      function get_IsRequired
      (
         this : access IPackageContentGroup_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPackageContentGroup : aliased WinRt.IID := (2405591389, 4618, 18328, (181, 225, 88, 0, 221, 168, 242, 225 ));

   -----------------------------------------------------------------------------
   -- type IPackageContentGroupStagingEventArgs is interface and WinRt.IInspectable;

      function get_ActivityId
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Package
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_Progress
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_IsComplete
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ErrorCode
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      function get_ContentGroupName
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsContentGroupRequired
      (
         this : access IPackageContentGroupStagingEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPackageContentGroupStagingEventArgs : aliased WinRt.IID := (1031520894, 28455, 17516, (152, 110, 212, 115, 61, 77, 145, 19 ));

   -----------------------------------------------------------------------------
   -- type IPackageContentGroupStatics is interface and WinRt.IInspectable;

      function get_RequiredGroupName
      (
         this : access IPackageContentGroupStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPackageContentGroupStatics : aliased WinRt.IID := (1894675993, 24338, 19346, (185, 234, 108, 202, 218, 19, 188, 117 ));

   -----------------------------------------------------------------------------
   -- type IPackageId is interface and WinRt.IInspectable;

      function get_Name
      (
         this : access IPackageId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Version
      (
         this : access IPackageId_Interface;
         RetVal : access Windows.ApplicationModel.PackageVersion
      )
      return WinRt.Hresult is abstract;

      function get_Architecture
      (
         this : access IPackageId_Interface;
         RetVal : access Windows.System.ProcessorArchitecture
      )
      return WinRt.Hresult is abstract;

      function get_ResourceId
      (
         this : access IPackageId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Publisher
      (
         this : access IPackageId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PublisherId
      (
         this : access IPackageId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FullName
      (
         this : access IPackageId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FamilyName
      (
         this : access IPackageId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPackageId : aliased WinRt.IID := (450586206, 14279, 18320, (153, 128, 221, 122, 231, 78, 139, 178 ));

   -----------------------------------------------------------------------------
   -- type IPackageIdWithMetadata is interface and WinRt.IInspectable;

      function get_ProductId
      (
         this : access IPackageIdWithMetadata_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Author
      (
         this : access IPackageIdWithMetadata_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPackageIdWithMetadata : aliased WinRt.IID := (1079474812, 3230, 17469, (144, 116, 133, 95, 92, 224, 160, 141 ));

   -----------------------------------------------------------------------------
   -- type IPackageInstallingEventArgs is interface and WinRt.IInspectable;

      function get_ActivityId
      (
         this : access IPackageInstallingEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Package
      (
         this : access IPackageInstallingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_Progress
      (
         this : access IPackageInstallingEventArgs_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_IsComplete
      (
         this : access IPackageInstallingEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ErrorCode
      (
         this : access IPackageInstallingEventArgs_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageInstallingEventArgs : aliased WinRt.IID := (2540969655, 43898, 16410, (139, 97, 235, 14, 127, 175, 242, 55 ));

   -----------------------------------------------------------------------------
   -- type IPackageStagingEventArgs is interface and WinRt.IInspectable;

      function get_ActivityId
      (
         this : access IPackageStagingEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Package
      (
         this : access IPackageStagingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_Progress
      (
         this : access IPackageStagingEventArgs_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_IsComplete
      (
         this : access IPackageStagingEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ErrorCode
      (
         this : access IPackageStagingEventArgs_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageStagingEventArgs : aliased WinRt.IID := (272721965, 21730, 20305, (184, 40, 158, 247, 4, 108, 33, 15 ));

   -----------------------------------------------------------------------------
   -- type IPackageStatics is interface and WinRt.IInspectable;

      function get_Current
      (
         this : access IPackageStatics_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      IID_IPackageStatics : aliased WinRt.IID := (1314081759, 10592, 18552, (151, 164, 150, 36, 222, 183, 47, 45 ));

   -----------------------------------------------------------------------------
   -- type IPackageStatus is interface and WinRt.IInspectable;

      function VerifyIsOK
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_NotAvailable
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_PackageOffline
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DataOffline
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Disabled
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_NeedsRemediation
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_LicenseIssue
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Modified
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Tampered
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DependencyIssue
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Servicing
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DeploymentInProgress
      (
         this : access IPackageStatus_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPackageStatus : aliased WinRt.IID := (1608994673, 41829, 19465, (160, 45, 4, 109, 82, 94, 161, 218 ));

   -----------------------------------------------------------------------------
   -- type IPackageStatus2 is interface and WinRt.IInspectable;

      function get_IsPartiallyStaged
      (
         this : access IPackageStatus2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IPackageStatus2 : aliased WinRt.IID := (4096326291, 31830, 18530, (172, 250, 171, 174, 220, 192, 105, 77 ));

   -----------------------------------------------------------------------------
   -- type IPackageStatusChangedEventArgs is interface and WinRt.IInspectable;

      function get_Package
      (
         this : access IPackageStatusChangedEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      IID_IPackageStatusChangedEventArgs : aliased WinRt.IID := (1132294477, 48512, 19056, (188, 80, 246, 231, 150, 80, 149, 117 ));

   -----------------------------------------------------------------------------
   -- type IPackageUninstallingEventArgs is interface and WinRt.IInspectable;

      function get_ActivityId
      (
         this : access IPackageUninstallingEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Package
      (
         this : access IPackageUninstallingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_Progress
      (
         this : access IPackageUninstallingEventArgs_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_IsComplete
      (
         this : access IPackageUninstallingEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ErrorCode
      (
         this : access IPackageUninstallingEventArgs_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageUninstallingEventArgs : aliased WinRt.IID := (1145285202, 43810, 17613, (130, 187, 78, 201, 184, 39, 54, 122 ));

   -----------------------------------------------------------------------------
   -- type IPackageUpdateAvailabilityResult is interface and WinRt.IInspectable;

      function get_Availability
      (
         this : access IPackageUpdateAvailabilityResult_Interface;
         RetVal : access Windows.ApplicationModel.PackageUpdateAvailability
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access IPackageUpdateAvailabilityResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageUpdateAvailabilityResult : aliased WinRt.IID := (290344969, 6554, 18593, (160, 121, 49, 60, 69, 99, 74, 113 ));

   -----------------------------------------------------------------------------
   -- type IPackageUpdatingEventArgs is interface and WinRt.IInspectable;

      function get_ActivityId
      (
         this : access IPackageUpdatingEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_SourcePackage
      (
         this : access IPackageUpdatingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_TargetPackage
      (
         this : access IPackageUpdatingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function get_Progress
      (
         this : access IPackageUpdatingEventArgs_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_IsComplete
      (
         this : access IPackageUpdatingEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ErrorCode
      (
         this : access IPackageUpdatingEventArgs_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IPackageUpdatingEventArgs : aliased WinRt.IID := (3447407144, 64884, 17470, (177, 20, 35, 230, 119, 176, 232, 111 ));

   -----------------------------------------------------------------------------
   -- type IPackageWithMetadata is interface and WinRt.IInspectable;

      function get_InstallDate
      (
         this : access IPackageWithMetadata_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function GetThumbnailToken
      (
         this : access IPackageWithMetadata_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function Launch
      (
         this : access IPackageWithMetadata_Interface;
         parameters : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPackageWithMetadata : aliased WinRt.IID := (2509543296, 7657, 16626, (180, 82, 13, 233, 241, 145, 0, 18 ));

   -----------------------------------------------------------------------------
   -- type IStartupTask is interface and WinRt.IInspectable;

      function RequestEnableAsync
      (
         this : access IStartupTask_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function Disable
      (
         this : access IStartupTask_Interface
      )
      return WinRt.Hresult is abstract;

      function get_State
      (
         this : access IStartupTask_Interface;
         RetVal : access Windows.ApplicationModel.StartupTaskState
      )
      return WinRt.Hresult is abstract;

      function get_TaskId
      (
         this : access IStartupTask_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IStartupTask : aliased WinRt.IID := (4150010824, 46578, 20332, (136, 221, 54, 203, 29, 89, 157, 23 ));

   -----------------------------------------------------------------------------
   -- type IStartupTaskStatics is interface and WinRt.IInspectable;

      function GetForCurrentPackageAsync
      (
         this : access IStartupTaskStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetAsync
      (
         this : access IStartupTaskStatics_Interface;
         taskId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IStartupTaskStatics : aliased WinRt.IID := (3998965949, 41288, 16807, (178, 110, 232, 184, 138, 30, 98, 248 ));

   -----------------------------------------------------------------------------
   -- type ISuspendingDeferral is interface and WinRt.IInspectable;

      function Complete
      (
         this : access ISuspendingDeferral_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ISuspendingDeferral : aliased WinRt.IID := (1494484233, 35785, 20148, (182, 54, 218, 189, 196, 244, 111, 102 ));

   -----------------------------------------------------------------------------
   -- type ISuspendingEventArgs is interface and WinRt.IInspectable;

      function get_SuspendingOperation
      (
         this : access ISuspendingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.ISuspendingOperation
      )
      return WinRt.Hresult is abstract;

      IID_ISuspendingEventArgs : aliased WinRt.IID := (2516982789, 11706, 19720, (176, 189, 43, 48, 161, 49, 198, 170 ));

   -----------------------------------------------------------------------------
   -- type ISuspendingOperation is interface and WinRt.IInspectable;

      function GetDeferral
      (
         this : access ISuspendingOperation_Interface;
         RetVal : access Windows.ApplicationModel.ISuspendingDeferral
      )
      return WinRt.Hresult is abstract;

      function get_Deadline
      (
         this : access ISuspendingOperation_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      IID_ISuspendingOperation : aliased WinRt.IID := (2644822593, 8417, 20123, (159, 101, 169, 244, 53, 52, 12, 58 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AppDisplayInfo

   overriding procedure Initialize (this : in out AppDisplayInfo);
   overriding procedure Finalize (this : in out AppDisplayInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AppDisplayInfo

   function get_DisplayName
   (
      this : in out AppDisplayInfo
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out AppDisplayInfo
   )
   return WinRt.WString;

   function GetLogo
   (
      this : in out AppDisplayInfo;
      size : Windows.Foundation.Size
   )
   return WinRt.Windows.Storage.Streams.RandomAccessStreamReference'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AppInfo

   overriding procedure Initialize (this : in out AppInfo);
   overriding procedure Finalize (this : in out AppInfo);

   -----------------------------------------------------------------------------
   -- Static Interfaces for AppInfo

   function get_Current
   return WinRt.Windows.ApplicationModel.AppInfo;

   function GetFromAppUserModelId
   (
      appUserModelId : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.AppInfo;

   function GetFromAppUserModelIdForUser
   (
      user : Windows.System.User'Class;
      appUserModelId : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.AppInfo;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AppInfo

   function get_Id
   (
      this : in out AppInfo
   )
   return WinRt.WString;

   function get_AppUserModelId
   (
      this : in out AppInfo
   )
   return WinRt.WString;

   function get_DisplayInfo
   (
      this : in out AppInfo
   )
   return WinRt.Windows.ApplicationModel.AppDisplayInfo'Class;

   function get_PackageFamilyName
   (
      this : in out AppInfo
   )
   return WinRt.WString;

   function get_Package
   (
      this : in out AppInfo
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AppInstallerInfo

   overriding procedure Initialize (this : in out AppInstallerInfo);
   overriding procedure Finalize (this : in out AppInstallerInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AppInstallerInfo

   function get_Uri
   (
      this : in out AppInstallerInfo
   )
   return WinRt.Windows.Foundation.Uri'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AppInstance

   overriding procedure Initialize (this : in out AppInstance);
   overriding procedure Finalize (this : in out AppInstance);

   -----------------------------------------------------------------------------
   -- Static Interfaces for AppInstance

   function get_RecommendedInstance
   return WinRt.Windows.ApplicationModel.AppInstance;

   function GetActivatedEventArgs
   return WinRt.Windows.ApplicationModel.Activation.IActivatedEventArgs;

   function FindOrRegisterInstanceForKey
   (
      key : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.AppInstance;

   procedure Unregister;

   function GetInstances
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AppInstance

   function get_Key
   (
      this : in out AppInstance
   )
   return WinRt.WString;

   function get_IsCurrentInstance
   (
      this : in out AppInstance
   )
   return WinRt.Boolean;

   procedure RedirectActivationTo
   (
      this : in out AppInstance
   );

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CameraApplicationManager is

      procedure ShowInstalledApplicationsUI;

   end CameraApplicationManager;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package DesignMode is

      function get_DesignModeEnabled
      return WinRt.Boolean;

      function get_DesignMode2Enabled
      return WinRt.Boolean;

   end DesignMode;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EnteredBackgroundEventArgs

   overriding procedure Initialize (this : in out EnteredBackgroundEventArgs);
   overriding procedure Finalize (this : in out EnteredBackgroundEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EnteredBackgroundEventArgs

   function GetDeferral
   (
      this : in out EnteredBackgroundEventArgs
   )
   return WinRt.Windows.Foundation.Deferral'Class;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package FullTrustProcessLauncher is

      procedure LaunchFullTrustProcessForCurrentAppAsync;

      procedure LaunchFullTrustProcessForCurrentAppAsync
      (
         parameterGroupId : WinRt.WString
      );

      procedure LaunchFullTrustProcessForAppAsync
      (
         fullTrustPackageRelativeAppId : WinRt.WString
      );

      procedure LaunchFullTrustProcessForAppAsync
      (
         fullTrustPackageRelativeAppId : WinRt.WString;
         parameterGroupId : WinRt.WString
      );

   end FullTrustProcessLauncher;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LeavingBackgroundEventArgs

   overriding procedure Initialize (this : in out LeavingBackgroundEventArgs);
   overriding procedure Finalize (this : in out LeavingBackgroundEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LeavingBackgroundEventArgs

   function GetDeferral
   (
      this : in out LeavingBackgroundEventArgs
   )
   return WinRt.Windows.Foundation.Deferral'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LimitedAccessFeatureRequestResult

   overriding procedure Initialize (this : in out LimitedAccessFeatureRequestResult);
   overriding procedure Finalize (this : in out LimitedAccessFeatureRequestResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LimitedAccessFeatureRequestResult

   function get_FeatureId
   (
      this : in out LimitedAccessFeatureRequestResult
   )
   return WinRt.WString;

   function get_Status
   (
      this : in out LimitedAccessFeatureRequestResult
   )
   return WinRt.Windows.ApplicationModel.LimitedAccessFeatureStatus;

   function get_EstimatedRemovalDate
   (
      this : in out LimitedAccessFeatureRequestResult
   )
   return IReference_DateTime.Kind;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package LimitedAccessFeatures is

      function TryUnlockFeature
      (
         featureId : WinRt.WString;
         token : WinRt.WString;
         attestation : WinRt.WString
      )
      return WinRt.Windows.ApplicationModel.LimitedAccessFeatureRequestResult;

   end LimitedAccessFeatures;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Package_x

   overriding procedure Initialize (this : in out Package_x);
   overriding procedure Finalize (this : in out Package_x);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Package_x

   function get_Current
   return WinRt.Windows.ApplicationModel.Package_x;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Package_x

   function get_Id
   (
      this : in out Package_x
   )
   return WinRt.Windows.ApplicationModel.PackageId'Class;

   function get_InstalledLocation
   (
      this : in out Package_x
   )
   return WinRt.Windows.Storage.StorageFolder'Class;

   function get_IsFramework
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   function get_Dependencies
   (
      this : in out Package_x
   )
   return IVectorView_IPackage.Kind;

   function get_DisplayName
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_PublisherDisplayName
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_Logo
   (
      this : in out Package_x
   )
   return WinRt.Windows.Foundation.Uri'Class;

   function get_IsResourcePackage
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   function get_IsBundle
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   function get_IsDevelopmentMode
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   function get_Status
   (
      this : in out Package_x
   )
   return WinRt.Windows.ApplicationModel.PackageStatus'Class;

   function get_InstalledDate
   (
      this : in out Package_x
   )
   return WinRt.Windows.Foundation.DateTime;

   function GetAppListEntriesAsync
   (
      this : in out Package_x
   )
   return WinRt.GenericObject;

   function get_InstallDate
   (
      this : in out Package_x
   )
   return WinRt.Windows.Foundation.DateTime;

   function GetThumbnailToken
   (
      this : in out Package_x
   )
   return WinRt.WString;

   procedure Launch
   (
      this : in out Package_x;
      parameters : WinRt.WString
   );

   function get_SignatureKind
   (
      this : in out Package_x
   )
   return WinRt.Windows.ApplicationModel.PackageSignatureKind;

   function get_IsOptional
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   function VerifyContentIntegrityAsync
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   function GetContentGroupsAsync
   (
      this : in out Package_x
   )
   return WinRt.GenericObject;

   function GetContentGroupAsync
   (
      this : in out Package_x;
      name : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.PackageContentGroup'Class;

   function StageContentGroupsAsync
   (
      this : in out Package_x;
      names : GenericObject
   )
   return WinRt.GenericObject;

   function StageContentGroupsAsync
   (
      this : in out Package_x;
      names : GenericObject;
      moveToHeadOfQueue : WinRt.Boolean
   )
   return WinRt.GenericObject;

   function SetInUseAsync
   (
      this : in out Package_x;
      inUse : WinRt.Boolean
   )
   return WinRt.Boolean;

   function GetAppInstallerInfo
   (
      this : in out Package_x
   )
   return WinRt.Windows.ApplicationModel.AppInstallerInfo'Class;

   function CheckUpdateAvailabilityAsync
   (
      this : in out Package_x
   )
   return WinRt.Windows.ApplicationModel.PackageUpdateAvailabilityResult'Class;

   function get_MutableLocation
   (
      this : in out Package_x
   )
   return WinRt.Windows.Storage.StorageFolder'Class;

   function get_EffectiveLocation
   (
      this : in out Package_x
   )
   return WinRt.Windows.Storage.StorageFolder'Class;

   function get_EffectiveExternalLocation
   (
      this : in out Package_x
   )
   return WinRt.Windows.Storage.StorageFolder'Class;

   function get_MachineExternalLocation
   (
      this : in out Package_x
   )
   return WinRt.Windows.Storage.StorageFolder'Class;

   function get_UserExternalLocation
   (
      this : in out Package_x
   )
   return WinRt.Windows.Storage.StorageFolder'Class;

   function get_InstalledPath
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_MutablePath
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_EffectivePath
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_EffectiveExternalPath
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_MachineExternalPath
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function get_UserExternalPath
   (
      this : in out Package_x
   )
   return WinRt.WString;

   function GetLogoAsRandomAccessStreamReference
   (
      this : in out Package_x;
      size : Windows.Foundation.Size
   )
   return WinRt.Windows.Storage.Streams.RandomAccessStreamReference'Class;

   function GetAppListEntries
   (
      this : in out Package_x
   )
   return WinRt.GenericObject;

   function get_IsStub
   (
      this : in out Package_x
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageCatalog

   overriding procedure Initialize (this : in out PackageCatalog);
   overriding procedure Finalize (this : in out PackageCatalog);

   -----------------------------------------------------------------------------
   -- Static Interfaces for PackageCatalog

   function OpenForCurrentPackage
   return WinRt.Windows.ApplicationModel.PackageCatalog;

   function OpenForCurrentUser
   return WinRt.Windows.ApplicationModel.PackageCatalog;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageCatalog

   function add_PackageStaging
   (
      this : in out PackageCatalog;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PackageStaging
   (
      this : in out PackageCatalog;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_PackageInstalling
   (
      this : in out PackageCatalog;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PackageInstalling
   (
      this : in out PackageCatalog;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_PackageUpdating
   (
      this : in out PackageCatalog;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PackageUpdating
   (
      this : in out PackageCatalog;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_PackageUninstalling
   (
      this : in out PackageCatalog;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PackageUninstalling
   (
      this : in out PackageCatalog;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_PackageStatusChanged
   (
      this : in out PackageCatalog;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PackageStatusChanged
   (
      this : in out PackageCatalog;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_PackageContentGroupStaging
   (
      this : in out PackageCatalog;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PackageContentGroupStaging
   (
      this : in out PackageCatalog;
      token : Windows.Foundation.EventRegistrationToken
   );

   function AddOptionalPackageAsync
   (
      this : in out PackageCatalog;
      optionalPackageFamilyName : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.PackageCatalogAddOptionalPackageResult'Class;

   function RemoveOptionalPackagesAsync
   (
      this : in out PackageCatalog;
      optionalPackageFamilyNames : GenericObject
   )
   return WinRt.Windows.ApplicationModel.PackageCatalogRemoveOptionalPackagesResult'Class;

   function AddResourcePackageAsync
   (
      this : in out PackageCatalog;
      resourcePackageFamilyName : WinRt.WString;
      resourceID : WinRt.WString;
      options : Windows.ApplicationModel.AddResourcePackageOptions
   )
   return WinRt.Windows.ApplicationModel.PackageCatalogAddResourcePackageResult'Class;

   function RemoveResourcePackagesAsync
   (
      this : in out PackageCatalog;
      resourcePackages : GenericObject
   )
   return WinRt.Windows.ApplicationModel.PackageCatalogRemoveResourcePackagesResult'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageCatalogAddOptionalPackageResult

   overriding procedure Initialize (this : in out PackageCatalogAddOptionalPackageResult);
   overriding procedure Finalize (this : in out PackageCatalogAddOptionalPackageResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageCatalogAddOptionalPackageResult

   function get_Package
   (
      this : in out PackageCatalogAddOptionalPackageResult
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_ExtendedError
   (
      this : in out PackageCatalogAddOptionalPackageResult
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageCatalogAddResourcePackageResult

   overriding procedure Initialize (this : in out PackageCatalogAddResourcePackageResult);
   overriding procedure Finalize (this : in out PackageCatalogAddResourcePackageResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageCatalogAddResourcePackageResult

   function get_Package
   (
      this : in out PackageCatalogAddResourcePackageResult
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_IsComplete
   (
      this : in out PackageCatalogAddResourcePackageResult
   )
   return WinRt.Boolean;

   function get_ExtendedError
   (
      this : in out PackageCatalogAddResourcePackageResult
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageCatalogRemoveOptionalPackagesResult

   overriding procedure Initialize (this : in out PackageCatalogRemoveOptionalPackagesResult);
   overriding procedure Finalize (this : in out PackageCatalogRemoveOptionalPackagesResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageCatalogRemoveOptionalPackagesResult

   function get_PackagesRemoved
   (
      this : in out PackageCatalogRemoveOptionalPackagesResult
   )
   return IVectorView_IPackage.Kind;

   function get_ExtendedError
   (
      this : in out PackageCatalogRemoveOptionalPackagesResult
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageCatalogRemoveResourcePackagesResult

   overriding procedure Initialize (this : in out PackageCatalogRemoveResourcePackagesResult);
   overriding procedure Finalize (this : in out PackageCatalogRemoveResourcePackagesResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageCatalogRemoveResourcePackagesResult

   function get_PackagesRemoved
   (
      this : in out PackageCatalogRemoveResourcePackagesResult
   )
   return IVectorView_IPackage.Kind;

   function get_ExtendedError
   (
      this : in out PackageCatalogRemoveResourcePackagesResult
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageContentGroup

   overriding procedure Initialize (this : in out PackageContentGroup);
   overriding procedure Finalize (this : in out PackageContentGroup);

   -----------------------------------------------------------------------------
   -- Static Interfaces for PackageContentGroup

   function get_RequiredGroupName
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageContentGroup

   function get_Package
   (
      this : in out PackageContentGroup
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_Name
   (
      this : in out PackageContentGroup
   )
   return WinRt.WString;

   function get_State
   (
      this : in out PackageContentGroup
   )
   return WinRt.Windows.ApplicationModel.PackageContentGroupState;

   function get_IsRequired
   (
      this : in out PackageContentGroup
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageContentGroupStagingEventArgs

   overriding procedure Initialize (this : in out PackageContentGroupStagingEventArgs);
   overriding procedure Finalize (this : in out PackageContentGroupStagingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageContentGroupStagingEventArgs

   function get_ActivityId
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.Guid;

   function get_Package
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_Progress
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.Double;

   function get_IsComplete
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.Boolean;

   function get_ErrorCode
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.Windows.Foundation.HResult;

   function get_ContentGroupName
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.WString;

   function get_IsContentGroupRequired
   (
      this : in out PackageContentGroupStagingEventArgs
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageId

   overriding procedure Initialize (this : in out PackageId);
   overriding procedure Finalize (this : in out PackageId);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageId

   function get_Name
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_Version
   (
      this : in out PackageId
   )
   return WinRt.Windows.ApplicationModel.PackageVersion;

   function get_Architecture
   (
      this : in out PackageId
   )
   return WinRt.Windows.System.ProcessorArchitecture;

   function get_ResourceId
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_Publisher
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_PublisherId
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_FullName
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_FamilyName
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_ProductId
   (
      this : in out PackageId
   )
   return WinRt.WString;

   function get_Author
   (
      this : in out PackageId
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageInstallingEventArgs

   overriding procedure Initialize (this : in out PackageInstallingEventArgs);
   overriding procedure Finalize (this : in out PackageInstallingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageInstallingEventArgs

   function get_ActivityId
   (
      this : in out PackageInstallingEventArgs
   )
   return WinRt.Guid;

   function get_Package
   (
      this : in out PackageInstallingEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_Progress
   (
      this : in out PackageInstallingEventArgs
   )
   return WinRt.Double;

   function get_IsComplete
   (
      this : in out PackageInstallingEventArgs
   )
   return WinRt.Boolean;

   function get_ErrorCode
   (
      this : in out PackageInstallingEventArgs
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageStagingEventArgs

   overriding procedure Initialize (this : in out PackageStagingEventArgs);
   overriding procedure Finalize (this : in out PackageStagingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageStagingEventArgs

   function get_ActivityId
   (
      this : in out PackageStagingEventArgs
   )
   return WinRt.Guid;

   function get_Package
   (
      this : in out PackageStagingEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_Progress
   (
      this : in out PackageStagingEventArgs
   )
   return WinRt.Double;

   function get_IsComplete
   (
      this : in out PackageStagingEventArgs
   )
   return WinRt.Boolean;

   function get_ErrorCode
   (
      this : in out PackageStagingEventArgs
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageStatus

   overriding procedure Initialize (this : in out PackageStatus);
   overriding procedure Finalize (this : in out PackageStatus);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageStatus

   function VerifyIsOK
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_NotAvailable
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_PackageOffline
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_DataOffline
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_Disabled
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_NeedsRemediation
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_LicenseIssue
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_Modified
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_Tampered
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_DependencyIssue
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_Servicing
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_DeploymentInProgress
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   function get_IsPartiallyStaged
   (
      this : in out PackageStatus
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageStatusChangedEventArgs

   overriding procedure Initialize (this : in out PackageStatusChangedEventArgs);
   overriding procedure Finalize (this : in out PackageStatusChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageStatusChangedEventArgs

   function get_Package
   (
      this : in out PackageStatusChangedEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageUninstallingEventArgs

   overriding procedure Initialize (this : in out PackageUninstallingEventArgs);
   overriding procedure Finalize (this : in out PackageUninstallingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageUninstallingEventArgs

   function get_ActivityId
   (
      this : in out PackageUninstallingEventArgs
   )
   return WinRt.Guid;

   function get_Package
   (
      this : in out PackageUninstallingEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_Progress
   (
      this : in out PackageUninstallingEventArgs
   )
   return WinRt.Double;

   function get_IsComplete
   (
      this : in out PackageUninstallingEventArgs
   )
   return WinRt.Boolean;

   function get_ErrorCode
   (
      this : in out PackageUninstallingEventArgs
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageUpdateAvailabilityResult

   overriding procedure Initialize (this : in out PackageUpdateAvailabilityResult);
   overriding procedure Finalize (this : in out PackageUpdateAvailabilityResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageUpdateAvailabilityResult

   function get_Availability
   (
      this : in out PackageUpdateAvailabilityResult
   )
   return WinRt.Windows.ApplicationModel.PackageUpdateAvailability;

   function get_ExtendedError
   (
      this : in out PackageUpdateAvailabilityResult
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageUpdatingEventArgs

   overriding procedure Initialize (this : in out PackageUpdatingEventArgs);
   overriding procedure Finalize (this : in out PackageUpdatingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageUpdatingEventArgs

   function get_ActivityId
   (
      this : in out PackageUpdatingEventArgs
   )
   return WinRt.Guid;

   function get_SourcePackage
   (
      this : in out PackageUpdatingEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_TargetPackage
   (
      this : in out PackageUpdatingEventArgs
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function get_Progress
   (
      this : in out PackageUpdatingEventArgs
   )
   return WinRt.Double;

   function get_IsComplete
   (
      this : in out PackageUpdatingEventArgs
   )
   return WinRt.Boolean;

   function get_ErrorCode
   (
      this : in out PackageUpdatingEventArgs
   )
   return WinRt.Windows.Foundation.HResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StartupTask

   overriding procedure Initialize (this : in out StartupTask);
   overriding procedure Finalize (this : in out StartupTask);

   -----------------------------------------------------------------------------
   -- Static Interfaces for StartupTask

   function GetForCurrentPackageAsync
   return WinRt.GenericObject;

   function GetAsync
   (
      taskId : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.StartupTask;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StartupTask

   function RequestEnableAsync
   (
      this : in out StartupTask
   )
   return WinRt.Windows.ApplicationModel.StartupTaskState;

   procedure Disable
   (
      this : in out StartupTask
   );

   function get_State
   (
      this : in out StartupTask
   )
   return WinRt.Windows.ApplicationModel.StartupTaskState;

   function get_TaskId
   (
      this : in out StartupTask
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SuspendingDeferral

   overriding procedure Initialize (this : in out SuspendingDeferral);
   overriding procedure Finalize (this : in out SuspendingDeferral);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SuspendingDeferral

   procedure Complete
   (
      this : in out SuspendingDeferral
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SuspendingEventArgs

   overriding procedure Initialize (this : in out SuspendingEventArgs);
   overriding procedure Finalize (this : in out SuspendingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SuspendingEventArgs

   function get_SuspendingOperation
   (
      this : in out SuspendingEventArgs
   )
   return WinRt.Windows.ApplicationModel.SuspendingOperation'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SuspendingOperation

   overriding procedure Initialize (this : in out SuspendingOperation);
   overriding procedure Finalize (this : in out SuspendingOperation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SuspendingOperation

   function GetDeferral
   (
      this : in out SuspendingOperation
   )
   return WinRt.Windows.ApplicationModel.SuspendingDeferral'Class;

   function get_Deadline
   (
      this : in out SuspendingOperation
   )
   return WinRt.Windows.Foundation.DateTime;

end;
