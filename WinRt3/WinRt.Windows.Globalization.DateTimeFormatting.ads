--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Globalization.DateTimeFormatting is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IDateTimeFormatter_Interface is interface and WinRt.IInspectable_Interface;
   type IDateTimeFormatter is access all IDateTimeFormatter_Interface'Class;
   type IDateTimeFormatter_Ptr is access all IDateTimeFormatter;

   type IDateTimeFormatter2_Interface is interface and WinRt.IInspectable_Interface;
   type IDateTimeFormatter2 is access all IDateTimeFormatter2_Interface'Class;

   type IDateTimeFormatterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IDateTimeFormatterFactory is access all IDateTimeFormatterFactory_Interface'Class;

   type IDateTimeFormatterStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IDateTimeFormatterStatics is access all IDateTimeFormatterStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type DateTimeFormatter is new Ada.Finalization.Limited_Controlled with
      record
         m_IDateTimeFormatter : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter;
      end record;
   type DateTimeFormatter_Ptr is access all DateTimeFormatter;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type DayFormat is (
      None_e,
      Default_e
   );
   for DayFormat use (
      None_e => 0,
      Default_e => 1
   );
   type DayFormat_Ptr is access all DayFormat;

   type DayOfWeekFormat is (
      None_e,
      Default_e,
      Abbreviated_e,
      Full_e
   );
   for DayOfWeekFormat use (
      None_e => 0,
      Default_e => 1,
      Abbreviated_e => 2,
      Full_e => 3
   );
   type DayOfWeekFormat_Ptr is access all DayOfWeekFormat;

   type HourFormat is (
      None_e,
      Default_e
   );
   for HourFormat use (
      None_e => 0,
      Default_e => 1
   );
   type HourFormat_Ptr is access all HourFormat;

   type MinuteFormat is (
      None_e,
      Default_e
   );
   for MinuteFormat use (
      None_e => 0,
      Default_e => 1
   );
   type MinuteFormat_Ptr is access all MinuteFormat;

   type MonthFormat is (
      None_e,
      Default_e,
      Abbreviated_e,
      Full_e,
      Numeric_e
   );
   for MonthFormat use (
      None_e => 0,
      Default_e => 1,
      Abbreviated_e => 2,
      Full_e => 3,
      Numeric_e => 4
   );
   type MonthFormat_Ptr is access all MonthFormat;

   type SecondFormat is (
      None_e,
      Default_e
   );
   for SecondFormat use (
      None_e => 0,
      Default_e => 1
   );
   type SecondFormat_Ptr is access all SecondFormat;

   type YearFormat is (
      None_e,
      Default_e,
      Abbreviated_e,
      Full_e
   );
   for YearFormat use (
      None_e => 0,
      Default_e => 1,
      Abbreviated_e => 2,
      Full_e => 3
   );
   type YearFormat_Ptr is access all YearFormat;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (1564368712, 50332, 21757, (132, 231, 172, 65, 188, 249, 241, 9 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IDateTimeFormatter is interface and WinRt.IInspectable;

      function get_Languages
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_GeographicRegion
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Calendar
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Clock
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NumeralSystem
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_NumeralSystem
      (
         this : access IDateTimeFormatter_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Patterns
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Template
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function Format
      (
         this : access IDateTimeFormatter_Interface;
         value : Windows.Foundation.DateTime;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IncludeYear
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.YearFormat
      )
      return WinRt.Hresult is abstract;

      function get_IncludeMonth
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.MonthFormat
      )
      return WinRt.Hresult is abstract;

      function get_IncludeDayOfWeek
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.DayOfWeekFormat
      )
      return WinRt.Hresult is abstract;

      function get_IncludeDay
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.DayFormat
      )
      return WinRt.Hresult is abstract;

      function get_IncludeHour
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.HourFormat
      )
      return WinRt.Hresult is abstract;

      function get_IncludeMinute
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.MinuteFormat
      )
      return WinRt.Hresult is abstract;

      function get_IncludeSecond
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.SecondFormat
      )
      return WinRt.Hresult is abstract;

      function get_ResolvedLanguage
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ResolvedGeographicRegion
      (
         this : access IDateTimeFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IDateTimeFormatter : aliased WinRt.IID := (2515454480, 29664, 20043, (161, 131, 61, 106, 208, 186, 53, 236 ));

   -----------------------------------------------------------------------------
   -- type IDateTimeFormatter2 is interface and WinRt.IInspectable;

      function Format
      (
         this : access IDateTimeFormatter2_Interface;
         datetime : Windows.Foundation.DateTime;
         timeZoneId : WinRt.HString;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IDateTimeFormatter2 : aliased WinRt.IID := (667490950, 48554, 20432, (158, 54, 103, 29, 90, 165, 238, 3 ));

   -----------------------------------------------------------------------------
   -- type IDateTimeFormatterFactory is interface and WinRt.IInspectable;

      function CreateDateTimeFormatter
      (
         this : access IDateTimeFormatterFactory_Interface;
         formatTemplate : WinRt.HString;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateDateTimeFormatterLanguages
      (
         this : access IDateTimeFormatterFactory_Interface;
         formatTemplate : WinRt.HString;
         languages : GenericObject;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateDateTimeFormatterContext
      (
         this : access IDateTimeFormatterFactory_Interface;
         formatTemplate : WinRt.HString;
         languages : GenericObject;
         geographicRegion : WinRt.HString;
         calendar : WinRt.HString;
         clock : WinRt.HString;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateDateTimeFormatterDate
      (
         this : access IDateTimeFormatterFactory_Interface;
         yearFormat : Windows.Globalization.DateTimeFormatting.YearFormat;
         monthFormat : Windows.Globalization.DateTimeFormatting.MonthFormat;
         dayFormat : Windows.Globalization.DateTimeFormatting.DayFormat;
         dayOfWeekFormat : Windows.Globalization.DateTimeFormatting.DayOfWeekFormat;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateDateTimeFormatterTime
      (
         this : access IDateTimeFormatterFactory_Interface;
         hourFormat : Windows.Globalization.DateTimeFormatting.HourFormat;
         minuteFormat : Windows.Globalization.DateTimeFormatting.MinuteFormat;
         secondFormat : Windows.Globalization.DateTimeFormatting.SecondFormat;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateDateTimeFormatterDateTimeLanguages
      (
         this : access IDateTimeFormatterFactory_Interface;
         yearFormat : Windows.Globalization.DateTimeFormatting.YearFormat;
         monthFormat : Windows.Globalization.DateTimeFormatting.MonthFormat;
         dayFormat : Windows.Globalization.DateTimeFormatting.DayFormat;
         dayOfWeekFormat : Windows.Globalization.DateTimeFormatting.DayOfWeekFormat;
         hourFormat : Windows.Globalization.DateTimeFormatting.HourFormat;
         minuteFormat : Windows.Globalization.DateTimeFormatting.MinuteFormat;
         secondFormat : Windows.Globalization.DateTimeFormatting.SecondFormat;
         languages : GenericObject;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateDateTimeFormatterDateTimeContext
      (
         this : access IDateTimeFormatterFactory_Interface;
         yearFormat : Windows.Globalization.DateTimeFormatting.YearFormat;
         monthFormat : Windows.Globalization.DateTimeFormatting.MonthFormat;
         dayFormat : Windows.Globalization.DateTimeFormatting.DayFormat;
         dayOfWeekFormat : Windows.Globalization.DateTimeFormatting.DayOfWeekFormat;
         hourFormat : Windows.Globalization.DateTimeFormatting.HourFormat;
         minuteFormat : Windows.Globalization.DateTimeFormatting.MinuteFormat;
         secondFormat : Windows.Globalization.DateTimeFormatting.SecondFormat;
         languages : GenericObject;
         geographicRegion : WinRt.HString;
         calendar : WinRt.HString;
         clock : WinRt.HString;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      IID_IDateTimeFormatterFactory : aliased WinRt.IID := (3968698963, 6702, 16685, (136, 21, 59, 116, 95, 177, 162, 160 ));

   -----------------------------------------------------------------------------
   -- type IDateTimeFormatterStatics is interface and WinRt.IInspectable;

      function get_LongDate
      (
         this : access IDateTimeFormatterStatics_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function get_LongTime
      (
         this : access IDateTimeFormatterStatics_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function get_ShortDate
      (
         this : access IDateTimeFormatterStatics_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      function get_ShortTime
      (
         this : access IDateTimeFormatterStatics_Interface;
         RetVal : access Windows.Globalization.DateTimeFormatting.IDateTimeFormatter
      )
      return WinRt.Hresult is abstract;

      IID_IDateTimeFormatterStatics : aliased WinRt.IID := (3217942464, 57164, 18990, (144, 18, 244, 125, 175, 63, 18, 18 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DateTimeFormatter

   overriding procedure Initialize (this : in out DateTimeFormatter);
   overriding procedure Finalize (this : in out DateTimeFormatter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for DateTimeFormatter

   function Constructor
   (
      formatTemplate : WinRt.WString
   )
   return DateTimeFormatter;

   function Constructor
   (
      formatTemplate : WinRt.WString;
      languages : GenericObject
   )
   return DateTimeFormatter;

   function Constructor
   (
      formatTemplate : WinRt.WString;
      languages : GenericObject;
      geographicRegion : WinRt.WString;
      calendar : WinRt.WString;
      clock : WinRt.WString
   )
   return DateTimeFormatter;

   function Constructor
   (
      yearFormat : Windows.Globalization.DateTimeFormatting.YearFormat;
      monthFormat : Windows.Globalization.DateTimeFormatting.MonthFormat;
      dayFormat : Windows.Globalization.DateTimeFormatting.DayFormat;
      dayOfWeekFormat : Windows.Globalization.DateTimeFormatting.DayOfWeekFormat
   )
   return DateTimeFormatter;

   function Constructor
   (
      hourFormat : Windows.Globalization.DateTimeFormatting.HourFormat;
      minuteFormat : Windows.Globalization.DateTimeFormatting.MinuteFormat;
      secondFormat : Windows.Globalization.DateTimeFormatting.SecondFormat
   )
   return DateTimeFormatter;

   function Constructor
   (
      yearFormat : Windows.Globalization.DateTimeFormatting.YearFormat;
      monthFormat : Windows.Globalization.DateTimeFormatting.MonthFormat;
      dayFormat : Windows.Globalization.DateTimeFormatting.DayFormat;
      dayOfWeekFormat : Windows.Globalization.DateTimeFormatting.DayOfWeekFormat;
      hourFormat : Windows.Globalization.DateTimeFormatting.HourFormat;
      minuteFormat : Windows.Globalization.DateTimeFormatting.MinuteFormat;
      secondFormat : Windows.Globalization.DateTimeFormatting.SecondFormat;
      languages : GenericObject
   )
   return DateTimeFormatter;

   function Constructor
   (
      yearFormat : Windows.Globalization.DateTimeFormatting.YearFormat;
      monthFormat : Windows.Globalization.DateTimeFormatting.MonthFormat;
      dayFormat : Windows.Globalization.DateTimeFormatting.DayFormat;
      dayOfWeekFormat : Windows.Globalization.DateTimeFormatting.DayOfWeekFormat;
      hourFormat : Windows.Globalization.DateTimeFormatting.HourFormat;
      minuteFormat : Windows.Globalization.DateTimeFormatting.MinuteFormat;
      secondFormat : Windows.Globalization.DateTimeFormatting.SecondFormat;
      languages : GenericObject;
      geographicRegion : WinRt.WString;
      calendar : WinRt.WString;
      clock : WinRt.WString
   )
   return DateTimeFormatter;

   -----------------------------------------------------------------------------
   -- Static Interfaces for DateTimeFormatter

   function get_LongDate
   return WinRt.Windows.Globalization.DateTimeFormatting.DateTimeFormatter;

   function get_LongTime
   return WinRt.Windows.Globalization.DateTimeFormatting.DateTimeFormatter;

   function get_ShortDate
   return WinRt.Windows.Globalization.DateTimeFormatting.DateTimeFormatter;

   function get_ShortTime
   return WinRt.Windows.Globalization.DateTimeFormatting.DateTimeFormatter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DateTimeFormatter

   function get_Languages
   (
      this : in out DateTimeFormatter
   )
   return IVectorView_HString.Kind;

   function get_GeographicRegion
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   function get_Calendar
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   function get_Clock
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   function get_NumeralSystem
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out DateTimeFormatter;
      value : WinRt.WString
   );

   function get_Patterns
   (
      this : in out DateTimeFormatter
   )
   return IVectorView_HString.Kind;

   function get_Template
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   function Format
   (
      this : in out DateTimeFormatter;
      value : Windows.Foundation.DateTime
   )
   return WinRt.WString;

   function get_IncludeYear
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.YearFormat;

   function get_IncludeMonth
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.MonthFormat;

   function get_IncludeDayOfWeek
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.DayOfWeekFormat;

   function get_IncludeDay
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.DayFormat;

   function get_IncludeHour
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.HourFormat;

   function get_IncludeMinute
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.MinuteFormat;

   function get_IncludeSecond
   (
      this : in out DateTimeFormatter
   )
   return WinRt.Windows.Globalization.DateTimeFormatting.SecondFormat;

   function get_ResolvedLanguage
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   function get_ResolvedGeographicRegion
   (
      this : in out DateTimeFormatter
   )
   return WinRt.WString;

   function Format
   (
      this : in out DateTimeFormatter;
      datetime : Windows.Foundation.DateTime;
      timeZoneId : WinRt.WString
   )
   return WinRt.WString;

end;
