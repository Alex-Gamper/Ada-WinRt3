--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.System.Diagnostics.Telemetry is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IPlatformTelemetryClientStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPlatformTelemetryClientStatics is access all IPlatformTelemetryClientStatics_Interface'Class;

   type IPlatformTelemetryRegistrationResult_Interface is interface and WinRt.IInspectable_Interface;
   type IPlatformTelemetryRegistrationResult is access all IPlatformTelemetryRegistrationResult_Interface'Class;
   type IPlatformTelemetryRegistrationResult_Ptr is access all IPlatformTelemetryRegistrationResult;

   type IPlatformTelemetryRegistrationSettings_Interface is interface and WinRt.IInspectable_Interface;
   type IPlatformTelemetryRegistrationSettings is access all IPlatformTelemetryRegistrationSettings_Interface'Class;
   type IPlatformTelemetryRegistrationSettings_Ptr is access all IPlatformTelemetryRegistrationSettings;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type PlatformTelemetryRegistrationResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IPlatformTelemetryRegistrationResult : access Windows.System.Diagnostics.Telemetry.IPlatformTelemetryRegistrationResult;
      end record;
   type PlatformTelemetryRegistrationResult_Ptr is access all PlatformTelemetryRegistrationResult;

   type PlatformTelemetryRegistrationSettings is new Ada.Finalization.Limited_Controlled with
      record
         m_IPlatformTelemetryRegistrationSettings : access Windows.System.Diagnostics.Telemetry.IPlatformTelemetryRegistrationSettings;
      end record;
   type PlatformTelemetryRegistrationSettings_Ptr is access all PlatformTelemetryRegistrationSettings;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type PlatformTelemetryRegistrationStatus is (
      Success_e,
      SettingsOutOfRange_e,
      UnknownFailure_e
   );
   for PlatformTelemetryRegistrationStatus use (
      Success_e => 0,
      SettingsOutOfRange_e => 1,
      UnknownFailure_e => 2
   );
   type PlatformTelemetryRegistrationStatus_Ptr is access all PlatformTelemetryRegistrationStatus;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IPlatformTelemetryClientStatics is interface and WinRt.IInspectable;

      function Register
      (
         this : access IPlatformTelemetryClientStatics_Interface;
         id : WinRt.HString;
         RetVal : access Windows.System.Diagnostics.Telemetry.IPlatformTelemetryRegistrationResult
      )
      return WinRt.Hresult is abstract;

      function Register
      (
         this : access IPlatformTelemetryClientStatics_Interface;
         id : WinRt.HString;
         settings : Windows.System.Diagnostics.Telemetry.IPlatformTelemetryRegistrationSettings;
         RetVal : access Windows.System.Diagnostics.Telemetry.IPlatformTelemetryRegistrationResult
      )
      return WinRt.Hresult is abstract;

      IID_IPlatformTelemetryClientStatics : aliased WinRt.IID := (2616455773, 54723, 20202, (141, 190, 156, 141, 187, 13, 157, 143 ));

   -----------------------------------------------------------------------------
   -- type IPlatformTelemetryRegistrationResult is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IPlatformTelemetryRegistrationResult_Interface;
         RetVal : access Windows.System.Diagnostics.Telemetry.PlatformTelemetryRegistrationStatus
      )
      return WinRt.Hresult is abstract;

      IID_IPlatformTelemetryRegistrationResult : aliased WinRt.IID := (1300568235, 8850, 18877, (161, 90, 61, 113, 210, 20, 81, 18 ));

   -----------------------------------------------------------------------------
   -- type IPlatformTelemetryRegistrationSettings is interface and WinRt.IInspectable;

      function get_StorageSize
      (
         this : access IPlatformTelemetryRegistrationSettings_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_StorageSize
      (
         this : access IPlatformTelemetryRegistrationSettings_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UploadQuotaSize
      (
         this : access IPlatformTelemetryRegistrationSettings_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_UploadQuotaSize
      (
         this : access IPlatformTelemetryRegistrationSettings_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IPlatformTelemetryRegistrationSettings : aliased WinRt.IID := (2174387586, 51737, 16734, (187, 121, 156, 34, 75, 250, 58, 115 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package PlatformTelemetryClient is

      function Register
      (
         id : WinRt.WString
      )
      return WinRt.Windows.System.Diagnostics.Telemetry.PlatformTelemetryRegistrationResult;

      function Register
      (
         id : WinRt.WString;
         settings : Windows.System.Diagnostics.Telemetry.PlatformTelemetryRegistrationSettings'Class
      )
      return WinRt.Windows.System.Diagnostics.Telemetry.PlatformTelemetryRegistrationResult;

   end PlatformTelemetryClient;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PlatformTelemetryRegistrationResult

   overriding procedure Initialize (this : in out PlatformTelemetryRegistrationResult);
   overriding procedure Finalize (this : in out PlatformTelemetryRegistrationResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PlatformTelemetryRegistrationResult

   function get_Status
   (
      this : in out PlatformTelemetryRegistrationResult
   )
   return WinRt.Windows.System.Diagnostics.Telemetry.PlatformTelemetryRegistrationStatus;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PlatformTelemetryRegistrationSettings

   overriding procedure Initialize (this : in out PlatformTelemetryRegistrationSettings);
   overriding procedure Finalize (this : in out PlatformTelemetryRegistrationSettings);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PlatformTelemetryRegistrationSettings

   function Constructor return PlatformTelemetryRegistrationSettings;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PlatformTelemetryRegistrationSettings

   function get_StorageSize
   (
      this : in out PlatformTelemetryRegistrationSettings
   )
   return WinRt.UInt32;

   procedure put_StorageSize
   (
      this : in out PlatformTelemetryRegistrationSettings;
      value : WinRt.UInt32
   );

   function get_UploadQuotaSize
   (
      this : in out PlatformTelemetryRegistrationSettings
   )
   return WinRt.UInt32;

   procedure put_UploadQuotaSize
   (
      this : in out PlatformTelemetryRegistrationSettings;
      value : WinRt.UInt32
   );

end;
