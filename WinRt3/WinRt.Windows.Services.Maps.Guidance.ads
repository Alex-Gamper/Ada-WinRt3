--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.Devices.Geolocation;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.UI;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Services.Maps.Guidance is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IGuidanceAudioNotificationRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceAudioNotificationRequestedEventArgs is access IGuidanceAudioNotificationRequestedEventArgs_Interface'Class;
   type IGuidanceAudioNotificationRequestedEventArgs_Ptr is access all IGuidanceAudioNotificationRequestedEventArgs;

   type IGuidanceLaneInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceLaneInfo is access IGuidanceLaneInfo_Interface'Class;
   type IGuidanceLaneInfo_Ptr is access all IGuidanceLaneInfo;

   type IGuidanceManeuver_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceManeuver is access IGuidanceManeuver_Interface'Class;
   type IGuidanceManeuver_Ptr is access all IGuidanceManeuver;

   type IGuidanceMapMatchedCoordinate_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceMapMatchedCoordinate is access IGuidanceMapMatchedCoordinate_Interface'Class;
   type IGuidanceMapMatchedCoordinate_Ptr is access all IGuidanceMapMatchedCoordinate;

   type IGuidanceNavigator_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceNavigator is access IGuidanceNavigator_Interface'Class;
   type IGuidanceNavigator_Ptr is access all IGuidanceNavigator;

   type IGuidanceNavigator2_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceNavigator2 is access IGuidanceNavigator2_Interface'Class;

   type IGuidanceNavigatorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceNavigatorStatics is access IGuidanceNavigatorStatics_Interface'Class;

   type IGuidanceNavigatorStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceNavigatorStatics2 is access IGuidanceNavigatorStatics2_Interface'Class;

   type IGuidanceReroutedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceReroutedEventArgs is access IGuidanceReroutedEventArgs_Interface'Class;
   type IGuidanceReroutedEventArgs_Ptr is access all IGuidanceReroutedEventArgs;

   type IGuidanceRoadSegment_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceRoadSegment is access IGuidanceRoadSegment_Interface'Class;
   type IGuidanceRoadSegment_Ptr is access all IGuidanceRoadSegment;

   type IGuidanceRoadSegment2_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceRoadSegment2 is access IGuidanceRoadSegment2_Interface'Class;

   type IGuidanceRoadSignpost_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceRoadSignpost is access IGuidanceRoadSignpost_Interface'Class;
   type IGuidanceRoadSignpost_Ptr is access all IGuidanceRoadSignpost;

   type IGuidanceRoute_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceRoute is access IGuidanceRoute_Interface'Class;
   type IGuidanceRoute_Ptr is access all IGuidanceRoute;

   type IGuidanceRouteStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceRouteStatics is access IGuidanceRouteStatics_Interface'Class;

   type IGuidanceTelemetryCollector_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceTelemetryCollector is access IGuidanceTelemetryCollector_Interface'Class;
   type IGuidanceTelemetryCollector_Ptr is access all IGuidanceTelemetryCollector;

   type IGuidanceTelemetryCollectorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceTelemetryCollectorStatics is access IGuidanceTelemetryCollectorStatics_Interface'Class;

   type IGuidanceUpdatedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IGuidanceUpdatedEventArgs is access IGuidanceUpdatedEventArgs_Interface'Class;
   type IGuidanceUpdatedEventArgs_Ptr is access all IGuidanceUpdatedEventArgs;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type GuidanceAudioNotificationRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceAudioNotificationRequestedEventArgs : access Windows.Services.Maps.Guidance.IGuidanceAudioNotificationRequestedEventArgs;
      end record;
   type GuidanceAudioNotificationRequestedEventArgs_Ptr is access all GuidanceAudioNotificationRequestedEventArgs;

   type GuidanceLaneInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceLaneInfo : access Windows.Services.Maps.Guidance.IGuidanceLaneInfo;
      end record;
   type GuidanceLaneInfo_Ptr is access all GuidanceLaneInfo;

   type GuidanceManeuver is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceManeuver : access Windows.Services.Maps.Guidance.IGuidanceManeuver;
      end record;
   type GuidanceManeuver_Ptr is access all GuidanceManeuver;

   type GuidanceMapMatchedCoordinate is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceMapMatchedCoordinate : access Windows.Services.Maps.Guidance.IGuidanceMapMatchedCoordinate;
      end record;
   type GuidanceMapMatchedCoordinate_Ptr is access all GuidanceMapMatchedCoordinate;

   type GuidanceNavigator is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceNavigator : access Windows.Services.Maps.Guidance.IGuidanceNavigator;
      end record;
   type GuidanceNavigator_Ptr is access all GuidanceNavigator;

   type GuidanceReroutedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceReroutedEventArgs : access Windows.Services.Maps.Guidance.IGuidanceReroutedEventArgs;
      end record;
   type GuidanceReroutedEventArgs_Ptr is access all GuidanceReroutedEventArgs;

   type GuidanceRoadSegment is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceRoadSegment : access Windows.Services.Maps.Guidance.IGuidanceRoadSegment;
      end record;
   type GuidanceRoadSegment_Ptr is access all GuidanceRoadSegment;

   type GuidanceRoadSignpost is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceRoadSignpost : access Windows.Services.Maps.Guidance.IGuidanceRoadSignpost;
      end record;
   type GuidanceRoadSignpost_Ptr is access all GuidanceRoadSignpost;

   type GuidanceRoute is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceRoute : access Windows.Services.Maps.Guidance.IGuidanceRoute;
      end record;
   type GuidanceRoute_Ptr is access all GuidanceRoute;

   type GuidanceTelemetryCollector is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceTelemetryCollector : access Windows.Services.Maps.Guidance.IGuidanceTelemetryCollector;
      end record;
   type GuidanceTelemetryCollector_Ptr is access all GuidanceTelemetryCollector;

   type GuidanceUpdatedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IGuidanceUpdatedEventArgs : access Windows.Services.Maps.Guidance.IGuidanceUpdatedEventArgs;
      end record;
   type GuidanceUpdatedEventArgs_Ptr is access all GuidanceUpdatedEventArgs;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type GuidanceAudioMeasurementSystem is (
      Meters_e,
      MilesAndYards_e,
      MilesAndFeet_e
   );
   for GuidanceAudioMeasurementSystem use (
      Meters_e => 0,
      MilesAndYards_e => 1,
      MilesAndFeet_e => 2
   );
   type GuidanceAudioMeasurementSystem_Ptr is access all GuidanceAudioMeasurementSystem;

   type GuidanceAudioNotificationKind is (
      Maneuver_e,
      Route_e,
      Gps_e,
      SpeedLimit_e,
      Traffic_e,
      TrafficCamera_e
   );
   for GuidanceAudioNotificationKind use (
      Maneuver_e => 0,
      Route_e => 1,
      Gps_e => 2,
      SpeedLimit_e => 3,
      Traffic_e => 4,
      TrafficCamera_e => 5
   );
   type GuidanceAudioNotificationKind_Ptr is access all GuidanceAudioNotificationKind;

   type GuidanceAudioNotifications is (
      None_e,
      Maneuver_e,
      Route_e,
      Gps_e,
      SpeedLimit_e,
      Traffic_e,
      TrafficCamera_e
   );
   for GuidanceAudioNotifications use (
      None_e => 0,
      Maneuver_e => 1,
      Route_e => 2,
      Gps_e => 4,
      SpeedLimit_e => 8,
      Traffic_e => 16,
      TrafficCamera_e => 32
   );
   type GuidanceAudioNotifications_Ptr is access all GuidanceAudioNotifications;

   type GuidanceLaneMarkers is (
      None_e,
      LightRight_e,
      Right_e,
      HardRight_e,
      Straight_e,
      UTurnLeft_e,
      HardLeft_e,
      Left_e,
      LightLeft_e,
      UTurnRight_e,
      Unknown_e
   );
   for GuidanceLaneMarkers use (
      None_e => 0,
      LightRight_e => 1,
      Right_e => 2,
      HardRight_e => 4,
      Straight_e => 8,
      UTurnLeft_e => 16,
      HardLeft_e => 32,
      Left_e => 64,
      LightLeft_e => 128,
      UTurnRight_e => 256,
      Unknown_e => 4294967295
   );
   type GuidanceLaneMarkers_Ptr is access all GuidanceLaneMarkers;

   type GuidanceManeuverKind is (
      None_e,
      GoStraight_e,
      UTurnRight_e,
      UTurnLeft_e,
      TurnKeepRight_e,
      TurnLightRight_e,
      TurnRight_e,
      TurnHardRight_e,
      KeepMiddle_e,
      TurnKeepLeft_e,
      TurnLightLeft_e,
      TurnLeft_e,
      TurnHardLeft_e,
      FreewayEnterRight_e,
      FreewayEnterLeft_e,
      FreewayLeaveRight_e,
      FreewayLeaveLeft_e,
      FreewayKeepRight_e,
      FreewayKeepLeft_e,
      TrafficCircleRight1_e,
      TrafficCircleRight2_e,
      TrafficCircleRight3_e,
      TrafficCircleRight4_e,
      TrafficCircleRight5_e,
      TrafficCircleRight6_e,
      TrafficCircleRight7_e,
      TrafficCircleRight8_e,
      TrafficCircleRight9_e,
      TrafficCircleRight10_e,
      TrafficCircleRight11_e,
      TrafficCircleRight12_e,
      TrafficCircleLeft1_e,
      TrafficCircleLeft2_e,
      TrafficCircleLeft3_e,
      TrafficCircleLeft4_e,
      TrafficCircleLeft5_e,
      TrafficCircleLeft6_e,
      TrafficCircleLeft7_e,
      TrafficCircleLeft8_e,
      TrafficCircleLeft9_e,
      TrafficCircleLeft10_e,
      TrafficCircleLeft11_e,
      TrafficCircleLeft12_e,
      Start_e,
      End_e,
      TakeFerry_e,
      PassTransitStation_e,
      LeaveTransitStation_e
   );
   for GuidanceManeuverKind use (
      None_e => 0,
      GoStraight_e => 1,
      UTurnRight_e => 2,
      UTurnLeft_e => 3,
      TurnKeepRight_e => 4,
      TurnLightRight_e => 5,
      TurnRight_e => 6,
      TurnHardRight_e => 7,
      KeepMiddle_e => 8,
      TurnKeepLeft_e => 9,
      TurnLightLeft_e => 10,
      TurnLeft_e => 11,
      TurnHardLeft_e => 12,
      FreewayEnterRight_e => 13,
      FreewayEnterLeft_e => 14,
      FreewayLeaveRight_e => 15,
      FreewayLeaveLeft_e => 16,
      FreewayKeepRight_e => 17,
      FreewayKeepLeft_e => 18,
      TrafficCircleRight1_e => 19,
      TrafficCircleRight2_e => 20,
      TrafficCircleRight3_e => 21,
      TrafficCircleRight4_e => 22,
      TrafficCircleRight5_e => 23,
      TrafficCircleRight6_e => 24,
      TrafficCircleRight7_e => 25,
      TrafficCircleRight8_e => 26,
      TrafficCircleRight9_e => 27,
      TrafficCircleRight10_e => 28,
      TrafficCircleRight11_e => 29,
      TrafficCircleRight12_e => 30,
      TrafficCircleLeft1_e => 31,
      TrafficCircleLeft2_e => 32,
      TrafficCircleLeft3_e => 33,
      TrafficCircleLeft4_e => 34,
      TrafficCircleLeft5_e => 35,
      TrafficCircleLeft6_e => 36,
      TrafficCircleLeft7_e => 37,
      TrafficCircleLeft8_e => 38,
      TrafficCircleLeft9_e => 39,
      TrafficCircleLeft10_e => 40,
      TrafficCircleLeft11_e => 41,
      TrafficCircleLeft12_e => 42,
      Start_e => 43,
      End_e => 44,
      TakeFerry_e => 45,
      PassTransitStation_e => 46,
      LeaveTransitStation_e => 47
   );
   type GuidanceManeuverKind_Ptr is access all GuidanceManeuverKind;

   type GuidanceMode is (
      None_e,
      Simulation_e,
      Navigation_e,
      Tracking_e
   );
   for GuidanceMode use (
      None_e => 0,
      Simulation_e => 1,
      Navigation_e => 2,
      Tracking_e => 3
   );
   type GuidanceMode_Ptr is access all GuidanceMode;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (3561360537, 52344, 24284, (155, 97, 4, 226, 167, 153, 14, 30 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   package IVectorView_IGuidanceManeuver is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.Guidance.IGuidanceManeuver);
   IID_IVectorView_IGuidanceManeuver : aliased WinRt.IID := (2403678355, 64589, 22891, (156, 117, 218, 57, 63, 234, 158, 178 ));
   function QInterface_IVectorView_IGuidanceManeuver is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IGuidanceManeuver.Kind, IID_IVectorView_IGuidanceManeuver'Access);

   package IVectorView_IGuidanceRoadSegment is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.Guidance.IGuidanceRoadSegment);
   IID_IVectorView_IGuidanceRoadSegment : aliased WinRt.IID := (2403678355, 64589, 22891, (156, 117, 218, 57, 63, 234, 158, 178 ));
   function QInterface_IVectorView_IGuidanceRoadSegment is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IGuidanceRoadSegment.Kind, IID_IVectorView_IGuidanceRoadSegment'Access);

   package IVectorView_IGuidanceLaneInfo is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Services.Maps.Guidance.IGuidanceLaneInfo);
   IID_IVectorView_IGuidanceLaneInfo : aliased WinRt.IID := (2721903200, 31715, 23147, (164, 119, 147, 231, 233, 216, 176, 169 ));
   function QInterface_IVectorView_IGuidanceLaneInfo is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IGuidanceLaneInfo.Kind, IID_IVectorView_IGuidanceLaneInfo'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IGuidanceAudioNotificationRequestedEventArgs is interface and WinRt.IInspectable;

      function get_AudioNotification
      (
         this : access IGuidanceAudioNotificationRequestedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.GuidanceAudioNotificationKind
      )
      return WinRt.Hresult is abstract;

      function get_AudioFilePaths
      (
         this : access IGuidanceAudioNotificationRequestedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_AudioText
      (
         this : access IGuidanceAudioNotificationRequestedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceAudioNotificationRequestedEventArgs : aliased WinRt.IID := (3391791690, 51138, 19788, (157, 124, 73, 149, 118, 188, 237, 219 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceLaneInfo is interface and WinRt.IInspectable;

      function get_LaneMarkers
      (
         this : access IGuidanceLaneInfo_Interface;
         RetVal : access Windows.Services.Maps.Guidance.GuidanceLaneMarkers
      )
      return WinRt.Hresult is abstract;

      function get_IsOnRoute
      (
         this : access IGuidanceLaneInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceLaneInfo : aliased WinRt.IID := (2214908180, 25985, 17335, (172, 21, 201, 7, 155, 249, 13, 241 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceManeuver is interface and WinRt.IInspectable;

      function get_StartLocation
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_DistanceFromRouteStart
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_DistanceFromPreviousManeuver
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_DepartureRoadName
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NextRoadName
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DepartureShortRoadName
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NextShortRoadName
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Kind
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access Windows.Services.Maps.Guidance.GuidanceManeuverKind
      )
      return WinRt.Hresult is abstract;

      function get_StartAngle
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_EndAngle
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_RoadSignpost
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceRoadSignpost
      )
      return WinRt.Hresult is abstract;

      function get_InstructionText
      (
         this : access IGuidanceManeuver_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceManeuver : aliased WinRt.IID := (4228461164, 60617, 18728, (162, 161, 114, 50, 185, 155, 148, 161 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceMapMatchedCoordinate is interface and WinRt.IInspectable;

      function get_Location
      (
         this : access IGuidanceMapMatchedCoordinate_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_CurrentHeading
      (
         this : access IGuidanceMapMatchedCoordinate_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_CurrentSpeed
      (
         this : access IGuidanceMapMatchedCoordinate_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_IsOnStreet
      (
         this : access IGuidanceMapMatchedCoordinate_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Road
      (
         this : access IGuidanceMapMatchedCoordinate_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceRoadSegment
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceMapMatchedCoordinate : aliased WinRt.IID := (3081548136, 10514, 19097, (175, 241, 121, 134, 9, 185, 129, 254 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceNavigator is interface and WinRt.IInspectable;

      function StartNavigating
      (
         this : access IGuidanceNavigator_Interface;
         route : Windows.Services.Maps.Guidance.IGuidanceRoute
      )
      return WinRt.Hresult is abstract;

      function StartSimulating
      (
         this : access IGuidanceNavigator_Interface;
         route : Windows.Services.Maps.Guidance.IGuidanceRoute;
         speedInMetersPerSecond : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function StartTracking
      (
         this : access IGuidanceNavigator_Interface
      )
      return WinRt.Hresult is abstract;

      function Pause
      (
         this : access IGuidanceNavigator_Interface
      )
      return WinRt.Hresult is abstract;

      function Resume
      (
         this : access IGuidanceNavigator_Interface
      )
      return WinRt.Hresult is abstract;

      function Stop
      (
         this : access IGuidanceNavigator_Interface
      )
      return WinRt.Hresult is abstract;

      function RepeatLastAudioNotification
      (
         this : access IGuidanceNavigator_Interface
      )
      return WinRt.Hresult is abstract;

      function get_AudioMeasurementSystem
      (
         this : access IGuidanceNavigator_Interface;
         RetVal : access Windows.Services.Maps.Guidance.GuidanceAudioMeasurementSystem
      )
      return WinRt.Hresult is abstract;

      function put_AudioMeasurementSystem
      (
         this : access IGuidanceNavigator_Interface;
         value : Windows.Services.Maps.Guidance.GuidanceAudioMeasurementSystem
      )
      return WinRt.Hresult is abstract;

      function get_AudioNotifications
      (
         this : access IGuidanceNavigator_Interface;
         RetVal : access Windows.Services.Maps.Guidance.GuidanceAudioNotifications
      )
      return WinRt.Hresult is abstract;

      function put_AudioNotifications
      (
         this : access IGuidanceNavigator_Interface;
         value : Windows.Services.Maps.Guidance.GuidanceAudioNotifications
      )
      return WinRt.Hresult is abstract;

      function add_GuidanceUpdated
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_GuidanceUpdated
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_DestinationReached
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_DestinationReached
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Rerouting
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Rerouting
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Rerouted
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Rerouted
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_RerouteFailed
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_RerouteFailed
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_UserLocationLost
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_UserLocationLost
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_UserLocationRestored
      (
         this : access IGuidanceNavigator_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_UserLocationRestored
      (
         this : access IGuidanceNavigator_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function SetGuidanceVoice
      (
         this : access IGuidanceNavigator_Interface;
         voiceId : WinRt.Int32;
         voiceFolder : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function UpdateUserLocation
      (
         this : access IGuidanceNavigator_Interface;
         userLocation : Windows.Devices.Geolocation.IGeocoordinate
      )
      return WinRt.Hresult is abstract;

      function UpdateUserLocation
      (
         this : access IGuidanceNavigator_Interface;
         userLocation : Windows.Devices.Geolocation.IGeocoordinate;
         positionOverride : Windows.Devices.Geolocation.BasicGeoposition
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceNavigator : aliased WinRt.IID := (150044407, 36415, 19866, (190, 138, 16, 143, 154, 1, 44, 103 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceNavigator2 is interface and WinRt.IInspectable;

      function add_AudioNotificationRequested
      (
         this : access IGuidanceNavigator2_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AudioNotificationRequested
      (
         this : access IGuidanceNavigator2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_IsGuidanceAudioMuted
      (
         this : access IGuidanceNavigator2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsGuidanceAudioMuted
      (
         this : access IGuidanceNavigator2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceNavigator2 : aliased WinRt.IID := (1826377937, 1052, 19443, (182, 51, 161, 1, 252, 47, 107, 87 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceNavigatorStatics is interface and WinRt.IInspectable;

      function GetCurrent
      (
         this : access IGuidanceNavigatorStatics_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceNavigator
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceNavigatorStatics : aliased WinRt.IID := (16618771, 17494, 20070, (161, 67, 58, 221, 107, 224, 132, 38 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceNavigatorStatics2 is interface and WinRt.IInspectable;

      function get_UseAppProvidedVoice
      (
         this : access IGuidanceNavigatorStatics2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceNavigatorStatics2 : aliased WinRt.IID := (1422246882, 30596, 19589, (140, 149, 208, 198, 239, 180, 57, 101 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceReroutedEventArgs is interface and WinRt.IInspectable;

      function get_Route
      (
         this : access IGuidanceReroutedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceRoute
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceReroutedEventArgs : aliased WinRt.IID := (291323912, 54568, 17742, (187, 148, 165, 3, 65, 210, 201, 241 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceRoadSegment is interface and WinRt.IInspectable;

      function get_RoadName
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ShortRoadName
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SpeedLimit
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_TravelTime
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Path
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsHighway
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTunnel
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTollRoad
      (
         this : access IGuidanceRoadSegment_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceRoadSegment : aliased WinRt.IID := (3005700262, 48760, 19555, (175, 231, 108, 41, 87, 71, 155, 62 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceRoadSegment2 is interface and WinRt.IInspectable;

      function get_IsScenic
      (
         this : access IGuidanceRoadSegment2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceRoadSegment2 : aliased WinRt.IID := (611624477, 5923, 18929, (137, 91, 71, 162, 196, 170, 156, 85 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceRoadSignpost is interface and WinRt.IInspectable;

      function get_ExitNumber
      (
         this : access IGuidanceRoadSignpost_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Exit
      (
         this : access IGuidanceRoadSignpost_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BackgroundColor
      (
         this : access IGuidanceRoadSignpost_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_ForegroundColor
      (
         this : access IGuidanceRoadSignpost_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_ExitDirections
      (
         this : access IGuidanceRoadSignpost_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceRoadSignpost : aliased WinRt.IID := (4054263990, 63354, 18242, (131, 18, 83, 48, 15, 152, 69, 240 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceRoute is interface and WinRt.IInspectable;

      function get_Duration
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Distance
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Maneuvers
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_BoundingBox
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoboundingBox
      )
      return WinRt.Hresult is abstract;

      function get_Path
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function get_RoadSegments
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ConvertToMapRoute
      (
         this : access IGuidanceRoute_Interface;
         RetVal : access Windows.Services.Maps.IMapRoute
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceRoute : aliased WinRt.IID := (974410845, 32794, 16573, (162, 134, 175, 178, 1, 12, 206, 108 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceRouteStatics is interface and WinRt.IInspectable;

      function CanCreateFromMapRoute
      (
         this : access IGuidanceRouteStatics_Interface;
         mapRoute : Windows.Services.Maps.IMapRoute;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function TryCreateFromMapRoute
      (
         this : access IGuidanceRouteStatics_Interface;
         mapRoute : Windows.Services.Maps.IMapRoute;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceRoute
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceRouteStatics : aliased WinRt.IID := (4117598826, 21997, 18881, (176, 156, 75, 130, 35, 181, 13, 179 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceTelemetryCollector is interface and WinRt.IInspectable;

      function get_Enabled
      (
         this : access IGuidanceTelemetryCollector_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Enabled
      (
         this : access IGuidanceTelemetryCollector_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function ClearLocalData
      (
         this : access IGuidanceTelemetryCollector_Interface
      )
      return WinRt.Hresult is abstract;

      function get_SpeedTrigger
      (
         this : access IGuidanceTelemetryCollector_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_SpeedTrigger
      (
         this : access IGuidanceTelemetryCollector_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_UploadFrequency
      (
         this : access IGuidanceTelemetryCollector_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_UploadFrequency
      (
         this : access IGuidanceTelemetryCollector_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceTelemetryCollector : aliased WinRt.IID := (3676278181, 47224, 19858, (152, 221, 52, 125, 35, 211, 130, 98 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceTelemetryCollectorStatics is interface and WinRt.IInspectable;

      function GetCurrent
      (
         this : access IGuidanceTelemetryCollectorStatics_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceTelemetryCollector
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceTelemetryCollectorStatics : aliased WinRt.IID := (911417415, 61792, 17659, (181, 120, 148, 87, 124, 160, 89, 144 ));

   -----------------------------------------------------------------------------
   -- type IGuidanceUpdatedEventArgs is interface and WinRt.IInspectable;

      function get_Mode
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.GuidanceMode
      )
      return WinRt.Hresult is abstract;

      function get_NextManeuver
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceManeuver
      )
      return WinRt.Hresult is abstract;

      function get_NextManeuverDistance
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_AfterNextManeuver
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceManeuver
      )
      return WinRt.Hresult is abstract;

      function get_AfterNextManeuverDistance
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_DistanceToDestination
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ElapsedDistance
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ElapsedTime
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_TimeToDestination
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_RoadName
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Route
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceRoute
      )
      return WinRt.Hresult is abstract;

      function get_CurrentLocation
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access Windows.Services.Maps.Guidance.IGuidanceMapMatchedCoordinate
      )
      return WinRt.Hresult is abstract;

      function get_IsNewManeuver
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_LaneInfo
      (
         this : access IGuidanceUpdatedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGuidanceUpdatedEventArgs : aliased WinRt.IID := (4255913483, 40589, 19939, (169, 250, 176, 99, 33, 209, 141, 185 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceAudioNotificationRequestedEventArgs

   overriding procedure Initialize (this : in out GuidanceAudioNotificationRequestedEventArgs);
   overriding procedure Finalize (this : in out GuidanceAudioNotificationRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceAudioNotificationRequestedEventArgs

   function get_AudioNotification
   (
      this : in out GuidanceAudioNotificationRequestedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceAudioNotificationKind;

   function get_AudioFilePaths
   (
      this : in out GuidanceAudioNotificationRequestedEventArgs
   )
   return IVectorView_HString.Kind;

   function get_AudioText
   (
      this : in out GuidanceAudioNotificationRequestedEventArgs
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceLaneInfo

   overriding procedure Initialize (this : in out GuidanceLaneInfo);
   overriding procedure Finalize (this : in out GuidanceLaneInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceLaneInfo

   function get_LaneMarkers
   (
      this : in out GuidanceLaneInfo
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceLaneMarkers;

   function get_IsOnRoute
   (
      this : in out GuidanceLaneInfo
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceManeuver

   overriding procedure Initialize (this : in out GuidanceManeuver);
   overriding procedure Finalize (this : in out GuidanceManeuver);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceManeuver

   function get_StartLocation
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_DistanceFromRouteStart
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Int32;

   function get_DistanceFromPreviousManeuver
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Int32;

   function get_DepartureRoadName
   (
      this : in out GuidanceManeuver
   )
   return WinRt.WString;

   function get_NextRoadName
   (
      this : in out GuidanceManeuver
   )
   return WinRt.WString;

   function get_DepartureShortRoadName
   (
      this : in out GuidanceManeuver
   )
   return WinRt.WString;

   function get_NextShortRoadName
   (
      this : in out GuidanceManeuver
   )
   return WinRt.WString;

   function get_Kind
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceManeuverKind;

   function get_StartAngle
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Int32;

   function get_EndAngle
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Int32;

   function get_RoadSignpost
   (
      this : in out GuidanceManeuver
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceRoadSignpost'Class;

   function get_InstructionText
   (
      this : in out GuidanceManeuver
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceMapMatchedCoordinate

   overriding procedure Initialize (this : in out GuidanceMapMatchedCoordinate);
   overriding procedure Finalize (this : in out GuidanceMapMatchedCoordinate);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceMapMatchedCoordinate

   function get_Location
   (
      this : in out GuidanceMapMatchedCoordinate
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_CurrentHeading
   (
      this : in out GuidanceMapMatchedCoordinate
   )
   return WinRt.Double;

   function get_CurrentSpeed
   (
      this : in out GuidanceMapMatchedCoordinate
   )
   return WinRt.Double;

   function get_IsOnStreet
   (
      this : in out GuidanceMapMatchedCoordinate
   )
   return WinRt.Boolean;

   function get_Road
   (
      this : in out GuidanceMapMatchedCoordinate
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceRoadSegment'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceNavigator

   overriding procedure Initialize (this : in out GuidanceNavigator);
   overriding procedure Finalize (this : in out GuidanceNavigator);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GuidanceNavigator

   function GetCurrent
   return WinRt.Windows.Services.Maps.Guidance.GuidanceNavigator;

   function get_UseAppProvidedVoice
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceNavigator

   procedure StartNavigating
   (
      this : in out GuidanceNavigator;
      route : Windows.Services.Maps.Guidance.GuidanceRoute'Class
   );

   procedure StartSimulating
   (
      this : in out GuidanceNavigator;
      route : Windows.Services.Maps.Guidance.GuidanceRoute'Class;
      speedInMetersPerSecond : WinRt.Int32
   );

   procedure StartTracking
   (
      this : in out GuidanceNavigator
   );

   procedure Pause
   (
      this : in out GuidanceNavigator
   );

   procedure Resume
   (
      this : in out GuidanceNavigator
   );

   procedure Stop
   (
      this : in out GuidanceNavigator
   );

   procedure RepeatLastAudioNotification
   (
      this : in out GuidanceNavigator
   );

   function get_AudioMeasurementSystem
   (
      this : in out GuidanceNavigator
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceAudioMeasurementSystem;

   procedure put_AudioMeasurementSystem
   (
      this : in out GuidanceNavigator;
      value : Windows.Services.Maps.Guidance.GuidanceAudioMeasurementSystem
   );

   function get_AudioNotifications
   (
      this : in out GuidanceNavigator
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceAudioNotifications;

   procedure put_AudioNotifications
   (
      this : in out GuidanceNavigator;
      value : Windows.Services.Maps.Guidance.GuidanceAudioNotifications
   );

   function add_GuidanceUpdated
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_GuidanceUpdated
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_DestinationReached
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_DestinationReached
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Rerouting
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Rerouting
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Rerouted
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Rerouted
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_RerouteFailed
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_RerouteFailed
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_UserLocationLost
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_UserLocationLost
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_UserLocationRestored
   (
      this : in out GuidanceNavigator;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_UserLocationRestored
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure SetGuidanceVoice
   (
      this : in out GuidanceNavigator;
      voiceId : WinRt.Int32;
      voiceFolder : WinRt.WString
   );

   procedure UpdateUserLocation
   (
      this : in out GuidanceNavigator;
      userLocation : Windows.Devices.Geolocation.Geocoordinate'Class
   );

   procedure UpdateUserLocation
   (
      this : in out GuidanceNavigator;
      userLocation : Windows.Devices.Geolocation.Geocoordinate'Class;
      positionOverride : Windows.Devices.Geolocation.BasicGeoposition
   );

   function add_AudioNotificationRequested
   (
      this : in out GuidanceNavigator;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AudioNotificationRequested
   (
      this : in out GuidanceNavigator;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_IsGuidanceAudioMuted
   (
      this : in out GuidanceNavigator
   )
   return WinRt.Boolean;

   procedure put_IsGuidanceAudioMuted
   (
      this : in out GuidanceNavigator;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceReroutedEventArgs

   overriding procedure Initialize (this : in out GuidanceReroutedEventArgs);
   overriding procedure Finalize (this : in out GuidanceReroutedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceReroutedEventArgs

   function get_Route
   (
      this : in out GuidanceReroutedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceRoute'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceRoadSegment

   overriding procedure Initialize (this : in out GuidanceRoadSegment);
   overriding procedure Finalize (this : in out GuidanceRoadSegment);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceRoadSegment

   function get_RoadName
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.WString;

   function get_ShortRoadName
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.WString;

   function get_SpeedLimit
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Double;

   function get_TravelTime
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_Path
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   function get_Id
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.WString;

   function get_IsHighway
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Boolean;

   function get_IsTunnel
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Boolean;

   function get_IsTollRoad
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Boolean;

   function get_IsScenic
   (
      this : in out GuidanceRoadSegment
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceRoadSignpost

   overriding procedure Initialize (this : in out GuidanceRoadSignpost);
   overriding procedure Finalize (this : in out GuidanceRoadSignpost);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceRoadSignpost

   function get_ExitNumber
   (
      this : in out GuidanceRoadSignpost
   )
   return WinRt.WString;

   function get_Exit
   (
      this : in out GuidanceRoadSignpost
   )
   return WinRt.WString;

   function get_BackgroundColor
   (
      this : in out GuidanceRoadSignpost
   )
   return WinRt.Windows.UI.Color;

   function get_ForegroundColor
   (
      this : in out GuidanceRoadSignpost
   )
   return WinRt.Windows.UI.Color;

   function get_ExitDirections
   (
      this : in out GuidanceRoadSignpost
   )
   return IVectorView_HString.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceRoute

   overriding procedure Initialize (this : in out GuidanceRoute);
   overriding procedure Finalize (this : in out GuidanceRoute);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GuidanceRoute

   function CanCreateFromMapRoute
   (
      mapRoute : Windows.Services.Maps.MapRoute'Class
   )
   return WinRt.Boolean;

   function TryCreateFromMapRoute
   (
      mapRoute : Windows.Services.Maps.MapRoute'Class
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceRoute;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceRoute

   function get_Duration
   (
      this : in out GuidanceRoute
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_Distance
   (
      this : in out GuidanceRoute
   )
   return WinRt.Int32;

   function get_Maneuvers
   (
      this : in out GuidanceRoute
   )
   return IVectorView_IGuidanceManeuver.Kind;

   function get_BoundingBox
   (
      this : in out GuidanceRoute
   )
   return WinRt.Windows.Devices.Geolocation.GeoboundingBox'Class;

   function get_Path
   (
      this : in out GuidanceRoute
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   function get_RoadSegments
   (
      this : in out GuidanceRoute
   )
   return IVectorView_IGuidanceRoadSegment.Kind;

   function ConvertToMapRoute
   (
      this : in out GuidanceRoute
   )
   return WinRt.Windows.Services.Maps.MapRoute'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceTelemetryCollector

   overriding procedure Initialize (this : in out GuidanceTelemetryCollector);
   overriding procedure Finalize (this : in out GuidanceTelemetryCollector);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GuidanceTelemetryCollector

   function GetCurrent
   return WinRt.Windows.Services.Maps.Guidance.GuidanceTelemetryCollector;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceTelemetryCollector

   function get_Enabled
   (
      this : in out GuidanceTelemetryCollector
   )
   return WinRt.Boolean;

   procedure put_Enabled
   (
      this : in out GuidanceTelemetryCollector;
      value : WinRt.Boolean
   );

   procedure ClearLocalData
   (
      this : in out GuidanceTelemetryCollector
   );

   function get_SpeedTrigger
   (
      this : in out GuidanceTelemetryCollector
   )
   return WinRt.Double;

   procedure put_SpeedTrigger
   (
      this : in out GuidanceTelemetryCollector;
      value : WinRt.Double
   );

   function get_UploadFrequency
   (
      this : in out GuidanceTelemetryCollector
   )
   return WinRt.Int32;

   procedure put_UploadFrequency
   (
      this : in out GuidanceTelemetryCollector;
      value : WinRt.Int32
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GuidanceUpdatedEventArgs

   overriding procedure Initialize (this : in out GuidanceUpdatedEventArgs);
   overriding procedure Finalize (this : in out GuidanceUpdatedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GuidanceUpdatedEventArgs

   function get_Mode
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceMode;

   function get_NextManeuver
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceManeuver'Class;

   function get_NextManeuverDistance
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Int32;

   function get_AfterNextManeuver
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceManeuver'Class;

   function get_AfterNextManeuverDistance
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Int32;

   function get_DistanceToDestination
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Int32;

   function get_ElapsedDistance
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Int32;

   function get_ElapsedTime
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_TimeToDestination
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_RoadName
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.WString;

   function get_Route
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceRoute'Class;

   function get_CurrentLocation
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Windows.Services.Maps.Guidance.GuidanceMapMatchedCoordinate'Class;

   function get_IsNewManeuver
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return WinRt.Boolean;

   function get_LaneInfo
   (
      this : in out GuidanceUpdatedEventArgs
   )
   return IVectorView_IGuidanceLaneInfo.Kind;

end;
