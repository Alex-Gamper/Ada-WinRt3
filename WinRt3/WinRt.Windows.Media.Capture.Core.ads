--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Media.Capture.Core is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IVariablePhotoCapturedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IVariablePhotoCapturedEventArgs is access all IVariablePhotoCapturedEventArgs_Interface'Class;
   type IVariablePhotoCapturedEventArgs_Ptr is access all IVariablePhotoCapturedEventArgs;

   type IVariablePhotoSequenceCapture_Interface is interface and WinRt.IInspectable_Interface;
   type IVariablePhotoSequenceCapture is access all IVariablePhotoSequenceCapture_Interface'Class;
   type IVariablePhotoSequenceCapture_Ptr is access all IVariablePhotoSequenceCapture;

   type IVariablePhotoSequenceCapture2_Interface is interface and WinRt.IInspectable_Interface;
   type IVariablePhotoSequenceCapture2 is access all IVariablePhotoSequenceCapture2_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type VariablePhotoCapturedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IVariablePhotoCapturedEventArgs : access Windows.Media.Capture.Core.IVariablePhotoCapturedEventArgs;
      end record;
   type VariablePhotoCapturedEventArgs_Ptr is access all VariablePhotoCapturedEventArgs;

   type VariablePhotoSequenceCapture is new Ada.Finalization.Limited_Controlled with
      record
         m_IVariablePhotoSequenceCapture : access Windows.Media.Capture.Core.IVariablePhotoSequenceCapture;
      end record;
   type VariablePhotoSequenceCapture_Ptr is access all VariablePhotoSequenceCapture;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IReference_UInt32 is new WinRt.Windows.Foundation.IReference (WinRt.UInt32);
   IID_IReference_UInt32 : aliased WinRt.IID := (3419083471, 13923, 24018, (147, 252, 160, 54, 96, 194, 137, 205 ));
   function QInterface_IReference_UInt32 is new Generic_QueryInterface (GenericObject_Interface, IReference_UInt32.Kind, IID_IReference_UInt32'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IVariablePhotoCapturedEventArgs is interface and WinRt.IInspectable;

      function get_Frame
      (
         this : access IVariablePhotoCapturedEventArgs_Interface;
         RetVal : access Windows.Media.Capture.ICapturedFrame
      )
      return WinRt.Hresult is abstract;

      function get_CaptureTimeOffset
      (
         this : access IVariablePhotoCapturedEventArgs_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_UsedFrameControllerIndex
      (
         this : access IVariablePhotoCapturedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_CapturedFrameControlValues
      (
         this : access IVariablePhotoCapturedEventArgs_Interface;
         RetVal : access Windows.Media.Capture.ICapturedFrameControlValues
      )
      return WinRt.Hresult is abstract;

      IID_IVariablePhotoCapturedEventArgs : aliased WinRt.IID := (3521858652, 6995, 20042, (139, 92, 219, 120, 135, 172, 148, 155 ));

   -----------------------------------------------------------------------------
   -- type IVariablePhotoSequenceCapture is interface and WinRt.IInspectable;

      function StartAsync
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function StopAsync
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function FinishAsync
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function add_PhotoCaptured
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PhotoCaptured
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Stopped
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Stopped
      (
         this : access IVariablePhotoSequenceCapture_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IVariablePhotoSequenceCapture : aliased WinRt.IID := (3490786589, 798, 16449, (166, 214, 189, 116, 36, 118, 168, 238 ));

   -----------------------------------------------------------------------------
   -- type IVariablePhotoSequenceCapture2 is interface and WinRt.IInspectable;

      function UpdateSettingsAsync
      (
         this : access IVariablePhotoSequenceCapture2_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IVariablePhotoSequenceCapture2 : aliased WinRt.IID := (4264321724, 20656, 17379, (145, 124, 227, 185, 39, 152, 148, 47 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for VariablePhotoCapturedEventArgs

   overriding procedure Initialize (this : in out VariablePhotoCapturedEventArgs);
   overriding procedure Finalize (this : in out VariablePhotoCapturedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for VariablePhotoCapturedEventArgs

   function get_Frame
   (
      this : in out VariablePhotoCapturedEventArgs
   )
   return WinRt.Windows.Media.Capture.CapturedFrame'Class;

   function get_CaptureTimeOffset
   (
      this : in out VariablePhotoCapturedEventArgs
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_UsedFrameControllerIndex
   (
      this : in out VariablePhotoCapturedEventArgs
   )
   return IReference_UInt32.Kind;

   function get_CapturedFrameControlValues
   (
      this : in out VariablePhotoCapturedEventArgs
   )
   return WinRt.Windows.Media.Capture.CapturedFrameControlValues'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for VariablePhotoSequenceCapture

   overriding procedure Initialize (this : in out VariablePhotoSequenceCapture);
   overriding procedure Finalize (this : in out VariablePhotoSequenceCapture);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for VariablePhotoSequenceCapture

   procedure StartAsync
   (
      this : in out VariablePhotoSequenceCapture
   );

   procedure StopAsync
   (
      this : in out VariablePhotoSequenceCapture
   );

   procedure FinishAsync
   (
      this : in out VariablePhotoSequenceCapture
   );

   function add_PhotoCaptured
   (
      this : in out VariablePhotoSequenceCapture;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PhotoCaptured
   (
      this : in out VariablePhotoSequenceCapture;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Stopped
   (
      this : in out VariablePhotoSequenceCapture;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Stopped
   (
      this : in out VariablePhotoSequenceCapture;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure UpdateSettingsAsync
   (
      this : in out VariablePhotoSequenceCapture
   );

end;
