--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Globalization.NumberFormatting is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ICurrencyFormatter_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyFormatter is access ICurrencyFormatter_Interface'Class;
   type ICurrencyFormatter_Ptr is access all ICurrencyFormatter;

   type ICurrencyFormatter2_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyFormatter2 is access ICurrencyFormatter2_Interface'Class;

   type ICurrencyFormatterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrencyFormatterFactory is access ICurrencyFormatterFactory_Interface'Class;

   type IDecimalFormatterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IDecimalFormatterFactory is access IDecimalFormatterFactory_Interface'Class;

   type IIncrementNumberRounder_Interface is interface and WinRt.IInspectable_Interface;
   type IIncrementNumberRounder is access IIncrementNumberRounder_Interface'Class;

   type INumberFormatter_Interface is interface and WinRt.IInspectable_Interface;
   type INumberFormatter is access INumberFormatter_Interface'Class;
   type INumberFormatter_Ptr is access all INumberFormatter;

   type INumberFormatter2_Interface is interface and WinRt.IInspectable_Interface;
   type INumberFormatter2 is access INumberFormatter2_Interface'Class;

   type INumberFormatterOptions_Interface is interface and WinRt.IInspectable_Interface;
   type INumberFormatterOptions is access INumberFormatterOptions_Interface'Class;

   type INumberParser_Interface is interface and WinRt.IInspectable_Interface;
   type INumberParser is access INumberParser_Interface'Class;

   type INumberRounder_Interface is interface and WinRt.IInspectable_Interface;
   type INumberRounder is access INumberRounder_Interface'Class;
   type INumberRounder_Ptr is access all INumberRounder;

   type INumberRounderOption_Interface is interface and WinRt.IInspectable_Interface;
   type INumberRounderOption is access INumberRounderOption_Interface'Class;

   type INumeralSystemTranslator_Interface is interface and WinRt.IInspectable_Interface;
   type INumeralSystemTranslator is access INumeralSystemTranslator_Interface'Class;
   type INumeralSystemTranslator_Ptr is access all INumeralSystemTranslator;

   type INumeralSystemTranslatorFactory_Interface is interface and WinRt.IInspectable_Interface;
   type INumeralSystemTranslatorFactory is access INumeralSystemTranslatorFactory_Interface'Class;

   type IPercentFormatterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IPercentFormatterFactory is access IPercentFormatterFactory_Interface'Class;

   type IPermilleFormatterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IPermilleFormatterFactory is access IPermilleFormatterFactory_Interface'Class;

   type ISignedZeroOption_Interface is interface and WinRt.IInspectable_Interface;
   type ISignedZeroOption is access ISignedZeroOption_Interface'Class;

   type ISignificantDigitsNumberRounder_Interface is interface and WinRt.IInspectable_Interface;
   type ISignificantDigitsNumberRounder is access ISignificantDigitsNumberRounder_Interface'Class;

   type ISignificantDigitsOption_Interface is interface and WinRt.IInspectable_Interface;
   type ISignificantDigitsOption is access ISignificantDigitsOption_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type CurrencyFormatter is new Ada.Finalization.Limited_Controlled with
      record
         m_ICurrencyFormatter : access Windows.Globalization.NumberFormatting.ICurrencyFormatter;
      end record;
   type CurrencyFormatter_Ptr is access all CurrencyFormatter;

   type DecimalFormatter is new Ada.Finalization.Limited_Controlled with
      record
         m_INumberFormatter : access Windows.Globalization.NumberFormatting.INumberFormatter;
      end record;
   type DecimalFormatter_Ptr is access all DecimalFormatter;

   type IncrementNumberRounder is new Ada.Finalization.Limited_Controlled with
      record
         m_INumberRounder : access Windows.Globalization.NumberFormatting.INumberRounder;
      end record;
   type IncrementNumberRounder_Ptr is access all IncrementNumberRounder;

   type NumeralSystemTranslator is new Ada.Finalization.Limited_Controlled with
      record
         m_INumeralSystemTranslator : access Windows.Globalization.NumberFormatting.INumeralSystemTranslator;
      end record;
   type NumeralSystemTranslator_Ptr is access all NumeralSystemTranslator;

   type PercentFormatter is new Ada.Finalization.Limited_Controlled with
      record
         m_INumberFormatter : access Windows.Globalization.NumberFormatting.INumberFormatter;
      end record;
   type PercentFormatter_Ptr is access all PercentFormatter;

   type PermilleFormatter is new Ada.Finalization.Limited_Controlled with
      record
         m_INumberFormatter : access Windows.Globalization.NumberFormatting.INumberFormatter;
      end record;
   type PermilleFormatter_Ptr is access all PermilleFormatter;

   type SignificantDigitsNumberRounder is new Ada.Finalization.Limited_Controlled with
      record
         m_INumberRounder : access Windows.Globalization.NumberFormatting.INumberRounder;
      end record;
   type SignificantDigitsNumberRounder_Ptr is access all SignificantDigitsNumberRounder;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type CurrencyFormatterMode is (
      UseSymbol_e,
      UseCurrencyCode_e
   );
   for CurrencyFormatterMode use (
      UseSymbol_e => 0,
      UseCurrencyCode_e => 1
   );
   type CurrencyFormatterMode_Ptr is access all CurrencyFormatterMode;

   type RoundingAlgorithm is (
      None_e,
      RoundDown_e,
      RoundUp_e,
      RoundTowardsZero_e,
      RoundAwayFromZero_e,
      RoundHalfDown_e,
      RoundHalfUp_e,
      RoundHalfTowardsZero_e,
      RoundHalfAwayFromZero_e,
      RoundHalfToEven_e,
      RoundHalfToOdd_e
   );
   for RoundingAlgorithm use (
      None_e => 0,
      RoundDown_e => 1,
      RoundUp_e => 2,
      RoundTowardsZero_e => 3,
      RoundAwayFromZero_e => 4,
      RoundHalfDown_e => 5,
      RoundHalfUp_e => 6,
      RoundHalfTowardsZero_e => 7,
      RoundHalfAwayFromZero_e => 8,
      RoundHalfToEven_e => 9,
      RoundHalfToOdd_e => 10
   );
   type RoundingAlgorithm_Ptr is access all RoundingAlgorithm;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IReference_Int64 is new WinRt.Windows.Foundation.IReference (WinRt.Int64);
   IID_IReference_Int64 : aliased WinRt.IID := (2092291537, 25497, 20656, (161, 190, 130, 225, 123, 178, 105, 191 ));
   function QInterface_IReference_Int64 is new Generic_QueryInterface (GenericObject_Interface, IReference_Int64.Kind, IID_IReference_Int64'Access);

   package IReference_UInt64 is new WinRt.Windows.Foundation.IReference (WinRt.UInt64);
   IID_IReference_UInt64 : aliased WinRt.IID := (2092291537, 25497, 20656, (161, 190, 130, 225, 123, 178, 105, 191 ));
   function QInterface_IReference_UInt64 is new Generic_QueryInterface (GenericObject_Interface, IReference_UInt64.Kind, IID_IReference_UInt64'Access);

   package IReference_Double is new WinRt.Windows.Foundation.IReference (WinRt.Double);
   IID_IReference_Double : aliased WinRt.IID := (2092291537, 25497, 20656, (161, 190, 130, 225, 123, 178, 105, 191 ));
   function QInterface_IReference_Double is new Generic_QueryInterface (GenericObject_Interface, IReference_Double.Kind, IID_IReference_Double'Access);

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (3511893373, 26806, 23175, (173, 166, 214, 208, 21, 181, 43, 47 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ICurrencyFormatter is interface and WinRt.IInspectable;

      function get_Currency
      (
         this : access ICurrencyFormatter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Currency
      (
         this : access ICurrencyFormatter_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyFormatter : aliased WinRt.IID := (292752549, 19200, 16818, (179, 50, 115, 177, 42, 73, 125, 84 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyFormatter2 is interface and WinRt.IInspectable;

      function get_Mode
      (
         this : access ICurrencyFormatter2_Interface;
         RetVal : access Windows.Globalization.NumberFormatting.CurrencyFormatterMode
      )
      return WinRt.Hresult is abstract;

      function put_Mode
      (
         this : access ICurrencyFormatter2_Interface;
         value : Windows.Globalization.NumberFormatting.CurrencyFormatterMode
      )
      return WinRt.Hresult is abstract;

      function ApplyRoundingForCurrency
      (
         this : access ICurrencyFormatter2_Interface;
         roundingAlgorithm : Windows.Globalization.NumberFormatting.RoundingAlgorithm
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyFormatter2 : aliased WinRt.IID := (120336157, 59322, 16791, (146, 14, 36, 124, 146, 247, 222, 166 ));

   -----------------------------------------------------------------------------
   -- type ICurrencyFormatterFactory is interface and WinRt.IInspectable;

      function CreateCurrencyFormatterCode
      (
         this : access ICurrencyFormatterFactory_Interface;
         currencyCode : WinRt.HString;
         RetVal : access Windows.Globalization.NumberFormatting.ICurrencyFormatter
      )
      return WinRt.Hresult is abstract;

      function CreateCurrencyFormatterCodeContext
      (
         this : access ICurrencyFormatterFactory_Interface;
         currencyCode : WinRt.HString;
         languages : GenericObject;
         geographicRegion : WinRt.HString;
         RetVal : access Windows.Globalization.NumberFormatting.ICurrencyFormatter
      )
      return WinRt.Hresult is abstract;

      IID_ICurrencyFormatterFactory : aliased WinRt.IID := (2261209982, 47416, 19106, (132, 176, 44, 51, 220, 91, 20, 80 ));

   -----------------------------------------------------------------------------
   -- type IDecimalFormatterFactory is interface and WinRt.IInspectable;

      function CreateDecimalFormatter
      (
         this : access IDecimalFormatterFactory_Interface;
         languages : GenericObject;
         geographicRegion : WinRt.HString;
         RetVal : access Windows.Globalization.NumberFormatting.INumberFormatter
      )
      return WinRt.Hresult is abstract;

      IID_IDecimalFormatterFactory : aliased WinRt.IID := (218205338, 58259, 18104, (184, 48, 122, 105, 200, 248, 159, 187 ));

   -----------------------------------------------------------------------------
   -- type IIncrementNumberRounder is interface and WinRt.IInspectable;

      function get_RoundingAlgorithm
      (
         this : access IIncrementNumberRounder_Interface;
         RetVal : access Windows.Globalization.NumberFormatting.RoundingAlgorithm
      )
      return WinRt.Hresult is abstract;

      function put_RoundingAlgorithm
      (
         this : access IIncrementNumberRounder_Interface;
         value : Windows.Globalization.NumberFormatting.RoundingAlgorithm
      )
      return WinRt.Hresult is abstract;

      function get_Increment
      (
         this : access IIncrementNumberRounder_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Increment
      (
         this : access IIncrementNumberRounder_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IIncrementNumberRounder : aliased WinRt.IID := (1889947640, 26283, 16725, (157, 161, 115, 158, 70, 118, 69, 67 ));

   -----------------------------------------------------------------------------
   -- type INumberFormatter is interface and WinRt.IInspectable;

      function Format
      (
         this : access INumberFormatter_Interface;
         value : WinRt.Int64;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function Format
      (
         this : access INumberFormatter_Interface;
         value : WinRt.UInt64;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function Format
      (
         this : access INumberFormatter_Interface;
         value : WinRt.Double;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_INumberFormatter : aliased WinRt.IID := (2768272457, 30326, 19895, (134, 49, 27, 111, 242, 101, 202, 169 ));

   -----------------------------------------------------------------------------
   -- type INumberFormatter2 is interface and WinRt.IInspectable;

      function FormatInt
      (
         this : access INumberFormatter2_Interface;
         value : WinRt.Int64;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FormatUInt
      (
         this : access INumberFormatter2_Interface;
         value : WinRt.UInt64;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FormatDouble
      (
         this : access INumberFormatter2_Interface;
         value : WinRt.Double;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_INumberFormatter2 : aliased WinRt.IID := (3567829488, 32976, 19213, (168, 158, 136, 44, 30, 143, 131, 16 ));

   -----------------------------------------------------------------------------
   -- type INumberFormatterOptions is interface and WinRt.IInspectable;

      function get_Languages
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_GeographicRegion
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IntegerDigits
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_IntegerDigits
      (
         this : access INumberFormatterOptions_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_FractionDigits
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_FractionDigits
      (
         this : access INumberFormatterOptions_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_IsGrouped
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsGrouped
      (
         this : access INumberFormatterOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDecimalPointAlwaysDisplayed
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsDecimalPointAlwaysDisplayed
      (
         this : access INumberFormatterOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_NumeralSystem
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_NumeralSystem
      (
         this : access INumberFormatterOptions_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ResolvedLanguage
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ResolvedGeographicRegion
      (
         this : access INumberFormatterOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_INumberFormatterOptions : aliased WinRt.IID := (2150837537, 44769, 19001, (186, 162, 7, 237, 140, 150, 218, 246 ));

   -----------------------------------------------------------------------------
   -- type INumberParser is interface and WinRt.IInspectable;

      function ParseInt
      (
         this : access INumberParser_Interface;
         text : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ParseUInt
      (
         this : access INumberParser_Interface;
         text : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ParseDouble
      (
         this : access INumberParser_Interface;
         text : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_INumberParser : aliased WinRt.IID := (3865416722, 18963, 19027, (131, 161, 57, 47, 190, 76, 255, 159 ));

   -----------------------------------------------------------------------------
   -- type INumberRounder is interface and WinRt.IInspectable;

      function RoundInt32
      (
         this : access INumberRounder_Interface;
         value : WinRt.Int32;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function RoundUInt32
      (
         this : access INumberRounder_Interface;
         value : WinRt.UInt32;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function RoundInt64
      (
         this : access INumberRounder_Interface;
         value : WinRt.Int64;
         RetVal : access WinRt.Int64
      )
      return WinRt.Hresult is abstract;

      function RoundUInt64
      (
         this : access INumberRounder_Interface;
         value : WinRt.UInt64;
         RetVal : access WinRt.UInt64
      )
      return WinRt.Hresult is abstract;

      function RoundSingle
      (
         this : access INumberRounder_Interface;
         value : WinRt.Single;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function RoundDouble
      (
         this : access INumberRounder_Interface;
         value : WinRt.Double;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_INumberRounder : aliased WinRt.IID := (1416872821, 14573, 17969, (184, 12, 239, 52, 252, 72, 183, 245 ));

   -----------------------------------------------------------------------------
   -- type INumberRounderOption is interface and WinRt.IInspectable;

      function get_NumberRounder
      (
         this : access INumberRounderOption_Interface;
         RetVal : access Windows.Globalization.NumberFormatting.INumberRounder
      )
      return WinRt.Hresult is abstract;

      function put_NumberRounder
      (
         this : access INumberRounderOption_Interface;
         value : Windows.Globalization.NumberFormatting.INumberRounder
      )
      return WinRt.Hresult is abstract;

      IID_INumberRounderOption : aliased WinRt.IID := (990413875, 25711, 20222, (141, 72, 102, 235, 46, 73, 231, 54 ));

   -----------------------------------------------------------------------------
   -- type INumeralSystemTranslator is interface and WinRt.IInspectable;

      function get_Languages
      (
         this : access INumeralSystemTranslator_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ResolvedLanguage
      (
         this : access INumeralSystemTranslator_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NumeralSystem
      (
         this : access INumeralSystemTranslator_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_NumeralSystem
      (
         this : access INumeralSystemTranslator_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TranslateNumerals
      (
         this : access INumeralSystemTranslator_Interface;
         value : WinRt.HString;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_INumeralSystemTranslator : aliased WinRt.IID := (687193132, 35875, 16948, (173, 46, 250, 90, 58, 66, 110, 155 ));

   -----------------------------------------------------------------------------
   -- type INumeralSystemTranslatorFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access INumeralSystemTranslatorFactory_Interface;
         languages : GenericObject;
         RetVal : access Windows.Globalization.NumberFormatting.INumeralSystemTranslator
      )
      return WinRt.Hresult is abstract;

      IID_INumeralSystemTranslatorFactory : aliased WinRt.IID := (2519779546, 14063, 19848, (168, 92, 111, 13, 152, 214, 32, 166 ));

   -----------------------------------------------------------------------------
   -- type IPercentFormatterFactory is interface and WinRt.IInspectable;

      function CreatePercentFormatter
      (
         this : access IPercentFormatterFactory_Interface;
         languages : GenericObject;
         geographicRegion : WinRt.HString;
         RetVal : access Windows.Globalization.NumberFormatting.INumberFormatter
      )
      return WinRt.Hresult is abstract;

      IID_IPercentFormatterFactory : aliased WinRt.IID := (3078785775, 65236, 16408, (166, 226, 224, 153, 97, 224, 55, 101 ));

   -----------------------------------------------------------------------------
   -- type IPermilleFormatterFactory is interface and WinRt.IInspectable;

      function CreatePermilleFormatter
      (
         this : access IPermilleFormatterFactory_Interface;
         languages : GenericObject;
         geographicRegion : WinRt.HString;
         RetVal : access Windows.Globalization.NumberFormatting.INumberFormatter
      )
      return WinRt.Hresult is abstract;

      IID_IPermilleFormatterFactory : aliased WinRt.IID := (725071020, 58936, 20181, (169, 152, 98, 246, 176, 106, 73, 174 ));

   -----------------------------------------------------------------------------
   -- type ISignedZeroOption is interface and WinRt.IInspectable;

      function get_IsZeroSigned
      (
         this : access ISignedZeroOption_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsZeroSigned
      (
         this : access ISignedZeroOption_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ISignedZeroOption : aliased WinRt.IID := (4246527281, 2620, 18884, (166, 66, 150, 161, 86, 79, 79, 48 ));

   -----------------------------------------------------------------------------
   -- type ISignificantDigitsNumberRounder is interface and WinRt.IInspectable;

      function get_RoundingAlgorithm
      (
         this : access ISignificantDigitsNumberRounder_Interface;
         RetVal : access Windows.Globalization.NumberFormatting.RoundingAlgorithm
      )
      return WinRt.Hresult is abstract;

      function put_RoundingAlgorithm
      (
         this : access ISignificantDigitsNumberRounder_Interface;
         value : Windows.Globalization.NumberFormatting.RoundingAlgorithm
      )
      return WinRt.Hresult is abstract;

      function get_SignificantDigits
      (
         this : access ISignificantDigitsNumberRounder_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_SignificantDigits
      (
         this : access ISignificantDigitsNumberRounder_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_ISignificantDigitsNumberRounder : aliased WinRt.IID := (4120124362, 26182, 18707, (140, 118, 27, 25, 31, 249, 77, 253 ));

   -----------------------------------------------------------------------------
   -- type ISignificantDigitsOption is interface and WinRt.IInspectable;

      function get_SignificantDigits
      (
         this : access ISignificantDigitsOption_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_SignificantDigits
      (
         this : access ISignificantDigitsOption_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_ISignificantDigitsOption : aliased WinRt.IID := (491650269, 11587, 20200, (187, 241, 193, 178, 106, 113, 26, 88 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CurrencyFormatter

   overriding procedure Initialize (this : in out CurrencyFormatter);
   overriding procedure Finalize (this : in out CurrencyFormatter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CurrencyFormatter

   function Constructor
   (
      currencyCode : WinRt.WString
   )
   return CurrencyFormatter;

   function Constructor
   (
      currencyCode : WinRt.WString;
      languages : GenericObject;
      geographicRegion : WinRt.WString
   )
   return CurrencyFormatter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CurrencyFormatter

   function get_Currency
   (
      this : in out CurrencyFormatter
   )
   return WinRt.WString;

   procedure put_Currency
   (
      this : in out CurrencyFormatter;
      value : WinRt.WString
   );

   function ParseInt
   (
      this : in out CurrencyFormatter;
      text : WinRt.WString
   )
   return IReference_Int64.Kind;

   function ParseUInt
   (
      this : in out CurrencyFormatter;
      text : WinRt.WString
   )
   return IReference_UInt64.Kind;

   function ParseDouble
   (
      this : in out CurrencyFormatter;
      text : WinRt.WString
   )
   return IReference_Double.Kind;

   function FormatInt
   (
      this : in out CurrencyFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function FormatUInt
   (
      this : in out CurrencyFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function FormatDouble
   (
      this : in out CurrencyFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function Format
   (
      this : in out CurrencyFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function Format
   (
      this : in out CurrencyFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function Format
   (
      this : in out CurrencyFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function get_Languages
   (
      this : in out CurrencyFormatter
   )
   return IVectorView_HString.Kind;

   function get_GeographicRegion
   (
      this : in out CurrencyFormatter
   )
   return WinRt.WString;

   function get_IntegerDigits
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Int32;

   procedure put_IntegerDigits
   (
      this : in out CurrencyFormatter;
      value : WinRt.Int32
   );

   function get_FractionDigits
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Int32;

   procedure put_FractionDigits
   (
      this : in out CurrencyFormatter;
      value : WinRt.Int32
   );

   function get_IsGrouped
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Boolean;

   procedure put_IsGrouped
   (
      this : in out CurrencyFormatter;
      value : WinRt.Boolean
   );

   function get_IsDecimalPointAlwaysDisplayed
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Boolean;

   procedure put_IsDecimalPointAlwaysDisplayed
   (
      this : in out CurrencyFormatter;
      value : WinRt.Boolean
   );

   function get_NumeralSystem
   (
      this : in out CurrencyFormatter
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out CurrencyFormatter;
      value : WinRt.WString
   );

   function get_ResolvedLanguage
   (
      this : in out CurrencyFormatter
   )
   return WinRt.WString;

   function get_ResolvedGeographicRegion
   (
      this : in out CurrencyFormatter
   )
   return WinRt.WString;

   function get_Mode
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Windows.Globalization.NumberFormatting.CurrencyFormatterMode;

   procedure put_Mode
   (
      this : in out CurrencyFormatter;
      value : Windows.Globalization.NumberFormatting.CurrencyFormatterMode
   );

   procedure ApplyRoundingForCurrency
   (
      this : in out CurrencyFormatter;
      roundingAlgorithm : Windows.Globalization.NumberFormatting.RoundingAlgorithm
   );

   function get_SignificantDigits
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Int32;

   procedure put_SignificantDigits
   (
      this : in out CurrencyFormatter;
      value : WinRt.Int32
   );

   function get_NumberRounder
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Windows.Globalization.NumberFormatting.INumberRounder;

   procedure put_NumberRounder
   (
      this : in out CurrencyFormatter;
      value : Windows.Globalization.NumberFormatting.INumberRounder
   );

   function get_IsZeroSigned
   (
      this : in out CurrencyFormatter
   )
   return WinRt.Boolean;

   procedure put_IsZeroSigned
   (
      this : in out CurrencyFormatter;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DecimalFormatter

   overriding procedure Initialize (this : in out DecimalFormatter);
   overriding procedure Finalize (this : in out DecimalFormatter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for DecimalFormatter

   function Constructor
   (
      languages : GenericObject;
      geographicRegion : WinRt.WString
   )
   return DecimalFormatter;

   function Constructor return DecimalFormatter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DecimalFormatter

   function get_Languages
   (
      this : in out DecimalFormatter
   )
   return IVectorView_HString.Kind;

   function get_GeographicRegion
   (
      this : in out DecimalFormatter
   )
   return WinRt.WString;

   function get_IntegerDigits
   (
      this : in out DecimalFormatter
   )
   return WinRt.Int32;

   procedure put_IntegerDigits
   (
      this : in out DecimalFormatter;
      value : WinRt.Int32
   );

   function get_FractionDigits
   (
      this : in out DecimalFormatter
   )
   return WinRt.Int32;

   procedure put_FractionDigits
   (
      this : in out DecimalFormatter;
      value : WinRt.Int32
   );

   function get_IsGrouped
   (
      this : in out DecimalFormatter
   )
   return WinRt.Boolean;

   procedure put_IsGrouped
   (
      this : in out DecimalFormatter;
      value : WinRt.Boolean
   );

   function get_IsDecimalPointAlwaysDisplayed
   (
      this : in out DecimalFormatter
   )
   return WinRt.Boolean;

   procedure put_IsDecimalPointAlwaysDisplayed
   (
      this : in out DecimalFormatter;
      value : WinRt.Boolean
   );

   function get_NumeralSystem
   (
      this : in out DecimalFormatter
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out DecimalFormatter;
      value : WinRt.WString
   );

   function get_ResolvedLanguage
   (
      this : in out DecimalFormatter
   )
   return WinRt.WString;

   function get_ResolvedGeographicRegion
   (
      this : in out DecimalFormatter
   )
   return WinRt.WString;

   function Format
   (
      this : in out DecimalFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function Format
   (
      this : in out DecimalFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function Format
   (
      this : in out DecimalFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function FormatInt
   (
      this : in out DecimalFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function FormatUInt
   (
      this : in out DecimalFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function FormatDouble
   (
      this : in out DecimalFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function ParseInt
   (
      this : in out DecimalFormatter;
      text : WinRt.WString
   )
   return IReference_Int64.Kind;

   function ParseUInt
   (
      this : in out DecimalFormatter;
      text : WinRt.WString
   )
   return IReference_UInt64.Kind;

   function ParseDouble
   (
      this : in out DecimalFormatter;
      text : WinRt.WString
   )
   return IReference_Double.Kind;

   function get_SignificantDigits
   (
      this : in out DecimalFormatter
   )
   return WinRt.Int32;

   procedure put_SignificantDigits
   (
      this : in out DecimalFormatter;
      value : WinRt.Int32
   );

   function get_NumberRounder
   (
      this : in out DecimalFormatter
   )
   return WinRt.Windows.Globalization.NumberFormatting.INumberRounder;

   procedure put_NumberRounder
   (
      this : in out DecimalFormatter;
      value : Windows.Globalization.NumberFormatting.INumberRounder
   );

   function get_IsZeroSigned
   (
      this : in out DecimalFormatter
   )
   return WinRt.Boolean;

   procedure put_IsZeroSigned
   (
      this : in out DecimalFormatter;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for IncrementNumberRounder

   overriding procedure Initialize (this : in out IncrementNumberRounder);
   overriding procedure Finalize (this : in out IncrementNumberRounder);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for IncrementNumberRounder

   function Constructor return IncrementNumberRounder;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for IncrementNumberRounder

   function RoundInt32
   (
      this : in out IncrementNumberRounder;
      value : WinRt.Int32
   )
   return WinRt.Int32;

   function RoundUInt32
   (
      this : in out IncrementNumberRounder;
      value : WinRt.UInt32
   )
   return WinRt.UInt32;

   function RoundInt64
   (
      this : in out IncrementNumberRounder;
      value : WinRt.Int64
   )
   return WinRt.Int64;

   function RoundUInt64
   (
      this : in out IncrementNumberRounder;
      value : WinRt.UInt64
   )
   return WinRt.UInt64;

   function RoundSingle
   (
      this : in out IncrementNumberRounder;
      value : WinRt.Single
   )
   return WinRt.Single;

   function RoundDouble
   (
      this : in out IncrementNumberRounder;
      value : WinRt.Double
   )
   return WinRt.Double;

   function get_RoundingAlgorithm
   (
      this : in out IncrementNumberRounder
   )
   return WinRt.Windows.Globalization.NumberFormatting.RoundingAlgorithm;

   procedure put_RoundingAlgorithm
   (
      this : in out IncrementNumberRounder;
      value : Windows.Globalization.NumberFormatting.RoundingAlgorithm
   );

   function get_Increment
   (
      this : in out IncrementNumberRounder
   )
   return WinRt.Double;

   procedure put_Increment
   (
      this : in out IncrementNumberRounder;
      value : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for NumeralSystemTranslator

   overriding procedure Initialize (this : in out NumeralSystemTranslator);
   overriding procedure Finalize (this : in out NumeralSystemTranslator);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for NumeralSystemTranslator

   function Constructor
   (
      languages : GenericObject
   )
   return NumeralSystemTranslator;

   function Constructor return NumeralSystemTranslator;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for NumeralSystemTranslator

   function get_Languages
   (
      this : in out NumeralSystemTranslator
   )
   return IVectorView_HString.Kind;

   function get_ResolvedLanguage
   (
      this : in out NumeralSystemTranslator
   )
   return WinRt.WString;

   function get_NumeralSystem
   (
      this : in out NumeralSystemTranslator
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out NumeralSystemTranslator;
      value : WinRt.WString
   );

   function TranslateNumerals
   (
      this : in out NumeralSystemTranslator;
      value : WinRt.WString
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PercentFormatter

   overriding procedure Initialize (this : in out PercentFormatter);
   overriding procedure Finalize (this : in out PercentFormatter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PercentFormatter

   function Constructor
   (
      languages : GenericObject;
      geographicRegion : WinRt.WString
   )
   return PercentFormatter;

   function Constructor return PercentFormatter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PercentFormatter

   function get_Languages
   (
      this : in out PercentFormatter
   )
   return IVectorView_HString.Kind;

   function get_GeographicRegion
   (
      this : in out PercentFormatter
   )
   return WinRt.WString;

   function get_IntegerDigits
   (
      this : in out PercentFormatter
   )
   return WinRt.Int32;

   procedure put_IntegerDigits
   (
      this : in out PercentFormatter;
      value : WinRt.Int32
   );

   function get_FractionDigits
   (
      this : in out PercentFormatter
   )
   return WinRt.Int32;

   procedure put_FractionDigits
   (
      this : in out PercentFormatter;
      value : WinRt.Int32
   );

   function get_IsGrouped
   (
      this : in out PercentFormatter
   )
   return WinRt.Boolean;

   procedure put_IsGrouped
   (
      this : in out PercentFormatter;
      value : WinRt.Boolean
   );

   function get_IsDecimalPointAlwaysDisplayed
   (
      this : in out PercentFormatter
   )
   return WinRt.Boolean;

   procedure put_IsDecimalPointAlwaysDisplayed
   (
      this : in out PercentFormatter;
      value : WinRt.Boolean
   );

   function get_NumeralSystem
   (
      this : in out PercentFormatter
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out PercentFormatter;
      value : WinRt.WString
   );

   function get_ResolvedLanguage
   (
      this : in out PercentFormatter
   )
   return WinRt.WString;

   function get_ResolvedGeographicRegion
   (
      this : in out PercentFormatter
   )
   return WinRt.WString;

   function Format
   (
      this : in out PercentFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function Format
   (
      this : in out PercentFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function Format
   (
      this : in out PercentFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function FormatInt
   (
      this : in out PercentFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function FormatUInt
   (
      this : in out PercentFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function FormatDouble
   (
      this : in out PercentFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function ParseInt
   (
      this : in out PercentFormatter;
      text : WinRt.WString
   )
   return IReference_Int64.Kind;

   function ParseUInt
   (
      this : in out PercentFormatter;
      text : WinRt.WString
   )
   return IReference_UInt64.Kind;

   function ParseDouble
   (
      this : in out PercentFormatter;
      text : WinRt.WString
   )
   return IReference_Double.Kind;

   function get_SignificantDigits
   (
      this : in out PercentFormatter
   )
   return WinRt.Int32;

   procedure put_SignificantDigits
   (
      this : in out PercentFormatter;
      value : WinRt.Int32
   );

   function get_NumberRounder
   (
      this : in out PercentFormatter
   )
   return WinRt.Windows.Globalization.NumberFormatting.INumberRounder;

   procedure put_NumberRounder
   (
      this : in out PercentFormatter;
      value : Windows.Globalization.NumberFormatting.INumberRounder
   );

   function get_IsZeroSigned
   (
      this : in out PercentFormatter
   )
   return WinRt.Boolean;

   procedure put_IsZeroSigned
   (
      this : in out PercentFormatter;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PermilleFormatter

   overriding procedure Initialize (this : in out PermilleFormatter);
   overriding procedure Finalize (this : in out PermilleFormatter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PermilleFormatter

   function Constructor
   (
      languages : GenericObject;
      geographicRegion : WinRt.WString
   )
   return PermilleFormatter;

   function Constructor return PermilleFormatter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PermilleFormatter

   function get_Languages
   (
      this : in out PermilleFormatter
   )
   return IVectorView_HString.Kind;

   function get_GeographicRegion
   (
      this : in out PermilleFormatter
   )
   return WinRt.WString;

   function get_IntegerDigits
   (
      this : in out PermilleFormatter
   )
   return WinRt.Int32;

   procedure put_IntegerDigits
   (
      this : in out PermilleFormatter;
      value : WinRt.Int32
   );

   function get_FractionDigits
   (
      this : in out PermilleFormatter
   )
   return WinRt.Int32;

   procedure put_FractionDigits
   (
      this : in out PermilleFormatter;
      value : WinRt.Int32
   );

   function get_IsGrouped
   (
      this : in out PermilleFormatter
   )
   return WinRt.Boolean;

   procedure put_IsGrouped
   (
      this : in out PermilleFormatter;
      value : WinRt.Boolean
   );

   function get_IsDecimalPointAlwaysDisplayed
   (
      this : in out PermilleFormatter
   )
   return WinRt.Boolean;

   procedure put_IsDecimalPointAlwaysDisplayed
   (
      this : in out PermilleFormatter;
      value : WinRt.Boolean
   );

   function get_NumeralSystem
   (
      this : in out PermilleFormatter
   )
   return WinRt.WString;

   procedure put_NumeralSystem
   (
      this : in out PermilleFormatter;
      value : WinRt.WString
   );

   function get_ResolvedLanguage
   (
      this : in out PermilleFormatter
   )
   return WinRt.WString;

   function get_ResolvedGeographicRegion
   (
      this : in out PermilleFormatter
   )
   return WinRt.WString;

   function Format
   (
      this : in out PermilleFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function Format
   (
      this : in out PermilleFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function Format
   (
      this : in out PermilleFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function FormatInt
   (
      this : in out PermilleFormatter;
      value : WinRt.Int64
   )
   return WinRt.WString;

   function FormatUInt
   (
      this : in out PermilleFormatter;
      value : WinRt.UInt64
   )
   return WinRt.WString;

   function FormatDouble
   (
      this : in out PermilleFormatter;
      value : WinRt.Double
   )
   return WinRt.WString;

   function ParseInt
   (
      this : in out PermilleFormatter;
      text : WinRt.WString
   )
   return IReference_Int64.Kind;

   function ParseUInt
   (
      this : in out PermilleFormatter;
      text : WinRt.WString
   )
   return IReference_UInt64.Kind;

   function ParseDouble
   (
      this : in out PermilleFormatter;
      text : WinRt.WString
   )
   return IReference_Double.Kind;

   function get_SignificantDigits
   (
      this : in out PermilleFormatter
   )
   return WinRt.Int32;

   procedure put_SignificantDigits
   (
      this : in out PermilleFormatter;
      value : WinRt.Int32
   );

   function get_NumberRounder
   (
      this : in out PermilleFormatter
   )
   return WinRt.Windows.Globalization.NumberFormatting.INumberRounder;

   procedure put_NumberRounder
   (
      this : in out PermilleFormatter;
      value : Windows.Globalization.NumberFormatting.INumberRounder
   );

   function get_IsZeroSigned
   (
      this : in out PermilleFormatter
   )
   return WinRt.Boolean;

   procedure put_IsZeroSigned
   (
      this : in out PermilleFormatter;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SignificantDigitsNumberRounder

   overriding procedure Initialize (this : in out SignificantDigitsNumberRounder);
   overriding procedure Finalize (this : in out SignificantDigitsNumberRounder);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SignificantDigitsNumberRounder

   function Constructor return SignificantDigitsNumberRounder;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SignificantDigitsNumberRounder

   function RoundInt32
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.Int32
   )
   return WinRt.Int32;

   function RoundUInt32
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.UInt32
   )
   return WinRt.UInt32;

   function RoundInt64
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.Int64
   )
   return WinRt.Int64;

   function RoundUInt64
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.UInt64
   )
   return WinRt.UInt64;

   function RoundSingle
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.Single
   )
   return WinRt.Single;

   function RoundDouble
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.Double
   )
   return WinRt.Double;

   function get_RoundingAlgorithm
   (
      this : in out SignificantDigitsNumberRounder
   )
   return WinRt.Windows.Globalization.NumberFormatting.RoundingAlgorithm;

   procedure put_RoundingAlgorithm
   (
      this : in out SignificantDigitsNumberRounder;
      value : Windows.Globalization.NumberFormatting.RoundingAlgorithm
   );

   function get_SignificantDigits
   (
      this : in out SignificantDigitsNumberRounder
   )
   return WinRt.UInt32;

   procedure put_SignificantDigits
   (
      this : in out SignificantDigitsNumberRounder;
      value : WinRt.UInt32
   );

end;
