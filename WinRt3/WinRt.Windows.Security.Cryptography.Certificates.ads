--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Networking;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Security.Cryptography.Certificates is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ICertificate_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificate is access all ICertificate_Interface'Class;
   type ICertificate_Ptr is access all ICertificate;

   type ICertificate2_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificate2 is access all ICertificate2_Interface'Class;

   type ICertificate3_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificate3 is access all ICertificate3_Interface'Class;

   type ICertificateChain_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateChain is access all ICertificateChain_Interface'Class;
   type ICertificateChain_Ptr is access all ICertificateChain;

   type ICertificateEnrollmentManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateEnrollmentManagerStatics is access all ICertificateEnrollmentManagerStatics_Interface'Class;

   type ICertificateEnrollmentManagerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateEnrollmentManagerStatics2 is access all ICertificateEnrollmentManagerStatics2_Interface'Class;

   type ICertificateEnrollmentManagerStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateEnrollmentManagerStatics3 is access all ICertificateEnrollmentManagerStatics3_Interface'Class;

   type ICertificateExtension_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateExtension is access all ICertificateExtension_Interface'Class;
   type ICertificateExtension_Ptr is access all ICertificateExtension;

   type ICertificateFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateFactory is access all ICertificateFactory_Interface'Class;

   type ICertificateKeyUsages_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateKeyUsages is access all ICertificateKeyUsages_Interface'Class;
   type ICertificateKeyUsages_Ptr is access all ICertificateKeyUsages;

   type ICertificateQuery_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateQuery is access all ICertificateQuery_Interface'Class;
   type ICertificateQuery_Ptr is access all ICertificateQuery;

   type ICertificateQuery2_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateQuery2 is access all ICertificateQuery2_Interface'Class;

   type ICertificateRequestProperties_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateRequestProperties is access all ICertificateRequestProperties_Interface'Class;
   type ICertificateRequestProperties_Ptr is access all ICertificateRequestProperties;

   type ICertificateRequestProperties2_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateRequestProperties2 is access all ICertificateRequestProperties2_Interface'Class;

   type ICertificateRequestProperties3_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateRequestProperties3 is access all ICertificateRequestProperties3_Interface'Class;

   type ICertificateRequestProperties4_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateRequestProperties4 is access all ICertificateRequestProperties4_Interface'Class;

   type ICertificateStore_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateStore is access all ICertificateStore_Interface'Class;
   type ICertificateStore_Ptr is access all ICertificateStore;

   type ICertificateStore2_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateStore2 is access all ICertificateStore2_Interface'Class;

   type ICertificateStoresStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateStoresStatics is access all ICertificateStoresStatics_Interface'Class;

   type ICertificateStoresStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ICertificateStoresStatics2 is access all ICertificateStoresStatics2_Interface'Class;

   type IChainBuildingParameters_Interface is interface and WinRt.IInspectable_Interface;
   type IChainBuildingParameters is access all IChainBuildingParameters_Interface'Class;
   type IChainBuildingParameters_Ptr is access all IChainBuildingParameters;

   type IChainValidationParameters_Interface is interface and WinRt.IInspectable_Interface;
   type IChainValidationParameters is access all IChainValidationParameters_Interface'Class;
   type IChainValidationParameters_Ptr is access all IChainValidationParameters;

   type ICmsAttachedSignature_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsAttachedSignature is access all ICmsAttachedSignature_Interface'Class;
   type ICmsAttachedSignature_Ptr is access all ICmsAttachedSignature;

   type ICmsAttachedSignatureFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsAttachedSignatureFactory is access all ICmsAttachedSignatureFactory_Interface'Class;

   type ICmsAttachedSignatureStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsAttachedSignatureStatics is access all ICmsAttachedSignatureStatics_Interface'Class;

   type ICmsDetachedSignature_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsDetachedSignature is access all ICmsDetachedSignature_Interface'Class;
   type ICmsDetachedSignature_Ptr is access all ICmsDetachedSignature;

   type ICmsDetachedSignatureFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsDetachedSignatureFactory is access all ICmsDetachedSignatureFactory_Interface'Class;

   type ICmsDetachedSignatureStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsDetachedSignatureStatics is access all ICmsDetachedSignatureStatics_Interface'Class;

   type ICmsSignerInfo_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsSignerInfo is access all ICmsSignerInfo_Interface'Class;
   type ICmsSignerInfo_Ptr is access all ICmsSignerInfo;

   type ICmsTimestampInfo_Interface is interface and WinRt.IInspectable_Interface;
   type ICmsTimestampInfo is access all ICmsTimestampInfo_Interface'Class;
   type ICmsTimestampInfo_Ptr is access all ICmsTimestampInfo;

   type IKeyAlgorithmNamesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyAlgorithmNamesStatics is access all IKeyAlgorithmNamesStatics_Interface'Class;

   type IKeyAlgorithmNamesStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyAlgorithmNamesStatics2 is access all IKeyAlgorithmNamesStatics2_Interface'Class;

   type IKeyAttestationHelperStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyAttestationHelperStatics is access all IKeyAttestationHelperStatics_Interface'Class;

   type IKeyAttestationHelperStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyAttestationHelperStatics2 is access all IKeyAttestationHelperStatics2_Interface'Class;

   type IKeyStorageProviderNamesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyStorageProviderNamesStatics is access all IKeyStorageProviderNamesStatics_Interface'Class;

   type IKeyStorageProviderNamesStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyStorageProviderNamesStatics2 is access all IKeyStorageProviderNamesStatics2_Interface'Class;

   type IPfxImportParameters_Interface is interface and WinRt.IInspectable_Interface;
   type IPfxImportParameters is access all IPfxImportParameters_Interface'Class;
   type IPfxImportParameters_Ptr is access all IPfxImportParameters;

   type IStandardCertificateStoreNamesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IStandardCertificateStoreNamesStatics is access all IStandardCertificateStoreNamesStatics_Interface'Class;

   type ISubjectAlternativeNameInfo_Interface is interface and WinRt.IInspectable_Interface;
   type ISubjectAlternativeNameInfo is access all ISubjectAlternativeNameInfo_Interface'Class;
   type ISubjectAlternativeNameInfo_Ptr is access all ISubjectAlternativeNameInfo;

   type ISubjectAlternativeNameInfo2_Interface is interface and WinRt.IInspectable_Interface;
   type ISubjectAlternativeNameInfo2 is access all ISubjectAlternativeNameInfo2_Interface'Class;

   type IUserCertificateEnrollmentManager_Interface is interface and WinRt.IInspectable_Interface;
   type IUserCertificateEnrollmentManager is access all IUserCertificateEnrollmentManager_Interface'Class;
   type IUserCertificateEnrollmentManager_Ptr is access all IUserCertificateEnrollmentManager;

   type IUserCertificateEnrollmentManager2_Interface is interface and WinRt.IInspectable_Interface;
   type IUserCertificateEnrollmentManager2 is access all IUserCertificateEnrollmentManager2_Interface'Class;

   type IUserCertificateStore_Interface is interface and WinRt.IInspectable_Interface;
   type IUserCertificateStore is access all IUserCertificateStore_Interface'Class;
   type IUserCertificateStore_Ptr is access all IUserCertificateStore;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Certificate is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificate : access Windows.Security.Cryptography.Certificates.ICertificate;
      end record;
   type Certificate_Ptr is access all Certificate;

   type CertificateChain is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificateChain : access Windows.Security.Cryptography.Certificates.ICertificateChain;
      end record;
   type CertificateChain_Ptr is access all CertificateChain;

   type CertificateExtension is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificateExtension : access Windows.Security.Cryptography.Certificates.ICertificateExtension;
      end record;
   type CertificateExtension_Ptr is access all CertificateExtension;

   type CertificateKeyUsages is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificateKeyUsages : access Windows.Security.Cryptography.Certificates.ICertificateKeyUsages;
      end record;
   type CertificateKeyUsages_Ptr is access all CertificateKeyUsages;

   type CertificateQuery is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificateQuery : access Windows.Security.Cryptography.Certificates.ICertificateQuery;
      end record;
   type CertificateQuery_Ptr is access all CertificateQuery;

   type CertificateRequestProperties is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificateRequestProperties : access Windows.Security.Cryptography.Certificates.ICertificateRequestProperties;
      end record;
   type CertificateRequestProperties_Ptr is access all CertificateRequestProperties;

   type CertificateStore is new Ada.Finalization.Limited_Controlled with
      record
         m_ICertificateStore : access Windows.Security.Cryptography.Certificates.ICertificateStore;
      end record;
   type CertificateStore_Ptr is access all CertificateStore;

   type ChainBuildingParameters is new Ada.Finalization.Limited_Controlled with
      record
         m_IChainBuildingParameters : access Windows.Security.Cryptography.Certificates.IChainBuildingParameters;
      end record;
   type ChainBuildingParameters_Ptr is access all ChainBuildingParameters;

   type ChainValidationParameters is new Ada.Finalization.Limited_Controlled with
      record
         m_IChainValidationParameters : access Windows.Security.Cryptography.Certificates.IChainValidationParameters;
      end record;
   type ChainValidationParameters_Ptr is access all ChainValidationParameters;

   type CmsAttachedSignature is new Ada.Finalization.Limited_Controlled with
      record
         m_ICmsAttachedSignature : access Windows.Security.Cryptography.Certificates.ICmsAttachedSignature;
      end record;
   type CmsAttachedSignature_Ptr is access all CmsAttachedSignature;

   type CmsDetachedSignature is new Ada.Finalization.Limited_Controlled with
      record
         m_ICmsDetachedSignature : access Windows.Security.Cryptography.Certificates.ICmsDetachedSignature;
      end record;
   type CmsDetachedSignature_Ptr is access all CmsDetachedSignature;

   type CmsSignerInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_ICmsSignerInfo : access Windows.Security.Cryptography.Certificates.ICmsSignerInfo;
      end record;
   type CmsSignerInfo_Ptr is access all CmsSignerInfo;

   type CmsTimestampInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_ICmsTimestampInfo : access Windows.Security.Cryptography.Certificates.ICmsTimestampInfo;
      end record;
   type CmsTimestampInfo_Ptr is access all CmsTimestampInfo;

   type PfxImportParameters is new Ada.Finalization.Limited_Controlled with
      record
         m_IPfxImportParameters : access Windows.Security.Cryptography.Certificates.IPfxImportParameters;
      end record;
   type PfxImportParameters_Ptr is access all PfxImportParameters;

   type SubjectAlternativeNameInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_ISubjectAlternativeNameInfo : access Windows.Security.Cryptography.Certificates.ISubjectAlternativeNameInfo;
      end record;
   type SubjectAlternativeNameInfo_Ptr is access all SubjectAlternativeNameInfo;

   type UserCertificateEnrollmentManager is new Ada.Finalization.Limited_Controlled with
      record
         m_IUserCertificateEnrollmentManager : access Windows.Security.Cryptography.Certificates.IUserCertificateEnrollmentManager;
      end record;
   type UserCertificateEnrollmentManager_Ptr is access all UserCertificateEnrollmentManager;

   type UserCertificateStore is new Ada.Finalization.Limited_Controlled with
      record
         m_IUserCertificateStore : access Windows.Security.Cryptography.Certificates.IUserCertificateStore;
      end record;
   type UserCertificateStore_Ptr is access all UserCertificateStore;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type CertificateChainPolicy is (
      Base_e,
      Ssl_e,
      NTAuthentication_e,
      MicrosoftRoot_e
   );
   for CertificateChainPolicy use (
      Base_e => 0,
      Ssl_e => 1,
      NTAuthentication_e => 2,
      MicrosoftRoot_e => 3
   );
   type CertificateChainPolicy_Ptr is access all CertificateChainPolicy;

   type ChainValidationResult is (
      Success_e,
      Untrusted_e,
      Revoked_e,
      Expired_e,
      IncompleteChain_e,
      InvalidSignature_e,
      WrongUsage_e,
      InvalidName_e,
      InvalidCertificateAuthorityPolicy_e,
      BasicConstraintsError_e,
      UnknownCriticalExtension_e,
      RevocationInformationMissing_e,
      RevocationFailure_e,
      OtherErrors_e
   );
   for ChainValidationResult use (
      Success_e => 0,
      Untrusted_e => 1,
      Revoked_e => 2,
      Expired_e => 3,
      IncompleteChain_e => 4,
      InvalidSignature_e => 5,
      WrongUsage_e => 6,
      InvalidName_e => 7,
      InvalidCertificateAuthorityPolicy_e => 8,
      BasicConstraintsError_e => 9,
      UnknownCriticalExtension_e => 10,
      RevocationInformationMissing_e => 11,
      RevocationFailure_e => 12,
      OtherErrors_e => 13
   );
   type ChainValidationResult_Ptr is access all ChainValidationResult;

   type EnrollKeyUsages is (
      None_e,
      Decryption_e,
      Signing_e,
      KeyAgreement_e,
      All_e
   );
   for EnrollKeyUsages use (
      None_e => 0,
      Decryption_e => 1,
      Signing_e => 2,
      KeyAgreement_e => 4,
      All_e => 16777215
   );
   type EnrollKeyUsages_Ptr is access all EnrollKeyUsages;

   type ExportOption is (
      NotExportable_e,
      Exportable_e
   );
   for ExportOption use (
      NotExportable_e => 0,
      Exportable_e => 1
   );
   type ExportOption_Ptr is access all ExportOption;

   type InstallOptions is (
      None_e,
      DeleteExpired_e
   );
   for InstallOptions use (
      None_e => 0,
      DeleteExpired_e => 1
   );
   type InstallOptions_Ptr is access all InstallOptions;

   type KeyProtectionLevel is (
      NoConsent_e,
      ConsentOnly_e,
      ConsentWithPassword_e,
      ConsentWithFingerprint_e
   );
   for KeyProtectionLevel use (
      NoConsent_e => 0,
      ConsentOnly_e => 1,
      ConsentWithPassword_e => 2,
      ConsentWithFingerprint_e => 3
   );
   type KeyProtectionLevel_Ptr is access all KeyProtectionLevel;

   type KeySize is (
      Invalid_e,
      Rsa2048_e,
      Rsa4096_e
   );
   for KeySize use (
      Invalid_e => 0,
      Rsa2048_e => 2048,
      Rsa4096_e => 4096
   );
   type KeySize_Ptr is access all KeySize;

   type SignatureValidationResult is (
      Success_e,
      InvalidParameter_e,
      BadMessage_e,
      InvalidSignature_e,
      OtherErrors_e
   );
   for SignatureValidationResult use (
      Success_e => 0,
      InvalidParameter_e => 1,
      BadMessage_e => 2,
      InvalidSignature_e => 3,
      OtherErrors_e => 4
   );
   type SignatureValidationResult_Ptr is access all SignatureValidationResult;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (3485610408, 17788, 22731, (179, 84, 183, 23, 191, 90, 133, 194 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   package IVectorView_ICertificate is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Security.Cryptography.Certificates.ICertificate);
   IID_IVectorView_ICertificate : aliased WinRt.IID := (3877613234, 9895, 21978, (174, 238, 86, 118, 248, 97, 181, 225 ));
   function QInterface_IVectorView_ICertificate is new Generic_QueryInterface (GenericObject_Interface, IVectorView_ICertificate.Kind, IID_IVectorView_ICertificate'Access);

   package IVector_HString is new WinRt.Windows.Foundation.Collections.IVector (WinRt.HString);
   IID_IVector_HString : aliased WinRt.IID := (1729156217, 25192, 24405, (144, 20, 194, 142, 109, 75, 238, 88 ));
   function QInterface_IVector_HString is new Generic_QueryInterface (GenericObject_Interface, IVector_HString.Kind, IID_IVector_HString'Access);

   package IVector_ICertificateExtension is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.Security.Cryptography.Certificates.ICertificateExtension);
   IID_IVector_ICertificateExtension : aliased WinRt.IID := (4239477626, 58622, 23621, (170, 165, 60, 7, 9, 254, 87, 62 ));
   function QInterface_IVector_ICertificateExtension is new Generic_QueryInterface (GenericObject_Interface, IVector_ICertificateExtension.Kind, IID_IVector_ICertificateExtension'Access);

   package IVector_ICertificate is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.Security.Cryptography.Certificates.ICertificate);
   IID_IVector_ICertificate : aliased WinRt.IID := (436250169, 4604, 22331, (177, 68, 143, 75, 226, 105, 236, 167 ));
   function QInterface_IVector_ICertificate is new Generic_QueryInterface (GenericObject_Interface, IVector_ICertificate.Kind, IID_IVector_ICertificate'Access);

   package IVectorView_ICmsSignerInfo is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Security.Cryptography.Certificates.ICmsSignerInfo);
   IID_IVectorView_ICmsSignerInfo : aliased WinRt.IID := (490609404, 54215, 23191, (186, 42, 251, 5, 158, 137, 72, 2 ));
   function QInterface_IVectorView_ICmsSignerInfo is new Generic_QueryInterface (GenericObject_Interface, IVectorView_ICmsSignerInfo.Kind, IID_IVectorView_ICmsSignerInfo'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ICertificate is interface and WinRt.IInspectable;

      function BuildChainAsync
      (
         this : access ICertificate_Interface;
         certificates : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function BuildChainAsync
      (
         this : access ICertificate_Interface;
         certificates : GenericObject;
         parameters : Windows.Security.Cryptography.Certificates.IChainBuildingParameters;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_SerialNumber
      (
         this : access ICertificate_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetHashValue
      (
         this : access ICertificate_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetHashValue
      (
         this : access ICertificate_Interface;
         hashAlgorithmName : WinRt.HString;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetCertificateBlob
      (
         this : access ICertificate_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      function get_Subject
      (
         this : access ICertificate_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Issuer
      (
         this : access ICertificate_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HasPrivateKey
      (
         this : access ICertificate_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStronglyProtected
      (
         this : access ICertificate_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ValidFrom
      (
         this : access ICertificate_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_ValidTo
      (
         this : access ICertificate_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_EnhancedKeyUsages
      (
         this : access ICertificate_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_FriendlyName
      (
         this : access ICertificate_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FriendlyName
      (
         this : access ICertificate_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICertificate : aliased WinRt.IID := (859796492, 1240, 17331, (178, 120, 140, 95, 204, 155, 229, 160 ));

   -----------------------------------------------------------------------------
   -- type ICertificate2 is interface and WinRt.IInspectable;

      function get_IsSecurityDeviceBound
      (
         this : access ICertificate2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_KeyUsages
      (
         this : access ICertificate2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificateKeyUsages
      )
      return WinRt.Hresult is abstract;

      function get_KeyAlgorithmName
      (
         this : access ICertificate2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SignatureAlgorithmName
      (
         this : access ICertificate2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SignatureHashAlgorithmName
      (
         this : access ICertificate2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SubjectAlternativeName
      (
         this : access ICertificate2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ISubjectAlternativeNameInfo
      )
      return WinRt.Hresult is abstract;

      IID_ICertificate2 : aliased WinRt.IID := (397948748, 35365, 19862, (164, 146, 143, 194, 154, 196, 253, 166 ));

   -----------------------------------------------------------------------------
   -- type ICertificate3 is interface and WinRt.IInspectable;

      function get_IsPerUser
      (
         this : access ICertificate3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StoreName
      (
         this : access ICertificate3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KeyStorageProviderName
      (
         this : access ICertificate3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICertificate3 : aliased WinRt.IID := (3193022822, 44639, 18002, (172, 231, 198, 215, 231, 114, 76, 243 ));

   -----------------------------------------------------------------------------
   -- type ICertificateChain is interface and WinRt.IInspectable;

      function Validate
      (
         this : access ICertificateChain_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ChainValidationResult
      )
      return WinRt.Hresult is abstract;

      function Validate
      (
         this : access ICertificateChain_Interface;
         parameter : Windows.Security.Cryptography.Certificates.IChainValidationParameters;
         RetVal : access Windows.Security.Cryptography.Certificates.ChainValidationResult
      )
      return WinRt.Hresult is abstract;

      function GetCertificates
      (
         this : access ICertificateChain_Interface;
         includeRoot : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateChain : aliased WinRt.IID := (549409669, 13969, 17665, (166, 44, 253, 151, 39, 139, 49, 238 ));

   -----------------------------------------------------------------------------
   -- type ICertificateEnrollmentManagerStatics is interface and WinRt.IInspectable;

      function CreateRequestAsync
      (
         this : access ICertificateEnrollmentManagerStatics_Interface;
         request : Windows.Security.Cryptography.Certificates.ICertificateRequestProperties;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function InstallCertificateAsync
      (
         this : access ICertificateEnrollmentManagerStatics_Interface;
         certificate_p : WinRt.HString;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ImportPfxDataAsync
      (
         this : access ICertificateEnrollmentManagerStatics_Interface;
         pfxData : WinRt.HString;
         password : WinRt.HString;
         exportable : Windows.Security.Cryptography.Certificates.ExportOption;
         keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         friendlyName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateEnrollmentManagerStatics : aliased WinRt.IID := (2286350143, 43398, 18683, (159, 215, 154, 236, 6, 147, 91, 241 ));

   -----------------------------------------------------------------------------
   -- type ICertificateEnrollmentManagerStatics2 is interface and WinRt.IInspectable;

      function get_UserCertificateEnrollmentManager
      (
         this : access ICertificateEnrollmentManagerStatics2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.IUserCertificateEnrollmentManager
      )
      return WinRt.Hresult is abstract;

      function ImportPfxDataAsync
      (
         this : access ICertificateEnrollmentManagerStatics2_Interface;
         pfxData : WinRt.HString;
         password : WinRt.HString;
         exportable : Windows.Security.Cryptography.Certificates.ExportOption;
         keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         friendlyName : WinRt.HString;
         keyStorageProvider : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateEnrollmentManagerStatics2 : aliased WinRt.IID := (3696958515, 25641, 16404, (153, 156, 93, 151, 53, 128, 45, 29 ));

   -----------------------------------------------------------------------------
   -- type ICertificateEnrollmentManagerStatics3 is interface and WinRt.IInspectable;

      function ImportPfxDataAsync
      (
         this : access ICertificateEnrollmentManagerStatics3_Interface;
         pfxData : WinRt.HString;
         password : WinRt.HString;
         pfxImportParameters_p : Windows.Security.Cryptography.Certificates.IPfxImportParameters;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateEnrollmentManagerStatics3 : aliased WinRt.IID := (4260135614, 24956, 16986, (183, 45, 57, 139, 38, 172, 114, 100 ));

   -----------------------------------------------------------------------------
   -- type ICertificateExtension is interface and WinRt.IInspectable;

      function get_ObjectId
      (
         this : access ICertificateExtension_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_ObjectId
      (
         this : access ICertificateExtension_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsCritical
      (
         this : access ICertificateExtension_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCritical
      (
         this : access ICertificateExtension_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function EncodeValue
      (
         this : access ICertificateExtension_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Value
      (
         this : access ICertificateExtension_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function put_Value
      (
         this : access ICertificateExtension_Interface;
         valueSize : WinRt.UInt32;
         value : WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateExtension : aliased WinRt.IID := (2228160086, 43494, 17741, (142, 69, 46, 167, 196, 188, 213, 59 ));

   -----------------------------------------------------------------------------
   -- type ICertificateFactory is interface and WinRt.IInspectable;

      function CreateCertificate
      (
         this : access ICertificateFactory_Interface;
         certBlob : Windows.Storage.Streams.IBuffer;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateFactory : aliased WinRt.IID := (397681180, 19375, 17570, (150, 8, 4, 251, 98, 177, 105, 66 ));

   -----------------------------------------------------------------------------
   -- type ICertificateKeyUsages is interface and WinRt.IInspectable;

      function get_EncipherOnly
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_EncipherOnly
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CrlSign
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_CrlSign
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_KeyCertificateSign
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_KeyCertificateSign
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_KeyAgreement
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_KeyAgreement
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DataEncipherment
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DataEncipherment
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_KeyEncipherment
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_KeyEncipherment
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_NonRepudiation
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_NonRepudiation
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DigitalSignature
      (
         this : access ICertificateKeyUsages_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DigitalSignature
      (
         this : access ICertificateKeyUsages_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateKeyUsages : aliased WinRt.IID := (1791369327, 57807, 18538, (180, 133, 166, 156, 131, 228, 111, 209 ));

   -----------------------------------------------------------------------------
   -- type ICertificateQuery is interface and WinRt.IInspectable;

      function get_EnhancedKeyUsages
      (
         this : access ICertificateQuery_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_IssuerName
      (
         this : access ICertificateQuery_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_IssuerName
      (
         this : access ICertificateQuery_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FriendlyName
      (
         this : access ICertificateQuery_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_FriendlyName
      (
         this : access ICertificateQuery_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Thumbprint
      (
         this : access ICertificateQuery_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function put_Thumbprint
      (
         this : access ICertificateQuery_Interface;
         valueSize : WinRt.UInt32;
         value : WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function get_HardwareOnly
      (
         this : access ICertificateQuery_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_HardwareOnly
      (
         this : access ICertificateQuery_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateQuery : aliased WinRt.IID := (1527261745, 42792, 18710, (181, 238, 255, 203, 138, 207, 36, 23 ));

   -----------------------------------------------------------------------------
   -- type ICertificateQuery2 is interface and WinRt.IInspectable;

      function get_IncludeDuplicates
      (
         this : access ICertificateQuery2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IncludeDuplicates
      (
         this : access ICertificateQuery2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IncludeExpiredCertificates
      (
         this : access ICertificateQuery2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IncludeExpiredCertificates
      (
         this : access ICertificateQuery2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StoreName
      (
         this : access ICertificateQuery2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_StoreName
      (
         this : access ICertificateQuery2_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateQuery2 : aliased WinRt.IID := (2472151799, 3033, 20341, (184, 194, 226, 122, 127, 116, 238, 205 ));

   -----------------------------------------------------------------------------
   -- type ICertificateRequestProperties is interface and WinRt.IInspectable;

      function get_Subject
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Subject
      (
         this : access ICertificateRequestProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KeyAlgorithmName
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_KeyAlgorithmName
      (
         this : access ICertificateRequestProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KeySize
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_KeySize
      (
         this : access ICertificateRequestProperties_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_FriendlyName
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_FriendlyName
      (
         this : access ICertificateRequestProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HashAlgorithmName
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_HashAlgorithmName
      (
         this : access ICertificateRequestProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Exportable
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ExportOption
      )
      return WinRt.Hresult is abstract;

      function put_Exportable
      (
         this : access ICertificateRequestProperties_Interface;
         value : Windows.Security.Cryptography.Certificates.ExportOption
      )
      return WinRt.Hresult is abstract;

      function get_KeyUsages
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.EnrollKeyUsages
      )
      return WinRt.Hresult is abstract;

      function put_KeyUsages
      (
         this : access ICertificateRequestProperties_Interface;
         value : Windows.Security.Cryptography.Certificates.EnrollKeyUsages
      )
      return WinRt.Hresult is abstract;

      function get_KeyProtectionLevel
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.KeyProtectionLevel
      )
      return WinRt.Hresult is abstract;

      function put_KeyProtectionLevel
      (
         this : access ICertificateRequestProperties_Interface;
         value : Windows.Security.Cryptography.Certificates.KeyProtectionLevel
      )
      return WinRt.Hresult is abstract;

      function get_KeyStorageProviderName
      (
         this : access ICertificateRequestProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_KeyStorageProviderName
      (
         this : access ICertificateRequestProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateRequestProperties : aliased WinRt.IID := (1216251126, 38114, 19918, (136, 51, 26, 112, 10, 55, 162, 154 ));

   -----------------------------------------------------------------------------
   -- type ICertificateRequestProperties2 is interface and WinRt.IInspectable;

      function get_SmartcardReaderName
      (
         this : access ICertificateRequestProperties2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_SmartcardReaderName
      (
         this : access ICertificateRequestProperties2_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SigningCertificate
      (
         this : access ICertificateRequestProperties2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function put_SigningCertificate
      (
         this : access ICertificateRequestProperties2_Interface;
         value : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function get_AttestationCredentialCertificate
      (
         this : access ICertificateRequestProperties2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function put_AttestationCredentialCertificate
      (
         this : access ICertificateRequestProperties2_Interface;
         value : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateRequestProperties2 : aliased WinRt.IID := (1033947476, 55103, 20467, (160, 166, 6, 119, 192, 173, 160, 91 ));

   -----------------------------------------------------------------------------
   -- type ICertificateRequestProperties3 is interface and WinRt.IInspectable;

      function get_CurveName
      (
         this : access ICertificateRequestProperties3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_CurveName
      (
         this : access ICertificateRequestProperties3_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CurveParameters
      (
         this : access ICertificateRequestProperties3_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function put_CurveParameters
      (
         this : access ICertificateRequestProperties3_Interface;
         valueSize : WinRt.UInt32;
         value : WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function get_ContainerNamePrefix
      (
         this : access ICertificateRequestProperties3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_ContainerNamePrefix
      (
         this : access ICertificateRequestProperties3_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ContainerName
      (
         this : access ICertificateRequestProperties3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_ContainerName
      (
         this : access ICertificateRequestProperties3_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UseExistingKey
      (
         this : access ICertificateRequestProperties3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_UseExistingKey
      (
         this : access ICertificateRequestProperties3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateRequestProperties3 : aliased WinRt.IID := (3867670038, 29517, 18097, (157, 76, 110, 223, 219, 252, 132, 91 ));

   -----------------------------------------------------------------------------
   -- type ICertificateRequestProperties4 is interface and WinRt.IInspectable;

      function get_SuppressedDefaults
      (
         this : access ICertificateRequestProperties4_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_SubjectAlternativeName
      (
         this : access ICertificateRequestProperties4_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ISubjectAlternativeNameInfo
      )
      return WinRt.Hresult is abstract;

      function get_Extensions
      (
         this : access ICertificateRequestProperties4_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateRequestProperties4 : aliased WinRt.IID := (1312987858, 7265, 20458, (184, 254, 19, 95, 177, 156, 220, 228 ));

   -----------------------------------------------------------------------------
   -- type ICertificateStore is interface and WinRt.IInspectable;

      function Add
      (
         this : access ICertificateStore_Interface;
         certificate_p : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function Delete
      (
         this : access ICertificateStore_Interface;
         certificate_p : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateStore : aliased WinRt.IID := (2965370656, 13390, 17201, (175, 20, 167, 247, 167, 235, 201, 58 ));

   -----------------------------------------------------------------------------
   -- type ICertificateStore2 is interface and WinRt.IInspectable;

      function get_Name
      (
         this : access ICertificateStore2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateStore2 : aliased WinRt.IID := (3353775690, 16765, 19738, (186, 189, 21, 104, 126, 84, 153, 116 ));

   -----------------------------------------------------------------------------
   -- type ICertificateStoresStatics is interface and WinRt.IInspectable;

      function FindAllAsync
      (
         this : access ICertificateStoresStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindAllAsync
      (
         this : access ICertificateStoresStatics_Interface;
         query : Windows.Security.Cryptography.Certificates.ICertificateQuery;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_TrustedRootCertificationAuthorities
      (
         this : access ICertificateStoresStatics_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificateStore
      )
      return WinRt.Hresult is abstract;

      function get_IntermediateCertificationAuthorities
      (
         this : access ICertificateStoresStatics_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificateStore
      )
      return WinRt.Hresult is abstract;

      function GetStoreByName
      (
         this : access ICertificateStoresStatics_Interface;
         storeName : WinRt.HString;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificateStore
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateStoresStatics : aliased WinRt.IID := (4226598713, 50942, 19943, (153, 207, 116, 195, 229, 150, 224, 50 ));

   -----------------------------------------------------------------------------
   -- type ICertificateStoresStatics2 is interface and WinRt.IInspectable;

      function GetUserStoreByName
      (
         this : access ICertificateStoresStatics2_Interface;
         storeName : WinRt.HString;
         RetVal : access Windows.Security.Cryptography.Certificates.IUserCertificateStore
      )
      return WinRt.Hresult is abstract;

      IID_ICertificateStoresStatics2 : aliased WinRt.IID := (4203744121, 41172, 19340, (188, 85, 192, 163, 126, 177, 65, 237 ));

   -----------------------------------------------------------------------------
   -- type IChainBuildingParameters is interface and WinRt.IInspectable;

      function get_EnhancedKeyUsages
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ValidationTimestamp
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function put_ValidationTimestamp
      (
         this : access IChainBuildingParameters_Interface;
         value : Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_RevocationCheckEnabled
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_RevocationCheckEnabled
      (
         this : access IChainBuildingParameters_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_NetworkRetrievalEnabled
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_NetworkRetrievalEnabled
      (
         this : access IChainBuildingParameters_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_AuthorityInformationAccessEnabled
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AuthorityInformationAccessEnabled
      (
         this : access IChainBuildingParameters_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CurrentTimeValidationEnabled
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_CurrentTimeValidationEnabled
      (
         this : access IChainBuildingParameters_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ExclusiveTrustRoots
      (
         this : access IChainBuildingParameters_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IChainBuildingParameters : aliased WinRt.IID := (1110157602, 31885, 18359, (181, 155, 177, 39, 3, 115, 58, 195 ));

   -----------------------------------------------------------------------------
   -- type IChainValidationParameters is interface and WinRt.IInspectable;

      function get_CertificateChainPolicy
      (
         this : access IChainValidationParameters_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.CertificateChainPolicy
      )
      return WinRt.Hresult is abstract;

      function put_CertificateChainPolicy
      (
         this : access IChainValidationParameters_Interface;
         value : Windows.Security.Cryptography.Certificates.CertificateChainPolicy
      )
      return WinRt.Hresult is abstract;

      function get_ServerDnsName
      (
         this : access IChainValidationParameters_Interface;
         RetVal : access Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      function put_ServerDnsName
      (
         this : access IChainValidationParameters_Interface;
         value : Windows.Networking.IHostName
      )
      return WinRt.Hresult is abstract;

      IID_IChainValidationParameters : aliased WinRt.IID := (3295951690, 32432, 19286, (160, 64, 185, 200, 230, 85, 221, 243 ));

   -----------------------------------------------------------------------------
   -- type ICmsAttachedSignature is interface and WinRt.IInspectable;

      function get_Certificates
      (
         this : access ICmsAttachedSignature_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Content
      (
         this : access ICmsAttachedSignature_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.Byte_Ptr
      )
      return WinRt.Hresult is abstract;

      function get_Signers
      (
         this : access ICmsAttachedSignature_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function VerifySignature
      (
         this : access ICmsAttachedSignature_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.SignatureValidationResult
      )
      return WinRt.Hresult is abstract;

      IID_ICmsAttachedSignature : aliased WinRt.IID := (1636408733, 14167, 20171, (189, 220, 12, 163, 87, 215, 169, 54 ));

   -----------------------------------------------------------------------------
   -- type ICmsAttachedSignatureFactory is interface and WinRt.IInspectable;

      function CreateCmsAttachedSignature
      (
         this : access ICmsAttachedSignatureFactory_Interface;
         inputBlob : Windows.Storage.Streams.IBuffer;
         RetVal : access Windows.Security.Cryptography.Certificates.ICmsAttachedSignature
      )
      return WinRt.Hresult is abstract;

      IID_ICmsAttachedSignatureFactory : aliased WinRt.IID := (3502832661, 63319, 19556, (163, 98, 82, 204, 28, 119, 207, 251 ));

   -----------------------------------------------------------------------------
   -- type ICmsAttachedSignatureStatics is interface and WinRt.IInspectable;

      function GenerateSignatureAsync
      (
         this : access ICmsAttachedSignatureStatics_Interface;
         data : Windows.Storage.Streams.IBuffer;
         signers : GenericObject;
         certificates : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICmsAttachedSignatureStatics : aliased WinRt.IID := (2274925710, 45229, 18829, (167, 245, 120, 181, 155, 206, 75, 54 ));

   -----------------------------------------------------------------------------
   -- type ICmsDetachedSignature is interface and WinRt.IInspectable;

      function get_Certificates
      (
         this : access ICmsDetachedSignature_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Signers
      (
         this : access ICmsDetachedSignature_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function VerifySignatureAsync
      (
         this : access ICmsDetachedSignature_Interface;
         data : Windows.Storage.Streams.IInputStream;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICmsDetachedSignature : aliased WinRt.IID := (253686100, 63070, 17718, (131, 57, 89, 68, 8, 29, 178, 202 ));

   -----------------------------------------------------------------------------
   -- type ICmsDetachedSignatureFactory is interface and WinRt.IInspectable;

      function CreateCmsDetachedSignature
      (
         this : access ICmsDetachedSignatureFactory_Interface;
         inputBlob : Windows.Storage.Streams.IBuffer;
         RetVal : access Windows.Security.Cryptography.Certificates.ICmsDetachedSignature
      )
      return WinRt.Hresult is abstract;

      IID_ICmsDetachedSignatureFactory : aliased WinRt.IID := (3299554563, 44671, 17287, (173, 25, 0, 241, 80, 228, 142, 187 ));

   -----------------------------------------------------------------------------
   -- type ICmsDetachedSignatureStatics is interface and WinRt.IInspectable;

      function GenerateSignatureAsync
      (
         this : access ICmsDetachedSignatureStatics_Interface;
         data : Windows.Storage.Streams.IInputStream;
         signers : GenericObject;
         certificates : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICmsDetachedSignatureStatics : aliased WinRt.IID := (1024543997, 49051, 18050, (155, 230, 145, 245, 124, 5, 56, 8 ));

   -----------------------------------------------------------------------------
   -- type ICmsSignerInfo is interface and WinRt.IInspectable;

      function get_Certificate
      (
         this : access ICmsSignerInfo_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function put_Certificate
      (
         this : access ICmsSignerInfo_Interface;
         value : Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function get_HashAlgorithmName
      (
         this : access ICmsSignerInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_HashAlgorithmName
      (
         this : access ICmsSignerInfo_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TimestampInfo
      (
         this : access ICmsSignerInfo_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICmsTimestampInfo
      )
      return WinRt.Hresult is abstract;

      IID_ICmsSignerInfo : aliased WinRt.IID := (1355817179, 7471, 19482, (181, 197, 208, 24, 143, 249, 31, 71 ));

   -----------------------------------------------------------------------------
   -- type ICmsTimestampInfo is interface and WinRt.IInspectable;

      function get_SigningCertificate
      (
         this : access ICmsTimestampInfo_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificate
      )
      return WinRt.Hresult is abstract;

      function get_Certificates
      (
         this : access ICmsTimestampInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Timestamp
      (
         this : access ICmsTimestampInfo_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      IID_ICmsTimestampInfo : aliased WinRt.IID := (794755314, 11288, 20360, (132, 53, 197, 52, 8, 96, 118, 245 ));

   -----------------------------------------------------------------------------
   -- type IKeyAlgorithmNamesStatics is interface and WinRt.IInspectable;

      function get_Rsa
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Dsa
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdh256
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdh384
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdh521
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdsa256
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdsa384
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdsa521
      (
         this : access IKeyAlgorithmNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IKeyAlgorithmNamesStatics : aliased WinRt.IID := (1200645591, 31431, 17793, (140, 59, 208, 112, 39, 20, 4, 72 ));

   -----------------------------------------------------------------------------
   -- type IKeyAlgorithmNamesStatics2 is interface and WinRt.IInspectable;

      function get_Ecdsa
      (
         this : access IKeyAlgorithmNamesStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ecdh
      (
         this : access IKeyAlgorithmNamesStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IKeyAlgorithmNamesStatics2 : aliased WinRt.IID := (3382400646, 57853, 19018, (137, 61, 162, 111, 51, 221, 139, 180 ));

   -----------------------------------------------------------------------------
   -- type IKeyAttestationHelperStatics is interface and WinRt.IInspectable;

      function DecryptTpmAttestationCredentialAsync
      (
         this : access IKeyAttestationHelperStatics_Interface;
         credential : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetTpmAttestationCredentialId
      (
         this : access IKeyAttestationHelperStatics_Interface;
         credential : WinRt.HString;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IKeyAttestationHelperStatics : aliased WinRt.IID := (373875270, 63044, 17190, (136, 190, 58, 241, 2, 211, 14, 12 ));

   -----------------------------------------------------------------------------
   -- type IKeyAttestationHelperStatics2 is interface and WinRt.IInspectable;

      function DecryptTpmAttestationCredentialAsync
      (
         this : access IKeyAttestationHelperStatics2_Interface;
         credential : WinRt.HString;
         containerName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IKeyAttestationHelperStatics2 : aliased WinRt.IID := (2623081260, 42694, 19038, (158, 100, 232, 93, 82, 121, 223, 151 ));

   -----------------------------------------------------------------------------
   -- type IKeyStorageProviderNamesStatics is interface and WinRt.IInspectable;

      function get_SoftwareKeyStorageProvider
      (
         this : access IKeyStorageProviderNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SmartcardKeyStorageProvider
      (
         this : access IKeyStorageProviderNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PlatformKeyStorageProvider
      (
         this : access IKeyStorageProviderNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IKeyStorageProviderNamesStatics : aliased WinRt.IID := (2937613024, 21801, 17922, (189, 148, 10, 171, 145, 149, 123, 92 ));

   -----------------------------------------------------------------------------
   -- type IKeyStorageProviderNamesStatics2 is interface and WinRt.IInspectable;

      function get_PassportKeyStorageProvider
      (
         this : access IKeyStorageProviderNamesStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IKeyStorageProviderNamesStatics2 : aliased WinRt.IID := (640513085, 39982, 16844, (136, 18, 196, 217, 113, 221, 124, 96 ));

   -----------------------------------------------------------------------------
   -- type IPfxImportParameters is interface and WinRt.IInspectable;

      function get_Exportable
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ExportOption
      )
      return WinRt.Hresult is abstract;

      function put_Exportable
      (
         this : access IPfxImportParameters_Interface;
         value : Windows.Security.Cryptography.Certificates.ExportOption
      )
      return WinRt.Hresult is abstract;

      function get_KeyProtectionLevel
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.KeyProtectionLevel
      )
      return WinRt.Hresult is abstract;

      function put_KeyProtectionLevel
      (
         this : access IPfxImportParameters_Interface;
         value : Windows.Security.Cryptography.Certificates.KeyProtectionLevel
      )
      return WinRt.Hresult is abstract;

      function get_InstallOptions
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.InstallOptions
      )
      return WinRt.Hresult is abstract;

      function put_InstallOptions
      (
         this : access IPfxImportParameters_Interface;
         value : Windows.Security.Cryptography.Certificates.InstallOptions
      )
      return WinRt.Hresult is abstract;

      function get_FriendlyName
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_FriendlyName
      (
         this : access IPfxImportParameters_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_KeyStorageProviderName
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_KeyStorageProviderName
      (
         this : access IPfxImportParameters_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ContainerNamePrefix
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_ContainerNamePrefix
      (
         this : access IPfxImportParameters_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ReaderName
      (
         this : access IPfxImportParameters_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_ReaderName
      (
         this : access IPfxImportParameters_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPfxImportParameters : aliased WinRt.IID := (1745696017, 39432, 18376, (134, 74, 46, 221, 77, 142, 180, 108 ));

   -----------------------------------------------------------------------------
   -- type IStandardCertificateStoreNamesStatics is interface and WinRt.IInspectable;

      function get_Personal
      (
         this : access IStandardCertificateStoreNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TrustedRootCertificationAuthorities
      (
         this : access IStandardCertificateStoreNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IntermediateCertificationAuthorities
      (
         this : access IStandardCertificateStoreNamesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IStandardCertificateStoreNamesStatics : aliased WinRt.IID := (202722011, 42134, 16888, (143, 229, 158, 150, 243, 110, 251, 248 ));

   -----------------------------------------------------------------------------
   -- type ISubjectAlternativeNameInfo is interface and WinRt.IInspectable;

      function get_EmailName
      (
         this : access ISubjectAlternativeNameInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_IPAddress
      (
         this : access ISubjectAlternativeNameInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Url
      (
         this : access ISubjectAlternativeNameInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DnsName
      (
         this : access ISubjectAlternativeNameInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DistinguishedName
      (
         this : access ISubjectAlternativeNameInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_PrincipalName
      (
         this : access ISubjectAlternativeNameInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ISubjectAlternativeNameInfo : aliased WinRt.IID := (1479039473, 22173, 19488, (190, 123, 78, 28, 154, 11, 197, 43 ));

   -----------------------------------------------------------------------------
   -- type ISubjectAlternativeNameInfo2 is interface and WinRt.IInspectable;

      function get_EmailNames
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_IPAddresses
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Urls
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DnsNames
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DistinguishedNames
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_PrincipalNames
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Extension
      (
         this : access ISubjectAlternativeNameInfo2_Interface;
         RetVal : access Windows.Security.Cryptography.Certificates.ICertificateExtension
      )
      return WinRt.Hresult is abstract;

      IID_ISubjectAlternativeNameInfo2 : aliased WinRt.IID := (1132099782, 7249, 16874, (179, 74, 61, 101, 67, 152, 163, 112 ));

   -----------------------------------------------------------------------------
   -- type IUserCertificateEnrollmentManager is interface and WinRt.IInspectable;

      function CreateRequestAsync
      (
         this : access IUserCertificateEnrollmentManager_Interface;
         request : Windows.Security.Cryptography.Certificates.ICertificateRequestProperties;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function InstallCertificateAsync
      (
         this : access IUserCertificateEnrollmentManager_Interface;
         certificate_p : WinRt.HString;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ImportPfxDataAsync
      (
         this : access IUserCertificateEnrollmentManager_Interface;
         pfxData : WinRt.HString;
         password : WinRt.HString;
         exportable : Windows.Security.Cryptography.Certificates.ExportOption;
         keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         friendlyName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ImportPfxDataAsync
      (
         this : access IUserCertificateEnrollmentManager_Interface;
         pfxData : WinRt.HString;
         password : WinRt.HString;
         exportable : Windows.Security.Cryptography.Certificates.ExportOption;
         keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         friendlyName : WinRt.HString;
         keyStorageProvider : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IUserCertificateEnrollmentManager : aliased WinRt.IID := (2519807768, 8929, 18457, (178, 11, 171, 70, 166, 236, 160, 110 ));

   -----------------------------------------------------------------------------
   -- type IUserCertificateEnrollmentManager2 is interface and WinRt.IInspectable;

      function ImportPfxDataAsync
      (
         this : access IUserCertificateEnrollmentManager2_Interface;
         pfxData : WinRt.HString;
         password : WinRt.HString;
         pfxImportParameters_p : Windows.Security.Cryptography.Certificates.IPfxImportParameters;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IUserCertificateEnrollmentManager2 : aliased WinRt.IID := (229481649, 26078, 18730, (184, 109, 252, 92, 72, 44, 55, 71 ));

   -----------------------------------------------------------------------------
   -- type IUserCertificateStore is interface and WinRt.IInspectable;

      function RequestAddAsync
      (
         this : access IUserCertificateStore_Interface;
         certificate_p : Windows.Security.Cryptography.Certificates.ICertificate;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestDeleteAsync
      (
         this : access IUserCertificateStore_Interface;
         certificate_p : Windows.Security.Cryptography.Certificates.ICertificate;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access IUserCertificateStore_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IUserCertificateStore : aliased WinRt.IID := (3388677507, 30879, 19278, (145, 128, 4, 90, 117, 122, 172, 109 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Certificate

   overriding procedure Initialize (this : in out Certificate);
   overriding procedure Finalize (this : in out Certificate);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Certificate

   function Constructor
   (
      certBlob : Windows.Storage.Streams.IBuffer
   )
   return Certificate;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Certificate

   function BuildChainAsync
   (
      this : in out Certificate;
      certificates : GenericObject
   )
   return WinRt.Windows.Security.Cryptography.Certificates.CertificateChain'Class;

   function BuildChainAsync
   (
      this : in out Certificate;
      certificates : GenericObject;
      parameters : Windows.Security.Cryptography.Certificates.ChainBuildingParameters'Class
   )
   return WinRt.Windows.Security.Cryptography.Certificates.CertificateChain'Class;

   function get_SerialNumber
   (
      this : in out Certificate
   )
   return WinRt.Byte_Array;

   function GetHashValue
   (
      this : in out Certificate
   )
   return WinRt.Byte_Array;

   function GetHashValue
   (
      this : in out Certificate;
      hashAlgorithmName : WinRt.WString
   )
   return WinRt.Byte_Array;

   function GetCertificateBlob
   (
      this : in out Certificate
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_Subject
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_Issuer
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_HasPrivateKey
   (
      this : in out Certificate
   )
   return WinRt.Boolean;

   function get_IsStronglyProtected
   (
      this : in out Certificate
   )
   return WinRt.Boolean;

   function get_ValidFrom
   (
      this : in out Certificate
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_ValidTo
   (
      this : in out Certificate
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_EnhancedKeyUsages
   (
      this : in out Certificate
   )
   return IVectorView_HString.Kind;

   procedure put_FriendlyName
   (
      this : in out Certificate;
      value : WinRt.WString
   );

   function get_FriendlyName
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_IsSecurityDeviceBound
   (
      this : in out Certificate
   )
   return WinRt.Boolean;

   function get_KeyUsages
   (
      this : in out Certificate
   )
   return WinRt.Windows.Security.Cryptography.Certificates.CertificateKeyUsages'Class;

   function get_KeyAlgorithmName
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_SignatureAlgorithmName
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_SignatureHashAlgorithmName
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_SubjectAlternativeName
   (
      this : in out Certificate
   )
   return WinRt.Windows.Security.Cryptography.Certificates.SubjectAlternativeNameInfo'Class;

   function get_IsPerUser
   (
      this : in out Certificate
   )
   return WinRt.Boolean;

   function get_StoreName
   (
      this : in out Certificate
   )
   return WinRt.WString;

   function get_KeyStorageProviderName
   (
      this : in out Certificate
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CertificateChain

   overriding procedure Initialize (this : in out CertificateChain);
   overriding procedure Finalize (this : in out CertificateChain);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CertificateChain

   function Validate
   (
      this : in out CertificateChain
   )
   return WinRt.Windows.Security.Cryptography.Certificates.ChainValidationResult;

   function Validate
   (
      this : in out CertificateChain;
      parameter : Windows.Security.Cryptography.Certificates.ChainValidationParameters'Class
   )
   return WinRt.Windows.Security.Cryptography.Certificates.ChainValidationResult;

   function GetCertificates
   (
      this : in out CertificateChain;
      includeRoot : WinRt.Boolean
   )
   return IVectorView_ICertificate.Kind;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CertificateEnrollmentManager is

      function CreateRequestAsync
      (
         request : Windows.Security.Cryptography.Certificates.CertificateRequestProperties'Class
      )
      return WinRt.WString;

      procedure InstallCertificateAsync
      (
         certificate_p : WinRt.WString;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions
      );

      procedure ImportPfxDataAsync
      (
         pfxData : WinRt.WString;
         password : WinRt.WString;
         exportable : Windows.Security.Cryptography.Certificates.ExportOption;
         keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         friendlyName : WinRt.WString
      );

      procedure ImportPfxDataAsync
      (
         pfxData : WinRt.WString;
         password : WinRt.WString;
         pfxImportParameters_p : Windows.Security.Cryptography.Certificates.PfxImportParameters'Class
      );

      function get_UserCertificateEnrollmentManager
      return WinRt.Windows.Security.Cryptography.Certificates.UserCertificateEnrollmentManager;

      procedure ImportPfxDataAsync
      (
         pfxData : WinRt.WString;
         password : WinRt.WString;
         exportable : Windows.Security.Cryptography.Certificates.ExportOption;
         keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
         installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
         friendlyName : WinRt.WString;
         keyStorageProvider : WinRt.WString
      );

   end CertificateEnrollmentManager;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CertificateExtension

   overriding procedure Initialize (this : in out CertificateExtension);
   overriding procedure Finalize (this : in out CertificateExtension);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CertificateExtension

   function Constructor return CertificateExtension;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CertificateExtension

   function get_ObjectId
   (
      this : in out CertificateExtension
   )
   return WinRt.WString;

   procedure put_ObjectId
   (
      this : in out CertificateExtension;
      value : WinRt.WString
   );

   function get_IsCritical
   (
      this : in out CertificateExtension
   )
   return WinRt.Boolean;

   procedure put_IsCritical
   (
      this : in out CertificateExtension;
      value : WinRt.Boolean
   );

   procedure EncodeValue
   (
      this : in out CertificateExtension;
      value : WinRt.WString
   );

   function get_Value
   (
      this : in out CertificateExtension
   )
   return WinRt.Byte_Array;

   procedure put_Value
   (
      this : in out CertificateExtension;
      value : WinRt.Byte_Array
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CertificateKeyUsages

   overriding procedure Initialize (this : in out CertificateKeyUsages);
   overriding procedure Finalize (this : in out CertificateKeyUsages);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CertificateKeyUsages

   function Constructor return CertificateKeyUsages;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CertificateKeyUsages

   function get_EncipherOnly
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_EncipherOnly
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_CrlSign
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_CrlSign
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_KeyCertificateSign
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_KeyCertificateSign
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_KeyAgreement
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_KeyAgreement
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_DataEncipherment
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_DataEncipherment
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_KeyEncipherment
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_KeyEncipherment
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_NonRepudiation
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_NonRepudiation
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   function get_DigitalSignature
   (
      this : in out CertificateKeyUsages
   )
   return WinRt.Boolean;

   procedure put_DigitalSignature
   (
      this : in out CertificateKeyUsages;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CertificateQuery

   overriding procedure Initialize (this : in out CertificateQuery);
   overriding procedure Finalize (this : in out CertificateQuery);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CertificateQuery

   function Constructor return CertificateQuery;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CertificateQuery

   function get_EnhancedKeyUsages
   (
      this : in out CertificateQuery
   )
   return IVector_HString.Kind;

   function get_IssuerName
   (
      this : in out CertificateQuery
   )
   return WinRt.WString;

   procedure put_IssuerName
   (
      this : in out CertificateQuery;
      value : WinRt.WString
   );

   function get_FriendlyName
   (
      this : in out CertificateQuery
   )
   return WinRt.WString;

   procedure put_FriendlyName
   (
      this : in out CertificateQuery;
      value : WinRt.WString
   );

   function get_Thumbprint
   (
      this : in out CertificateQuery
   )
   return WinRt.Byte_Array;

   procedure put_Thumbprint
   (
      this : in out CertificateQuery;
      value : WinRt.Byte_Array
   );

   function get_HardwareOnly
   (
      this : in out CertificateQuery
   )
   return WinRt.Boolean;

   procedure put_HardwareOnly
   (
      this : in out CertificateQuery;
      value : WinRt.Boolean
   );

   function get_IncludeDuplicates
   (
      this : in out CertificateQuery
   )
   return WinRt.Boolean;

   procedure put_IncludeDuplicates
   (
      this : in out CertificateQuery;
      value : WinRt.Boolean
   );

   function get_IncludeExpiredCertificates
   (
      this : in out CertificateQuery
   )
   return WinRt.Boolean;

   procedure put_IncludeExpiredCertificates
   (
      this : in out CertificateQuery;
      value : WinRt.Boolean
   );

   function get_StoreName
   (
      this : in out CertificateQuery
   )
   return WinRt.WString;

   procedure put_StoreName
   (
      this : in out CertificateQuery;
      value : WinRt.WString
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CertificateRequestProperties

   overriding procedure Initialize (this : in out CertificateRequestProperties);
   overriding procedure Finalize (this : in out CertificateRequestProperties);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CertificateRequestProperties

   function Constructor return CertificateRequestProperties;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CertificateRequestProperties

   function get_Subject
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_Subject
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_KeyAlgorithmName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_KeyAlgorithmName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_KeySize
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.UInt32;

   procedure put_KeySize
   (
      this : in out CertificateRequestProperties;
      value : WinRt.UInt32
   );

   function get_FriendlyName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_FriendlyName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_HashAlgorithmName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_HashAlgorithmName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_Exportable
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Windows.Security.Cryptography.Certificates.ExportOption;

   procedure put_Exportable
   (
      this : in out CertificateRequestProperties;
      value : Windows.Security.Cryptography.Certificates.ExportOption
   );

   function get_KeyUsages
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Windows.Security.Cryptography.Certificates.EnrollKeyUsages;

   procedure put_KeyUsages
   (
      this : in out CertificateRequestProperties;
      value : Windows.Security.Cryptography.Certificates.EnrollKeyUsages
   );

   function get_KeyProtectionLevel
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Windows.Security.Cryptography.Certificates.KeyProtectionLevel;

   procedure put_KeyProtectionLevel
   (
      this : in out CertificateRequestProperties;
      value : Windows.Security.Cryptography.Certificates.KeyProtectionLevel
   );

   function get_KeyStorageProviderName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_KeyStorageProviderName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_SmartcardReaderName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_SmartcardReaderName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_SigningCertificate
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   procedure put_SigningCertificate
   (
      this : in out CertificateRequestProperties;
      value : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   function get_AttestationCredentialCertificate
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   procedure put_AttestationCredentialCertificate
   (
      this : in out CertificateRequestProperties;
      value : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   function get_CurveName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_CurveName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_CurveParameters
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Byte_Array;

   procedure put_CurveParameters
   (
      this : in out CertificateRequestProperties;
      value : WinRt.Byte_Array
   );

   function get_ContainerNamePrefix
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_ContainerNamePrefix
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_ContainerName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.WString;

   procedure put_ContainerName
   (
      this : in out CertificateRequestProperties;
      value : WinRt.WString
   );

   function get_UseExistingKey
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Boolean;

   procedure put_UseExistingKey
   (
      this : in out CertificateRequestProperties;
      value : WinRt.Boolean
   );

   function get_SuppressedDefaults
   (
      this : in out CertificateRequestProperties
   )
   return IVector_HString.Kind;

   function get_SubjectAlternativeName
   (
      this : in out CertificateRequestProperties
   )
   return WinRt.Windows.Security.Cryptography.Certificates.SubjectAlternativeNameInfo'Class;

   function get_Extensions
   (
      this : in out CertificateRequestProperties
   )
   return IVector_ICertificateExtension.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CertificateStore

   overriding procedure Initialize (this : in out CertificateStore);
   overriding procedure Finalize (this : in out CertificateStore);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CertificateStore

   procedure Add
   (
      this : in out CertificateStore;
      certificate_p : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   procedure Delete
   (
      this : in out CertificateStore;
      certificate_p : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   function get_Name
   (
      this : in out CertificateStore
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CertificateStores is

      function GetUserStoreByName
      (
         storeName : WinRt.WString
      )
      return WinRt.Windows.Security.Cryptography.Certificates.UserCertificateStore;

      function FindAllAsync
      return WinRt.GenericObject;

      function FindAllAsync
      (
         query : Windows.Security.Cryptography.Certificates.CertificateQuery'Class
      )
      return WinRt.GenericObject;

      function get_TrustedRootCertificationAuthorities
      return WinRt.Windows.Security.Cryptography.Certificates.CertificateStore;

      function get_IntermediateCertificationAuthorities
      return WinRt.Windows.Security.Cryptography.Certificates.CertificateStore;

      function GetStoreByName
      (
         storeName : WinRt.WString
      )
      return WinRt.Windows.Security.Cryptography.Certificates.CertificateStore;

   end CertificateStores;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ChainBuildingParameters

   overriding procedure Initialize (this : in out ChainBuildingParameters);
   overriding procedure Finalize (this : in out ChainBuildingParameters);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ChainBuildingParameters

   function Constructor return ChainBuildingParameters;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ChainBuildingParameters

   function get_EnhancedKeyUsages
   (
      this : in out ChainBuildingParameters
   )
   return IVector_HString.Kind;

   function get_ValidationTimestamp
   (
      this : in out ChainBuildingParameters
   )
   return WinRt.Windows.Foundation.DateTime;

   procedure put_ValidationTimestamp
   (
      this : in out ChainBuildingParameters;
      value : Windows.Foundation.DateTime
   );

   function get_RevocationCheckEnabled
   (
      this : in out ChainBuildingParameters
   )
   return WinRt.Boolean;

   procedure put_RevocationCheckEnabled
   (
      this : in out ChainBuildingParameters;
      value : WinRt.Boolean
   );

   function get_NetworkRetrievalEnabled
   (
      this : in out ChainBuildingParameters
   )
   return WinRt.Boolean;

   procedure put_NetworkRetrievalEnabled
   (
      this : in out ChainBuildingParameters;
      value : WinRt.Boolean
   );

   function get_AuthorityInformationAccessEnabled
   (
      this : in out ChainBuildingParameters
   )
   return WinRt.Boolean;

   procedure put_AuthorityInformationAccessEnabled
   (
      this : in out ChainBuildingParameters;
      value : WinRt.Boolean
   );

   function get_CurrentTimeValidationEnabled
   (
      this : in out ChainBuildingParameters
   )
   return WinRt.Boolean;

   procedure put_CurrentTimeValidationEnabled
   (
      this : in out ChainBuildingParameters;
      value : WinRt.Boolean
   );

   function get_ExclusiveTrustRoots
   (
      this : in out ChainBuildingParameters
   )
   return IVector_ICertificate.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ChainValidationParameters

   overriding procedure Initialize (this : in out ChainValidationParameters);
   overriding procedure Finalize (this : in out ChainValidationParameters);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ChainValidationParameters

   function Constructor return ChainValidationParameters;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ChainValidationParameters

   function get_CertificateChainPolicy
   (
      this : in out ChainValidationParameters
   )
   return WinRt.Windows.Security.Cryptography.Certificates.CertificateChainPolicy;

   procedure put_CertificateChainPolicy
   (
      this : in out ChainValidationParameters;
      value : Windows.Security.Cryptography.Certificates.CertificateChainPolicy
   );

   function get_ServerDnsName
   (
      this : in out ChainValidationParameters
   )
   return WinRt.Windows.Networking.HostName'Class;

   procedure put_ServerDnsName
   (
      this : in out ChainValidationParameters;
      value : Windows.Networking.HostName'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CmsAttachedSignature

   overriding procedure Initialize (this : in out CmsAttachedSignature);
   overriding procedure Finalize (this : in out CmsAttachedSignature);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CmsAttachedSignature

   function Constructor
   (
      inputBlob : Windows.Storage.Streams.IBuffer
   )
   return CmsAttachedSignature;

   -----------------------------------------------------------------------------
   -- Static Interfaces for CmsAttachedSignature

   function GenerateSignatureAsync
   (
      data : Windows.Storage.Streams.IBuffer;
      signers : GenericObject;
      certificates : GenericObject
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CmsAttachedSignature

   function get_Certificates
   (
      this : in out CmsAttachedSignature
   )
   return IVectorView_ICertificate.Kind;

   function get_Content
   (
      this : in out CmsAttachedSignature
   )
   return WinRt.Byte_Array;

   function get_Signers
   (
      this : in out CmsAttachedSignature
   )
   return IVectorView_ICmsSignerInfo.Kind;

   function VerifySignature
   (
      this : in out CmsAttachedSignature
   )
   return WinRt.Windows.Security.Cryptography.Certificates.SignatureValidationResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CmsDetachedSignature

   overriding procedure Initialize (this : in out CmsDetachedSignature);
   overriding procedure Finalize (this : in out CmsDetachedSignature);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CmsDetachedSignature

   function Constructor
   (
      inputBlob : Windows.Storage.Streams.IBuffer
   )
   return CmsDetachedSignature;

   -----------------------------------------------------------------------------
   -- Static Interfaces for CmsDetachedSignature

   function GenerateSignatureAsync
   (
      data : Windows.Storage.Streams.IInputStream;
      signers : GenericObject;
      certificates : GenericObject
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CmsDetachedSignature

   function get_Certificates
   (
      this : in out CmsDetachedSignature
   )
   return IVectorView_ICertificate.Kind;

   function get_Signers
   (
      this : in out CmsDetachedSignature
   )
   return IVectorView_ICmsSignerInfo.Kind;

   function VerifySignatureAsync
   (
      this : in out CmsDetachedSignature;
      data : Windows.Storage.Streams.IInputStream
   )
   return WinRt.Windows.Security.Cryptography.Certificates.SignatureValidationResult;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CmsSignerInfo

   overriding procedure Initialize (this : in out CmsSignerInfo);
   overriding procedure Finalize (this : in out CmsSignerInfo);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CmsSignerInfo

   function Constructor return CmsSignerInfo;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CmsSignerInfo

   function get_Certificate
   (
      this : in out CmsSignerInfo
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   procedure put_Certificate
   (
      this : in out CmsSignerInfo;
      value : Windows.Security.Cryptography.Certificates.Certificate'Class
   );

   function get_HashAlgorithmName
   (
      this : in out CmsSignerInfo
   )
   return WinRt.WString;

   procedure put_HashAlgorithmName
   (
      this : in out CmsSignerInfo;
      value : WinRt.WString
   );

   function get_TimestampInfo
   (
      this : in out CmsSignerInfo
   )
   return WinRt.Windows.Security.Cryptography.Certificates.CmsTimestampInfo'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CmsTimestampInfo

   overriding procedure Initialize (this : in out CmsTimestampInfo);
   overriding procedure Finalize (this : in out CmsTimestampInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CmsTimestampInfo

   function get_SigningCertificate
   (
      this : in out CmsTimestampInfo
   )
   return WinRt.Windows.Security.Cryptography.Certificates.Certificate'Class;

   function get_Certificates
   (
      this : in out CmsTimestampInfo
   )
   return IVectorView_ICertificate.Kind;

   function get_Timestamp
   (
      this : in out CmsTimestampInfo
   )
   return WinRt.Windows.Foundation.DateTime;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package KeyAlgorithmNames is

      function get_Ecdsa
      return WinRt.WString;

      function get_Ecdh
      return WinRt.WString;

      function get_Rsa
      return WinRt.WString;

      function get_Dsa
      return WinRt.WString;

      function get_Ecdh256
      return WinRt.WString;

      function get_Ecdh384
      return WinRt.WString;

      function get_Ecdh521
      return WinRt.WString;

      function get_Ecdsa256
      return WinRt.WString;

      function get_Ecdsa384
      return WinRt.WString;

      function get_Ecdsa521
      return WinRt.WString;

   end KeyAlgorithmNames;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package KeyAttestationHelper is

      function DecryptTpmAttestationCredentialAsync
      (
         credential : WinRt.WString
      )
      return WinRt.WString;

      function GetTpmAttestationCredentialId
      (
         credential : WinRt.WString
      )
      return WinRt.WString;

      function DecryptTpmAttestationCredentialAsync
      (
         credential : WinRt.WString;
         containerName : WinRt.WString
      )
      return WinRt.WString;

   end KeyAttestationHelper;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package KeyStorageProviderNames is

      function get_PassportKeyStorageProvider
      return WinRt.WString;

      function get_SoftwareKeyStorageProvider
      return WinRt.WString;

      function get_SmartcardKeyStorageProvider
      return WinRt.WString;

      function get_PlatformKeyStorageProvider
      return WinRt.WString;

   end KeyStorageProviderNames;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PfxImportParameters

   overriding procedure Initialize (this : in out PfxImportParameters);
   overriding procedure Finalize (this : in out PfxImportParameters);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PfxImportParameters

   function Constructor return PfxImportParameters;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PfxImportParameters

   function get_Exportable
   (
      this : in out PfxImportParameters
   )
   return WinRt.Windows.Security.Cryptography.Certificates.ExportOption;

   procedure put_Exportable
   (
      this : in out PfxImportParameters;
      value : Windows.Security.Cryptography.Certificates.ExportOption
   );

   function get_KeyProtectionLevel
   (
      this : in out PfxImportParameters
   )
   return WinRt.Windows.Security.Cryptography.Certificates.KeyProtectionLevel;

   procedure put_KeyProtectionLevel
   (
      this : in out PfxImportParameters;
      value : Windows.Security.Cryptography.Certificates.KeyProtectionLevel
   );

   function get_InstallOptions
   (
      this : in out PfxImportParameters
   )
   return WinRt.Windows.Security.Cryptography.Certificates.InstallOptions;

   procedure put_InstallOptions
   (
      this : in out PfxImportParameters;
      value : Windows.Security.Cryptography.Certificates.InstallOptions
   );

   function get_FriendlyName
   (
      this : in out PfxImportParameters
   )
   return WinRt.WString;

   procedure put_FriendlyName
   (
      this : in out PfxImportParameters;
      value : WinRt.WString
   );

   function get_KeyStorageProviderName
   (
      this : in out PfxImportParameters
   )
   return WinRt.WString;

   procedure put_KeyStorageProviderName
   (
      this : in out PfxImportParameters;
      value : WinRt.WString
   );

   function get_ContainerNamePrefix
   (
      this : in out PfxImportParameters
   )
   return WinRt.WString;

   procedure put_ContainerNamePrefix
   (
      this : in out PfxImportParameters;
      value : WinRt.WString
   );

   function get_ReaderName
   (
      this : in out PfxImportParameters
   )
   return WinRt.WString;

   procedure put_ReaderName
   (
      this : in out PfxImportParameters;
      value : WinRt.WString
   );

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package StandardCertificateStoreNames is

      function get_Personal
      return WinRt.WString;

      function get_TrustedRootCertificationAuthorities
      return WinRt.WString;

      function get_IntermediateCertificationAuthorities
      return WinRt.WString;

   end StandardCertificateStoreNames;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SubjectAlternativeNameInfo

   overriding procedure Initialize (this : in out SubjectAlternativeNameInfo);
   overriding procedure Finalize (this : in out SubjectAlternativeNameInfo);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SubjectAlternativeNameInfo

   function Constructor return SubjectAlternativeNameInfo;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SubjectAlternativeNameInfo

   function get_EmailName
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVectorView_HString.Kind;

   function get_IPAddress
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVectorView_HString.Kind;

   function get_Url
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVectorView_HString.Kind;

   function get_DnsName
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVectorView_HString.Kind;

   function get_DistinguishedName
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVectorView_HString.Kind;

   function get_PrincipalName
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVectorView_HString.Kind;

   function get_EmailNames
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVector_HString.Kind;

   function get_IPAddresses
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVector_HString.Kind;

   function get_Urls
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVector_HString.Kind;

   function get_DnsNames
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVector_HString.Kind;

   function get_DistinguishedNames
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVector_HString.Kind;

   function get_PrincipalNames
   (
      this : in out SubjectAlternativeNameInfo
   )
   return IVector_HString.Kind;

   function get_Extension
   (
      this : in out SubjectAlternativeNameInfo
   )
   return WinRt.Windows.Security.Cryptography.Certificates.CertificateExtension'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for UserCertificateEnrollmentManager

   overriding procedure Initialize (this : in out UserCertificateEnrollmentManager);
   overriding procedure Finalize (this : in out UserCertificateEnrollmentManager);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for UserCertificateEnrollmentManager

   function CreateRequestAsync
   (
      this : in out UserCertificateEnrollmentManager;
      request : Windows.Security.Cryptography.Certificates.CertificateRequestProperties'Class
   )
   return WinRt.WString;

   procedure InstallCertificateAsync
   (
      this : in out UserCertificateEnrollmentManager;
      certificate_p : WinRt.WString;
      installOption : Windows.Security.Cryptography.Certificates.InstallOptions
   );

   procedure ImportPfxDataAsync
   (
      this : in out UserCertificateEnrollmentManager;
      pfxData : WinRt.WString;
      password : WinRt.WString;
      exportable : Windows.Security.Cryptography.Certificates.ExportOption;
      keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
      installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
      friendlyName : WinRt.WString
   );

   procedure ImportPfxDataAsync
   (
      this : in out UserCertificateEnrollmentManager;
      pfxData : WinRt.WString;
      password : WinRt.WString;
      exportable : Windows.Security.Cryptography.Certificates.ExportOption;
      keyProtectionLevel : Windows.Security.Cryptography.Certificates.KeyProtectionLevel;
      installOption : Windows.Security.Cryptography.Certificates.InstallOptions;
      friendlyName : WinRt.WString;
      keyStorageProvider : WinRt.WString
   );

   procedure ImportPfxDataAsync
   (
      this : in out UserCertificateEnrollmentManager;
      pfxData : WinRt.WString;
      password : WinRt.WString;
      pfxImportParameters_p : Windows.Security.Cryptography.Certificates.PfxImportParameters'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for UserCertificateStore

   overriding procedure Initialize (this : in out UserCertificateStore);
   overriding procedure Finalize (this : in out UserCertificateStore);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for UserCertificateStore

   function RequestAddAsync
   (
      this : in out UserCertificateStore;
      certificate_p : Windows.Security.Cryptography.Certificates.Certificate'Class
   )
   return WinRt.Boolean;

   function RequestDeleteAsync
   (
      this : in out UserCertificateStore;
      certificate_p : Windows.Security.Cryptography.Certificates.Certificate'Class
   )
   return WinRt.Boolean;

   function get_Name
   (
      this : in out UserCertificateStore
   )
   return WinRt.WString;

end;
