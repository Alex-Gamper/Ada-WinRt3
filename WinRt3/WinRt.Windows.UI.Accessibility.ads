--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Accessibility is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IScreenReaderPositionChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IScreenReaderPositionChangedEventArgs is access IScreenReaderPositionChangedEventArgs_Interface'Class;
   type IScreenReaderPositionChangedEventArgs_Ptr is access all IScreenReaderPositionChangedEventArgs;

   type IScreenReaderService_Interface is interface and WinRt.IInspectable_Interface;
   type IScreenReaderService is access IScreenReaderService_Interface'Class;
   type IScreenReaderService_Ptr is access all IScreenReaderService;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type ScreenReaderPositionChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IScreenReaderPositionChangedEventArgs : access Windows.UI.Accessibility.IScreenReaderPositionChangedEventArgs;
      end record;
   type ScreenReaderPositionChangedEventArgs_Ptr is access all ScreenReaderPositionChangedEventArgs;

   type ScreenReaderService is new Ada.Finalization.Limited_Controlled with
      record
         m_IScreenReaderService : access Windows.UI.Accessibility.IScreenReaderService;
      end record;
   type ScreenReaderService_Ptr is access all ScreenReaderService;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IScreenReaderPositionChangedEventArgs is interface and WinRt.IInspectable;

      function get_ScreenPositionInRawPixels
      (
         this : access IScreenReaderPositionChangedEventArgs_Interface;
         RetVal : access Windows.Foundation.Rect
      )
      return WinRt.Hresult is abstract;

      function get_IsReadingText
      (
         this : access IScreenReaderPositionChangedEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IScreenReaderPositionChangedEventArgs : aliased WinRt.IID := (1434367461, 21712, 23757, (159, 197, 237, 51, 53, 127, 138, 159 ));

   -----------------------------------------------------------------------------
   -- type IScreenReaderService is interface and WinRt.IInspectable;

      function get_CurrentScreenReaderPosition
      (
         this : access IScreenReaderService_Interface;
         RetVal : access Windows.UI.Accessibility.IScreenReaderPositionChangedEventArgs
      )
      return WinRt.Hresult is abstract;

      function add_ScreenReaderPositionChanged
      (
         this : access IScreenReaderService_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ScreenReaderPositionChanged
      (
         this : access IScreenReaderService_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IScreenReaderService : aliased WinRt.IID := (424104999, 60096, 20691, (189, 217, 155, 72, 122, 34, 98, 86 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ScreenReaderPositionChangedEventArgs

   overriding procedure Initialize (this : in out ScreenReaderPositionChangedEventArgs);
   overriding procedure Finalize (this : in out ScreenReaderPositionChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ScreenReaderPositionChangedEventArgs

   function get_ScreenPositionInRawPixels
   (
      this : in out ScreenReaderPositionChangedEventArgs
   )
   return WinRt.Windows.Foundation.Rect;

   function get_IsReadingText
   (
      this : in out ScreenReaderPositionChangedEventArgs
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ScreenReaderService

   overriding procedure Initialize (this : in out ScreenReaderService);
   overriding procedure Finalize (this : in out ScreenReaderService);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ScreenReaderService

   function Constructor return ScreenReaderService;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ScreenReaderService

   function get_CurrentScreenReaderPosition
   (
      this : in out ScreenReaderService
   )
   return WinRt.Windows.UI.Accessibility.ScreenReaderPositionChangedEventArgs'Class;

   function add_ScreenReaderPositionChanged
   (
      this : in out ScreenReaderService;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ScreenReaderPositionChanged
   (
      this : in out ScreenReaderService;
      token : Windows.Foundation.EventRegistrationToken
   );

end;
