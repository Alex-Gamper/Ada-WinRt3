--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Graphics.Imaging;
limited with WinRt.Windows.Storage;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.PointOfService is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IBarcodeScanner_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScanner is access all IBarcodeScanner_Interface'Class;
   type IBarcodeScanner_Ptr is access all IBarcodeScanner;

   type IBarcodeScanner2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScanner2 is access all IBarcodeScanner2_Interface'Class;

   type IBarcodeScannerCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerCapabilities is access all IBarcodeScannerCapabilities_Interface'Class;
   type IBarcodeScannerCapabilities_Ptr is access all IBarcodeScannerCapabilities;

   type IBarcodeScannerCapabilities1_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerCapabilities1 is access all IBarcodeScannerCapabilities1_Interface'Class;

   type IBarcodeScannerCapabilities2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerCapabilities2 is access all IBarcodeScannerCapabilities2_Interface'Class;

   type IBarcodeScannerDataReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerDataReceivedEventArgs is access all IBarcodeScannerDataReceivedEventArgs_Interface'Class;
   type IBarcodeScannerDataReceivedEventArgs_Ptr is access all IBarcodeScannerDataReceivedEventArgs;

   type IBarcodeScannerErrorOccurredEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerErrorOccurredEventArgs is access all IBarcodeScannerErrorOccurredEventArgs_Interface'Class;
   type IBarcodeScannerErrorOccurredEventArgs_Ptr is access all IBarcodeScannerErrorOccurredEventArgs;

   type IBarcodeScannerImagePreviewReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerImagePreviewReceivedEventArgs is access all IBarcodeScannerImagePreviewReceivedEventArgs_Interface'Class;
   type IBarcodeScannerImagePreviewReceivedEventArgs_Ptr is access all IBarcodeScannerImagePreviewReceivedEventArgs;

   type IBarcodeScannerReport_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerReport is access all IBarcodeScannerReport_Interface'Class;
   type IBarcodeScannerReport_Ptr is access all IBarcodeScannerReport;

   type IBarcodeScannerReportFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerReportFactory is access all IBarcodeScannerReportFactory_Interface'Class;

   type IBarcodeScannerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerStatics is access all IBarcodeScannerStatics_Interface'Class;

   type IBarcodeScannerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerStatics2 is access all IBarcodeScannerStatics2_Interface'Class;

   type IBarcodeScannerStatusUpdatedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeScannerStatusUpdatedEventArgs is access all IBarcodeScannerStatusUpdatedEventArgs_Interface'Class;
   type IBarcodeScannerStatusUpdatedEventArgs_Ptr is access all IBarcodeScannerStatusUpdatedEventArgs;

   type IBarcodeSymbologiesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeSymbologiesStatics is access all IBarcodeSymbologiesStatics_Interface'Class;

   type IBarcodeSymbologiesStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeSymbologiesStatics2 is access all IBarcodeSymbologiesStatics2_Interface'Class;

   type IBarcodeSymbologyAttributes_Interface is interface and WinRt.IInspectable_Interface;
   type IBarcodeSymbologyAttributes is access all IBarcodeSymbologyAttributes_Interface'Class;
   type IBarcodeSymbologyAttributes_Ptr is access all IBarcodeSymbologyAttributes;

   type ICashDrawer_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawer is access all ICashDrawer_Interface'Class;
   type ICashDrawer_Ptr is access all ICashDrawer;

   type ICashDrawerCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerCapabilities is access all ICashDrawerCapabilities_Interface'Class;
   type ICashDrawerCapabilities_Ptr is access all ICashDrawerCapabilities;

   type ICashDrawerCloseAlarm_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerCloseAlarm is access all ICashDrawerCloseAlarm_Interface'Class;
   type ICashDrawerCloseAlarm_Ptr is access all ICashDrawerCloseAlarm;

   type ICashDrawerEventSource_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerEventSource is access all ICashDrawerEventSource_Interface'Class;
   type ICashDrawerEventSource_Ptr is access all ICashDrawerEventSource;

   type ICashDrawerEventSourceEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerEventSourceEventArgs is access all ICashDrawerEventSourceEventArgs_Interface'Class;
   type ICashDrawerEventSourceEventArgs_Ptr is access all ICashDrawerEventSourceEventArgs;

   type ICashDrawerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerStatics is access all ICashDrawerStatics_Interface'Class;

   type ICashDrawerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerStatics2 is access all ICashDrawerStatics2_Interface'Class;

   type ICashDrawerStatus_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerStatus is access all ICashDrawerStatus_Interface'Class;
   type ICashDrawerStatus_Ptr is access all ICashDrawerStatus;

   type ICashDrawerStatusUpdatedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ICashDrawerStatusUpdatedEventArgs is access all ICashDrawerStatusUpdatedEventArgs_Interface'Class;
   type ICashDrawerStatusUpdatedEventArgs_Ptr is access all ICashDrawerStatusUpdatedEventArgs;

   type IClaimedBarcodeScanner_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedBarcodeScanner is access all IClaimedBarcodeScanner_Interface'Class;
   type IClaimedBarcodeScanner_Ptr is access all IClaimedBarcodeScanner;

   type IClaimedBarcodeScanner1_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedBarcodeScanner1 is access all IClaimedBarcodeScanner1_Interface'Class;

   type IClaimedBarcodeScanner2_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedBarcodeScanner2 is access all IClaimedBarcodeScanner2_Interface'Class;

   type IClaimedBarcodeScanner3_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedBarcodeScanner3 is access all IClaimedBarcodeScanner3_Interface'Class;

   type IClaimedBarcodeScanner4_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedBarcodeScanner4 is access all IClaimedBarcodeScanner4_Interface'Class;

   type IClaimedBarcodeScannerClosedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedBarcodeScannerClosedEventArgs is access all IClaimedBarcodeScannerClosedEventArgs_Interface'Class;
   type IClaimedBarcodeScannerClosedEventArgs_Ptr is access all IClaimedBarcodeScannerClosedEventArgs;

   type IClaimedCashDrawer_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedCashDrawer is access all IClaimedCashDrawer_Interface'Class;
   type IClaimedCashDrawer_Ptr is access all IClaimedCashDrawer;

   type IClaimedCashDrawer2_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedCashDrawer2 is access all IClaimedCashDrawer2_Interface'Class;

   type IClaimedCashDrawerClosedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedCashDrawerClosedEventArgs is access all IClaimedCashDrawerClosedEventArgs_Interface'Class;
   type IClaimedCashDrawerClosedEventArgs_Ptr is access all IClaimedCashDrawerClosedEventArgs;

   type IClaimedJournalPrinter_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedJournalPrinter is access all IClaimedJournalPrinter_Interface'Class;
   type IClaimedJournalPrinter_Ptr is access all IClaimedJournalPrinter;

   type IClaimedLineDisplay_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedLineDisplay is access all IClaimedLineDisplay_Interface'Class;
   type IClaimedLineDisplay_Ptr is access all IClaimedLineDisplay;

   type IClaimedLineDisplay2_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedLineDisplay2 is access all IClaimedLineDisplay2_Interface'Class;

   type IClaimedLineDisplay3_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedLineDisplay3 is access all IClaimedLineDisplay3_Interface'Class;

   type IClaimedLineDisplayClosedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedLineDisplayClosedEventArgs is access all IClaimedLineDisplayClosedEventArgs_Interface'Class;
   type IClaimedLineDisplayClosedEventArgs_Ptr is access all IClaimedLineDisplayClosedEventArgs;

   type IClaimedLineDisplayStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedLineDisplayStatics is access all IClaimedLineDisplayStatics_Interface'Class;

   type IClaimedMagneticStripeReader_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedMagneticStripeReader is access all IClaimedMagneticStripeReader_Interface'Class;
   type IClaimedMagneticStripeReader_Ptr is access all IClaimedMagneticStripeReader;

   type IClaimedMagneticStripeReader2_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedMagneticStripeReader2 is access all IClaimedMagneticStripeReader2_Interface'Class;

   type IClaimedMagneticStripeReaderClosedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedMagneticStripeReaderClosedEventArgs is access all IClaimedMagneticStripeReaderClosedEventArgs_Interface'Class;
   type IClaimedMagneticStripeReaderClosedEventArgs_Ptr is access all IClaimedMagneticStripeReaderClosedEventArgs;

   type IClaimedPosPrinter_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedPosPrinter is access all IClaimedPosPrinter_Interface'Class;
   type IClaimedPosPrinter_Ptr is access all IClaimedPosPrinter;

   type IClaimedPosPrinter2_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedPosPrinter2 is access all IClaimedPosPrinter2_Interface'Class;

   type IClaimedPosPrinterClosedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedPosPrinterClosedEventArgs is access all IClaimedPosPrinterClosedEventArgs_Interface'Class;
   type IClaimedPosPrinterClosedEventArgs_Ptr is access all IClaimedPosPrinterClosedEventArgs;

   type IClaimedReceiptPrinter_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedReceiptPrinter is access all IClaimedReceiptPrinter_Interface'Class;
   type IClaimedReceiptPrinter_Ptr is access all IClaimedReceiptPrinter;

   type IClaimedSlipPrinter_Interface is interface and WinRt.IInspectable_Interface;
   type IClaimedSlipPrinter is access all IClaimedSlipPrinter_Interface'Class;
   type IClaimedSlipPrinter_Ptr is access all IClaimedSlipPrinter;

   type ICommonClaimedPosPrinterStation_Interface is interface and WinRt.IInspectable_Interface;
   type ICommonClaimedPosPrinterStation is access all ICommonClaimedPosPrinterStation_Interface'Class;

   type ICommonPosPrintStationCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type ICommonPosPrintStationCapabilities is access all ICommonPosPrintStationCapabilities_Interface'Class;

   type ICommonReceiptSlipCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type ICommonReceiptSlipCapabilities is access all ICommonReceiptSlipCapabilities_Interface'Class;

   type IJournalPrintJob_Interface is interface and WinRt.IInspectable_Interface;
   type IJournalPrintJob is access all IJournalPrintJob_Interface'Class;

   type IJournalPrinterCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type IJournalPrinterCapabilities is access all IJournalPrinterCapabilities_Interface'Class;
   type IJournalPrinterCapabilities_Ptr is access all IJournalPrinterCapabilities;

   type IJournalPrinterCapabilities2_Interface is interface and WinRt.IInspectable_Interface;
   type IJournalPrinterCapabilities2 is access all IJournalPrinterCapabilities2_Interface'Class;

   type ILineDisplay_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplay is access all ILineDisplay_Interface'Class;
   type ILineDisplay_Ptr is access all ILineDisplay;

   type ILineDisplay2_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplay2 is access all ILineDisplay2_Interface'Class;

   type ILineDisplayAttributes_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayAttributes is access all ILineDisplayAttributes_Interface'Class;
   type ILineDisplayAttributes_Ptr is access all ILineDisplayAttributes;

   type ILineDisplayCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayCapabilities is access all ILineDisplayCapabilities_Interface'Class;
   type ILineDisplayCapabilities_Ptr is access all ILineDisplayCapabilities;

   type ILineDisplayCursor_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayCursor is access all ILineDisplayCursor_Interface'Class;
   type ILineDisplayCursor_Ptr is access all ILineDisplayCursor;

   type ILineDisplayCursorAttributes_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayCursorAttributes is access all ILineDisplayCursorAttributes_Interface'Class;
   type ILineDisplayCursorAttributes_Ptr is access all ILineDisplayCursorAttributes;

   type ILineDisplayCustomGlyphs_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayCustomGlyphs is access all ILineDisplayCustomGlyphs_Interface'Class;
   type ILineDisplayCustomGlyphs_Ptr is access all ILineDisplayCustomGlyphs;

   type ILineDisplayMarquee_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayMarquee is access all ILineDisplayMarquee_Interface'Class;
   type ILineDisplayMarquee_Ptr is access all ILineDisplayMarquee;

   type ILineDisplayStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayStatics is access all ILineDisplayStatics_Interface'Class;

   type ILineDisplayStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayStatics2 is access all ILineDisplayStatics2_Interface'Class;

   type ILineDisplayStatisticsCategorySelector_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayStatisticsCategorySelector is access all ILineDisplayStatisticsCategorySelector_Interface'Class;
   type ILineDisplayStatisticsCategorySelector_Ptr is access all ILineDisplayStatisticsCategorySelector;

   type ILineDisplayStatusUpdatedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayStatusUpdatedEventArgs is access all ILineDisplayStatusUpdatedEventArgs_Interface'Class;
   type ILineDisplayStatusUpdatedEventArgs_Ptr is access all ILineDisplayStatusUpdatedEventArgs;

   type ILineDisplayStoredBitmap_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayStoredBitmap is access all ILineDisplayStoredBitmap_Interface'Class;
   type ILineDisplayStoredBitmap_Ptr is access all ILineDisplayStoredBitmap;

   type ILineDisplayWindow_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayWindow is access all ILineDisplayWindow_Interface'Class;
   type ILineDisplayWindow_Ptr is access all ILineDisplayWindow;

   type ILineDisplayWindow2_Interface is interface and WinRt.IInspectable_Interface;
   type ILineDisplayWindow2 is access all ILineDisplayWindow2_Interface'Class;

   type IMagneticStripeReader_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReader is access all IMagneticStripeReader_Interface'Class;
   type IMagneticStripeReader_Ptr is access all IMagneticStripeReader;

   type IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderAamvaCardDataReceivedEventArgs is access all IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface'Class;
   type IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Ptr is access all IMagneticStripeReaderAamvaCardDataReceivedEventArgs;

   type IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderBankCardDataReceivedEventArgs is access all IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface'Class;
   type IMagneticStripeReaderBankCardDataReceivedEventArgs_Ptr is access all IMagneticStripeReaderBankCardDataReceivedEventArgs;

   type IMagneticStripeReaderCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderCapabilities is access all IMagneticStripeReaderCapabilities_Interface'Class;
   type IMagneticStripeReaderCapabilities_Ptr is access all IMagneticStripeReaderCapabilities;

   type IMagneticStripeReaderCardTypesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderCardTypesStatics is access all IMagneticStripeReaderCardTypesStatics_Interface'Class;

   type IMagneticStripeReaderEncryptionAlgorithmsStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderEncryptionAlgorithmsStatics is access all IMagneticStripeReaderEncryptionAlgorithmsStatics_Interface'Class;

   type IMagneticStripeReaderErrorOccurredEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderErrorOccurredEventArgs is access all IMagneticStripeReaderErrorOccurredEventArgs_Interface'Class;
   type IMagneticStripeReaderErrorOccurredEventArgs_Ptr is access all IMagneticStripeReaderErrorOccurredEventArgs;

   type IMagneticStripeReaderReport_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderReport is access all IMagneticStripeReaderReport_Interface'Class;
   type IMagneticStripeReaderReport_Ptr is access all IMagneticStripeReaderReport;

   type IMagneticStripeReaderStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderStatics is access all IMagneticStripeReaderStatics_Interface'Class;

   type IMagneticStripeReaderStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderStatics2 is access all IMagneticStripeReaderStatics2_Interface'Class;

   type IMagneticStripeReaderStatusUpdatedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderStatusUpdatedEventArgs is access all IMagneticStripeReaderStatusUpdatedEventArgs_Interface'Class;
   type IMagneticStripeReaderStatusUpdatedEventArgs_Ptr is access all IMagneticStripeReaderStatusUpdatedEventArgs;

   type IMagneticStripeReaderTrackData_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderTrackData is access all IMagneticStripeReaderTrackData_Interface'Class;
   type IMagneticStripeReaderTrackData_Ptr is access all IMagneticStripeReaderTrackData;

   type IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs is access all IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_Interface'Class;
   type IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_Ptr is access all IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;

   type IPosPrinter_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinter is access all IPosPrinter_Interface'Class;
   type IPosPrinter_Ptr is access all IPosPrinter;

   type IPosPrinter2_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinter2 is access all IPosPrinter2_Interface'Class;

   type IPosPrinterCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterCapabilities is access all IPosPrinterCapabilities_Interface'Class;
   type IPosPrinterCapabilities_Ptr is access all IPosPrinterCapabilities;

   type IPosPrinterCharacterSetIdsStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterCharacterSetIdsStatics is access all IPosPrinterCharacterSetIdsStatics_Interface'Class;

   type IPosPrinterFontProperty_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterFontProperty is access all IPosPrinterFontProperty_Interface'Class;
   type IPosPrinterFontProperty_Ptr is access all IPosPrinterFontProperty;

   type IPosPrinterJob_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterJob is access all IPosPrinterJob_Interface'Class;
   type IPosPrinterJob_Ptr is access all IPosPrinterJob;

   type IPosPrinterPrintOptions_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterPrintOptions is access all IPosPrinterPrintOptions_Interface'Class;
   type IPosPrinterPrintOptions_Ptr is access all IPosPrinterPrintOptions;

   type IPosPrinterReleaseDeviceRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterReleaseDeviceRequestedEventArgs is access all IPosPrinterReleaseDeviceRequestedEventArgs_Interface'Class;
   type IPosPrinterReleaseDeviceRequestedEventArgs_Ptr is access all IPosPrinterReleaseDeviceRequestedEventArgs;

   type IPosPrinterStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterStatics is access all IPosPrinterStatics_Interface'Class;

   type IPosPrinterStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterStatics2 is access all IPosPrinterStatics2_Interface'Class;

   type IPosPrinterStatus_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterStatus is access all IPosPrinterStatus_Interface'Class;
   type IPosPrinterStatus_Ptr is access all IPosPrinterStatus;

   type IPosPrinterStatusUpdatedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPosPrinterStatusUpdatedEventArgs is access all IPosPrinterStatusUpdatedEventArgs_Interface'Class;
   type IPosPrinterStatusUpdatedEventArgs_Ptr is access all IPosPrinterStatusUpdatedEventArgs;

   type IReceiptOrSlipJob_Interface is interface and WinRt.IInspectable_Interface;
   type IReceiptOrSlipJob is access all IReceiptOrSlipJob_Interface'Class;
   type IReceiptOrSlipJob_Ptr is access all IReceiptOrSlipJob;

   type IReceiptPrintJob_Interface is interface and WinRt.IInspectable_Interface;
   type IReceiptPrintJob is access all IReceiptPrintJob_Interface'Class;
   type IReceiptPrintJob_Ptr is access all IReceiptPrintJob;

   type IReceiptPrintJob2_Interface is interface and WinRt.IInspectable_Interface;
   type IReceiptPrintJob2 is access all IReceiptPrintJob2_Interface'Class;

   type IReceiptPrinterCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type IReceiptPrinterCapabilities is access all IReceiptPrinterCapabilities_Interface'Class;
   type IReceiptPrinterCapabilities_Ptr is access all IReceiptPrinterCapabilities;

   type IReceiptPrinterCapabilities2_Interface is interface and WinRt.IInspectable_Interface;
   type IReceiptPrinterCapabilities2 is access all IReceiptPrinterCapabilities2_Interface'Class;

   type ISlipPrintJob_Interface is interface and WinRt.IInspectable_Interface;
   type ISlipPrintJob is access all ISlipPrintJob_Interface'Class;

   type ISlipPrinterCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type ISlipPrinterCapabilities is access all ISlipPrinterCapabilities_Interface'Class;
   type ISlipPrinterCapabilities_Ptr is access all ISlipPrinterCapabilities;

   type ISlipPrinterCapabilities2_Interface is interface and WinRt.IInspectable_Interface;
   type ISlipPrinterCapabilities2 is access all ISlipPrinterCapabilities2_Interface'Class;

   type IUnifiedPosErrorData_Interface is interface and WinRt.IInspectable_Interface;
   type IUnifiedPosErrorData is access all IUnifiedPosErrorData_Interface'Class;
   type IUnifiedPosErrorData_Ptr is access all IUnifiedPosErrorData;

   type IUnifiedPosErrorDataFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IUnifiedPosErrorDataFactory is access all IUnifiedPosErrorDataFactory_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type BarcodeScanner is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScanner : access Windows.Devices.PointOfService.IBarcodeScanner;
      end record;
   type BarcodeScanner_Ptr is access all BarcodeScanner;

   type BarcodeScannerCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScannerCapabilities : access Windows.Devices.PointOfService.IBarcodeScannerCapabilities;
      end record;
   type BarcodeScannerCapabilities_Ptr is access all BarcodeScannerCapabilities;

   type BarcodeScannerDataReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScannerDataReceivedEventArgs : access Windows.Devices.PointOfService.IBarcodeScannerDataReceivedEventArgs;
      end record;
   type BarcodeScannerDataReceivedEventArgs_Ptr is access all BarcodeScannerDataReceivedEventArgs;

   type BarcodeScannerErrorOccurredEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScannerErrorOccurredEventArgs : access Windows.Devices.PointOfService.IBarcodeScannerErrorOccurredEventArgs;
      end record;
   type BarcodeScannerErrorOccurredEventArgs_Ptr is access all BarcodeScannerErrorOccurredEventArgs;

   type BarcodeScannerImagePreviewReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScannerImagePreviewReceivedEventArgs : access Windows.Devices.PointOfService.IBarcodeScannerImagePreviewReceivedEventArgs;
      end record;
   type BarcodeScannerImagePreviewReceivedEventArgs_Ptr is access all BarcodeScannerImagePreviewReceivedEventArgs;

   type BarcodeScannerReport is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScannerReport : access Windows.Devices.PointOfService.IBarcodeScannerReport;
      end record;
   type BarcodeScannerReport_Ptr is access all BarcodeScannerReport;

   type BarcodeScannerStatusUpdatedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeScannerStatusUpdatedEventArgs : access Windows.Devices.PointOfService.IBarcodeScannerStatusUpdatedEventArgs;
      end record;
   type BarcodeScannerStatusUpdatedEventArgs_Ptr is access all BarcodeScannerStatusUpdatedEventArgs;

   type BarcodeSymbologyAttributes is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarcodeSymbologyAttributes : access Windows.Devices.PointOfService.IBarcodeSymbologyAttributes;
      end record;
   type BarcodeSymbologyAttributes_Ptr is access all BarcodeSymbologyAttributes;

   type CashDrawer is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawer : access Windows.Devices.PointOfService.ICashDrawer;
      end record;
   type CashDrawer_Ptr is access all CashDrawer;

   type CashDrawerCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerCapabilities : access Windows.Devices.PointOfService.ICashDrawerCapabilities;
      end record;
   type CashDrawerCapabilities_Ptr is access all CashDrawerCapabilities;

   type CashDrawerCloseAlarm is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerCloseAlarm : access Windows.Devices.PointOfService.ICashDrawerCloseAlarm;
      end record;
   type CashDrawerCloseAlarm_Ptr is access all CashDrawerCloseAlarm;

   type CashDrawerClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerEventSourceEventArgs : access Windows.Devices.PointOfService.ICashDrawerEventSourceEventArgs;
      end record;
   type CashDrawerClosedEventArgs_Ptr is access all CashDrawerClosedEventArgs;

   type CashDrawerEventSource is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerEventSource : access Windows.Devices.PointOfService.ICashDrawerEventSource;
      end record;
   type CashDrawerEventSource_Ptr is access all CashDrawerEventSource;

   type CashDrawerOpenedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerEventSourceEventArgs : access Windows.Devices.PointOfService.ICashDrawerEventSourceEventArgs;
      end record;
   type CashDrawerOpenedEventArgs_Ptr is access all CashDrawerOpenedEventArgs;

   type CashDrawerStatus is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerStatus : access Windows.Devices.PointOfService.ICashDrawerStatus;
      end record;
   type CashDrawerStatus_Ptr is access all CashDrawerStatus;

   type CashDrawerStatusUpdatedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ICashDrawerStatusUpdatedEventArgs : access Windows.Devices.PointOfService.ICashDrawerStatusUpdatedEventArgs;
      end record;
   type CashDrawerStatusUpdatedEventArgs_Ptr is access all CashDrawerStatusUpdatedEventArgs;

   type ClaimedBarcodeScanner is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedBarcodeScanner : access Windows.Devices.PointOfService.IClaimedBarcodeScanner;
      end record;
   type ClaimedBarcodeScanner_Ptr is access all ClaimedBarcodeScanner;

   type ClaimedBarcodeScannerClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedBarcodeScannerClosedEventArgs : access Windows.Devices.PointOfService.IClaimedBarcodeScannerClosedEventArgs;
      end record;
   type ClaimedBarcodeScannerClosedEventArgs_Ptr is access all ClaimedBarcodeScannerClosedEventArgs;

   type ClaimedCashDrawer is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedCashDrawer : access Windows.Devices.PointOfService.IClaimedCashDrawer;
      end record;
   type ClaimedCashDrawer_Ptr is access all ClaimedCashDrawer;

   type ClaimedCashDrawerClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedCashDrawerClosedEventArgs : access Windows.Devices.PointOfService.IClaimedCashDrawerClosedEventArgs;
      end record;
   type ClaimedCashDrawerClosedEventArgs_Ptr is access all ClaimedCashDrawerClosedEventArgs;

   type ClaimedJournalPrinter is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedJournalPrinter : access Windows.Devices.PointOfService.IClaimedJournalPrinter;
      end record;
   type ClaimedJournalPrinter_Ptr is access all ClaimedJournalPrinter;

   type ClaimedLineDisplay is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedLineDisplay : access Windows.Devices.PointOfService.IClaimedLineDisplay;
      end record;
   type ClaimedLineDisplay_Ptr is access all ClaimedLineDisplay;

   type ClaimedLineDisplayClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedLineDisplayClosedEventArgs : access Windows.Devices.PointOfService.IClaimedLineDisplayClosedEventArgs;
      end record;
   type ClaimedLineDisplayClosedEventArgs_Ptr is access all ClaimedLineDisplayClosedEventArgs;

   type ClaimedMagneticStripeReader is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedMagneticStripeReader : access Windows.Devices.PointOfService.IClaimedMagneticStripeReader;
      end record;
   type ClaimedMagneticStripeReader_Ptr is access all ClaimedMagneticStripeReader;

   type ClaimedMagneticStripeReaderClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedMagneticStripeReaderClosedEventArgs : access Windows.Devices.PointOfService.IClaimedMagneticStripeReaderClosedEventArgs;
      end record;
   type ClaimedMagneticStripeReaderClosedEventArgs_Ptr is access all ClaimedMagneticStripeReaderClosedEventArgs;

   type ClaimedPosPrinter is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedPosPrinter : access Windows.Devices.PointOfService.IClaimedPosPrinter;
      end record;
   type ClaimedPosPrinter_Ptr is access all ClaimedPosPrinter;

   type ClaimedPosPrinterClosedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedPosPrinterClosedEventArgs : access Windows.Devices.PointOfService.IClaimedPosPrinterClosedEventArgs;
      end record;
   type ClaimedPosPrinterClosedEventArgs_Ptr is access all ClaimedPosPrinterClosedEventArgs;

   type ClaimedReceiptPrinter is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedReceiptPrinter : access Windows.Devices.PointOfService.IClaimedReceiptPrinter;
      end record;
   type ClaimedReceiptPrinter_Ptr is access all ClaimedReceiptPrinter;

   type ClaimedSlipPrinter is new Ada.Finalization.Limited_Controlled with
      record
         m_IClaimedSlipPrinter : access Windows.Devices.PointOfService.IClaimedSlipPrinter;
      end record;
   type ClaimedSlipPrinter_Ptr is access all ClaimedSlipPrinter;

   type JournalPrintJob is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterJob : access Windows.Devices.PointOfService.IPosPrinterJob;
      end record;
   type JournalPrintJob_Ptr is access all JournalPrintJob;

   type JournalPrinterCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_IJournalPrinterCapabilities : access Windows.Devices.PointOfService.IJournalPrinterCapabilities;
      end record;
   type JournalPrinterCapabilities_Ptr is access all JournalPrinterCapabilities;

   type LineDisplay is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplay : access Windows.Devices.PointOfService.ILineDisplay;
      end record;
   type LineDisplay_Ptr is access all LineDisplay;

   type LineDisplayAttributes is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayAttributes : access Windows.Devices.PointOfService.ILineDisplayAttributes;
      end record;
   type LineDisplayAttributes_Ptr is access all LineDisplayAttributes;

   type LineDisplayCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayCapabilities : access Windows.Devices.PointOfService.ILineDisplayCapabilities;
      end record;
   type LineDisplayCapabilities_Ptr is access all LineDisplayCapabilities;

   type LineDisplayCursor is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayCursor : access Windows.Devices.PointOfService.ILineDisplayCursor;
      end record;
   type LineDisplayCursor_Ptr is access all LineDisplayCursor;

   type LineDisplayCursorAttributes is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayCursorAttributes : access Windows.Devices.PointOfService.ILineDisplayCursorAttributes;
      end record;
   type LineDisplayCursorAttributes_Ptr is access all LineDisplayCursorAttributes;

   type LineDisplayCustomGlyphs is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayCustomGlyphs : access Windows.Devices.PointOfService.ILineDisplayCustomGlyphs;
      end record;
   type LineDisplayCustomGlyphs_Ptr is access all LineDisplayCustomGlyphs;

   type LineDisplayMarquee is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayMarquee : access Windows.Devices.PointOfService.ILineDisplayMarquee;
      end record;
   type LineDisplayMarquee_Ptr is access all LineDisplayMarquee;

   type LineDisplayStatisticsCategorySelector is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayStatisticsCategorySelector : access Windows.Devices.PointOfService.ILineDisplayStatisticsCategorySelector;
      end record;
   type LineDisplayStatisticsCategorySelector_Ptr is access all LineDisplayStatisticsCategorySelector;

   type LineDisplayStatusUpdatedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayStatusUpdatedEventArgs : access Windows.Devices.PointOfService.ILineDisplayStatusUpdatedEventArgs;
      end record;
   type LineDisplayStatusUpdatedEventArgs_Ptr is access all LineDisplayStatusUpdatedEventArgs;

   type LineDisplayStoredBitmap is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayStoredBitmap : access Windows.Devices.PointOfService.ILineDisplayStoredBitmap;
      end record;
   type LineDisplayStoredBitmap_Ptr is access all LineDisplayStoredBitmap;

   type LineDisplayWindow is new Ada.Finalization.Limited_Controlled with
      record
         m_ILineDisplayWindow : access Windows.Devices.PointOfService.ILineDisplayWindow;
      end record;
   type LineDisplayWindow_Ptr is access all LineDisplayWindow;

   type MagneticStripeReader is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReader : access Windows.Devices.PointOfService.IMagneticStripeReader;
      end record;
   type MagneticStripeReader_Ptr is access all MagneticStripeReader;

   type MagneticStripeReaderAamvaCardDataReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderAamvaCardDataReceivedEventArgs : access Windows.Devices.PointOfService.IMagneticStripeReaderAamvaCardDataReceivedEventArgs;
      end record;
   type MagneticStripeReaderAamvaCardDataReceivedEventArgs_Ptr is access all MagneticStripeReaderAamvaCardDataReceivedEventArgs;

   type MagneticStripeReaderBankCardDataReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderBankCardDataReceivedEventArgs : access Windows.Devices.PointOfService.IMagneticStripeReaderBankCardDataReceivedEventArgs;
      end record;
   type MagneticStripeReaderBankCardDataReceivedEventArgs_Ptr is access all MagneticStripeReaderBankCardDataReceivedEventArgs;

   type MagneticStripeReaderCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderCapabilities : access Windows.Devices.PointOfService.IMagneticStripeReaderCapabilities;
      end record;
   type MagneticStripeReaderCapabilities_Ptr is access all MagneticStripeReaderCapabilities;

   type MagneticStripeReaderErrorOccurredEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderErrorOccurredEventArgs : access Windows.Devices.PointOfService.IMagneticStripeReaderErrorOccurredEventArgs;
      end record;
   type MagneticStripeReaderErrorOccurredEventArgs_Ptr is access all MagneticStripeReaderErrorOccurredEventArgs;

   type MagneticStripeReaderReport is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderReport : access Windows.Devices.PointOfService.IMagneticStripeReaderReport;
      end record;
   type MagneticStripeReaderReport_Ptr is access all MagneticStripeReaderReport;

   type MagneticStripeReaderStatusUpdatedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderStatusUpdatedEventArgs : access Windows.Devices.PointOfService.IMagneticStripeReaderStatusUpdatedEventArgs;
      end record;
   type MagneticStripeReaderStatusUpdatedEventArgs_Ptr is access all MagneticStripeReaderStatusUpdatedEventArgs;

   type MagneticStripeReaderTrackData is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderTrackData : access Windows.Devices.PointOfService.IMagneticStripeReaderTrackData;
      end record;
   type MagneticStripeReaderTrackData_Ptr is access all MagneticStripeReaderTrackData;

   type MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs : access Windows.Devices.PointOfService.IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;
      end record;
   type MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_Ptr is access all MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs;

   type PosPrinter is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinter : access Windows.Devices.PointOfService.IPosPrinter;
      end record;
   type PosPrinter_Ptr is access all PosPrinter;

   type PosPrinterCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterCapabilities : access Windows.Devices.PointOfService.IPosPrinterCapabilities;
      end record;
   type PosPrinterCapabilities_Ptr is access all PosPrinterCapabilities;

   type PosPrinterFontProperty is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterFontProperty : access Windows.Devices.PointOfService.IPosPrinterFontProperty;
      end record;
   type PosPrinterFontProperty_Ptr is access all PosPrinterFontProperty;

   type PosPrinterPrintOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterPrintOptions : access Windows.Devices.PointOfService.IPosPrinterPrintOptions;
      end record;
   type PosPrinterPrintOptions_Ptr is access all PosPrinterPrintOptions;

   type PosPrinterReleaseDeviceRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterReleaseDeviceRequestedEventArgs : access Windows.Devices.PointOfService.IPosPrinterReleaseDeviceRequestedEventArgs;
      end record;
   type PosPrinterReleaseDeviceRequestedEventArgs_Ptr is access all PosPrinterReleaseDeviceRequestedEventArgs;

   type PosPrinterStatus is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterStatus : access Windows.Devices.PointOfService.IPosPrinterStatus;
      end record;
   type PosPrinterStatus_Ptr is access all PosPrinterStatus;

   type PosPrinterStatusUpdatedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPosPrinterStatusUpdatedEventArgs : access Windows.Devices.PointOfService.IPosPrinterStatusUpdatedEventArgs;
      end record;
   type PosPrinterStatusUpdatedEventArgs_Ptr is access all PosPrinterStatusUpdatedEventArgs;

   type ReceiptPrintJob is new Ada.Finalization.Limited_Controlled with
      record
         m_IReceiptPrintJob : access Windows.Devices.PointOfService.IReceiptPrintJob;
      end record;
   type ReceiptPrintJob_Ptr is access all ReceiptPrintJob;

   type ReceiptPrinterCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_IReceiptPrinterCapabilities : access Windows.Devices.PointOfService.IReceiptPrinterCapabilities;
      end record;
   type ReceiptPrinterCapabilities_Ptr is access all ReceiptPrinterCapabilities;

   type SlipPrintJob is new Ada.Finalization.Limited_Controlled with
      record
         m_IReceiptOrSlipJob : access Windows.Devices.PointOfService.IReceiptOrSlipJob;
      end record;
   type SlipPrintJob_Ptr is access all SlipPrintJob;

   type SlipPrinterCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_ISlipPrinterCapabilities : access Windows.Devices.PointOfService.ISlipPrinterCapabilities;
      end record;
   type SlipPrinterCapabilities_Ptr is access all SlipPrinterCapabilities;

   type UnifiedPosErrorData is new Ada.Finalization.Limited_Controlled with
      record
         m_IUnifiedPosErrorData : access Windows.Devices.PointOfService.IUnifiedPosErrorData;
      end record;
   type UnifiedPosErrorData_Ptr is access all UnifiedPosErrorData;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type BarcodeScannerStatus is (
      Online_e,
      Off_e,
      Offline_e,
      OffOrOffline_e,
      Extended_e
   );
   for BarcodeScannerStatus use (
      Online_e => 0,
      Off_e => 1,
      Offline_e => 2,
      OffOrOffline_e => 3,
      Extended_e => 4
   );
   type BarcodeScannerStatus_Ptr is access all BarcodeScannerStatus;

   type BarcodeSymbologyDecodeLengthKind is (
      AnyLength_e,
      Discrete_e,
      Range_e
   );
   for BarcodeSymbologyDecodeLengthKind use (
      AnyLength_e => 0,
      Discrete_e => 1,
      Range_e => 2
   );
   type BarcodeSymbologyDecodeLengthKind_Ptr is access all BarcodeSymbologyDecodeLengthKind;

   type CashDrawerStatusKind is (
      Online_e,
      Off_e,
      Offline_e,
      OffOrOffline_e,
      Extended_e
   );
   for CashDrawerStatusKind use (
      Online_e => 0,
      Off_e => 1,
      Offline_e => 2,
      OffOrOffline_e => 3,
      Extended_e => 4
   );
   type CashDrawerStatusKind_Ptr is access all CashDrawerStatusKind;

   type LineDisplayCursorType is (
      None_e,
      Block_e,
      HalfBlock_e,
      Underline_e,
      Reverse_e,
      Other_e
   );
   for LineDisplayCursorType use (
      None_e => 0,
      Block_e => 1,
      HalfBlock_e => 2,
      Underline_e => 3,
      Reverse_e => 4,
      Other_e => 5
   );
   type LineDisplayCursorType_Ptr is access all LineDisplayCursorType;

   type LineDisplayDescriptorState is (
      Off_e,
      On_e,
      Blink_e
   );
   for LineDisplayDescriptorState use (
      Off_e => 0,
      On_e => 1,
      Blink_e => 2
   );
   type LineDisplayDescriptorState_Ptr is access all LineDisplayDescriptorState;

   type LineDisplayHorizontalAlignment is (
      Left_e,
      Center_e,
      Right_e
   );
   for LineDisplayHorizontalAlignment use (
      Left_e => 0,
      Center_e => 1,
      Right_e => 2
   );
   type LineDisplayHorizontalAlignment_Ptr is access all LineDisplayHorizontalAlignment;

   type LineDisplayMarqueeFormat is (
      None_e,
      Walk_e,
      Place_e
   );
   for LineDisplayMarqueeFormat use (
      None_e => 0,
      Walk_e => 1,
      Place_e => 2
   );
   type LineDisplayMarqueeFormat_Ptr is access all LineDisplayMarqueeFormat;

   type LineDisplayPowerStatus is (
      Unknown_e,
      Online_e,
      Off_e,
      Offline_e,
      OffOrOffline_e
   );
   for LineDisplayPowerStatus use (
      Unknown_e => 0,
      Online_e => 1,
      Off_e => 2,
      Offline_e => 3,
      OffOrOffline_e => 4
   );
   type LineDisplayPowerStatus_Ptr is access all LineDisplayPowerStatus;

   type LineDisplayScrollDirection is (
      Up_e,
      Down_e,
      Left_e,
      Right_e
   );
   for LineDisplayScrollDirection use (
      Up_e => 0,
      Down_e => 1,
      Left_e => 2,
      Right_e => 3
   );
   type LineDisplayScrollDirection_Ptr is access all LineDisplayScrollDirection;

   type LineDisplayTextAttribute is (
      Normal_e,
      Blink_e,
      Reverse_e,
      ReverseBlink_e
   );
   for LineDisplayTextAttribute use (
      Normal_e => 0,
      Blink_e => 1,
      Reverse_e => 2,
      ReverseBlink_e => 3
   );
   type LineDisplayTextAttribute_Ptr is access all LineDisplayTextAttribute;

   type LineDisplayTextAttributeGranularity is (
      NotSupported_e,
      EntireDisplay_e,
      PerCharacter_e
   );
   for LineDisplayTextAttributeGranularity use (
      NotSupported_e => 0,
      EntireDisplay_e => 1,
      PerCharacter_e => 2
   );
   type LineDisplayTextAttributeGranularity_Ptr is access all LineDisplayTextAttributeGranularity;

   type LineDisplayVerticalAlignment is (
      Top_e,
      Center_e,
      Bottom_e
   );
   for LineDisplayVerticalAlignment use (
      Top_e => 0,
      Center_e => 1,
      Bottom_e => 2
   );
   type LineDisplayVerticalAlignment_Ptr is access all LineDisplayVerticalAlignment;

   type MagneticStripeReaderAuthenticationLevel is (
      NotSupported_e,
      Optional_e,
      Required_e
   );
   for MagneticStripeReaderAuthenticationLevel use (
      NotSupported_e => 0,
      Optional_e => 1,
      Required_e => 2
   );
   type MagneticStripeReaderAuthenticationLevel_Ptr is access all MagneticStripeReaderAuthenticationLevel;

   type MagneticStripeReaderAuthenticationProtocol is (
      None_e,
      ChallengeResponse_e
   );
   for MagneticStripeReaderAuthenticationProtocol use (
      None_e => 0,
      ChallengeResponse_e => 1
   );
   type MagneticStripeReaderAuthenticationProtocol_Ptr is access all MagneticStripeReaderAuthenticationProtocol;

   type MagneticStripeReaderErrorReportingType is (
      CardLevel_e,
      TrackLevel_e
   );
   for MagneticStripeReaderErrorReportingType use (
      CardLevel_e => 0,
      TrackLevel_e => 1
   );
   type MagneticStripeReaderErrorReportingType_Ptr is access all MagneticStripeReaderErrorReportingType;

   type MagneticStripeReaderStatus is (
      Unauthenticated_e,
      Authenticated_e,
      Extended_e
   );
   for MagneticStripeReaderStatus use (
      Unauthenticated_e => 0,
      Authenticated_e => 1,
      Extended_e => 2
   );
   type MagneticStripeReaderStatus_Ptr is access all MagneticStripeReaderStatus;

   type MagneticStripeReaderTrackErrorType is (
      Unknown_e,
      None_e,
      StartSentinelError_e,
      EndSentinelError_e,
      ParityError_e,
      LrcError_e
   );
   for MagneticStripeReaderTrackErrorType use (
      Unknown_e => -1,
      None_e => 0,
      StartSentinelError_e => 1,
      EndSentinelError_e => 2,
      ParityError_e => 3,
      LrcError_e => 4
   );
   type MagneticStripeReaderTrackErrorType_Ptr is access all MagneticStripeReaderTrackErrorType;

   type MagneticStripeReaderTrackIds is (
      None_e,
      Track1_e,
      Track2_e,
      Track3_e,
      Track4_e
   );
   for MagneticStripeReaderTrackIds use (
      None_e => 0,
      Track1_e => 1,
      Track2_e => 2,
      Track3_e => 4,
      Track4_e => 8
   );
   type MagneticStripeReaderTrackIds_Ptr is access all MagneticStripeReaderTrackIds;

   type PosConnectionTypes is (
      Local_e,
      IP_e,
      Bluetooth_e,
      All_e
   );
   for PosConnectionTypes use (
      Local_e => 1,
      IP_e => 2,
      Bluetooth_e => 4,
      All_e => 4294967295
   );
   type PosConnectionTypes_Ptr is access all PosConnectionTypes;

   type PosPrinterAlignment is (
      Left_e,
      Center_e,
      Right_e
   );
   for PosPrinterAlignment use (
      Left_e => 0,
      Center_e => 1,
      Right_e => 2
   );
   type PosPrinterAlignment_Ptr is access all PosPrinterAlignment;

   type PosPrinterBarcodeTextPosition is (
      None_e,
      Above_e,
      Below_e
   );
   for PosPrinterBarcodeTextPosition use (
      None_e => 0,
      Above_e => 1,
      Below_e => 2
   );
   type PosPrinterBarcodeTextPosition_Ptr is access all PosPrinterBarcodeTextPosition;

   type PosPrinterCartridgeSensors is (
      None_e,
      Removed_e,
      Empty_e,
      HeadCleaning_e,
      NearEnd_e
   );
   for PosPrinterCartridgeSensors use (
      None_e => 0,
      Removed_e => 1,
      Empty_e => 2,
      HeadCleaning_e => 4,
      NearEnd_e => 8
   );
   type PosPrinterCartridgeSensors_Ptr is access all PosPrinterCartridgeSensors;

   type PosPrinterColorCapabilities is (
      None_e,
      Primary_e,
      Custom1_e,
      Custom2_e,
      Custom3_e,
      Custom4_e,
      Custom5_e,
      Custom6_e,
      Cyan_e,
      Magenta_e,
      Yellow_e,
      Full_e
   );
   for PosPrinterColorCapabilities use (
      None_e => 0,
      Primary_e => 1,
      Custom1_e => 2,
      Custom2_e => 4,
      Custom3_e => 8,
      Custom4_e => 16,
      Custom5_e => 32,
      Custom6_e => 64,
      Cyan_e => 128,
      Magenta_e => 256,
      Yellow_e => 512,
      Full_e => 1024
   );
   type PosPrinterColorCapabilities_Ptr is access all PosPrinterColorCapabilities;

   type PosPrinterColorCartridge is (
      Unknown_e,
      Primary_e,
      Custom1_e,
      Custom2_e,
      Custom3_e,
      Custom4_e,
      Custom5_e,
      Custom6_e,
      Cyan_e,
      Magenta_e,
      Yellow_e
   );
   for PosPrinterColorCartridge use (
      Unknown_e => 0,
      Primary_e => 1,
      Custom1_e => 2,
      Custom2_e => 3,
      Custom3_e => 4,
      Custom4_e => 5,
      Custom5_e => 6,
      Custom6_e => 7,
      Cyan_e => 8,
      Magenta_e => 9,
      Yellow_e => 10
   );
   type PosPrinterColorCartridge_Ptr is access all PosPrinterColorCartridge;

   type PosPrinterLineDirection is (
      Horizontal_e,
      Vertical_e
   );
   for PosPrinterLineDirection use (
      Horizontal_e => 0,
      Vertical_e => 1
   );
   type PosPrinterLineDirection_Ptr is access all PosPrinterLineDirection;

   type PosPrinterLineStyle is (
      SingleSolid_e,
      DoubleSolid_e,
      Broken_e,
      Chain_e
   );
   for PosPrinterLineStyle use (
      SingleSolid_e => 0,
      DoubleSolid_e => 1,
      Broken_e => 2,
      Chain_e => 3
   );
   type PosPrinterLineStyle_Ptr is access all PosPrinterLineStyle;

   type PosPrinterMapMode is (
      Dots_e,
      Twips_e,
      English_e,
      Metric_e
   );
   for PosPrinterMapMode use (
      Dots_e => 0,
      Twips_e => 1,
      English_e => 2,
      Metric_e => 3
   );
   type PosPrinterMapMode_Ptr is access all PosPrinterMapMode;

   type PosPrinterMarkFeedCapabilities is (
      None_e,
      ToTakeUp_e,
      ToCutter_e,
      ToCurrentTopOfForm_e,
      ToNextTopOfForm_e
   );
   for PosPrinterMarkFeedCapabilities use (
      None_e => 0,
      ToTakeUp_e => 1,
      ToCutter_e => 2,
      ToCurrentTopOfForm_e => 4,
      ToNextTopOfForm_e => 8
   );
   type PosPrinterMarkFeedCapabilities_Ptr is access all PosPrinterMarkFeedCapabilities;

   type PosPrinterMarkFeedKind is (
      ToTakeUp_e,
      ToCutter_e,
      ToCurrentTopOfForm_e,
      ToNextTopOfForm_e
   );
   for PosPrinterMarkFeedKind use (
      ToTakeUp_e => 0,
      ToCutter_e => 1,
      ToCurrentTopOfForm_e => 2,
      ToNextTopOfForm_e => 3
   );
   type PosPrinterMarkFeedKind_Ptr is access all PosPrinterMarkFeedKind;

   type PosPrinterPrintSide is (
      Unknown_e,
      Side1_e,
      Side2_e
   );
   for PosPrinterPrintSide use (
      Unknown_e => 0,
      Side1_e => 1,
      Side2_e => 2
   );
   type PosPrinterPrintSide_Ptr is access all PosPrinterPrintSide;

   type PosPrinterRotation is (
      Normal_e,
      Right90_e,
      Left90_e,
      Rotate180_e
   );
   for PosPrinterRotation use (
      Normal_e => 0,
      Right90_e => 1,
      Left90_e => 2,
      Rotate180_e => 3
   );
   type PosPrinterRotation_Ptr is access all PosPrinterRotation;

   type PosPrinterRuledLineCapabilities is (
      None_e,
      Horizontal_e,
      Vertical_e
   );
   for PosPrinterRuledLineCapabilities use (
      None_e => 0,
      Horizontal_e => 1,
      Vertical_e => 2
   );
   type PosPrinterRuledLineCapabilities_Ptr is access all PosPrinterRuledLineCapabilities;

   type PosPrinterStatusKind is (
      Online_e,
      Off_e,
      Offline_e,
      OffOrOffline_e,
      Extended_e
   );
   for PosPrinterStatusKind use (
      Online_e => 0,
      Off_e => 1,
      Offline_e => 2,
      OffOrOffline_e => 3,
      Extended_e => 4
   );
   type PosPrinterStatusKind_Ptr is access all PosPrinterStatusKind;

   type UnifiedPosErrorReason is (
      UnknownErrorReason_e,
      NoService_e,
      Disabled_e,
      Illegal_e,
      NoHardware_e,
      Closed_e,
      Offline_e,
      Failure_e,
      Timeout_e,
      Busy_e,
      Extended_e
   );
   for UnifiedPosErrorReason use (
      UnknownErrorReason_e => 0,
      NoService_e => 1,
      Disabled_e => 2,
      Illegal_e => 3,
      NoHardware_e => 4,
      Closed_e => 5,
      Offline_e => 6,
      Failure_e => 7,
      Timeout_e => 8,
      Busy_e => 9,
      Extended_e => 10
   );
   type UnifiedPosErrorReason_Ptr is access all UnifiedPosErrorReason;

   type UnifiedPosErrorSeverity is (
      UnknownErrorSeverity_e,
      Warning_e,
      Recoverable_e,
      Unrecoverable_e,
      AssistanceRequired_e,
      Fatal_e
   );
   for UnifiedPosErrorSeverity use (
      UnknownErrorSeverity_e => 0,
      Warning_e => 1,
      Recoverable_e => 2,
      Unrecoverable_e => 3,
      AssistanceRequired_e => 4,
      Fatal_e => 5
   );
   type UnifiedPosErrorSeverity_Ptr is access all UnifiedPosErrorSeverity;

   type UnifiedPosHealthCheckLevel is (
      UnknownHealthCheckLevel_e,
      POSInternal_e,
      External_e,
      Interactive_e
   );
   for UnifiedPosHealthCheckLevel use (
      UnknownHealthCheckLevel_e => 0,
      POSInternal_e => 1,
      External_e => 2,
      Interactive_e => 3
   );
   type UnifiedPosHealthCheckLevel_Ptr is access all UnifiedPosHealthCheckLevel;

   type UnifiedPosPowerReportingType is (
      UnknownPowerReportingType_e,
      Standard_e,
      Advanced_e
   );
   for UnifiedPosPowerReportingType use (
      UnknownPowerReportingType_e => 0,
      Standard_e => 1,
      Advanced_e => 2
   );
   type UnifiedPosPowerReportingType_Ptr is access all UnifiedPosPowerReportingType;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type SizeUInt32 is record
      Width : WinRt.UInt32;
      Height : WinRt.UInt32;
   end record with Convention => C_Pass_By_Copy;
   type SizeUInt32_Ptr is access all SizeUInt32;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (2617692885, 9340, 20917, (169, 247, 206, 97, 151, 74, 226, 30 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   package IVectorView_Size is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Foundation.Size);
   IID_IVectorView_Size : aliased WinRt.IID := (2406318104, 10108, 20834, (165, 142, 166, 184, 22, 169, 173, 37 ));
   function QInterface_IVectorView_Size is new Generic_QueryInterface (GenericObject_Interface, IVectorView_Size.Kind, IID_IVectorView_Size'Access);

   package IVectorView_Int32 is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Int32);
   IID_IVectorView_Int32 : aliased WinRt.IID := (2406318104, 10108, 20834, (165, 142, 166, 184, 22, 169, 173, 37 ));
   function QInterface_IVectorView_Int32 is new Generic_QueryInterface (GenericObject_Interface, IVectorView_Int32.Kind, IID_IVectorView_Int32'Access);

   package IVectorView_UInt32 is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.UInt32);
   IID_IVectorView_UInt32 : aliased WinRt.IID := (1653599874, 46642, 23875, (133, 127, 8, 209, 139, 214, 170, 52 ));
   function QInterface_IVectorView_UInt32 is new Generic_QueryInterface (GenericObject_Interface, IVectorView_UInt32.Kind, IID_IVectorView_UInt32'Access);

   package IMapView_HString_HString is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.HString);
   IID_IMapView_HString_HString : aliased WinRt.IID := (4257065833, 51135, 23827, (178, 229, 165, 213, 72, 163, 142, 234 ));
   function QInterface_IMapView_HString_HString is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_HString.Kind, IID_IMapView_HString_HString'Access);

   package IVectorView_SizeUInt32 is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.PointOfService.SizeUInt32);
   IID_IVectorView_SizeUInt32 : aliased WinRt.IID := (3179068659, 971, 21307, (154, 9, 0, 53, 227, 205, 0, 92 ));
   function QInterface_IVectorView_SizeUInt32 is new Generic_QueryInterface (GenericObject_Interface, IVectorView_SizeUInt32.Kind, IID_IVectorView_SizeUInt32'Access);

   package IVectorView_PosPrinterRotation is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.PointOfService.PosPrinterRotation);
   IID_IVectorView_PosPrinterRotation : aliased WinRt.IID := (4084254071, 33874, 20976, (156, 106, 136, 94, 50, 33, 22, 93 ));
   function QInterface_IVectorView_PosPrinterRotation is new Generic_QueryInterface (GenericObject_Interface, IVectorView_PosPrinterRotation.Kind, IID_IVectorView_PosPrinterRotation'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IBarcodeScanner is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IBarcodeScanner_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capabilities
      (
         this : access IBarcodeScanner_Interface;
         RetVal : access Windows.Devices.PointOfService.IBarcodeScannerCapabilities
      )
      return WinRt.Hresult is abstract;

      function ClaimScannerAsync
      (
         this : access IBarcodeScanner_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CheckHealthAsync
      (
         this : access IBarcodeScanner_Interface;
         level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetSupportedSymbologiesAsync
      (
         this : access IBarcodeScanner_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function IsSymbologySupportedAsync
      (
         this : access IBarcodeScanner_Interface;
         barcodeSymbology : WinRt.UInt32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RetrieveStatisticsAsync
      (
         this : access IBarcodeScanner_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetSupportedProfiles
      (
         this : access IBarcodeScanner_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function IsProfileSupported
      (
         this : access IBarcodeScanner_Interface;
         profile : WinRt.HString;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function add_StatusUpdated
      (
         this : access IBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StatusUpdated
      (
         this : access IBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScanner : aliased WinRt.IID := (3198369286, 45668, 20227, (169, 193, 69, 178, 15, 1, 19, 79 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScanner2 is interface and WinRt.IInspectable;

      function get_VideoDeviceId
      (
         this : access IBarcodeScanner2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScanner2 : aliased WinRt.IID := (2300662119, 36078, 17261, (137, 171, 141, 251, 67, 187, 66, 134 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerCapabilities is interface and WinRt.IInspectable;

      function get_PowerReportingType
      (
         this : access IBarcodeScannerCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosPowerReportingType
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsReportingSupported
      (
         this : access IBarcodeScannerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsUpdatingSupported
      (
         this : access IBarcodeScannerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsImagePreviewSupported
      (
         this : access IBarcodeScannerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerCapabilities : aliased WinRt.IID := (3322319332, 62152, 17440, (163, 7, 177, 46, 246, 98, 40, 87 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerCapabilities1 is interface and WinRt.IInspectable;

      function get_IsSoftwareTriggerSupported
      (
         this : access IBarcodeScannerCapabilities1_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerCapabilities1 : aliased WinRt.IID := (2388308969, 3628, 18223, (161, 204, 238, 128, 84, 182, 166, 132 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerCapabilities2 is interface and WinRt.IInspectable;

      function get_IsVideoPreviewSupported
      (
         this : access IBarcodeScannerCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerCapabilities2 : aliased WinRt.IID := (4061253612, 57761, 20136, (154, 188, 146, 177, 89, 98, 112, 171 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerDataReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Report
      (
         this : access IBarcodeScannerDataReceivedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IBarcodeScannerReport
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerDataReceivedEventArgs : aliased WinRt.IID := (1110747106, 60823, 18045, (173, 43, 1, 228, 67, 19, 169, 41 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerErrorOccurredEventArgs is interface and WinRt.IInspectable;

      function get_PartialInputData
      (
         this : access IBarcodeScannerErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IBarcodeScannerReport
      )
      return WinRt.Hresult is abstract;

      function get_IsRetriable
      (
         this : access IBarcodeScannerErrorOccurredEventArgs_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ErrorData
      (
         this : access IBarcodeScannerErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IUnifiedPosErrorData
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerErrorOccurredEventArgs : aliased WinRt.IID := (751984687, 53050, 16386, (167, 90, 197, 236, 70, 143, 10, 32 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerImagePreviewReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Preview
      (
         this : access IBarcodeScannerImagePreviewReceivedEventArgs_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStreamWithContentType
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerImagePreviewReceivedEventArgs : aliased WinRt.IID := (4088913541, 28299, 17230, (159, 88, 6, 239, 38, 188, 75, 175 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerReport is interface and WinRt.IInspectable;

      function get_ScanDataType
      (
         this : access IBarcodeScannerReport_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ScanData
      (
         this : access IBarcodeScannerReport_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      function get_ScanDataLabel
      (
         this : access IBarcodeScannerReport_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerReport : aliased WinRt.IID := (1558501552, 42121, 19350, (134, 196, 240, 191, 138, 55, 117, 61 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerReportFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IBarcodeScannerReportFactory_Interface;
         scanDataType : WinRt.UInt32;
         scanData : Windows.Storage.Streams.IBuffer;
         scanDataLabel : Windows.Storage.Streams.IBuffer;
         RetVal : access Windows.Devices.PointOfService.IBarcodeScannerReport
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerReportFactory : aliased WinRt.IID := (2723443494, 8211, 17788, (137, 99, 73, 193, 93, 202, 120, 206 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerStatics is interface and WinRt.IInspectable;

      function GetDefaultAsync
      (
         this : access IBarcodeScannerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IBarcodeScannerStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IBarcodeScannerStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerStatics : aliased WinRt.IID := (1561419631, 55881, 16872, (140, 140, 240, 203, 98, 169, 196, 252 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IBarcodeScannerStatics2_Interface;
         connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerStatics2 : aliased WinRt.IID := (3093636211, 41839, 16391, (177, 208, 39, 158, 190, 146, 166, 86 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeScannerStatusUpdatedEventArgs is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IBarcodeScannerStatusUpdatedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.BarcodeScannerStatus
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedStatus
      (
         this : access IBarcodeScannerStatusUpdatedEventArgs_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeScannerStatusUpdatedEventArgs : aliased WinRt.IID := (895321478, 40003, 17963, (169, 26, 129, 109, 201, 127, 69, 44 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeSymbologiesStatics is interface and WinRt.IInspectable;

      function get_Unknown
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean8
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean8Add2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean8Add5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Eanv
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_EanvAdd2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_EanvAdd5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean13
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean13Add2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean13Add5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Isbn
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_IsbnAdd5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ismn
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_IsmnAdd2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_IsmnAdd5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Issn
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_IssnAdd2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_IssnAdd5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean99
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean99Add2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ean99Add5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Upca
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UpcaAdd2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UpcaAdd5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Upce
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UpceAdd2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UpceAdd5
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UpcCoupon
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TfStd
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TfDis
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TfInt
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TfInd
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TfMat
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TfIata
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Gs1DatabarType1
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Gs1DatabarType2
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Gs1DatabarType3
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code39
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code39Ex
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Trioptic39
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code32
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Pzn
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code93
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code93Ex
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code128
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Gs1128
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Gs1128Coupon
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UccEan128
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Sisac
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Isbt
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Codabar
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code11
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Msi
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Plessey
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Telepen
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code16k
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CodablockA
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CodablockF
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Codablock128
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Code49
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Aztec
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DataCode
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DataMatrix
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_HanXin
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Maxicode
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MicroPdf417
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MicroQr
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Pdf417
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Qr
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MsTag
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ccab
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ccc
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Tlc39
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_AusPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CanPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ChinaPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DutchKix
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_InfoMail
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ItalianPost25
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ItalianPost39
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_JapanPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_KoreanPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_SwedenPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UkPost
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UsIntelligent
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UsIntelligentPkg
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UsPlanet
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_UsPostNet
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Us4StateFics
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_OcrA
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_OcrB
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Micr
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedBase
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function GetName
      (
         this : access IBarcodeSymbologiesStatics_Interface;
         scanDataType : WinRt.UInt32;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeSymbologiesStatics : aliased WinRt.IID := (3397732795, 1746, 17396, (164, 75, 198, 32, 103, 159, 216, 208 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeSymbologiesStatics2 is interface and WinRt.IInspectable;

      function get_Gs1DWCode
      (
         this : access IBarcodeSymbologiesStatics2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeSymbologiesStatics2 : aliased WinRt.IID := (2339707124, 39376, 16575, (148, 36, 185, 29, 109, 212, 198, 224 ));

   -----------------------------------------------------------------------------
   -- type IBarcodeSymbologyAttributes is interface and WinRt.IInspectable;

      function get_IsCheckDigitValidationEnabled
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCheckDigitValidationEnabled
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCheckDigitValidationSupported
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCheckDigitTransmissionEnabled
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCheckDigitTransmissionEnabled
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCheckDigitTransmissionSupported
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DecodeLength1
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_DecodeLength1
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DecodeLength2
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_DecodeLength2
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DecodeLengthKind
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access Windows.Devices.PointOfService.BarcodeSymbologyDecodeLengthKind
      )
      return WinRt.Hresult is abstract;

      function put_DecodeLengthKind
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         value : Windows.Devices.PointOfService.BarcodeSymbologyDecodeLengthKind
      )
      return WinRt.Hresult is abstract;

      function get_IsDecodeLengthSupported
      (
         this : access IBarcodeSymbologyAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBarcodeSymbologyAttributes : aliased WinRt.IID := (1715550840, 43898, 19162, (142, 206, 147, 96, 20, 178, 234, 215 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawer is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access ICashDrawer_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capabilities
      (
         this : access ICashDrawer_Interface;
         RetVal : access Windows.Devices.PointOfService.ICashDrawerCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access ICashDrawer_Interface;
         RetVal : access Windows.Devices.PointOfService.ICashDrawerStatus
      )
      return WinRt.Hresult is abstract;

      function get_IsDrawerOpen
      (
         this : access ICashDrawer_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DrawerEventSource
      (
         this : access ICashDrawer_Interface;
         RetVal : access Windows.Devices.PointOfService.ICashDrawerEventSource
      )
      return WinRt.Hresult is abstract;

      function ClaimDrawerAsync
      (
         this : access ICashDrawer_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CheckHealthAsync
      (
         this : access ICashDrawer_Interface;
         level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetStatisticsAsync
      (
         this : access ICashDrawer_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_StatusUpdated
      (
         this : access ICashDrawer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StatusUpdated
      (
         this : access ICashDrawer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawer : aliased WinRt.IID := (2676553160, 56916, 19182, (168, 144, 146, 11, 203, 254, 48, 252 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerCapabilities is interface and WinRt.IInspectable;

      function get_PowerReportingType
      (
         this : access ICashDrawerCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosPowerReportingType
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsReportingSupported
      (
         this : access ICashDrawerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsUpdatingSupported
      (
         this : access ICashDrawerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatusReportingSupported
      (
         this : access ICashDrawerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatusMultiDrawerDetectSupported
      (
         this : access ICashDrawerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDrawerOpenSensorAvailable
      (
         this : access ICashDrawerCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerCapabilities : aliased WinRt.IID := (197582347, 59623, 19231, (177, 209, 62, 80, 26, 208, 130, 71 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerCloseAlarm is interface and WinRt.IInspectable;

      function put_AlarmTimeout
      (
         this : access ICashDrawerCloseAlarm_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_AlarmTimeout
      (
         this : access ICashDrawerCloseAlarm_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_BeepFrequency
      (
         this : access ICashDrawerCloseAlarm_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_BeepFrequency
      (
         this : access ICashDrawerCloseAlarm_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_BeepDuration
      (
         this : access ICashDrawerCloseAlarm_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_BeepDuration
      (
         this : access ICashDrawerCloseAlarm_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_BeepDelay
      (
         this : access ICashDrawerCloseAlarm_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_BeepDelay
      (
         this : access ICashDrawerCloseAlarm_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function add_AlarmTimeoutExpired
      (
         this : access ICashDrawerCloseAlarm_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AlarmTimeoutExpired
      (
         this : access ICashDrawerCloseAlarm_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function StartAsync
      (
         this : access ICashDrawerCloseAlarm_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerCloseAlarm : aliased WinRt.IID := (1811451079, 28515, 17166, (171, 59, 149, 215, 95, 251, 232, 127 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerEventSource is interface and WinRt.IInspectable;

      function add_DrawerClosed
      (
         this : access ICashDrawerEventSource_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_DrawerClosed
      (
         this : access ICashDrawerEventSource_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_DrawerOpened
      (
         this : access ICashDrawerEventSource_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_DrawerOpened
      (
         this : access ICashDrawerEventSource_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerEventSource : aliased WinRt.IID := (3758548076, 62201, 17455, (141, 214, 6, 193, 10, 66, 39, 186 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerEventSourceEventArgs is interface and WinRt.IInspectable;

      function get_CashDrawer
      (
         this : access ICashDrawerEventSourceEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.ICashDrawer
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerEventSourceEventArgs : aliased WinRt.IID := (1774926785, 5247, 16924, (156, 35, 9, 1, 35, 187, 120, 108 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerStatics is interface and WinRt.IInspectable;

      function GetDefaultAsync
      (
         this : access ICashDrawerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access ICashDrawerStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access ICashDrawerStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerStatics : aliased WinRt.IID := (3751843162, 54327, 20479, (181, 71, 221, 169, 105, 164, 248, 131 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access ICashDrawerStatics2_Interface;
         connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerStatics2 : aliased WinRt.IID := (1048674593, 35906, 16616, (156, 14, 64, 41, 112, 72, 16, 76 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerStatus is interface and WinRt.IInspectable;

      function get_StatusKind
      (
         this : access ICashDrawerStatus_Interface;
         RetVal : access Windows.Devices.PointOfService.CashDrawerStatusKind
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedStatus
      (
         this : access ICashDrawerStatus_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerStatus : aliased WinRt.IID := (1807579327, 56481, 19974, (153, 235, 90, 246, 165, 174, 193, 8 ));

   -----------------------------------------------------------------------------
   -- type ICashDrawerStatusUpdatedEventArgs is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access ICashDrawerStatusUpdatedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.ICashDrawerStatus
      )
      return WinRt.Hresult is abstract;

      IID_ICashDrawerStatusUpdatedEventArgs : aliased WinRt.IID := (816507274, 3440, 17820, (149, 83, 135, 225, 36, 197, 36, 136 ));

   -----------------------------------------------------------------------------
   -- type IClaimedBarcodeScanner is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IClaimedBarcodeScanner_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsEnabled
      (
         this : access IClaimedBarcodeScanner_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsDisabledOnDataReceived
      (
         this : access IClaimedBarcodeScanner_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDisabledOnDataReceived
      (
         this : access IClaimedBarcodeScanner_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsDecodeDataEnabled
      (
         this : access IClaimedBarcodeScanner_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDecodeDataEnabled
      (
         this : access IClaimedBarcodeScanner_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function EnableAsync
      (
         this : access IClaimedBarcodeScanner_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function DisableAsync
      (
         this : access IClaimedBarcodeScanner_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function RetainDevice
      (
         this : access IClaimedBarcodeScanner_Interface
      )
      return WinRt.Hresult is abstract;

      function SetActiveSymbologiesAsync
      (
         this : access IClaimedBarcodeScanner_Interface;
         symbologies : GenericObject;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ResetStatisticsAsync
      (
         this : access IClaimedBarcodeScanner_Interface;
         statisticsCategories : GenericObject;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function UpdateStatisticsAsync
      (
         this : access IClaimedBarcodeScanner_Interface;
         statistics : GenericObject;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function SetActiveProfileAsync
      (
         this : access IClaimedBarcodeScanner_Interface;
         profile : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function add_DataReceived
      (
         this : access IClaimedBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_DataReceived
      (
         this : access IClaimedBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TriggerPressed
      (
         this : access IClaimedBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TriggerPressed
      (
         this : access IClaimedBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TriggerReleased
      (
         this : access IClaimedBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TriggerReleased
      (
         this : access IClaimedBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ReleaseDeviceRequested
      (
         this : access IClaimedBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReleaseDeviceRequested
      (
         this : access IClaimedBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ImagePreviewReceived
      (
         this : access IClaimedBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ImagePreviewReceived
      (
         this : access IClaimedBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ErrorOccurred
      (
         this : access IClaimedBarcodeScanner_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ErrorOccurred
      (
         this : access IClaimedBarcodeScanner_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedBarcodeScanner : aliased WinRt.IID := (1248048284, 36772, 17202, (187, 38, 148, 93, 17, 216, 30, 15 ));

   -----------------------------------------------------------------------------
   -- type IClaimedBarcodeScanner1 is interface and WinRt.IInspectable;

      function StartSoftwareTriggerAsync
      (
         this : access IClaimedBarcodeScanner1_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function StopSoftwareTriggerAsync
      (
         this : access IClaimedBarcodeScanner1_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedBarcodeScanner1 : aliased WinRt.IID := (4128943372, 34129, 17076, (153, 140, 151, 12, 32, 33, 10, 34 ));

   -----------------------------------------------------------------------------
   -- type IClaimedBarcodeScanner2 is interface and WinRt.IInspectable;

      function GetSymbologyAttributesAsync
      (
         this : access IClaimedBarcodeScanner2_Interface;
         barcodeSymbology : WinRt.UInt32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SetSymbologyAttributesAsync
      (
         this : access IClaimedBarcodeScanner2_Interface;
         barcodeSymbology : WinRt.UInt32;
         attributes : Windows.Devices.PointOfService.IBarcodeSymbologyAttributes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedBarcodeScanner2 : aliased WinRt.IID := (3820330636, 11659, 20336, (138, 243, 52, 72, 190, 221, 95, 226 ));

   -----------------------------------------------------------------------------
   -- type IClaimedBarcodeScanner3 is interface and WinRt.IInspectable;

      function ShowVideoPreviewAsync
      (
         this : access IClaimedBarcodeScanner3_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function HideVideoPreview
      (
         this : access IClaimedBarcodeScanner3_Interface
      )
      return WinRt.Hresult is abstract;

      function put_IsVideoPreviewShownOnEnable
      (
         this : access IClaimedBarcodeScanner3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsVideoPreviewShownOnEnable
      (
         this : access IClaimedBarcodeScanner3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedBarcodeScanner3 : aliased WinRt.IID := (3872306224, 28974, 17916, (139, 134, 205, 85, 245, 174, 247, 157 ));

   -----------------------------------------------------------------------------
   -- type IClaimedBarcodeScanner4 is interface and WinRt.IInspectable;

      function add_Closed
      (
         this : access IClaimedBarcodeScanner4_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IClaimedBarcodeScanner4_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedBarcodeScanner4 : aliased WinRt.IID := (1565532055, 14186, 16808, (162, 48, 47, 55, 193, 148, 157, 222 ));

   -----------------------------------------------------------------------------
   -- type IClaimedBarcodeScannerClosedEventArgs is interface and WinRt.IInspectable;

      IID_IClaimedBarcodeScannerClosedEventArgs : aliased WinRt.IID := (3481097353, 41516, 19557, (169, 1, 136, 215, 125, 131, 57, 84 ));

   -----------------------------------------------------------------------------
   -- type IClaimedCashDrawer is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsEnabled
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDrawerOpen
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CloseAlarm
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access Windows.Devices.PointOfService.ICashDrawerCloseAlarm
      )
      return WinRt.Hresult is abstract;

      function OpenDrawerAsync
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function EnableAsync
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function DisableAsync
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RetainDeviceAsync
      (
         this : access IClaimedCashDrawer_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ResetStatisticsAsync
      (
         this : access IClaimedCashDrawer_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function UpdateStatisticsAsync
      (
         this : access IClaimedCashDrawer_Interface;
         statistics : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_ReleaseDeviceRequested
      (
         this : access IClaimedCashDrawer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReleaseDeviceRequested
      (
         this : access IClaimedCashDrawer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedCashDrawer : aliased WinRt.IID := (3393165743, 43960, 17089, (138, 132, 92, 102, 81, 47, 90, 117 ));

   -----------------------------------------------------------------------------
   -- type IClaimedCashDrawer2 is interface and WinRt.IInspectable;

      function add_Closed
      (
         this : access IClaimedCashDrawer2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IClaimedCashDrawer2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedCashDrawer2 : aliased WinRt.IID := (2629481890, 56898, 19803, (176, 193, 155, 87, 162, 186, 137, 195 ));

   -----------------------------------------------------------------------------
   -- type IClaimedCashDrawerClosedEventArgs is interface and WinRt.IInspectable;

      IID_IClaimedCashDrawerClosedEventArgs : aliased WinRt.IID := (3428269875, 16180, 19548, (186, 174, 222, 173, 241, 108, 215, 250 ));

   -----------------------------------------------------------------------------
   -- type IClaimedJournalPrinter is interface and WinRt.IInspectable;

      function CreateJob
      (
         this : access IClaimedJournalPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IPosPrinterJob
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedJournalPrinter : aliased WinRt.IID := (1743390256, 20861, 18559, (159, 223, 210, 224, 160, 162, 100, 165 ));

   -----------------------------------------------------------------------------
   -- type IClaimedLineDisplay is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capabilities
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_PhysicalDeviceName
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PhysicalDeviceDescription
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DeviceControlDescription
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DeviceControlVersion
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DeviceServiceVersion
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DefaultWindow
      (
         this : access IClaimedLineDisplay_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayWindow
      )
      return WinRt.Hresult is abstract;

      function RetainDevice
      (
         this : access IClaimedLineDisplay_Interface
      )
      return WinRt.Hresult is abstract;

      function add_ReleaseDeviceRequested
      (
         this : access IClaimedLineDisplay_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReleaseDeviceRequested
      (
         this : access IClaimedLineDisplay_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedLineDisplay : aliased WinRt.IID := (302696816, 39541, 19151, (170, 231, 9, 151, 43, 207, 135, 148 ));

   -----------------------------------------------------------------------------
   -- type IClaimedLineDisplay2 is interface and WinRt.IInspectable;

      function GetStatisticsAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CheckHealthAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CheckPowerStatusAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_StatusUpdated
      (
         this : access IClaimedLineDisplay2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StatusUpdated
      (
         this : access IClaimedLineDisplay2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_SupportedScreenSizesInCharacters
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_MaxBitmapSizeInPixels
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function get_SupportedCharacterSets
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_CustomGlyphs
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayCustomGlyphs
      )
      return WinRt.Hresult is abstract;

      function GetAttributes
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayAttributes
      )
      return WinRt.Hresult is abstract;

      function TryUpdateAttributesAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         attributes : Windows.Devices.PointOfService.ILineDisplayAttributes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetDescriptorAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         descriptor : WinRt.UInt32;
         descriptorState : Windows.Devices.PointOfService.LineDisplayDescriptorState;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryClearDescriptorsAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryCreateWindowAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         viewport : Windows.Foundation.Rect;
         windowSize : Windows.Foundation.Size;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryStoreStorageFileBitmapAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryStoreStorageFileBitmapAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
         verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryStoreStorageFileBitmapAsync
      (
         this : access IClaimedLineDisplay2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
         verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment;
         widthInPixels : WinRt.Int32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedLineDisplay2 : aliased WinRt.IID := (2736551405, 16885, 20086, (160, 116, 121, 94, 71, 164, 110, 151 ));

   -----------------------------------------------------------------------------
   -- type IClaimedLineDisplay3 is interface and WinRt.IInspectable;

      function add_Closed
      (
         this : access IClaimedLineDisplay3_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IClaimedLineDisplay3_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedLineDisplay3 : aliased WinRt.IID := (1680788882, 59860, 20172, (175, 117, 50, 156, 39, 76, 209, 143 ));

   -----------------------------------------------------------------------------
   -- type IClaimedLineDisplayClosedEventArgs is interface and WinRt.IInspectable;

      IID_IClaimedLineDisplayClosedEventArgs : aliased WinRt.IID := (4178965348, 54229, 20240, (181, 17, 144, 147, 158, 223, 172, 216 ));

   -----------------------------------------------------------------------------
   -- type IClaimedLineDisplayStatics is interface and WinRt.IInspectable;

      function FromIdAsync
      (
         this : access IClaimedLineDisplayStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IClaimedLineDisplayStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IClaimedLineDisplayStatics_Interface;
         connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedLineDisplayStatics : aliased WinRt.IID := (2026543355, 35691, 18803, (134, 240, 62, 87, 12, 53, 24, 37 ));

   -----------------------------------------------------------------------------
   -- type IClaimedMagneticStripeReader is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsEnabled
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsDisabledOnDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDisabledOnDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsDecodeDataEnabled
      (
         this : access IClaimedMagneticStripeReader_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDecodeDataEnabled
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDeviceAuthenticated
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DataEncryptionAlgorithm
      (
         this : access IClaimedMagneticStripeReader_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DataEncryptionAlgorithm
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_TracksToRead
      (
         this : access IClaimedMagneticStripeReader_Interface;
         value : Windows.Devices.PointOfService.MagneticStripeReaderTrackIds
      )
      return WinRt.Hresult is abstract;

      function get_TracksToRead
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderTrackIds
      )
      return WinRt.Hresult is abstract;

      function put_IsTransmitSentinelsEnabled
      (
         this : access IClaimedMagneticStripeReader_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTransmitSentinelsEnabled
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function EnableAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function DisableAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function RetainDevice
      (
         this : access IClaimedMagneticStripeReader_Interface
      )
      return WinRt.Hresult is abstract;

      function SetErrorReportingType
      (
         this : access IClaimedMagneticStripeReader_Interface;
         value : Windows.Devices.PointOfService.MagneticStripeReaderErrorReportingType
      )
      return WinRt.Hresult is abstract;

      function RetrieveDeviceAuthenticationDataAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AuthenticateDeviceAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         responseTokenSize : WinRt.UInt32;
         responseToken : WinRt.Byte_Ptr;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function DeAuthenticateDeviceAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         responseTokenSize : WinRt.UInt32;
         responseToken : WinRt.Byte_Ptr;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function UpdateKeyAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         key : WinRt.HString;
         keyName : WinRt.HString;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function ResetStatisticsAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         statisticsCategories : GenericObject;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function UpdateStatisticsAsync
      (
         this : access IClaimedMagneticStripeReader_Interface;
         statistics : GenericObject;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function add_BankCardDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BankCardDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_AamvaCardDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AamvaCardDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_VendorSpecificDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_VendorSpecificDataReceived
      (
         this : access IClaimedMagneticStripeReader_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ReleaseDeviceRequested
      (
         this : access IClaimedMagneticStripeReader_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReleaseDeviceRequested
      (
         this : access IClaimedMagneticStripeReader_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ErrorOccurred
      (
         this : access IClaimedMagneticStripeReader_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ErrorOccurred
      (
         this : access IClaimedMagneticStripeReader_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedMagneticStripeReader : aliased WinRt.IID := (1197254899, 37911, 18620, (185, 215, 65, 99, 167, 132, 76, 2 ));

   -----------------------------------------------------------------------------
   -- type IClaimedMagneticStripeReader2 is interface and WinRt.IInspectable;

      function add_Closed
      (
         this : access IClaimedMagneticStripeReader2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IClaimedMagneticStripeReader2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedMagneticStripeReader2 : aliased WinRt.IID := (594522079, 58076, 19837, (156, 120, 6, 13, 242, 191, 41, 40 ));

   -----------------------------------------------------------------------------
   -- type IClaimedMagneticStripeReaderClosedEventArgs is interface and WinRt.IInspectable;

      IID_IClaimedMagneticStripeReaderClosedEventArgs : aliased WinRt.IID := (346925370, 44493, 19584, (172, 218, 195, 234, 237, 38, 71, 225 ));

   -----------------------------------------------------------------------------
   -- type IClaimedPosPrinter is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsEnabled
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_CharacterSet
      (
         this : access IClaimedPosPrinter_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CharacterSet
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_IsCoverOpen
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCharacterSetMappingEnabled
      (
         this : access IClaimedPosPrinter_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCharacterSetMappingEnabled
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_MapMode
      (
         this : access IClaimedPosPrinter_Interface;
         value : Windows.Devices.PointOfService.PosPrinterMapMode
      )
      return WinRt.Hresult is abstract;

      function get_MapMode
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterMapMode
      )
      return WinRt.Hresult is abstract;

      function get_Receipt
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IClaimedReceiptPrinter
      )
      return WinRt.Hresult is abstract;

      function get_Slip
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IClaimedSlipPrinter
      )
      return WinRt.Hresult is abstract;

      function get_Journal
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IClaimedJournalPrinter
      )
      return WinRt.Hresult is abstract;

      function EnableAsync
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function DisableAsync
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RetainDeviceAsync
      (
         this : access IClaimedPosPrinter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ResetStatisticsAsync
      (
         this : access IClaimedPosPrinter_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function UpdateStatisticsAsync
      (
         this : access IClaimedPosPrinter_Interface;
         statistics : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_ReleaseDeviceRequested
      (
         this : access IClaimedPosPrinter_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReleaseDeviceRequested
      (
         this : access IClaimedPosPrinter_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedPosPrinter : aliased WinRt.IID := (1835322892, 57406, 19220, (163, 142, 194, 140, 52, 184, 99, 83 ));

   -----------------------------------------------------------------------------
   -- type IClaimedPosPrinter2 is interface and WinRt.IInspectable;

      function add_Closed
      (
         this : access IClaimedPosPrinter2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Closed
      (
         this : access IClaimedPosPrinter2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedPosPrinter2 : aliased WinRt.IID := (1542955989, 20888, 17274, (130, 223, 88, 153, 147, 250, 119, 225 ));

   -----------------------------------------------------------------------------
   -- type IClaimedPosPrinterClosedEventArgs is interface and WinRt.IInspectable;

      IID_IClaimedPosPrinterClosedEventArgs : aliased WinRt.IID := (3803685499, 19776, 18205, (146, 237, 99, 55, 91, 24, 199, 136 ));

   -----------------------------------------------------------------------------
   -- type IClaimedReceiptPrinter is interface and WinRt.IInspectable;

      function get_SidewaysMaxLines
      (
         this : access IClaimedReceiptPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_SidewaysMaxChars
      (
         this : access IClaimedReceiptPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_LinesToPaperCut
      (
         this : access IClaimedReceiptPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_PageSize
      (
         this : access IClaimedReceiptPrinter_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function get_PrintArea
      (
         this : access IClaimedReceiptPrinter_Interface;
         RetVal : access Windows.Foundation.Rect
      )
      return WinRt.Hresult is abstract;

      function CreateJob
      (
         this : access IClaimedReceiptPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IReceiptPrintJob
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedReceiptPrinter : aliased WinRt.IID := (2597485172, 56673, 20194, (152, 55, 91, 93, 114, 213, 56, 185 ));

   -----------------------------------------------------------------------------
   -- type IClaimedSlipPrinter is interface and WinRt.IInspectable;

      function get_SidewaysMaxLines
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_SidewaysMaxChars
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxLines
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_LinesNearEndToEnd
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_PrintSide
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterPrintSide
      )
      return WinRt.Hresult is abstract;

      function get_PageSize
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function get_PrintArea
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access Windows.Foundation.Rect
      )
      return WinRt.Hresult is abstract;

      function OpenJaws
      (
         this : access IClaimedSlipPrinter_Interface
      )
      return WinRt.Hresult is abstract;

      function CloseJaws
      (
         this : access IClaimedSlipPrinter_Interface
      )
      return WinRt.Hresult is abstract;

      function InsertSlipAsync
      (
         this : access IClaimedSlipPrinter_Interface;
         timeout : Windows.Foundation.TimeSpan;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RemoveSlipAsync
      (
         this : access IClaimedSlipPrinter_Interface;
         timeout : Windows.Foundation.TimeSpan;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ChangePrintSide
      (
         this : access IClaimedSlipPrinter_Interface;
         printSide : Windows.Devices.PointOfService.PosPrinterPrintSide
      )
      return WinRt.Hresult is abstract;

      function CreateJob
      (
         this : access IClaimedSlipPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IReceiptOrSlipJob
      )
      return WinRt.Hresult is abstract;

      IID_IClaimedSlipPrinter : aliased WinRt.IID := (3177050098, 44944, 20106, (183, 123, 227, 174, 156, 166, 58, 127 ));

   -----------------------------------------------------------------------------
   -- type ICommonClaimedPosPrinterStation is interface and WinRt.IInspectable;

      function put_CharactersPerLine
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CharactersPerLine
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_LineHeight
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_LineHeight
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_LineSpacing
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_LineSpacing
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_LineWidth
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_IsLetterQuality
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsLetterQuality
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsPaperNearEnd
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ColorCartridge
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         value : Windows.Devices.PointOfService.PosPrinterColorCartridge
      )
      return WinRt.Hresult is abstract;

      function get_ColorCartridge
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterColorCartridge
      )
      return WinRt.Hresult is abstract;

      function get_IsCoverOpen
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCartridgeRemoved
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCartridgeEmpty
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsHeadCleaning
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsPaperEmpty
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReadyToPrint
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function ValidateData
      (
         this : access ICommonClaimedPosPrinterStation_Interface;
         data : WinRt.HString;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICommonClaimedPosPrinterStation : aliased WinRt.IID := (3085657768, 65162, 19707, (139, 66, 227, 91, 40, 12, 178, 124 ));

   -----------------------------------------------------------------------------
   -- type ICommonPosPrintStationCapabilities is interface and WinRt.IInspectable;

      function get_IsPrinterPresent
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDualColorSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ColorCartridgeCapabilities
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterColorCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_CartridgeSensors
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterCartridgeSensors
      )
      return WinRt.Hresult is abstract;

      function get_IsBoldSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsItalicSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsUnderlineSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDoubleHighPrintSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDoubleWidePrintSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsDoubleHighDoubleWidePrintSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsPaperEmptySensorSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsPaperNearEndSensorSupported
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SupportedCharactersPerLine
      (
         this : access ICommonPosPrintStationCapabilities_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICommonPosPrintStationCapabilities : aliased WinRt.IID := (3730526922, 57390, 16617, (158, 94, 27, 72, 142, 106, 172, 252 ));

   -----------------------------------------------------------------------------
   -- type ICommonReceiptSlipCapabilities is interface and WinRt.IInspectable;

      function get_IsBarcodeSupported
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsBitmapSupported
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsLeft90RotationSupported
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsRight90RotationSupported
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Is180RotationSupported
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsPrintAreaSupported
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_RuledLineCapabilities
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterRuledLineCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_SupportedBarcodeRotations
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_SupportedBitmapRotations
      (
         this : access ICommonReceiptSlipCapabilities_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICommonReceiptSlipCapabilities : aliased WinRt.IID := (153643915, 39027, 19717, (191, 190, 71, 39, 166, 3, 143, 105 ));

   -----------------------------------------------------------------------------
   -- type IJournalPrintJob is interface and WinRt.IInspectable;

      function Print
      (
         this : access IJournalPrintJob_Interface;
         data : WinRt.HString;
         printOptions : Windows.Devices.PointOfService.IPosPrinterPrintOptions
      )
      return WinRt.Hresult is abstract;

      function FeedPaperByLine
      (
         this : access IJournalPrintJob_Interface;
         lineCount : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function FeedPaperByMapModeUnit
      (
         this : access IJournalPrintJob_Interface;
         distance : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IJournalPrintJob : aliased WinRt.IID := (2672765028, 62448, 21968, (140, 57, 116, 204, 145, 120, 62, 237 ));

   -----------------------------------------------------------------------------
   -- type IJournalPrinterCapabilities is interface and WinRt.IInspectable;

      IID_IJournalPrinterCapabilities : aliased WinRt.IID := (995937347, 57415, 17507, (187, 88, 23, 181, 186, 29, 128, 86 ));

   -----------------------------------------------------------------------------
   -- type IJournalPrinterCapabilities2 is interface and WinRt.IInspectable;

      function get_IsReverseVideoSupported
      (
         this : access IJournalPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStrikethroughSupported
      (
         this : access IJournalPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSuperscriptSupported
      (
         this : access IJournalPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSubscriptSupported
      (
         this : access IJournalPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReversePaperFeedByLineSupported
      (
         this : access IJournalPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReversePaperFeedByMapModeUnitSupported
      (
         this : access IJournalPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IJournalPrinterCapabilities2 : aliased WinRt.IID := (61912645, 13240, 21307, (186, 170, 164, 56, 146, 131, 171, 10 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplay is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access ILineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capabilities
      (
         this : access ILineDisplay_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_PhysicalDeviceName
      (
         this : access ILineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PhysicalDeviceDescription
      (
         this : access ILineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DeviceControlDescription
      (
         this : access ILineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DeviceControlVersion
      (
         this : access ILineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DeviceServiceVersion
      (
         this : access ILineDisplay_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function ClaimAsync
      (
         this : access ILineDisplay_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplay : aliased WinRt.IID := (620093262, 15513, 17634, (183, 63, 229, 27, 227, 99, 122, 140 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplay2 is interface and WinRt.IInspectable;

      function CheckPowerStatusAsync
      (
         this : access ILineDisplay2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplay2 : aliased WinRt.IID := (3264652840, 61252, 16627, (189, 28, 176, 76, 106, 92, 220, 125 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayAttributes is interface and WinRt.IInspectable;

      function get_IsPowerNotifyEnabled
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsPowerNotifyEnabled
      (
         this : access ILineDisplayAttributes_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Brightness
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Brightness
      (
         this : access ILineDisplayAttributes_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_BlinkRate
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_BlinkRate
      (
         this : access ILineDisplayAttributes_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ScreenSizeInCharacters
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function put_ScreenSizeInCharacters
      (
         this : access ILineDisplayAttributes_Interface;
         value : Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function get_CharacterSet
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_CharacterSet
      (
         this : access ILineDisplayAttributes_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_IsCharacterSetMappingEnabled
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCharacterSetMappingEnabled
      (
         this : access ILineDisplayAttributes_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CurrentWindow
      (
         this : access ILineDisplayAttributes_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayWindow
      )
      return WinRt.Hresult is abstract;

      function put_CurrentWindow
      (
         this : access ILineDisplayAttributes_Interface;
         value : Windows.Devices.PointOfService.ILineDisplayWindow
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayAttributes : aliased WinRt.IID := (3246254492, 8858, 19476, (166, 241, 180, 228, 177, 254, 173, 146 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayCapabilities is interface and WinRt.IInspectable;

      function get_IsStatisticsReportingSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsUpdatingSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_PowerReportingType
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosPowerReportingType
      )
      return WinRt.Hresult is abstract;

      function get_CanChangeScreenSize
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanDisplayBitmaps
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanReadCharacterAtCursor
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanMapCharacterSets
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanDisplayCustomGlyphs
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanReverse
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.LineDisplayTextAttributeGranularity
      )
      return WinRt.Hresult is abstract;

      function get_CanBlink
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.LineDisplayTextAttributeGranularity
      )
      return WinRt.Hresult is abstract;

      function get_CanChangeBlinkRate
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsBrightnessSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsCursorSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsHorizontalMarqueeSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsVerticalMarqueeSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsInterCharacterWaitSupported
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SupportedDescriptors
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_SupportedWindows
      (
         this : access ILineDisplayCapabilities_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayCapabilities : aliased WinRt.IID := (1511372241, 36293, 19356, (145, 114, 48, 62, 71, 183, 12, 85 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayCursor is interface and WinRt.IInspectable;

      function get_CanCustomize
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsBlinkSupported
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsBlockSupported
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsHalfBlockSupported
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsUnderlineSupported
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReverseSupported
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsOtherSupported
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetAttributes
      (
         this : access ILineDisplayCursor_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayCursorAttributes
      )
      return WinRt.Hresult is abstract;

      function TryUpdateAttributesAsync
      (
         this : access ILineDisplayCursor_Interface;
         attributes : Windows.Devices.PointOfService.ILineDisplayCursorAttributes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayCursor : aliased WinRt.IID := (3974102085, 30026, 20027, (171, 43, 21, 17, 129, 8, 86, 5 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayCursorAttributes is interface and WinRt.IInspectable;

      function get_IsBlinkEnabled
      (
         this : access ILineDisplayCursorAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsBlinkEnabled
      (
         this : access ILineDisplayCursorAttributes_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CursorType
      (
         this : access ILineDisplayCursorAttributes_Interface;
         RetVal : access Windows.Devices.PointOfService.LineDisplayCursorType
      )
      return WinRt.Hresult is abstract;

      function put_CursorType
      (
         this : access ILineDisplayCursorAttributes_Interface;
         value : Windows.Devices.PointOfService.LineDisplayCursorType
      )
      return WinRt.Hresult is abstract;

      function get_IsAutoAdvanceEnabled
      (
         this : access ILineDisplayCursorAttributes_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsAutoAdvanceEnabled
      (
         this : access ILineDisplayCursorAttributes_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Position
      (
         this : access ILineDisplayCursorAttributes_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function put_Position
      (
         this : access ILineDisplayCursorAttributes_Interface;
         value : Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayCursorAttributes : aliased WinRt.IID := (1311593726, 20477, 16784, (170, 225, 206, 40, 95, 32, 200, 150 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayCustomGlyphs is interface and WinRt.IInspectable;

      function get_SizeInPixels
      (
         this : access ILineDisplayCustomGlyphs_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function get_SupportedGlyphCodes
      (
         this : access ILineDisplayCustomGlyphs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryRedefineAsync
      (
         this : access ILineDisplayCustomGlyphs_Interface;
         glyphCode : WinRt.UInt32;
         glyphData : Windows.Storage.Streams.IBuffer;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayCustomGlyphs : aliased WinRt.IID := (576190012, 62051, 17649, (161, 160, 231, 80, 166, 160, 236, 84 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayMarquee is interface and WinRt.IInspectable;

      function get_Format
      (
         this : access ILineDisplayMarquee_Interface;
         RetVal : access Windows.Devices.PointOfService.LineDisplayMarqueeFormat
      )
      return WinRt.Hresult is abstract;

      function put_Format
      (
         this : access ILineDisplayMarquee_Interface;
         value : Windows.Devices.PointOfService.LineDisplayMarqueeFormat
      )
      return WinRt.Hresult is abstract;

      function get_RepeatWaitInterval
      (
         this : access ILineDisplayMarquee_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_RepeatWaitInterval
      (
         this : access ILineDisplayMarquee_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_ScrollWaitInterval
      (
         this : access ILineDisplayMarquee_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_ScrollWaitInterval
      (
         this : access ILineDisplayMarquee_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function TryStartScrollingAsync
      (
         this : access ILineDisplayMarquee_Interface;
         direction : Windows.Devices.PointOfService.LineDisplayScrollDirection;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryStopScrollingAsync
      (
         this : access ILineDisplayMarquee_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayMarquee : aliased WinRt.IID := (2748530238, 62570, 19322, (188, 33, 83, 235, 59, 87, 248, 180 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayStatics is interface and WinRt.IInspectable;

      function FromIdAsync
      (
         this : access ILineDisplayStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDefaultAsync
      (
         this : access ILineDisplayStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access ILineDisplayStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access ILineDisplayStatics_Interface;
         connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayStatics : aliased WinRt.IID := (36552886, 4528, 18064, (149, 71, 11, 57, 197, 175, 33, 20 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayStatics2 is interface and WinRt.IInspectable;

      function get_StatisticsCategorySelector
      (
         this : access ILineDisplayStatics2_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayStatisticsCategorySelector
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayStatics2 : aliased WinRt.IID := (1611415324, 30635, 18792, (167, 222, 192, 47, 241, 105, 242, 204 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayStatisticsCategorySelector is interface and WinRt.IInspectable;

      function get_AllStatistics
      (
         this : access ILineDisplayStatisticsCategorySelector_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UnifiedPosStatistics
      (
         this : access ILineDisplayStatisticsCategorySelector_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ManufacturerStatistics
      (
         this : access ILineDisplayStatisticsCategorySelector_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayStatisticsCategorySelector : aliased WinRt.IID := (3038889067, 37492, 19748, (148, 243, 182, 1, 123, 131, 36, 68 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayStatusUpdatedEventArgs is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access ILineDisplayStatusUpdatedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.LineDisplayPowerStatus
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayStatusUpdatedEventArgs : aliased WinRt.IID := (3721755674, 34555, 20154, (147, 209, 111, 94, 218, 82, 183, 82 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayStoredBitmap is interface and WinRt.IInspectable;

      function get_EscapeSequence
      (
         this : access ILineDisplayStoredBitmap_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function TryDeleteAsync
      (
         this : access ILineDisplayStoredBitmap_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayStoredBitmap : aliased WinRt.IID := (4129378651, 55326, 17338, (191, 27, 188, 250, 60, 120, 91, 160 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayWindow is interface and WinRt.IInspectable;

      function get_SizeInCharacters
      (
         this : access ILineDisplayWindow_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      function get_InterCharacterWaitInterval
      (
         this : access ILineDisplayWindow_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_InterCharacterWaitInterval
      (
         this : access ILineDisplayWindow_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function TryRefreshAsync
      (
         this : access ILineDisplayWindow_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayTextAsync
      (
         this : access ILineDisplayWindow_Interface;
         text : WinRt.HString;
         displayAttribute : Windows.Devices.PointOfService.LineDisplayTextAttribute;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayTextAsync
      (
         this : access ILineDisplayWindow_Interface;
         text : WinRt.HString;
         displayAttribute : Windows.Devices.PointOfService.LineDisplayTextAttribute;
         startPosition : Windows.Foundation.Point;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayTextAsync
      (
         this : access ILineDisplayWindow_Interface;
         text : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryScrollTextAsync
      (
         this : access ILineDisplayWindow_Interface;
         direction : Windows.Devices.PointOfService.LineDisplayScrollDirection;
         numberOfColumnsOrRows : WinRt.UInt32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryClearTextAsync
      (
         this : access ILineDisplayWindow_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayWindow : aliased WinRt.IID := (3525308148, 9060, 19429, (190, 225, 133, 22, 128, 175, 73, 100 ));

   -----------------------------------------------------------------------------
   -- type ILineDisplayWindow2 is interface and WinRt.IInspectable;

      function get_Cursor
      (
         this : access ILineDisplayWindow2_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayCursor
      )
      return WinRt.Hresult is abstract;

      function get_Marquee
      (
         this : access ILineDisplayWindow2_Interface;
         RetVal : access Windows.Devices.PointOfService.ILineDisplayMarquee
      )
      return WinRt.Hresult is abstract;

      function ReadCharacterAtCursorAsync
      (
         this : access ILineDisplayWindow2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayStoredBitmapAtCursorAsync
      (
         this : access ILineDisplayWindow2_Interface;
         bitmap : Windows.Devices.PointOfService.ILineDisplayStoredBitmap;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayStorageFileBitmapAtCursorAsync
      (
         this : access ILineDisplayWindow2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayStorageFileBitmapAtCursorAsync
      (
         this : access ILineDisplayWindow2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
         verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayStorageFileBitmapAtCursorAsync
      (
         this : access ILineDisplayWindow2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
         verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment;
         widthInPixels : WinRt.Int32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayStorageFileBitmapAtPointAsync
      (
         this : access ILineDisplayWindow2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         offsetInPixels : Windows.Foundation.Point;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryDisplayStorageFileBitmapAtPointAsync
      (
         this : access ILineDisplayWindow2_Interface;
         bitmap : Windows.Storage.IStorageFile;
         offsetInPixels : Windows.Foundation.Point;
         widthInPixels : WinRt.Int32;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILineDisplayWindow2 : aliased WinRt.IID := (2841436902, 48600, 17253, (142, 17, 222, 148, 222, 141, 255, 2 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReader is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IMagneticStripeReader_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capabilities
      (
         this : access IMagneticStripeReader_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_SupportedCardTypes
      (
         this : access IMagneticStripeReader_Interface;
         RetValSize : access WinRt.UInt32;
         RetVal : access WinRt.UInt32_Ptr
      )
      return WinRt.Hresult is abstract;

      function get_DeviceAuthenticationProtocol
      (
         this : access IMagneticStripeReader_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderAuthenticationProtocol
      )
      return WinRt.Hresult is abstract;

      function CheckHealthAsync
      (
         this : access IMagneticStripeReader_Interface;
         level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ClaimReaderAsync
      (
         this : access IMagneticStripeReader_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RetrieveStatisticsAsync
      (
         this : access IMagneticStripeReader_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetErrorReportingType
      (
         this : access IMagneticStripeReader_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderErrorReportingType
      )
      return WinRt.Hresult is abstract;

      function add_StatusUpdated
      (
         this : access IMagneticStripeReader_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StatusUpdated
      (
         this : access IMagneticStripeReader_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReader : aliased WinRt.IID := (445820949, 18371, 18058, (147, 51, 12, 101, 23, 87, 72, 131 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderAamvaCardDataReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Report
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderReport
      )
      return WinRt.Hresult is abstract;

      function get_LicenseNumber
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ExpirationDate
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Restrictions
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Class
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Endorsements
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_BirthDate
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FirstName
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Surname
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Suffix
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Gender
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HairColor
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_EyeColor
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Height
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Weight
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Address
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_City
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_State
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PostalCode
      (
         this : access IMagneticStripeReaderAamvaCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderAamvaCardDataReceivedEventArgs : aliased WinRt.IID := (172735825, 49942, 18704, (135, 243, 122, 98, 186, 134, 45, 49 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderBankCardDataReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Report
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderReport
      )
      return WinRt.Hresult is abstract;

      function get_AccountNumber
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ExpirationDate
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ServiceCode
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Title
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FirstName
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MiddleInitial
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Surname
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Suffix
      (
         this : access IMagneticStripeReaderBankCardDataReceivedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderBankCardDataReceivedEventArgs : aliased WinRt.IID := (781551651, 41754, 18275, (136, 44, 35, 114, 94, 57, 176, 142 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderCapabilities is interface and WinRt.IInspectable;

      function get_CardAuthentication
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SupportedEncryptionAlgorithms
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_AuthenticationLevel
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderAuthenticationLevel
      )
      return WinRt.Hresult is abstract;

      function get_IsIsoSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsJisOneSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsJisTwoSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_PowerReportingType
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosPowerReportingType
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsReportingSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsUpdatingSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTrackDataMaskingSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTransmitSentinelsSupported
      (
         this : access IMagneticStripeReaderCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderCapabilities : aliased WinRt.IID := (1898479772, 50240, 17570, (164, 103, 70, 145, 117, 208, 40, 150 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderCardTypesStatics is interface and WinRt.IInspectable;

      function get_Unknown
      (
         this : access IMagneticStripeReaderCardTypesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Bank
      (
         this : access IMagneticStripeReaderCardTypesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Aamva
      (
         this : access IMagneticStripeReaderCardTypesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedBase
      (
         this : access IMagneticStripeReaderCardTypesStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderCardTypesStatics : aliased WinRt.IID := (1385114717, 10630, 18255, (132, 84, 124, 205, 5, 146, 141, 95 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderEncryptionAlgorithmsStatics is interface and WinRt.IInspectable;

      function get_None
      (
         this : access IMagneticStripeReaderEncryptionAlgorithmsStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_TripleDesDukpt
      (
         this : access IMagneticStripeReaderEncryptionAlgorithmsStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedBase
      (
         this : access IMagneticStripeReaderEncryptionAlgorithmsStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderEncryptionAlgorithmsStatics : aliased WinRt.IID := (1404400464, 50139, 18260, (156, 0, 65, 57, 35, 116, 161, 9 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderErrorOccurredEventArgs is interface and WinRt.IInspectable;

      function get_Track1Status
      (
         this : access IMagneticStripeReaderErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType
      )
      return WinRt.Hresult is abstract;

      function get_Track2Status
      (
         this : access IMagneticStripeReaderErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType
      )
      return WinRt.Hresult is abstract;

      function get_Track3Status
      (
         this : access IMagneticStripeReaderErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType
      )
      return WinRt.Hresult is abstract;

      function get_Track4Status
      (
         this : access IMagneticStripeReaderErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType
      )
      return WinRt.Hresult is abstract;

      function get_ErrorData
      (
         this : access IMagneticStripeReaderErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IUnifiedPosErrorData
      )
      return WinRt.Hresult is abstract;

      function get_PartialInputData
      (
         this : access IMagneticStripeReaderErrorOccurredEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderReport
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderErrorOccurredEventArgs : aliased WinRt.IID := (535689565, 11396, 16813, (183, 120, 242, 53, 106, 120, 154, 177 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderReport is interface and WinRt.IInspectable;

      function get_CardType
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Track1
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderTrackData
      )
      return WinRt.Hresult is abstract;

      function get_Track2
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderTrackData
      )
      return WinRt.Hresult is abstract;

      function get_Track3
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderTrackData
      )
      return WinRt.Hresult is abstract;

      function get_Track4
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderTrackData
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_CardAuthenticationData
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      function get_CardAuthenticationDataLength
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_AdditionalSecurityInformation
      (
         this : access IMagneticStripeReaderReport_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderReport : aliased WinRt.IID := (1784373319, 39344, 16776, (190, 241, 237, 223, 121, 247, 143, 230 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderStatics is interface and WinRt.IInspectable;

      function GetDefaultAsync
      (
         this : access IMagneticStripeReaderStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IMagneticStripeReaderStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IMagneticStripeReaderStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderStatics : aliased WinRt.IID := (3294604106, 61399, 18272, (165, 206, 21, 176, 228, 126, 148, 235 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IMagneticStripeReaderStatics2_Interface;
         connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderStatics2 : aliased WinRt.IID := (2360197986, 54887, 18682, (134, 188, 245, 174, 17, 137, 38, 43 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderStatusUpdatedEventArgs is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IMagneticStripeReaderStatusUpdatedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.MagneticStripeReaderStatus
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedStatus
      (
         this : access IMagneticStripeReaderStatusUpdatedEventArgs_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderStatusUpdatedEventArgs : aliased WinRt.IID := (164391856, 12898, 16413, (158, 138, 232, 13, 99, 88, 144, 107 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderTrackData is interface and WinRt.IInspectable;

      function get_Data
      (
         this : access IMagneticStripeReaderTrackData_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      function get_DiscretionaryData
      (
         this : access IMagneticStripeReaderTrackData_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      function get_EncryptedData
      (
         this : access IMagneticStripeReaderTrackData_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderTrackData : aliased WinRt.IID := (273479281, 19101, 17518, (171, 197, 32, 64, 35, 7, 186, 54 ));

   -----------------------------------------------------------------------------
   -- type IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Report
      (
         this : access IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IMagneticStripeReaderReport
      )
      return WinRt.Hresult is abstract;

      IID_IMagneticStripeReaderVendorSpecificCardDataReceivedEventArgs : aliased WinRt.IID := (2936689940, 22988, 19040, (153, 232, 153, 165, 61, 172, 229, 170 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinter is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IPosPrinter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capabilities
      (
         this : access IPosPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IPosPrinterCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_SupportedCharacterSets
      (
         this : access IPosPrinter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_SupportedTypeFaces
      (
         this : access IPosPrinter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Status
      (
         this : access IPosPrinter_Interface;
         RetVal : access Windows.Devices.PointOfService.IPosPrinterStatus
      )
      return WinRt.Hresult is abstract;

      function ClaimPrinterAsync
      (
         this : access IPosPrinter_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CheckHealthAsync
      (
         this : access IPosPrinter_Interface;
         level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetStatisticsAsync
      (
         this : access IPosPrinter_Interface;
         statisticsCategories : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_StatusUpdated
      (
         this : access IPosPrinter_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_StatusUpdated
      (
         this : access IPosPrinter_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinter : aliased WinRt.IID := (704889102, 39449, 18945, (153, 79, 18, 223, 173, 106, 220, 191 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinter2 is interface and WinRt.IInspectable;

      function get_SupportedBarcodeSymbologies
      (
         this : access IPosPrinter2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetFontProperty
      (
         this : access IPosPrinter2_Interface;
         typeface : WinRt.HString;
         RetVal : access Windows.Devices.PointOfService.IPosPrinterFontProperty
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinter2 : aliased WinRt.IID := (612660712, 35736, 21783, (142, 72, 118, 14, 134, 246, 137, 135 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterCapabilities is interface and WinRt.IInspectable;

      function get_PowerReportingType
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosPowerReportingType
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsReportingSupported
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStatisticsUpdatingSupported
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DefaultCharacterSet
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_HasCoverSensor
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanMapCharacterSet
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTransactionSupported
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Receipt
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.IReceiptPrinterCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_Slip
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.ISlipPrinterCapabilities
      )
      return WinRt.Hresult is abstract;

      function get_Journal
      (
         this : access IPosPrinterCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.IJournalPrinterCapabilities
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterCapabilities : aliased WinRt.IID := (3454621473, 17280, 18821, (173, 197, 57, 219, 48, 205, 147, 188 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterCharacterSetIdsStatics is interface and WinRt.IInspectable;

      function get_Utf16LE
      (
         this : access IPosPrinterCharacterSetIdsStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ascii
      (
         this : access IPosPrinterCharacterSetIdsStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Ansi
      (
         this : access IPosPrinterCharacterSetIdsStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterCharacterSetIdsStatics : aliased WinRt.IID := (1550884607, 28826, 20455, (178, 21, 6, 167, 72, 163, 139, 57 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterFontProperty is interface and WinRt.IInspectable;

      function get_TypeFace
      (
         this : access IPosPrinterFontProperty_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsScalableToAnySize
      (
         this : access IPosPrinterFontProperty_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CharacterSizes
      (
         this : access IPosPrinterFontProperty_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterFontProperty : aliased WinRt.IID := (2817845562, 63660, 24324, (132, 210, 41, 177, 109, 138, 99, 60 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterJob is interface and WinRt.IInspectable;

      function Print
      (
         this : access IPosPrinterJob_Interface;
         data : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function PrintLine
      (
         this : access IPosPrinterJob_Interface;
         data : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function PrintLine
      (
         this : access IPosPrinterJob_Interface
      )
      return WinRt.Hresult is abstract;

      function ExecuteAsync
      (
         this : access IPosPrinterJob_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterJob : aliased WinRt.IID := (2593390684, 1557, 17809, (165, 143, 48, 248, 126, 223, 226, 228 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterPrintOptions is interface and WinRt.IInspectable;

      function get_TypeFace
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_TypeFace
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CharacterHeight
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_CharacterHeight
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Bold
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Bold
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Italic
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Italic
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Underline
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Underline
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ReverseVideo
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ReverseVideo
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Strikethrough
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Strikethrough
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Superscript
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Superscript
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Subscript
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Subscript
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DoubleWide
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DoubleWide
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DoubleHigh
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DoubleHigh
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Alignment
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterAlignment
      )
      return WinRt.Hresult is abstract;

      function put_Alignment
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : Windows.Devices.PointOfService.PosPrinterAlignment
      )
      return WinRt.Hresult is abstract;

      function get_CharacterSet
      (
         this : access IPosPrinterPrintOptions_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_CharacterSet
      (
         this : access IPosPrinterPrintOptions_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterPrintOptions : aliased WinRt.IID := (170792701, 7426, 23128, (157, 89, 191, 205, 231, 111, 222, 134 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterReleaseDeviceRequestedEventArgs is interface and WinRt.IInspectable;

      IID_IPosPrinterReleaseDeviceRequestedEventArgs : aliased WinRt.IID := (734765913, 7407, 16562, (158, 203, 249, 39, 248, 86, 174, 60 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterStatics is interface and WinRt.IInspectable;

      function GetDefaultAsync
      (
         this : access IPosPrinterStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IPosPrinterStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IPosPrinterStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterStatics : aliased WinRt.IID := (2363544810, 4911, 19679, (166, 74, 45, 13, 124, 150, 168, 91 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IPosPrinterStatics2_Interface;
         connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterStatics2 : aliased WinRt.IID := (4006423580, 45264, 17127, (177, 55, 184, 155, 22, 36, 77, 65 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterStatus is interface and WinRt.IInspectable;

      function get_StatusKind
      (
         this : access IPosPrinterStatus_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterStatusKind
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedStatus
      (
         this : access IPosPrinterStatus_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterStatus : aliased WinRt.IID := (3522217776, 55872, 17192, (191, 118, 81, 86, 250, 51, 183, 71 ));

   -----------------------------------------------------------------------------
   -- type IPosPrinterStatusUpdatedEventArgs is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IPosPrinterStatusUpdatedEventArgs_Interface;
         RetVal : access Windows.Devices.PointOfService.IPosPrinterStatus
      )
      return WinRt.Hresult is abstract;

      IID_IPosPrinterStatusUpdatedEventArgs : aliased WinRt.IID := (786139103, 5030, 17037, (186, 129, 176, 231, 195, 229, 163, 205 ));

   -----------------------------------------------------------------------------
   -- type IReceiptOrSlipJob is interface and WinRt.IInspectable;

      function SetBarcodeRotation
      (
         this : access IReceiptOrSlipJob_Interface;
         value : Windows.Devices.PointOfService.PosPrinterRotation
      )
      return WinRt.Hresult is abstract;

      function SetPrintRotation
      (
         this : access IReceiptOrSlipJob_Interface;
         value : Windows.Devices.PointOfService.PosPrinterRotation;
         includeBitmaps : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function SetPrintArea
      (
         this : access IReceiptOrSlipJob_Interface;
         value : Windows.Foundation.Rect
      )
      return WinRt.Hresult is abstract;

      function SetBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmapNumber : WinRt.UInt32;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignment : Windows.Devices.PointOfService.PosPrinterAlignment
      )
      return WinRt.Hresult is abstract;

      function SetBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmapNumber : WinRt.UInt32;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignment : Windows.Devices.PointOfService.PosPrinterAlignment;
         width : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function SetCustomAlignedBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmapNumber : WinRt.UInt32;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignmentDistance : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function SetCustomAlignedBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmapNumber : WinRt.UInt32;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignmentDistance : WinRt.UInt32;
         width : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function PrintSavedBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmapNumber : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function DrawRuledLine
      (
         this : access IReceiptOrSlipJob_Interface;
         positionList : WinRt.HString;
         lineDirection : Windows.Devices.PointOfService.PosPrinterLineDirection;
         lineWidth : WinRt.UInt32;
         lineStyle : Windows.Devices.PointOfService.PosPrinterLineStyle;
         lineColor : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function PrintBarcode
      (
         this : access IReceiptOrSlipJob_Interface;
         data : WinRt.HString;
         symbology : WinRt.UInt32;
         height : WinRt.UInt32;
         width : WinRt.UInt32;
         textPosition : Windows.Devices.PointOfService.PosPrinterBarcodeTextPosition;
         alignment : Windows.Devices.PointOfService.PosPrinterAlignment
      )
      return WinRt.Hresult is abstract;

      function PrintBarcodeCustomAlign
      (
         this : access IReceiptOrSlipJob_Interface;
         data : WinRt.HString;
         symbology : WinRt.UInt32;
         height : WinRt.UInt32;
         width : WinRt.UInt32;
         textPosition : Windows.Devices.PointOfService.PosPrinterBarcodeTextPosition;
         alignmentDistance : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function PrintBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignment : Windows.Devices.PointOfService.PosPrinterAlignment
      )
      return WinRt.Hresult is abstract;

      function PrintBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignment : Windows.Devices.PointOfService.PosPrinterAlignment;
         width : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function PrintCustomAlignedBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignmentDistance : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function PrintCustomAlignedBitmap
      (
         this : access IReceiptOrSlipJob_Interface;
         bitmap : Windows.Graphics.Imaging.IBitmapFrame;
         alignmentDistance : WinRt.UInt32;
         width : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IReceiptOrSlipJob : aliased WinRt.IID := (1394710974, 51395, 19906, (137, 233, 92, 74, 55, 179, 77, 220 ));

   -----------------------------------------------------------------------------
   -- type IReceiptPrintJob is interface and WinRt.IInspectable;

      function MarkFeed
      (
         this : access IReceiptPrintJob_Interface;
         kind : Windows.Devices.PointOfService.PosPrinterMarkFeedKind
      )
      return WinRt.Hresult is abstract;

      function CutPaper
      (
         this : access IReceiptPrintJob_Interface;
         percentage : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function CutPaper
      (
         this : access IReceiptPrintJob_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IReceiptPrintJob : aliased WinRt.IID := (2861958766, 44205, 19321, (157, 15, 192, 207, 192, 141, 199, 123 ));

   -----------------------------------------------------------------------------
   -- type IReceiptPrintJob2 is interface and WinRt.IInspectable;

      function StampPaper
      (
         this : access IReceiptPrintJob2_Interface
      )
      return WinRt.Hresult is abstract;

      function Print
      (
         this : access IReceiptPrintJob2_Interface;
         data : WinRt.HString;
         printOptions : Windows.Devices.PointOfService.IPosPrinterPrintOptions
      )
      return WinRt.Hresult is abstract;

      function FeedPaperByLine
      (
         this : access IReceiptPrintJob2_Interface;
         lineCount : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function FeedPaperByMapModeUnit
      (
         this : access IReceiptPrintJob2_Interface;
         distance : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IReceiptPrintJob2 : aliased WinRt.IID := (213652195, 40489, 20857, (188, 216, 24, 17, 211, 185, 161, 14 ));

   -----------------------------------------------------------------------------
   -- type IReceiptPrinterCapabilities is interface and WinRt.IInspectable;

      function get_CanCutPaper
      (
         this : access IReceiptPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStampSupported
      (
         this : access IReceiptPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_MarkFeedCapabilities
      (
         this : access IReceiptPrinterCapabilities_Interface;
         RetVal : access Windows.Devices.PointOfService.PosPrinterMarkFeedCapabilities
      )
      return WinRt.Hresult is abstract;

      IID_IReceiptPrinterCapabilities : aliased WinRt.IID := (3102782863, 20904, 17404, (155, 213, 141, 226, 114, 166, 65, 91 ));

   -----------------------------------------------------------------------------
   -- type IReceiptPrinterCapabilities2 is interface and WinRt.IInspectable;

      function get_IsReverseVideoSupported
      (
         this : access IReceiptPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStrikethroughSupported
      (
         this : access IReceiptPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSuperscriptSupported
      (
         this : access IReceiptPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSubscriptSupported
      (
         this : access IReceiptPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReversePaperFeedByLineSupported
      (
         this : access IReceiptPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReversePaperFeedByMapModeUnitSupported
      (
         this : access IReceiptPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IReceiptPrinterCapabilities2 : aliased WinRt.IID := (537069112, 35372, 21932, (154, 123, 117, 118, 216, 134, 158, 153 ));

   -----------------------------------------------------------------------------
   -- type ISlipPrintJob is interface and WinRt.IInspectable;

      function Print
      (
         this : access ISlipPrintJob_Interface;
         data : WinRt.HString;
         printOptions : Windows.Devices.PointOfService.IPosPrinterPrintOptions
      )
      return WinRt.Hresult is abstract;

      function FeedPaperByLine
      (
         this : access ISlipPrintJob_Interface;
         lineCount : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function FeedPaperByMapModeUnit
      (
         this : access ISlipPrintJob_Interface;
         distance : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_ISlipPrintJob : aliased WinRt.IID := (1569257821, 24881, 23115, (183, 213, 142, 242, 218, 123, 65, 101 ));

   -----------------------------------------------------------------------------
   -- type ISlipPrinterCapabilities is interface and WinRt.IInspectable;

      function get_IsFullLengthSupported
      (
         this : access ISlipPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsBothSidesPrintingSupported
      (
         this : access ISlipPrinterCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ISlipPrinterCapabilities : aliased WinRt.IID := (2578539417, 18572, 16727, (138, 194, 159, 87, 247, 8, 211, 219 ));

   -----------------------------------------------------------------------------
   -- type ISlipPrinterCapabilities2 is interface and WinRt.IInspectable;

      function get_IsReverseVideoSupported
      (
         this : access ISlipPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStrikethroughSupported
      (
         this : access ISlipPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSuperscriptSupported
      (
         this : access ISlipPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSubscriptSupported
      (
         this : access ISlipPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReversePaperFeedByLineSupported
      (
         this : access ISlipPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsReversePaperFeedByMapModeUnitSupported
      (
         this : access ISlipPrinterCapabilities2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ISlipPrinterCapabilities2 : aliased WinRt.IID := (1878562417, 11546, 20480, (135, 194, 176, 133, 27, 253, 240, 126 ));

   -----------------------------------------------------------------------------
   -- type IUnifiedPosErrorData is interface and WinRt.IInspectable;

      function get_Message
      (
         this : access IUnifiedPosErrorData_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Severity
      (
         this : access IUnifiedPosErrorData_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosErrorSeverity
      )
      return WinRt.Hresult is abstract;

      function get_Reason
      (
         this : access IUnifiedPosErrorData_Interface;
         RetVal : access Windows.Devices.PointOfService.UnifiedPosErrorReason
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedReason
      (
         this : access IUnifiedPosErrorData_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IUnifiedPosErrorData : aliased WinRt.IID := (731483194, 21852, 18569, (142, 216, 197, 153, 187, 58, 113, 42 ));

   -----------------------------------------------------------------------------
   -- type IUnifiedPosErrorDataFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IUnifiedPosErrorDataFactory_Interface;
         message : WinRt.HString;
         severity : Windows.Devices.PointOfService.UnifiedPosErrorSeverity;
         reason : Windows.Devices.PointOfService.UnifiedPosErrorReason;
         extendedReason : WinRt.UInt32;
         RetVal : access Windows.Devices.PointOfService.IUnifiedPosErrorData
      )
      return WinRt.Hresult is abstract;

      IID_IUnifiedPosErrorDataFactory : aliased WinRt.IID := (1268262225, 8190, 17691, (163, 104, 99, 224, 206, 70, 95, 90 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScanner

   overriding procedure Initialize (this : in out BarcodeScanner);
   overriding procedure Finalize (this : in out BarcodeScanner);

   -----------------------------------------------------------------------------
   -- Static Interfaces for BarcodeScanner

   function GetDeviceSelector
   (
      connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes
   )
   return WinRt.WString;

   function GetDefaultAsync
   return WinRt.Windows.Devices.PointOfService.BarcodeScanner;

   function FromIdAsync
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeScanner;

   function GetDeviceSelector
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScanner

   function get_DeviceId
   (
      this : in out BarcodeScanner
   )
   return WinRt.WString;

   function get_Capabilities
   (
      this : in out BarcodeScanner
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeScannerCapabilities'Class;

   function ClaimScannerAsync
   (
      this : in out BarcodeScanner
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedBarcodeScanner'Class;

   function CheckHealthAsync
   (
      this : in out BarcodeScanner;
      level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel
   )
   return WinRt.WString;

   function GetSupportedSymbologiesAsync
   (
      this : in out BarcodeScanner
   )
   return WinRt.GenericObject;

   function IsSymbologySupportedAsync
   (
      this : in out BarcodeScanner;
      barcodeSymbology : WinRt.UInt32
   )
   return WinRt.Boolean;

   function RetrieveStatisticsAsync
   (
      this : in out BarcodeScanner;
      statisticsCategories : GenericObject
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function GetSupportedProfiles
   (
      this : in out BarcodeScanner
   )
   return IVectorView_HString.Kind;

   function IsProfileSupported
   (
      this : in out BarcodeScanner;
      profile : WinRt.WString
   )
   return WinRt.Boolean;

   function add_StatusUpdated
   (
      this : in out BarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_StatusUpdated
   (
      this : in out BarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_VideoDeviceId
   (
      this : in out BarcodeScanner
   )
   return WinRt.WString;

   procedure Close
   (
      this : in out BarcodeScanner
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScannerCapabilities

   overriding procedure Initialize (this : in out BarcodeScannerCapabilities);
   overriding procedure Finalize (this : in out BarcodeScannerCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScannerCapabilities

   function get_PowerReportingType
   (
      this : in out BarcodeScannerCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosPowerReportingType;

   function get_IsStatisticsReportingSupported
   (
      this : in out BarcodeScannerCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatisticsUpdatingSupported
   (
      this : in out BarcodeScannerCapabilities
   )
   return WinRt.Boolean;

   function get_IsImagePreviewSupported
   (
      this : in out BarcodeScannerCapabilities
   )
   return WinRt.Boolean;

   function get_IsSoftwareTriggerSupported
   (
      this : in out BarcodeScannerCapabilities
   )
   return WinRt.Boolean;

   function get_IsVideoPreviewSupported
   (
      this : in out BarcodeScannerCapabilities
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScannerDataReceivedEventArgs

   overriding procedure Initialize (this : in out BarcodeScannerDataReceivedEventArgs);
   overriding procedure Finalize (this : in out BarcodeScannerDataReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScannerDataReceivedEventArgs

   function get_Report
   (
      this : in out BarcodeScannerDataReceivedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeScannerReport'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScannerErrorOccurredEventArgs

   overriding procedure Initialize (this : in out BarcodeScannerErrorOccurredEventArgs);
   overriding procedure Finalize (this : in out BarcodeScannerErrorOccurredEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScannerErrorOccurredEventArgs

   function get_PartialInputData
   (
      this : in out BarcodeScannerErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeScannerReport'Class;

   function get_IsRetriable
   (
      this : in out BarcodeScannerErrorOccurredEventArgs
   )
   return WinRt.Boolean;

   function get_ErrorData
   (
      this : in out BarcodeScannerErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosErrorData'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScannerImagePreviewReceivedEventArgs

   overriding procedure Initialize (this : in out BarcodeScannerImagePreviewReceivedEventArgs);
   overriding procedure Finalize (this : in out BarcodeScannerImagePreviewReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScannerImagePreviewReceivedEventArgs

   function get_Preview
   (
      this : in out BarcodeScannerImagePreviewReceivedEventArgs
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamWithContentType;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScannerReport

   overriding procedure Initialize (this : in out BarcodeScannerReport);
   overriding procedure Finalize (this : in out BarcodeScannerReport);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for BarcodeScannerReport

   function Constructor
   (
      scanDataType : WinRt.UInt32;
      scanData : Windows.Storage.Streams.IBuffer;
      scanDataLabel : Windows.Storage.Streams.IBuffer
   )
   return BarcodeScannerReport;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScannerReport

   function get_ScanDataType
   (
      this : in out BarcodeScannerReport
   )
   return WinRt.UInt32;

   function get_ScanData
   (
      this : in out BarcodeScannerReport
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_ScanDataLabel
   (
      this : in out BarcodeScannerReport
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeScannerStatusUpdatedEventArgs

   overriding procedure Initialize (this : in out BarcodeScannerStatusUpdatedEventArgs);
   overriding procedure Finalize (this : in out BarcodeScannerStatusUpdatedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeScannerStatusUpdatedEventArgs

   function get_Status
   (
      this : in out BarcodeScannerStatusUpdatedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeScannerStatus;

   function get_ExtendedStatus
   (
      this : in out BarcodeScannerStatusUpdatedEventArgs
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package BarcodeSymbologies is

      function get_Unknown
      return WinRt.UInt32;

      function get_Ean8
      return WinRt.UInt32;

      function get_Ean8Add2
      return WinRt.UInt32;

      function get_Ean8Add5
      return WinRt.UInt32;

      function get_Eanv
      return WinRt.UInt32;

      function get_EanvAdd2
      return WinRt.UInt32;

      function get_EanvAdd5
      return WinRt.UInt32;

      function get_Ean13
      return WinRt.UInt32;

      function get_Ean13Add2
      return WinRt.UInt32;

      function get_Ean13Add5
      return WinRt.UInt32;

      function get_Isbn
      return WinRt.UInt32;

      function get_IsbnAdd5
      return WinRt.UInt32;

      function get_Ismn
      return WinRt.UInt32;

      function get_IsmnAdd2
      return WinRt.UInt32;

      function get_IsmnAdd5
      return WinRt.UInt32;

      function get_Issn
      return WinRt.UInt32;

      function get_IssnAdd2
      return WinRt.UInt32;

      function get_IssnAdd5
      return WinRt.UInt32;

      function get_Ean99
      return WinRt.UInt32;

      function get_Ean99Add2
      return WinRt.UInt32;

      function get_Ean99Add5
      return WinRt.UInt32;

      function get_Upca
      return WinRt.UInt32;

      function get_UpcaAdd2
      return WinRt.UInt32;

      function get_UpcaAdd5
      return WinRt.UInt32;

      function get_Upce
      return WinRt.UInt32;

      function get_UpceAdd2
      return WinRt.UInt32;

      function get_UpceAdd5
      return WinRt.UInt32;

      function get_UpcCoupon
      return WinRt.UInt32;

      function get_TfStd
      return WinRt.UInt32;

      function get_TfDis
      return WinRt.UInt32;

      function get_TfInt
      return WinRt.UInt32;

      function get_TfInd
      return WinRt.UInt32;

      function get_TfMat
      return WinRt.UInt32;

      function get_TfIata
      return WinRt.UInt32;

      function get_Gs1DatabarType1
      return WinRt.UInt32;

      function get_Gs1DatabarType2
      return WinRt.UInt32;

      function get_Gs1DatabarType3
      return WinRt.UInt32;

      function get_Code39
      return WinRt.UInt32;

      function get_Code39Ex
      return WinRt.UInt32;

      function get_Trioptic39
      return WinRt.UInt32;

      function get_Code32
      return WinRt.UInt32;

      function get_Pzn
      return WinRt.UInt32;

      function get_Code93
      return WinRt.UInt32;

      function get_Code93Ex
      return WinRt.UInt32;

      function get_Code128
      return WinRt.UInt32;

      function get_Gs1128
      return WinRt.UInt32;

      function get_Gs1128Coupon
      return WinRt.UInt32;

      function get_UccEan128
      return WinRt.UInt32;

      function get_Sisac
      return WinRt.UInt32;

      function get_Isbt
      return WinRt.UInt32;

      function get_Codabar
      return WinRt.UInt32;

      function get_Code11
      return WinRt.UInt32;

      function get_Msi
      return WinRt.UInt32;

      function get_Plessey
      return WinRt.UInt32;

      function get_Telepen
      return WinRt.UInt32;

      function get_Code16k
      return WinRt.UInt32;

      function get_CodablockA
      return WinRt.UInt32;

      function get_CodablockF
      return WinRt.UInt32;

      function get_Codablock128
      return WinRt.UInt32;

      function get_Code49
      return WinRt.UInt32;

      function get_Aztec
      return WinRt.UInt32;

      function get_DataCode
      return WinRt.UInt32;

      function get_DataMatrix
      return WinRt.UInt32;

      function get_HanXin
      return WinRt.UInt32;

      function get_Maxicode
      return WinRt.UInt32;

      function get_MicroPdf417
      return WinRt.UInt32;

      function get_MicroQr
      return WinRt.UInt32;

      function get_Pdf417
      return WinRt.UInt32;

      function get_Qr
      return WinRt.UInt32;

      function get_MsTag
      return WinRt.UInt32;

      function get_Ccab
      return WinRt.UInt32;

      function get_Ccc
      return WinRt.UInt32;

      function get_Tlc39
      return WinRt.UInt32;

      function get_AusPost
      return WinRt.UInt32;

      function get_CanPost
      return WinRt.UInt32;

      function get_ChinaPost
      return WinRt.UInt32;

      function get_DutchKix
      return WinRt.UInt32;

      function get_InfoMail
      return WinRt.UInt32;

      function get_ItalianPost25
      return WinRt.UInt32;

      function get_ItalianPost39
      return WinRt.UInt32;

      function get_JapanPost
      return WinRt.UInt32;

      function get_KoreanPost
      return WinRt.UInt32;

      function get_SwedenPost
      return WinRt.UInt32;

      function get_UkPost
      return WinRt.UInt32;

      function get_UsIntelligent
      return WinRt.UInt32;

      function get_UsIntelligentPkg
      return WinRt.UInt32;

      function get_UsPlanet
      return WinRt.UInt32;

      function get_UsPostNet
      return WinRt.UInt32;

      function get_Us4StateFics
      return WinRt.UInt32;

      function get_OcrA
      return WinRt.UInt32;

      function get_OcrB
      return WinRt.UInt32;

      function get_Micr
      return WinRt.UInt32;

      function get_ExtendedBase
      return WinRt.UInt32;

      function GetName
      (
         scanDataType : WinRt.UInt32
      )
      return WinRt.WString;

      function get_Gs1DWCode
      return WinRt.UInt32;

   end BarcodeSymbologies;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarcodeSymbologyAttributes

   overriding procedure Initialize (this : in out BarcodeSymbologyAttributes);
   overriding procedure Finalize (this : in out BarcodeSymbologyAttributes);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarcodeSymbologyAttributes

   function get_IsCheckDigitValidationEnabled
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.Boolean;

   procedure put_IsCheckDigitValidationEnabled
   (
      this : in out BarcodeSymbologyAttributes;
      value : WinRt.Boolean
   );

   function get_IsCheckDigitValidationSupported
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.Boolean;

   function get_IsCheckDigitTransmissionEnabled
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.Boolean;

   procedure put_IsCheckDigitTransmissionEnabled
   (
      this : in out BarcodeSymbologyAttributes;
      value : WinRt.Boolean
   );

   function get_IsCheckDigitTransmissionSupported
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.Boolean;

   function get_DecodeLength1
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.UInt32;

   procedure put_DecodeLength1
   (
      this : in out BarcodeSymbologyAttributes;
      value : WinRt.UInt32
   );

   function get_DecodeLength2
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.UInt32;

   procedure put_DecodeLength2
   (
      this : in out BarcodeSymbologyAttributes;
      value : WinRt.UInt32
   );

   function get_DecodeLengthKind
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeSymbologyDecodeLengthKind;

   procedure put_DecodeLengthKind
   (
      this : in out BarcodeSymbologyAttributes;
      value : Windows.Devices.PointOfService.BarcodeSymbologyDecodeLengthKind
   );

   function get_IsDecodeLengthSupported
   (
      this : in out BarcodeSymbologyAttributes
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawer

   overriding procedure Initialize (this : in out CashDrawer);
   overriding procedure Finalize (this : in out CashDrawer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for CashDrawer

   function GetDefaultAsync_CashDrawer
   return WinRt.Windows.Devices.PointOfService.CashDrawer;

   function FromIdAsync_CashDrawer
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawer;

   function GetDeviceSelector_CashDrawer
   return WinRt.WString;

   function GetDeviceSelector_CashDrawer
   (
      connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawer

   function get_DeviceId
   (
      this : in out CashDrawer
   )
   return WinRt.WString;

   function get_Capabilities
   (
      this : in out CashDrawer
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawerCapabilities'Class;

   function get_Status
   (
      this : in out CashDrawer
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawerStatus'Class;

   function get_IsDrawerOpen
   (
      this : in out CashDrawer
   )
   return WinRt.Boolean;

   function get_DrawerEventSource
   (
      this : in out CashDrawer
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawerEventSource'Class;

   function ClaimDrawerAsync
   (
      this : in out CashDrawer
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedCashDrawer'Class;

   function CheckHealthAsync
   (
      this : in out CashDrawer;
      level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel
   )
   return WinRt.WString;

   function GetStatisticsAsync
   (
      this : in out CashDrawer;
      statisticsCategories : GenericObject
   )
   return WinRt.WString;

   function add_StatusUpdated
   (
      this : in out CashDrawer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_StatusUpdated
   (
      this : in out CashDrawer;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out CashDrawer
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerCapabilities

   overriding procedure Initialize (this : in out CashDrawerCapabilities);
   overriding procedure Finalize (this : in out CashDrawerCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerCapabilities

   function get_PowerReportingType
   (
      this : in out CashDrawerCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosPowerReportingType;

   function get_IsStatisticsReportingSupported
   (
      this : in out CashDrawerCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatisticsUpdatingSupported
   (
      this : in out CashDrawerCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatusReportingSupported
   (
      this : in out CashDrawerCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatusMultiDrawerDetectSupported
   (
      this : in out CashDrawerCapabilities
   )
   return WinRt.Boolean;

   function get_IsDrawerOpenSensorAvailable
   (
      this : in out CashDrawerCapabilities
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerCloseAlarm

   overriding procedure Initialize (this : in out CashDrawerCloseAlarm);
   overriding procedure Finalize (this : in out CashDrawerCloseAlarm);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerCloseAlarm

   procedure put_AlarmTimeout
   (
      this : in out CashDrawerCloseAlarm;
      value : Windows.Foundation.TimeSpan
   );

   function get_AlarmTimeout
   (
      this : in out CashDrawerCloseAlarm
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_BeepFrequency
   (
      this : in out CashDrawerCloseAlarm;
      value : WinRt.UInt32
   );

   function get_BeepFrequency
   (
      this : in out CashDrawerCloseAlarm
   )
   return WinRt.UInt32;

   procedure put_BeepDuration
   (
      this : in out CashDrawerCloseAlarm;
      value : Windows.Foundation.TimeSpan
   );

   function get_BeepDuration
   (
      this : in out CashDrawerCloseAlarm
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_BeepDelay
   (
      this : in out CashDrawerCloseAlarm;
      value : Windows.Foundation.TimeSpan
   );

   function get_BeepDelay
   (
      this : in out CashDrawerCloseAlarm
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function add_AlarmTimeoutExpired
   (
      this : in out CashDrawerCloseAlarm;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AlarmTimeoutExpired
   (
      this : in out CashDrawerCloseAlarm;
      token : Windows.Foundation.EventRegistrationToken
   );

   function StartAsync
   (
      this : in out CashDrawerCloseAlarm
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerClosedEventArgs

   overriding procedure Initialize (this : in out CashDrawerClosedEventArgs);
   overriding procedure Finalize (this : in out CashDrawerClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerClosedEventArgs

   function get_CashDrawer
   (
      this : in out CashDrawerClosedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawer'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerEventSource

   overriding procedure Initialize (this : in out CashDrawerEventSource);
   overriding procedure Finalize (this : in out CashDrawerEventSource);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerEventSource

   function add_DrawerClosed
   (
      this : in out CashDrawerEventSource;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_DrawerClosed
   (
      this : in out CashDrawerEventSource;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_DrawerOpened
   (
      this : in out CashDrawerEventSource;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_DrawerOpened
   (
      this : in out CashDrawerEventSource;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerOpenedEventArgs

   overriding procedure Initialize (this : in out CashDrawerOpenedEventArgs);
   overriding procedure Finalize (this : in out CashDrawerOpenedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerOpenedEventArgs

   function get_CashDrawer
   (
      this : in out CashDrawerOpenedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawer'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerStatus

   overriding procedure Initialize (this : in out CashDrawerStatus);
   overriding procedure Finalize (this : in out CashDrawerStatus);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerStatus

   function get_StatusKind
   (
      this : in out CashDrawerStatus
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawerStatusKind;

   function get_ExtendedStatus
   (
      this : in out CashDrawerStatus
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CashDrawerStatusUpdatedEventArgs

   overriding procedure Initialize (this : in out CashDrawerStatusUpdatedEventArgs);
   overriding procedure Finalize (this : in out CashDrawerStatusUpdatedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CashDrawerStatusUpdatedEventArgs

   function get_Status
   (
      this : in out CashDrawerStatusUpdatedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawerStatus'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedBarcodeScanner

   overriding procedure Initialize (this : in out ClaimedBarcodeScanner);
   overriding procedure Finalize (this : in out ClaimedBarcodeScanner);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedBarcodeScanner

   function get_DeviceId
   (
      this : in out ClaimedBarcodeScanner
   )
   return WinRt.WString;

   function get_IsEnabled
   (
      this : in out ClaimedBarcodeScanner
   )
   return WinRt.Boolean;

   procedure put_IsDisabledOnDataReceived
   (
      this : in out ClaimedBarcodeScanner;
      value : WinRt.Boolean
   );

   function get_IsDisabledOnDataReceived
   (
      this : in out ClaimedBarcodeScanner
   )
   return WinRt.Boolean;

   procedure put_IsDecodeDataEnabled
   (
      this : in out ClaimedBarcodeScanner;
      value : WinRt.Boolean
   );

   function get_IsDecodeDataEnabled
   (
      this : in out ClaimedBarcodeScanner
   )
   return WinRt.Boolean;

   procedure EnableAsync
   (
      this : in out ClaimedBarcodeScanner
   );

   procedure DisableAsync
   (
      this : in out ClaimedBarcodeScanner
   );

   procedure RetainDevice
   (
      this : in out ClaimedBarcodeScanner
   );

   procedure SetActiveSymbologiesAsync
   (
      this : in out ClaimedBarcodeScanner;
      symbologies : GenericObject
   );

   procedure ResetStatisticsAsync
   (
      this : in out ClaimedBarcodeScanner;
      statisticsCategories : GenericObject
   );

   procedure UpdateStatisticsAsync
   (
      this : in out ClaimedBarcodeScanner;
      statistics : GenericObject
   );

   procedure SetActiveProfileAsync
   (
      this : in out ClaimedBarcodeScanner;
      profile : WinRt.WString
   );

   function add_DataReceived
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_DataReceived
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TriggerPressed
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TriggerPressed
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TriggerReleased
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TriggerReleased
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ReleaseDeviceRequested
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReleaseDeviceRequested
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ImagePreviewReceived
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ImagePreviewReceived
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ErrorOccurred
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ErrorOccurred
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure StartSoftwareTriggerAsync
   (
      this : in out ClaimedBarcodeScanner
   );

   procedure StopSoftwareTriggerAsync
   (
      this : in out ClaimedBarcodeScanner
   );

   function GetSymbologyAttributesAsync
   (
      this : in out ClaimedBarcodeScanner;
      barcodeSymbology : WinRt.UInt32
   )
   return WinRt.Windows.Devices.PointOfService.BarcodeSymbologyAttributes'Class;

   function SetSymbologyAttributesAsync
   (
      this : in out ClaimedBarcodeScanner;
      barcodeSymbology : WinRt.UInt32;
      attributes : Windows.Devices.PointOfService.BarcodeSymbologyAttributes'Class
   )
   return WinRt.Boolean;

   function ShowVideoPreviewAsync
   (
      this : in out ClaimedBarcodeScanner
   )
   return WinRt.Boolean;

   procedure HideVideoPreview
   (
      this : in out ClaimedBarcodeScanner
   );

   procedure put_IsVideoPreviewShownOnEnable
   (
      this : in out ClaimedBarcodeScanner;
      value : WinRt.Boolean
   );

   function get_IsVideoPreviewShownOnEnable
   (
      this : in out ClaimedBarcodeScanner
   )
   return WinRt.Boolean;

   function add_Closed
   (
      this : in out ClaimedBarcodeScanner;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ClaimedBarcodeScanner;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ClaimedBarcodeScanner
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedBarcodeScannerClosedEventArgs

   overriding procedure Initialize (this : in out ClaimedBarcodeScannerClosedEventArgs);
   overriding procedure Finalize (this : in out ClaimedBarcodeScannerClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedBarcodeScannerClosedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedCashDrawer

   overriding procedure Initialize (this : in out ClaimedCashDrawer);
   overriding procedure Finalize (this : in out ClaimedCashDrawer);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedCashDrawer

   function get_DeviceId
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.WString;

   function get_IsEnabled
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Boolean;

   function get_IsDrawerOpen
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Boolean;

   function get_CloseAlarm
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Windows.Devices.PointOfService.CashDrawerCloseAlarm'Class;

   function OpenDrawerAsync
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Boolean;

   function EnableAsync
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Boolean;

   function DisableAsync
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Boolean;

   function RetainDeviceAsync
   (
      this : in out ClaimedCashDrawer
   )
   return WinRt.Boolean;

   function ResetStatisticsAsync
   (
      this : in out ClaimedCashDrawer;
      statisticsCategories : GenericObject
   )
   return WinRt.Boolean;

   function UpdateStatisticsAsync
   (
      this : in out ClaimedCashDrawer;
      statistics : GenericObject
   )
   return WinRt.Boolean;

   function add_ReleaseDeviceRequested
   (
      this : in out ClaimedCashDrawer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReleaseDeviceRequested
   (
      this : in out ClaimedCashDrawer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Closed
   (
      this : in out ClaimedCashDrawer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ClaimedCashDrawer;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ClaimedCashDrawer
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedCashDrawerClosedEventArgs

   overriding procedure Initialize (this : in out ClaimedCashDrawerClosedEventArgs);
   overriding procedure Finalize (this : in out ClaimedCashDrawerClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedCashDrawerClosedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedJournalPrinter

   overriding procedure Initialize (this : in out ClaimedJournalPrinter);
   overriding procedure Finalize (this : in out ClaimedJournalPrinter);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedJournalPrinter

   function CreateJob
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Windows.Devices.PointOfService.JournalPrintJob'Class;

   procedure put_CharactersPerLine
   (
      this : in out ClaimedJournalPrinter;
      value : WinRt.UInt32
   );

   function get_CharactersPerLine
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.UInt32;

   procedure put_LineHeight
   (
      this : in out ClaimedJournalPrinter;
      value : WinRt.UInt32
   );

   function get_LineHeight
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.UInt32;

   procedure put_LineSpacing
   (
      this : in out ClaimedJournalPrinter;
      value : WinRt.UInt32
   );

   function get_LineSpacing
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.UInt32;

   function get_LineWidth
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.UInt32;

   procedure put_IsLetterQuality
   (
      this : in out ClaimedJournalPrinter;
      value : WinRt.Boolean
   );

   function get_IsLetterQuality
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function get_IsPaperNearEnd
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   procedure put_ColorCartridge
   (
      this : in out ClaimedJournalPrinter;
      value : Windows.Devices.PointOfService.PosPrinterColorCartridge
   );

   function get_ColorCartridge
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterColorCartridge;

   function get_IsCoverOpen
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function get_IsCartridgeRemoved
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function get_IsCartridgeEmpty
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function get_IsHeadCleaning
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function get_IsPaperEmpty
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function get_IsReadyToPrint
   (
      this : in out ClaimedJournalPrinter
   )
   return WinRt.Boolean;

   function ValidateData
   (
      this : in out ClaimedJournalPrinter;
      data : WinRt.WString
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedLineDisplay

   overriding procedure Initialize (this : in out ClaimedLineDisplay);
   overriding procedure Finalize (this : in out ClaimedLineDisplay);

   -----------------------------------------------------------------------------
   -- Static Interfaces for ClaimedLineDisplay

   function FromIdAsync_ClaimedLineDisplay
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedLineDisplay;

   function GetDeviceSelector_ClaimedLineDisplay
   return WinRt.WString;

   function GetDeviceSelector_ClaimedLineDisplay
   (
      connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedLineDisplay

   function get_DeviceId
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.WString;

   function get_Capabilities
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayCapabilities'Class;

   function get_PhysicalDeviceName
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.WString;

   function get_PhysicalDeviceDescription
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.WString;

   function get_DeviceControlDescription
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.WString;

   function get_DeviceControlVersion
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.WString;

   function get_DeviceServiceVersion
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.WString;

   function get_DefaultWindow
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayWindow'Class;

   procedure RetainDevice
   (
      this : in out ClaimedLineDisplay
   );

   function add_ReleaseDeviceRequested
   (
      this : in out ClaimedLineDisplay;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReleaseDeviceRequested
   (
      this : in out ClaimedLineDisplay;
      token : Windows.Foundation.EventRegistrationToken
   );

   function GetStatisticsAsync
   (
      this : in out ClaimedLineDisplay;
      statisticsCategories : GenericObject
   )
   return WinRt.WString;

   function CheckHealthAsync
   (
      this : in out ClaimedLineDisplay;
      level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel
   )
   return WinRt.WString;

   function CheckPowerStatusAsync
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayPowerStatus;

   function add_StatusUpdated
   (
      this : in out ClaimedLineDisplay;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_StatusUpdated
   (
      this : in out ClaimedLineDisplay;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_SupportedScreenSizesInCharacters
   (
      this : in out ClaimedLineDisplay
   )
   return IVectorView_Size.Kind;

   function get_MaxBitmapSizeInPixels
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Windows.Foundation.Size;

   function get_SupportedCharacterSets
   (
      this : in out ClaimedLineDisplay
   )
   return IVectorView_Int32.Kind;

   function get_CustomGlyphs
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayCustomGlyphs'Class;

   function GetAttributes
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayAttributes'Class;

   function TryUpdateAttributesAsync
   (
      this : in out ClaimedLineDisplay;
      attributes : Windows.Devices.PointOfService.LineDisplayAttributes'Class
   )
   return WinRt.Boolean;

   function TrySetDescriptorAsync
   (
      this : in out ClaimedLineDisplay;
      descriptor : WinRt.UInt32;
      descriptorState : Windows.Devices.PointOfService.LineDisplayDescriptorState
   )
   return WinRt.Boolean;

   function TryClearDescriptorsAsync
   (
      this : in out ClaimedLineDisplay
   )
   return WinRt.Boolean;

   function TryCreateWindowAsync
   (
      this : in out ClaimedLineDisplay;
      viewport : Windows.Foundation.Rect;
      windowSize : Windows.Foundation.Size
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayWindow'Class;

   function TryStoreStorageFileBitmapAsync
   (
      this : in out ClaimedLineDisplay;
      bitmap : Windows.Storage.StorageFile'Class
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayStoredBitmap'Class;

   function TryStoreStorageFileBitmapAsync
   (
      this : in out ClaimedLineDisplay;
      bitmap : Windows.Storage.StorageFile'Class;
      horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
      verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayStoredBitmap'Class;

   function TryStoreStorageFileBitmapAsync
   (
      this : in out ClaimedLineDisplay;
      bitmap : Windows.Storage.StorageFile'Class;
      horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
      verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment;
      widthInPixels : WinRt.Int32
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayStoredBitmap'Class;

   function add_Closed
   (
      this : in out ClaimedLineDisplay;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ClaimedLineDisplay;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ClaimedLineDisplay
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedLineDisplayClosedEventArgs

   overriding procedure Initialize (this : in out ClaimedLineDisplayClosedEventArgs);
   overriding procedure Finalize (this : in out ClaimedLineDisplayClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedLineDisplayClosedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedMagneticStripeReader

   overriding procedure Initialize (this : in out ClaimedMagneticStripeReader);
   overriding procedure Finalize (this : in out ClaimedMagneticStripeReader);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedMagneticStripeReader

   function get_DeviceId
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.WString;

   function get_IsEnabled
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Boolean;

   procedure put_IsDisabledOnDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      value : WinRt.Boolean
   );

   function get_IsDisabledOnDataReceived
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Boolean;

   procedure put_IsDecodeDataEnabled
   (
      this : in out ClaimedMagneticStripeReader;
      value : WinRt.Boolean
   );

   function get_IsDecodeDataEnabled
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Boolean;

   function get_IsDeviceAuthenticated
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Boolean;

   procedure put_DataEncryptionAlgorithm
   (
      this : in out ClaimedMagneticStripeReader;
      value : WinRt.UInt32
   );

   function get_DataEncryptionAlgorithm
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.UInt32;

   procedure put_TracksToRead
   (
      this : in out ClaimedMagneticStripeReader;
      value : Windows.Devices.PointOfService.MagneticStripeReaderTrackIds
   );

   function get_TracksToRead
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackIds;

   procedure put_IsTransmitSentinelsEnabled
   (
      this : in out ClaimedMagneticStripeReader;
      value : WinRt.Boolean
   );

   function get_IsTransmitSentinelsEnabled
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Boolean;

   procedure EnableAsync
   (
      this : in out ClaimedMagneticStripeReader
   );

   procedure DisableAsync
   (
      this : in out ClaimedMagneticStripeReader
   );

   procedure RetainDevice
   (
      this : in out ClaimedMagneticStripeReader
   );

   procedure SetErrorReportingType
   (
      this : in out ClaimedMagneticStripeReader;
      value : Windows.Devices.PointOfService.MagneticStripeReaderErrorReportingType
   );

   function RetrieveDeviceAuthenticationDataAsync
   (
      this : in out ClaimedMagneticStripeReader
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   procedure AuthenticateDeviceAsync
   (
      this : in out ClaimedMagneticStripeReader;
      responseToken : WinRt.Byte_Array
   );

   procedure DeAuthenticateDeviceAsync
   (
      this : in out ClaimedMagneticStripeReader;
      responseToken : WinRt.Byte_Array
   );

   procedure UpdateKeyAsync
   (
      this : in out ClaimedMagneticStripeReader;
      key : WinRt.WString;
      keyName : WinRt.WString
   );

   procedure ResetStatisticsAsync
   (
      this : in out ClaimedMagneticStripeReader;
      statisticsCategories : GenericObject
   );

   procedure UpdateStatisticsAsync
   (
      this : in out ClaimedMagneticStripeReader;
      statistics : GenericObject
   );

   function add_BankCardDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BankCardDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_AamvaCardDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AamvaCardDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_VendorSpecificDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_VendorSpecificDataReceived
   (
      this : in out ClaimedMagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ReleaseDeviceRequested
   (
      this : in out ClaimedMagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReleaseDeviceRequested
   (
      this : in out ClaimedMagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ErrorOccurred
   (
      this : in out ClaimedMagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ErrorOccurred
   (
      this : in out ClaimedMagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Closed
   (
      this : in out ClaimedMagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ClaimedMagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ClaimedMagneticStripeReader
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedMagneticStripeReaderClosedEventArgs

   overriding procedure Initialize (this : in out ClaimedMagneticStripeReaderClosedEventArgs);
   overriding procedure Finalize (this : in out ClaimedMagneticStripeReaderClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedMagneticStripeReaderClosedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedPosPrinter

   overriding procedure Initialize (this : in out ClaimedPosPrinter);
   overriding procedure Finalize (this : in out ClaimedPosPrinter);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedPosPrinter

   function get_DeviceId
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.WString;

   function get_IsEnabled
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Boolean;

   procedure put_CharacterSet
   (
      this : in out ClaimedPosPrinter;
      value : WinRt.UInt32
   );

   function get_CharacterSet
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.UInt32;

   function get_IsCoverOpen
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Boolean;

   procedure put_IsCharacterSetMappingEnabled
   (
      this : in out ClaimedPosPrinter;
      value : WinRt.Boolean
   );

   function get_IsCharacterSetMappingEnabled
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Boolean;

   procedure put_MapMode
   (
      this : in out ClaimedPosPrinter;
      value : Windows.Devices.PointOfService.PosPrinterMapMode
   );

   function get_MapMode
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterMapMode;

   function get_Receipt
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedReceiptPrinter'Class;

   function get_Slip
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedSlipPrinter'Class;

   function get_Journal
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedJournalPrinter'Class;

   function EnableAsync
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Boolean;

   function DisableAsync
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Boolean;

   function RetainDeviceAsync
   (
      this : in out ClaimedPosPrinter
   )
   return WinRt.Boolean;

   function ResetStatisticsAsync
   (
      this : in out ClaimedPosPrinter;
      statisticsCategories : GenericObject
   )
   return WinRt.Boolean;

   function UpdateStatisticsAsync
   (
      this : in out ClaimedPosPrinter;
      statistics : GenericObject
   )
   return WinRt.Boolean;

   function add_ReleaseDeviceRequested
   (
      this : in out ClaimedPosPrinter;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReleaseDeviceRequested
   (
      this : in out ClaimedPosPrinter;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Closed
   (
      this : in out ClaimedPosPrinter;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Closed
   (
      this : in out ClaimedPosPrinter;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out ClaimedPosPrinter
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedPosPrinterClosedEventArgs

   overriding procedure Initialize (this : in out ClaimedPosPrinterClosedEventArgs);
   overriding procedure Finalize (this : in out ClaimedPosPrinterClosedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedPosPrinterClosedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedReceiptPrinter

   overriding procedure Initialize (this : in out ClaimedReceiptPrinter);
   overriding procedure Finalize (this : in out ClaimedReceiptPrinter);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedReceiptPrinter

   function get_SidewaysMaxLines
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   function get_SidewaysMaxChars
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   function get_LinesToPaperCut
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   function get_PageSize
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Windows.Foundation.Size;

   function get_PrintArea
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Windows.Foundation.Rect;

   function CreateJob
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Windows.Devices.PointOfService.ReceiptPrintJob'Class;

   procedure put_CharactersPerLine
   (
      this : in out ClaimedReceiptPrinter;
      value : WinRt.UInt32
   );

   function get_CharactersPerLine
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   procedure put_LineHeight
   (
      this : in out ClaimedReceiptPrinter;
      value : WinRt.UInt32
   );

   function get_LineHeight
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   procedure put_LineSpacing
   (
      this : in out ClaimedReceiptPrinter;
      value : WinRt.UInt32
   );

   function get_LineSpacing
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   function get_LineWidth
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.UInt32;

   procedure put_IsLetterQuality
   (
      this : in out ClaimedReceiptPrinter;
      value : WinRt.Boolean
   );

   function get_IsLetterQuality
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function get_IsPaperNearEnd
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   procedure put_ColorCartridge
   (
      this : in out ClaimedReceiptPrinter;
      value : Windows.Devices.PointOfService.PosPrinterColorCartridge
   );

   function get_ColorCartridge
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterColorCartridge;

   function get_IsCoverOpen
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function get_IsCartridgeRemoved
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function get_IsCartridgeEmpty
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function get_IsHeadCleaning
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function get_IsPaperEmpty
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function get_IsReadyToPrint
   (
      this : in out ClaimedReceiptPrinter
   )
   return WinRt.Boolean;

   function ValidateData
   (
      this : in out ClaimedReceiptPrinter;
      data : WinRt.WString
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ClaimedSlipPrinter

   overriding procedure Initialize (this : in out ClaimedSlipPrinter);
   overriding procedure Finalize (this : in out ClaimedSlipPrinter);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ClaimedSlipPrinter

   function get_SidewaysMaxLines
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   function get_SidewaysMaxChars
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   function get_MaxLines
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   function get_LinesNearEndToEnd
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   function get_PrintSide
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterPrintSide;

   function get_PageSize
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Windows.Foundation.Size;

   function get_PrintArea
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Windows.Foundation.Rect;

   procedure OpenJaws
   (
      this : in out ClaimedSlipPrinter
   );

   procedure CloseJaws
   (
      this : in out ClaimedSlipPrinter
   );

   function InsertSlipAsync
   (
      this : in out ClaimedSlipPrinter;
      timeout : Windows.Foundation.TimeSpan
   )
   return WinRt.Boolean;

   function RemoveSlipAsync
   (
      this : in out ClaimedSlipPrinter;
      timeout : Windows.Foundation.TimeSpan
   )
   return WinRt.Boolean;

   procedure ChangePrintSide
   (
      this : in out ClaimedSlipPrinter;
      printSide : Windows.Devices.PointOfService.PosPrinterPrintSide
   );

   function CreateJob
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Windows.Devices.PointOfService.SlipPrintJob'Class;

   procedure put_CharactersPerLine
   (
      this : in out ClaimedSlipPrinter;
      value : WinRt.UInt32
   );

   function get_CharactersPerLine
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   procedure put_LineHeight
   (
      this : in out ClaimedSlipPrinter;
      value : WinRt.UInt32
   );

   function get_LineHeight
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   procedure put_LineSpacing
   (
      this : in out ClaimedSlipPrinter;
      value : WinRt.UInt32
   );

   function get_LineSpacing
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   function get_LineWidth
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.UInt32;

   procedure put_IsLetterQuality
   (
      this : in out ClaimedSlipPrinter;
      value : WinRt.Boolean
   );

   function get_IsLetterQuality
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function get_IsPaperNearEnd
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   procedure put_ColorCartridge
   (
      this : in out ClaimedSlipPrinter;
      value : Windows.Devices.PointOfService.PosPrinterColorCartridge
   );

   function get_ColorCartridge
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterColorCartridge;

   function get_IsCoverOpen
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function get_IsCartridgeRemoved
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function get_IsCartridgeEmpty
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function get_IsHeadCleaning
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function get_IsPaperEmpty
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function get_IsReadyToPrint
   (
      this : in out ClaimedSlipPrinter
   )
   return WinRt.Boolean;

   function ValidateData
   (
      this : in out ClaimedSlipPrinter;
      data : WinRt.WString
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for JournalPrintJob

   overriding procedure Initialize (this : in out JournalPrintJob);
   overriding procedure Finalize (this : in out JournalPrintJob);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for JournalPrintJob

   procedure Print
   (
      this : in out JournalPrintJob;
      data : WinRt.WString;
      printOptions : Windows.Devices.PointOfService.PosPrinterPrintOptions'Class
   );

   procedure FeedPaperByLine
   (
      this : in out JournalPrintJob;
      lineCount : WinRt.Int32
   );

   procedure FeedPaperByMapModeUnit
   (
      this : in out JournalPrintJob;
      distance : WinRt.Int32
   );

   procedure Print
   (
      this : in out JournalPrintJob;
      data : WinRt.WString
   );

   procedure PrintLine
   (
      this : in out JournalPrintJob;
      data : WinRt.WString
   );

   procedure PrintLine
   (
      this : in out JournalPrintJob
   );

   function ExecuteAsync
   (
      this : in out JournalPrintJob
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for JournalPrinterCapabilities

   overriding procedure Initialize (this : in out JournalPrinterCapabilities);
   overriding procedure Finalize (this : in out JournalPrinterCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for JournalPrinterCapabilities

   function get_IsReverseVideoSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsStrikethroughSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsSuperscriptSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsSubscriptSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReversePaperFeedByLineSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReversePaperFeedByMapModeUnitSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPrinterPresent
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDualColorSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_ColorCartridgeCapabilities
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterColorCapabilities;

   function get_CartridgeSensors
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterCartridgeSensors;

   function get_IsBoldSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsItalicSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsUnderlineSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleHighPrintSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleWidePrintSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleHighDoubleWidePrintSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPaperEmptySensorSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPaperNearEndSensorSupported
   (
      this : in out JournalPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_SupportedCharactersPerLine
   (
      this : in out JournalPrinterCapabilities
   )
   return IVectorView_UInt32.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplay

   overriding procedure Initialize (this : in out LineDisplay);
   overriding procedure Finalize (this : in out LineDisplay);

   -----------------------------------------------------------------------------
   -- Static Interfaces for LineDisplay

   function FromIdAsync_LineDisplay
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplay;

   function GetDefaultAsync_LineDisplay
   return WinRt.Windows.Devices.PointOfService.LineDisplay;

   function GetDeviceSelector_LineDisplay
   return WinRt.WString;

   function GetDeviceSelector_LineDisplay
   (
      connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes
   )
   return WinRt.WString;

   function get_StatisticsCategorySelector
   return WinRt.Windows.Devices.PointOfService.LineDisplayStatisticsCategorySelector;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplay

   function get_DeviceId
   (
      this : in out LineDisplay
   )
   return WinRt.WString;

   function get_Capabilities
   (
      this : in out LineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayCapabilities'Class;

   function get_PhysicalDeviceName
   (
      this : in out LineDisplay
   )
   return WinRt.WString;

   function get_PhysicalDeviceDescription
   (
      this : in out LineDisplay
   )
   return WinRt.WString;

   function get_DeviceControlDescription
   (
      this : in out LineDisplay
   )
   return WinRt.WString;

   function get_DeviceControlVersion
   (
      this : in out LineDisplay
   )
   return WinRt.WString;

   function get_DeviceServiceVersion
   (
      this : in out LineDisplay
   )
   return WinRt.WString;

   function ClaimAsync
   (
      this : in out LineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedLineDisplay'Class;

   function CheckPowerStatusAsync
   (
      this : in out LineDisplay
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayPowerStatus;

   procedure Close
   (
      this : in out LineDisplay
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayAttributes

   overriding procedure Initialize (this : in out LineDisplayAttributes);
   overriding procedure Finalize (this : in out LineDisplayAttributes);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayAttributes

   function get_IsPowerNotifyEnabled
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Boolean;

   procedure put_IsPowerNotifyEnabled
   (
      this : in out LineDisplayAttributes;
      value : WinRt.Boolean
   );

   function get_Brightness
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Int32;

   procedure put_Brightness
   (
      this : in out LineDisplayAttributes;
      value : WinRt.Int32
   );

   function get_BlinkRate
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_BlinkRate
   (
      this : in out LineDisplayAttributes;
      value : Windows.Foundation.TimeSpan
   );

   function get_ScreenSizeInCharacters
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Windows.Foundation.Size;

   procedure put_ScreenSizeInCharacters
   (
      this : in out LineDisplayAttributes;
      value : Windows.Foundation.Size
   );

   function get_CharacterSet
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Int32;

   procedure put_CharacterSet
   (
      this : in out LineDisplayAttributes;
      value : WinRt.Int32
   );

   function get_IsCharacterSetMappingEnabled
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Boolean;

   procedure put_IsCharacterSetMappingEnabled
   (
      this : in out LineDisplayAttributes;
      value : WinRt.Boolean
   );

   function get_CurrentWindow
   (
      this : in out LineDisplayAttributes
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayWindow'Class;

   procedure put_CurrentWindow
   (
      this : in out LineDisplayAttributes;
      value : Windows.Devices.PointOfService.LineDisplayWindow'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayCapabilities

   overriding procedure Initialize (this : in out LineDisplayCapabilities);
   overriding procedure Finalize (this : in out LineDisplayCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayCapabilities

   function get_IsStatisticsReportingSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatisticsUpdatingSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_PowerReportingType
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosPowerReportingType;

   function get_CanChangeScreenSize
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_CanDisplayBitmaps
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_CanReadCharacterAtCursor
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_CanMapCharacterSets
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_CanDisplayCustomGlyphs
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_CanReverse
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayTextAttributeGranularity;

   function get_CanBlink
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayTextAttributeGranularity;

   function get_CanChangeBlinkRate
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_IsBrightnessSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_IsCursorSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_IsHorizontalMarqueeSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_IsVerticalMarqueeSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_IsInterCharacterWaitSupported
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.Boolean;

   function get_SupportedDescriptors
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.UInt32;

   function get_SupportedWindows
   (
      this : in out LineDisplayCapabilities
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayCursor

   overriding procedure Initialize (this : in out LineDisplayCursor);
   overriding procedure Finalize (this : in out LineDisplayCursor);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayCursor

   function get_CanCustomize
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function get_IsBlinkSupported
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function get_IsBlockSupported
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function get_IsHalfBlockSupported
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function get_IsUnderlineSupported
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function get_IsReverseSupported
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function get_IsOtherSupported
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Boolean;

   function GetAttributes
   (
      this : in out LineDisplayCursor
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayCursorAttributes'Class;

   function TryUpdateAttributesAsync
   (
      this : in out LineDisplayCursor;
      attributes : Windows.Devices.PointOfService.LineDisplayCursorAttributes'Class
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayCursorAttributes

   overriding procedure Initialize (this : in out LineDisplayCursorAttributes);
   overriding procedure Finalize (this : in out LineDisplayCursorAttributes);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayCursorAttributes

   function get_IsBlinkEnabled
   (
      this : in out LineDisplayCursorAttributes
   )
   return WinRt.Boolean;

   procedure put_IsBlinkEnabled
   (
      this : in out LineDisplayCursorAttributes;
      value : WinRt.Boolean
   );

   function get_CursorType
   (
      this : in out LineDisplayCursorAttributes
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayCursorType;

   procedure put_CursorType
   (
      this : in out LineDisplayCursorAttributes;
      value : Windows.Devices.PointOfService.LineDisplayCursorType
   );

   function get_IsAutoAdvanceEnabled
   (
      this : in out LineDisplayCursorAttributes
   )
   return WinRt.Boolean;

   procedure put_IsAutoAdvanceEnabled
   (
      this : in out LineDisplayCursorAttributes;
      value : WinRt.Boolean
   );

   function get_Position
   (
      this : in out LineDisplayCursorAttributes
   )
   return WinRt.Windows.Foundation.Point;

   procedure put_Position
   (
      this : in out LineDisplayCursorAttributes;
      value : Windows.Foundation.Point
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayCustomGlyphs

   overriding procedure Initialize (this : in out LineDisplayCustomGlyphs);
   overriding procedure Finalize (this : in out LineDisplayCustomGlyphs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayCustomGlyphs

   function get_SizeInPixels
   (
      this : in out LineDisplayCustomGlyphs
   )
   return WinRt.Windows.Foundation.Size;

   function get_SupportedGlyphCodes
   (
      this : in out LineDisplayCustomGlyphs
   )
   return IVectorView_UInt32.Kind;

   function TryRedefineAsync
   (
      this : in out LineDisplayCustomGlyphs;
      glyphCode : WinRt.UInt32;
      glyphData : Windows.Storage.Streams.IBuffer
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayMarquee

   overriding procedure Initialize (this : in out LineDisplayMarquee);
   overriding procedure Finalize (this : in out LineDisplayMarquee);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayMarquee

   function get_Format
   (
      this : in out LineDisplayMarquee
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayMarqueeFormat;

   procedure put_Format
   (
      this : in out LineDisplayMarquee;
      value : Windows.Devices.PointOfService.LineDisplayMarqueeFormat
   );

   function get_RepeatWaitInterval
   (
      this : in out LineDisplayMarquee
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_RepeatWaitInterval
   (
      this : in out LineDisplayMarquee;
      value : Windows.Foundation.TimeSpan
   );

   function get_ScrollWaitInterval
   (
      this : in out LineDisplayMarquee
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_ScrollWaitInterval
   (
      this : in out LineDisplayMarquee;
      value : Windows.Foundation.TimeSpan
   );

   function TryStartScrollingAsync
   (
      this : in out LineDisplayMarquee;
      direction : Windows.Devices.PointOfService.LineDisplayScrollDirection
   )
   return WinRt.Boolean;

   function TryStopScrollingAsync
   (
      this : in out LineDisplayMarquee
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayStatisticsCategorySelector

   overriding procedure Initialize (this : in out LineDisplayStatisticsCategorySelector);
   overriding procedure Finalize (this : in out LineDisplayStatisticsCategorySelector);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayStatisticsCategorySelector

   function get_AllStatistics
   (
      this : in out LineDisplayStatisticsCategorySelector
   )
   return WinRt.WString;

   function get_UnifiedPosStatistics
   (
      this : in out LineDisplayStatisticsCategorySelector
   )
   return WinRt.WString;

   function get_ManufacturerStatistics
   (
      this : in out LineDisplayStatisticsCategorySelector
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayStatusUpdatedEventArgs

   overriding procedure Initialize (this : in out LineDisplayStatusUpdatedEventArgs);
   overriding procedure Finalize (this : in out LineDisplayStatusUpdatedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayStatusUpdatedEventArgs

   function get_Status
   (
      this : in out LineDisplayStatusUpdatedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayPowerStatus;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayStoredBitmap

   overriding procedure Initialize (this : in out LineDisplayStoredBitmap);
   overriding procedure Finalize (this : in out LineDisplayStoredBitmap);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayStoredBitmap

   function get_EscapeSequence
   (
      this : in out LineDisplayStoredBitmap
   )
   return WinRt.WString;

   function TryDeleteAsync
   (
      this : in out LineDisplayStoredBitmap
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LineDisplayWindow

   overriding procedure Initialize (this : in out LineDisplayWindow);
   overriding procedure Finalize (this : in out LineDisplayWindow);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LineDisplayWindow

   function get_SizeInCharacters
   (
      this : in out LineDisplayWindow
   )
   return WinRt.Windows.Foundation.Size;

   function get_InterCharacterWaitInterval
   (
      this : in out LineDisplayWindow
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_InterCharacterWaitInterval
   (
      this : in out LineDisplayWindow;
      value : Windows.Foundation.TimeSpan
   );

   function TryRefreshAsync
   (
      this : in out LineDisplayWindow
   )
   return WinRt.Boolean;

   function TryDisplayTextAsync
   (
      this : in out LineDisplayWindow;
      text : WinRt.WString;
      displayAttribute : Windows.Devices.PointOfService.LineDisplayTextAttribute
   )
   return WinRt.Boolean;

   function TryDisplayTextAsync
   (
      this : in out LineDisplayWindow;
      text : WinRt.WString;
      displayAttribute : Windows.Devices.PointOfService.LineDisplayTextAttribute;
      startPosition : Windows.Foundation.Point
   )
   return WinRt.Boolean;

   function TryDisplayTextAsync
   (
      this : in out LineDisplayWindow;
      text : WinRt.WString
   )
   return WinRt.Boolean;

   function TryScrollTextAsync
   (
      this : in out LineDisplayWindow;
      direction : Windows.Devices.PointOfService.LineDisplayScrollDirection;
      numberOfColumnsOrRows : WinRt.UInt32
   )
   return WinRt.Boolean;

   function TryClearTextAsync
   (
      this : in out LineDisplayWindow
   )
   return WinRt.Boolean;

   function get_Cursor
   (
      this : in out LineDisplayWindow
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayCursor'Class;

   function get_Marquee
   (
      this : in out LineDisplayWindow
   )
   return WinRt.Windows.Devices.PointOfService.LineDisplayMarquee'Class;

   function ReadCharacterAtCursorAsync
   (
      this : in out LineDisplayWindow
   )
   return WinRt.UInt32;

   function TryDisplayStoredBitmapAtCursorAsync
   (
      this : in out LineDisplayWindow;
      bitmap : Windows.Devices.PointOfService.LineDisplayStoredBitmap'Class
   )
   return WinRt.Boolean;

   function TryDisplayStorageFileBitmapAtCursorAsync
   (
      this : in out LineDisplayWindow;
      bitmap : Windows.Storage.StorageFile'Class
   )
   return WinRt.Boolean;

   function TryDisplayStorageFileBitmapAtCursorAsync
   (
      this : in out LineDisplayWindow;
      bitmap : Windows.Storage.StorageFile'Class;
      horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
      verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment
   )
   return WinRt.Boolean;

   function TryDisplayStorageFileBitmapAtCursorAsync
   (
      this : in out LineDisplayWindow;
      bitmap : Windows.Storage.StorageFile'Class;
      horizontalAlignment : Windows.Devices.PointOfService.LineDisplayHorizontalAlignment;
      verticalAlignment : Windows.Devices.PointOfService.LineDisplayVerticalAlignment;
      widthInPixels : WinRt.Int32
   )
   return WinRt.Boolean;

   function TryDisplayStorageFileBitmapAtPointAsync
   (
      this : in out LineDisplayWindow;
      bitmap : Windows.Storage.StorageFile'Class;
      offsetInPixels : Windows.Foundation.Point
   )
   return WinRt.Boolean;

   function TryDisplayStorageFileBitmapAtPointAsync
   (
      this : in out LineDisplayWindow;
      bitmap : Windows.Storage.StorageFile'Class;
      offsetInPixels : Windows.Foundation.Point;
      widthInPixels : WinRt.Int32
   )
   return WinRt.Boolean;

   procedure Close
   (
      this : in out LineDisplayWindow
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReader

   overriding procedure Initialize (this : in out MagneticStripeReader);
   overriding procedure Finalize (this : in out MagneticStripeReader);

   -----------------------------------------------------------------------------
   -- Static Interfaces for MagneticStripeReader

   function GetDefaultAsync_MagneticStripeReader
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReader;

   function FromIdAsync_MagneticStripeReader
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReader;

   function GetDeviceSelector_MagneticStripeReader
   return WinRt.WString;

   function GetDeviceSelector_MagneticStripeReader
   (
      connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReader

   function get_DeviceId
   (
      this : in out MagneticStripeReader
   )
   return WinRt.WString;

   function get_Capabilities
   (
      this : in out MagneticStripeReader
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderCapabilities'Class;

   function get_SupportedCardTypes
   (
      this : in out MagneticStripeReader
   )
   return WinRt.UInt32_Array;

   function get_DeviceAuthenticationProtocol
   (
      this : in out MagneticStripeReader
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderAuthenticationProtocol;

   function CheckHealthAsync
   (
      this : in out MagneticStripeReader;
      level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel
   )
   return WinRt.WString;

   function ClaimReaderAsync
   (
      this : in out MagneticStripeReader
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedMagneticStripeReader'Class;

   function RetrieveStatisticsAsync
   (
      this : in out MagneticStripeReader;
      statisticsCategories : GenericObject
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function GetErrorReportingType
   (
      this : in out MagneticStripeReader
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderErrorReportingType;

   function add_StatusUpdated
   (
      this : in out MagneticStripeReader;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_StatusUpdated
   (
      this : in out MagneticStripeReader;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out MagneticStripeReader
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderAamvaCardDataReceivedEventArgs

   overriding procedure Initialize (this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs);
   overriding procedure Finalize (this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderAamvaCardDataReceivedEventArgs

   function get_Report
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderReport'Class;

   function get_LicenseNumber
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_ExpirationDate
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Restrictions
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Class
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Endorsements
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_BirthDate
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_FirstName
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Surname
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Suffix
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Gender
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_HairColor
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_EyeColor
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Height
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Weight
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Address
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_City
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_State
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_PostalCode
   (
      this : in out MagneticStripeReaderAamvaCardDataReceivedEventArgs
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderBankCardDataReceivedEventArgs

   overriding procedure Initialize (this : in out MagneticStripeReaderBankCardDataReceivedEventArgs);
   overriding procedure Finalize (this : in out MagneticStripeReaderBankCardDataReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderBankCardDataReceivedEventArgs

   function get_Report
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderReport'Class;

   function get_AccountNumber
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_ExpirationDate
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_ServiceCode
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Title
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_FirstName
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_MiddleInitial
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Surname
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   function get_Suffix
   (
      this : in out MagneticStripeReaderBankCardDataReceivedEventArgs
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderCapabilities

   overriding procedure Initialize (this : in out MagneticStripeReaderCapabilities);
   overriding procedure Finalize (this : in out MagneticStripeReaderCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderCapabilities

   function get_CardAuthentication
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.WString;

   function get_SupportedEncryptionAlgorithms
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.UInt32;

   function get_AuthenticationLevel
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderAuthenticationLevel;

   function get_IsIsoSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   function get_IsJisOneSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   function get_IsJisTwoSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   function get_PowerReportingType
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosPowerReportingType;

   function get_IsStatisticsReportingSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatisticsUpdatingSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   function get_IsTrackDataMaskingSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   function get_IsTransmitSentinelsSupported
   (
      this : in out MagneticStripeReaderCapabilities
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MagneticStripeReaderCardTypes is

      function get_Unknown_MagneticStripeReaderCardTypes
      return WinRt.UInt32;

      function get_Bank
      return WinRt.UInt32;

      function get_Aamva
      return WinRt.UInt32;

      function get_ExtendedBase_MagneticStripeReaderCardTypes
      return WinRt.UInt32;

   end MagneticStripeReaderCardTypes;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MagneticStripeReaderEncryptionAlgorithms is

      function get_None
      return WinRt.UInt32;

      function get_TripleDesDukpt
      return WinRt.UInt32;

      function get_ExtendedBase_MagneticStripeReaderEncryptionAlgorithms
      return WinRt.UInt32;

   end MagneticStripeReaderEncryptionAlgorithms;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderErrorOccurredEventArgs

   overriding procedure Initialize (this : in out MagneticStripeReaderErrorOccurredEventArgs);
   overriding procedure Finalize (this : in out MagneticStripeReaderErrorOccurredEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderErrorOccurredEventArgs

   function get_Track1Status
   (
      this : in out MagneticStripeReaderErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType;

   function get_Track2Status
   (
      this : in out MagneticStripeReaderErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType;

   function get_Track3Status
   (
      this : in out MagneticStripeReaderErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType;

   function get_Track4Status
   (
      this : in out MagneticStripeReaderErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackErrorType;

   function get_ErrorData
   (
      this : in out MagneticStripeReaderErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosErrorData'Class;

   function get_PartialInputData
   (
      this : in out MagneticStripeReaderErrorOccurredEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderReport'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderReport

   overriding procedure Initialize (this : in out MagneticStripeReaderReport);
   overriding procedure Finalize (this : in out MagneticStripeReaderReport);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderReport

   function get_CardType
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.UInt32;

   function get_Track1
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackData'Class;

   function get_Track2
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackData'Class;

   function get_Track3
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackData'Class;

   function get_Track4
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderTrackData'Class;

   function get_Properties
   (
      this : in out MagneticStripeReaderReport
   )
   return IMapView_HString_HString.Kind;

   function get_CardAuthenticationData
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_CardAuthenticationDataLength
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.UInt32;

   function get_AdditionalSecurityInformation
   (
      this : in out MagneticStripeReaderReport
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderStatusUpdatedEventArgs

   overriding procedure Initialize (this : in out MagneticStripeReaderStatusUpdatedEventArgs);
   overriding procedure Finalize (this : in out MagneticStripeReaderStatusUpdatedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderStatusUpdatedEventArgs

   function get_Status
   (
      this : in out MagneticStripeReaderStatusUpdatedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderStatus;

   function get_ExtendedStatus
   (
      this : in out MagneticStripeReaderStatusUpdatedEventArgs
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderTrackData

   overriding procedure Initialize (this : in out MagneticStripeReaderTrackData);
   overriding procedure Finalize (this : in out MagneticStripeReaderTrackData);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderTrackData

   function get_Data
   (
      this : in out MagneticStripeReaderTrackData
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_DiscretionaryData
   (
      this : in out MagneticStripeReaderTrackData
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_EncryptedData
   (
      this : in out MagneticStripeReaderTrackData
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs

   overriding procedure Initialize (this : in out MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs);
   overriding procedure Finalize (this : in out MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs

   function get_Report
   (
      this : in out MagneticStripeReaderVendorSpecificCardDataReceivedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.MagneticStripeReaderReport'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinter

   overriding procedure Initialize (this : in out PosPrinter);
   overriding procedure Finalize (this : in out PosPrinter);

   -----------------------------------------------------------------------------
   -- Static Interfaces for PosPrinter

   function GetDefaultAsync_PosPrinter
   return WinRt.Windows.Devices.PointOfService.PosPrinter;

   function FromIdAsync_PosPrinter
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinter;

   function GetDeviceSelector_PosPrinter
   return WinRt.WString;

   function GetDeviceSelector_PosPrinter
   (
      connectionTypes : Windows.Devices.PointOfService.PosConnectionTypes
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinter

   function get_DeviceId
   (
      this : in out PosPrinter
   )
   return WinRt.WString;

   function get_Capabilities
   (
      this : in out PosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterCapabilities'Class;

   function get_SupportedCharacterSets
   (
      this : in out PosPrinter
   )
   return IVectorView_UInt32.Kind;

   function get_SupportedTypeFaces
   (
      this : in out PosPrinter
   )
   return IVectorView_HString.Kind;

   function get_Status
   (
      this : in out PosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterStatus'Class;

   function ClaimPrinterAsync
   (
      this : in out PosPrinter
   )
   return WinRt.Windows.Devices.PointOfService.ClaimedPosPrinter'Class;

   function CheckHealthAsync
   (
      this : in out PosPrinter;
      level : Windows.Devices.PointOfService.UnifiedPosHealthCheckLevel
   )
   return WinRt.WString;

   function GetStatisticsAsync
   (
      this : in out PosPrinter;
      statisticsCategories : GenericObject
   )
   return WinRt.WString;

   function add_StatusUpdated
   (
      this : in out PosPrinter;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_StatusUpdated
   (
      this : in out PosPrinter;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_SupportedBarcodeSymbologies
   (
      this : in out PosPrinter
   )
   return IVectorView_UInt32.Kind;

   function GetFontProperty
   (
      this : in out PosPrinter;
      typeface : WinRt.WString
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterFontProperty'Class;

   procedure Close
   (
      this : in out PosPrinter
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinterCapabilities

   overriding procedure Initialize (this : in out PosPrinterCapabilities);
   overriding procedure Finalize (this : in out PosPrinterCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinterCapabilities

   function get_PowerReportingType
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosPowerReportingType;

   function get_IsStatisticsReportingSupported
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsStatisticsUpdatingSupported
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_DefaultCharacterSet
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.UInt32;

   function get_HasCoverSensor
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_CanMapCharacterSet
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsTransactionSupported
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_Receipt
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.ReceiptPrinterCapabilities'Class;

   function get_Slip
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.SlipPrinterCapabilities'Class;

   function get_Journal
   (
      this : in out PosPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.JournalPrinterCapabilities'Class;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package PosPrinterCharacterSetIds is

      function get_Utf16LE
      return WinRt.UInt32;

      function get_Ascii
      return WinRt.UInt32;

      function get_Ansi
      return WinRt.UInt32;

   end PosPrinterCharacterSetIds;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinterFontProperty

   overriding procedure Initialize (this : in out PosPrinterFontProperty);
   overriding procedure Finalize (this : in out PosPrinterFontProperty);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinterFontProperty

   function get_TypeFace
   (
      this : in out PosPrinterFontProperty
   )
   return WinRt.WString;

   function get_IsScalableToAnySize
   (
      this : in out PosPrinterFontProperty
   )
   return WinRt.Boolean;

   function get_CharacterSizes
   (
      this : in out PosPrinterFontProperty
   )
   return IVectorView_SizeUInt32.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinterPrintOptions

   overriding procedure Initialize (this : in out PosPrinterPrintOptions);
   overriding procedure Finalize (this : in out PosPrinterPrintOptions);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PosPrinterPrintOptions

   function Constructor return PosPrinterPrintOptions;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinterPrintOptions

   function get_TypeFace
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.WString;

   procedure put_TypeFace
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.WString
   );

   function get_CharacterHeight
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.UInt32;

   procedure put_CharacterHeight
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.UInt32
   );

   function get_Bold
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_Bold
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_Italic
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_Italic
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_Underline
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_Underline
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_ReverseVideo
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_ReverseVideo
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_Strikethrough
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_Strikethrough
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_Superscript
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_Superscript
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_Subscript
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_Subscript
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_DoubleWide
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_DoubleWide
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_DoubleHigh
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Boolean;

   procedure put_DoubleHigh
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.Boolean
   );

   function get_Alignment
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterAlignment;

   procedure put_Alignment
   (
      this : in out PosPrinterPrintOptions;
      value : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   function get_CharacterSet
   (
      this : in out PosPrinterPrintOptions
   )
   return WinRt.UInt32;

   procedure put_CharacterSet
   (
      this : in out PosPrinterPrintOptions;
      value : WinRt.UInt32
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinterReleaseDeviceRequestedEventArgs

   overriding procedure Initialize (this : in out PosPrinterReleaseDeviceRequestedEventArgs);
   overriding procedure Finalize (this : in out PosPrinterReleaseDeviceRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinterReleaseDeviceRequestedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinterStatus

   overriding procedure Initialize (this : in out PosPrinterStatus);
   overriding procedure Finalize (this : in out PosPrinterStatus);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinterStatus

   function get_StatusKind
   (
      this : in out PosPrinterStatus
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterStatusKind;

   function get_ExtendedStatus
   (
      this : in out PosPrinterStatus
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PosPrinterStatusUpdatedEventArgs

   overriding procedure Initialize (this : in out PosPrinterStatusUpdatedEventArgs);
   overriding procedure Finalize (this : in out PosPrinterStatusUpdatedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PosPrinterStatusUpdatedEventArgs

   function get_Status
   (
      this : in out PosPrinterStatusUpdatedEventArgs
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterStatus'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ReceiptPrintJob

   overriding procedure Initialize (this : in out ReceiptPrintJob);
   overriding procedure Finalize (this : in out ReceiptPrintJob);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ReceiptPrintJob

   procedure MarkFeed
   (
      this : in out ReceiptPrintJob;
      kind : Windows.Devices.PointOfService.PosPrinterMarkFeedKind
   );

   procedure CutPaper
   (
      this : in out ReceiptPrintJob;
      percentage : WinRt.Double
   );

   procedure CutPaper
   (
      this : in out ReceiptPrintJob
   );

   procedure StampPaper
   (
      this : in out ReceiptPrintJob
   );

   procedure Print
   (
      this : in out ReceiptPrintJob;
      data : WinRt.WString;
      printOptions : Windows.Devices.PointOfService.PosPrinterPrintOptions'Class
   );

   procedure FeedPaperByLine
   (
      this : in out ReceiptPrintJob;
      lineCount : WinRt.Int32
   );

   procedure FeedPaperByMapModeUnit
   (
      this : in out ReceiptPrintJob;
      distance : WinRt.Int32
   );

   procedure SetBarcodeRotation
   (
      this : in out ReceiptPrintJob;
      value : Windows.Devices.PointOfService.PosPrinterRotation
   );

   procedure SetPrintRotation
   (
      this : in out ReceiptPrintJob;
      value : Windows.Devices.PointOfService.PosPrinterRotation;
      includeBitmaps : WinRt.Boolean
   );

   procedure SetPrintArea
   (
      this : in out ReceiptPrintJob;
      value : Windows.Foundation.Rect
   );

   procedure SetBitmap
   (
      this : in out ReceiptPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   procedure SetBitmap
   (
      this : in out ReceiptPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment;
      width : WinRt.UInt32
   );

   procedure SetCustomAlignedBitmap
   (
      this : in out ReceiptPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32
   );

   procedure SetCustomAlignedBitmap
   (
      this : in out ReceiptPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32;
      width : WinRt.UInt32
   );

   procedure PrintSavedBitmap
   (
      this : in out ReceiptPrintJob;
      bitmapNumber : WinRt.UInt32
   );

   procedure DrawRuledLine
   (
      this : in out ReceiptPrintJob;
      positionList : WinRt.WString;
      lineDirection : Windows.Devices.PointOfService.PosPrinterLineDirection;
      lineWidth : WinRt.UInt32;
      lineStyle : Windows.Devices.PointOfService.PosPrinterLineStyle;
      lineColor : WinRt.UInt32
   );

   procedure PrintBarcode
   (
      this : in out ReceiptPrintJob;
      data : WinRt.WString;
      symbology : WinRt.UInt32;
      height : WinRt.UInt32;
      width : WinRt.UInt32;
      textPosition : Windows.Devices.PointOfService.PosPrinterBarcodeTextPosition;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   procedure PrintBarcodeCustomAlign
   (
      this : in out ReceiptPrintJob;
      data : WinRt.WString;
      symbology : WinRt.UInt32;
      height : WinRt.UInt32;
      width : WinRt.UInt32;
      textPosition : Windows.Devices.PointOfService.PosPrinterBarcodeTextPosition;
      alignmentDistance : WinRt.UInt32
   );

   procedure PrintBitmap
   (
      this : in out ReceiptPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   procedure PrintBitmap
   (
      this : in out ReceiptPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment;
      width : WinRt.UInt32
   );

   procedure PrintCustomAlignedBitmap
   (
      this : in out ReceiptPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32
   );

   procedure PrintCustomAlignedBitmap
   (
      this : in out ReceiptPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32;
      width : WinRt.UInt32
   );

   procedure Print
   (
      this : in out ReceiptPrintJob;
      data : WinRt.WString
   );

   procedure PrintLine
   (
      this : in out ReceiptPrintJob;
      data : WinRt.WString
   );

   procedure PrintLine
   (
      this : in out ReceiptPrintJob
   );

   function ExecuteAsync
   (
      this : in out ReceiptPrintJob
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ReceiptPrinterCapabilities

   overriding procedure Initialize (this : in out ReceiptPrinterCapabilities);
   overriding procedure Finalize (this : in out ReceiptPrinterCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ReceiptPrinterCapabilities

   function get_CanCutPaper
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsStampSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_MarkFeedCapabilities
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterMarkFeedCapabilities;

   function get_IsReverseVideoSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsStrikethroughSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsSuperscriptSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsSubscriptSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReversePaperFeedByLineSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReversePaperFeedByMapModeUnitSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsBarcodeSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsBitmapSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsLeft90RotationSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsRight90RotationSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_Is180RotationSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPrintAreaSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_RuledLineCapabilities
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterRuledLineCapabilities;

   function get_SupportedBarcodeRotations
   (
      this : in out ReceiptPrinterCapabilities
   )
   return IVectorView_PosPrinterRotation.Kind;

   function get_SupportedBitmapRotations
   (
      this : in out ReceiptPrinterCapabilities
   )
   return IVectorView_PosPrinterRotation.Kind;

   function get_IsPrinterPresent
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDualColorSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_ColorCartridgeCapabilities
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterColorCapabilities;

   function get_CartridgeSensors
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterCartridgeSensors;

   function get_IsBoldSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsItalicSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsUnderlineSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleHighPrintSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleWidePrintSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleHighDoubleWidePrintSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPaperEmptySensorSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPaperNearEndSensorSupported
   (
      this : in out ReceiptPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_SupportedCharactersPerLine
   (
      this : in out ReceiptPrinterCapabilities
   )
   return IVectorView_UInt32.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SlipPrintJob

   overriding procedure Initialize (this : in out SlipPrintJob);
   overriding procedure Finalize (this : in out SlipPrintJob);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SlipPrintJob

   procedure Print
   (
      this : in out SlipPrintJob;
      data : WinRt.WString;
      printOptions : Windows.Devices.PointOfService.PosPrinterPrintOptions'Class
   );

   procedure FeedPaperByLine
   (
      this : in out SlipPrintJob;
      lineCount : WinRt.Int32
   );

   procedure FeedPaperByMapModeUnit
   (
      this : in out SlipPrintJob;
      distance : WinRt.Int32
   );

   procedure SetBarcodeRotation
   (
      this : in out SlipPrintJob;
      value : Windows.Devices.PointOfService.PosPrinterRotation
   );

   procedure SetPrintRotation
   (
      this : in out SlipPrintJob;
      value : Windows.Devices.PointOfService.PosPrinterRotation;
      includeBitmaps : WinRt.Boolean
   );

   procedure SetPrintArea
   (
      this : in out SlipPrintJob;
      value : Windows.Foundation.Rect
   );

   procedure SetBitmap
   (
      this : in out SlipPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   procedure SetBitmap
   (
      this : in out SlipPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment;
      width : WinRt.UInt32
   );

   procedure SetCustomAlignedBitmap
   (
      this : in out SlipPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32
   );

   procedure SetCustomAlignedBitmap
   (
      this : in out SlipPrintJob;
      bitmapNumber : WinRt.UInt32;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32;
      width : WinRt.UInt32
   );

   procedure PrintSavedBitmap
   (
      this : in out SlipPrintJob;
      bitmapNumber : WinRt.UInt32
   );

   procedure DrawRuledLine
   (
      this : in out SlipPrintJob;
      positionList : WinRt.WString;
      lineDirection : Windows.Devices.PointOfService.PosPrinterLineDirection;
      lineWidth : WinRt.UInt32;
      lineStyle : Windows.Devices.PointOfService.PosPrinterLineStyle;
      lineColor : WinRt.UInt32
   );

   procedure PrintBarcode
   (
      this : in out SlipPrintJob;
      data : WinRt.WString;
      symbology : WinRt.UInt32;
      height : WinRt.UInt32;
      width : WinRt.UInt32;
      textPosition : Windows.Devices.PointOfService.PosPrinterBarcodeTextPosition;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   procedure PrintBarcodeCustomAlign
   (
      this : in out SlipPrintJob;
      data : WinRt.WString;
      symbology : WinRt.UInt32;
      height : WinRt.UInt32;
      width : WinRt.UInt32;
      textPosition : Windows.Devices.PointOfService.PosPrinterBarcodeTextPosition;
      alignmentDistance : WinRt.UInt32
   );

   procedure PrintBitmap
   (
      this : in out SlipPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment
   );

   procedure PrintBitmap
   (
      this : in out SlipPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignment : Windows.Devices.PointOfService.PosPrinterAlignment;
      width : WinRt.UInt32
   );

   procedure PrintCustomAlignedBitmap
   (
      this : in out SlipPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32
   );

   procedure PrintCustomAlignedBitmap
   (
      this : in out SlipPrintJob;
      bitmap : Windows.Graphics.Imaging.BitmapFrame'Class;
      alignmentDistance : WinRt.UInt32;
      width : WinRt.UInt32
   );

   procedure Print
   (
      this : in out SlipPrintJob;
      data : WinRt.WString
   );

   procedure PrintLine
   (
      this : in out SlipPrintJob;
      data : WinRt.WString
   );

   procedure PrintLine
   (
      this : in out SlipPrintJob
   );

   function ExecuteAsync
   (
      this : in out SlipPrintJob
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SlipPrinterCapabilities

   overriding procedure Initialize (this : in out SlipPrinterCapabilities);
   overriding procedure Finalize (this : in out SlipPrinterCapabilities);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SlipPrinterCapabilities

   function get_IsFullLengthSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsBothSidesPrintingSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReverseVideoSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsStrikethroughSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsSuperscriptSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsSubscriptSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReversePaperFeedByLineSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsReversePaperFeedByMapModeUnitSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsBarcodeSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsBitmapSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsLeft90RotationSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsRight90RotationSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_Is180RotationSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPrintAreaSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_RuledLineCapabilities
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterRuledLineCapabilities;

   function get_SupportedBarcodeRotations
   (
      this : in out SlipPrinterCapabilities
   )
   return IVectorView_PosPrinterRotation.Kind;

   function get_SupportedBitmapRotations
   (
      this : in out SlipPrinterCapabilities
   )
   return IVectorView_PosPrinterRotation.Kind;

   function get_IsPrinterPresent
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDualColorSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_ColorCartridgeCapabilities
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterColorCapabilities;

   function get_CartridgeSensors
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Windows.Devices.PointOfService.PosPrinterCartridgeSensors;

   function get_IsBoldSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsItalicSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsUnderlineSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleHighPrintSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleWidePrintSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsDoubleHighDoubleWidePrintSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPaperEmptySensorSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_IsPaperNearEndSensorSupported
   (
      this : in out SlipPrinterCapabilities
   )
   return WinRt.Boolean;

   function get_SupportedCharactersPerLine
   (
      this : in out SlipPrinterCapabilities
   )
   return IVectorView_UInt32.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for UnifiedPosErrorData

   overriding procedure Initialize (this : in out UnifiedPosErrorData);
   overriding procedure Finalize (this : in out UnifiedPosErrorData);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for UnifiedPosErrorData

   function Constructor
   (
      message : WinRt.WString;
      severity : Windows.Devices.PointOfService.UnifiedPosErrorSeverity;
      reason : Windows.Devices.PointOfService.UnifiedPosErrorReason;
      extendedReason : WinRt.UInt32
   )
   return UnifiedPosErrorData;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for UnifiedPosErrorData

   function get_Message
   (
      this : in out UnifiedPosErrorData
   )
   return WinRt.WString;

   function get_Severity
   (
      this : in out UnifiedPosErrorData
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosErrorSeverity;

   function get_Reason
   (
      this : in out UnifiedPosErrorData
   )
   return WinRt.Windows.Devices.PointOfService.UnifiedPosErrorReason;

   function get_ExtendedReason
   (
      this : in out UnifiedPosErrorData
   )
   return WinRt.UInt32;

end;
