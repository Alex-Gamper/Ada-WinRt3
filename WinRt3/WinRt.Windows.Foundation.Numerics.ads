--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Foundation.Numerics is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type Matrix3x2 is record
      M11 : WinRt.Single;
      M12 : WinRt.Single;
      M21 : WinRt.Single;
      M22 : WinRt.Single;
      M31 : WinRt.Single;
      M32 : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Matrix3x2_Ptr is access all Matrix3x2;

   type Matrix4x4 is record
      M11 : WinRt.Single;
      M12 : WinRt.Single;
      M13 : WinRt.Single;
      M14 : WinRt.Single;
      M21 : WinRt.Single;
      M22 : WinRt.Single;
      M23 : WinRt.Single;
      M24 : WinRt.Single;
      M31 : WinRt.Single;
      M32 : WinRt.Single;
      M33 : WinRt.Single;
      M34 : WinRt.Single;
      M41 : WinRt.Single;
      M42 : WinRt.Single;
      M43 : WinRt.Single;
      M44 : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Matrix4x4_Ptr is access all Matrix4x4;

   type Vector3 is record
      X : WinRt.Single;
      Y : WinRt.Single;
      Z : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Vector3_Ptr is access all Vector3;
   type Vector3_Array is array (Natural range <>) of aliased Vector3;

   type Plane is record
      Normal : Windows.Foundation.Numerics.Vector3;
      D : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Plane_Ptr is access all Plane;

   type Quaternion is record
      X : WinRt.Single;
      Y : WinRt.Single;
      Z : WinRt.Single;
      W : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Quaternion_Ptr is access all Quaternion;

   type Rational is record
      Numerator : WinRt.UInt32;
      Denominator : WinRt.UInt32;
   end record with Convention => C_Pass_By_Copy;
   type Rational_Ptr is access all Rational;

   type Vector2 is record
      X : WinRt.Single;
      Y : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Vector2_Ptr is access all Vector2;
   type Vector2_Array is array (Natural range <>) of aliased Vector2;

   type Vector4 is record
      X : WinRt.Single;
      Y : WinRt.Single;
      Z : WinRt.Single;
      W : WinRt.Single;
   end record with Convention => C_Pass_By_Copy;
   type Vector4_Ptr is access all Vector4;

end;
