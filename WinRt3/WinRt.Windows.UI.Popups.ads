--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Popups is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Delegates declarations
   -----------------------------------------------------------------------------

   type UICommandInvokedHandler_Delegate;
   type UICommandInvokedHandler is access UICommandInvokedHandler_Delegate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IMessageDialog_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageDialog is access IMessageDialog_Interface'Class;
   type IMessageDialog_Ptr is access all IMessageDialog;

   type IMessageDialogFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMessageDialogFactory is access IMessageDialogFactory_Interface'Class;

   type IPopupMenu_Interface is interface and WinRt.IInspectable_Interface;
   type IPopupMenu is access IPopupMenu_Interface'Class;
   type IPopupMenu_Ptr is access all IPopupMenu;

   type IUICommand_Interface is interface and WinRt.IInspectable_Interface;
   type IUICommand is access IUICommand_Interface'Class;
   type IUICommand_Ptr is access all IUICommand;

   type IUICommandFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IUICommandFactory is access IUICommandFactory_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type MessageDialog is new Ada.Finalization.Limited_Controlled with
      record
         m_IMessageDialog : access Windows.UI.Popups.IMessageDialog;
      end record;
   type MessageDialog_Ptr is access all MessageDialog;

   type PopupMenu is new Ada.Finalization.Limited_Controlled with
      record
         m_IPopupMenu : access Windows.UI.Popups.IPopupMenu;
      end record;
   type PopupMenu_Ptr is access all PopupMenu;

   type UICommand is new Ada.Finalization.Limited_Controlled with
      record
         m_IUICommand : access Windows.UI.Popups.IUICommand;
      end record;
   type UICommand_Ptr is access all UICommand;

   type UICommandSeparator is new Ada.Finalization.Limited_Controlled with
      record
         m_IUICommand : access Windows.UI.Popups.IUICommand;
      end record;
   type UICommandSeparator_Ptr is access all UICommandSeparator;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type MessageDialogOptions is (
      None_e,
      AcceptUserInputAfterDelay_e
   );
   for MessageDialogOptions use (
      None_e => 0,
      AcceptUserInputAfterDelay_e => 1
   );
   type MessageDialogOptions_Ptr is access MessageDialogOptions;

   type Placement is (
      Default_e,
      Above_e,
      Below_e,
      Left_e,
      Right_e
   );
   for Placement use (
      Default_e => 0,
      Above_e => 1,
      Below_e => 2,
      Left_e => 3,
      Right_e => 4
   );
   type Placement_Ptr is access Placement;

   -----------------------------------------------------------------------------
   -- Delegate declarations
   -----------------------------------------------------------------------------

   IID_UICommandInvokedHandler : aliased WinRt.IID := (3673651791, 49786, 17048, (154, 198, 41, 34, 196, 94, 125, 166 ));
   type UICommandInvokedHandler_Delegate (Callback : access procedure  (command : Windows.UI.Popups.IUICommand)) is new WinRt.IMulticastDelegate_Interface (IID_UICommandInvokedHandler'Access) with null record;
      function Invoke
      (
         this : access UICommandInvokedHandler_Delegate;
         command : Windows.UI.Popups.IUICommand
      )
      return WinRt.Hresult;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVector_IUICommand is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.UI.Popups.IUICommand);
   IID_IVector_IUICommand : aliased WinRt.IID := (2201593153, 55763, 20867, (134, 14, 161, 247, 15, 189, 106, 107 ));
   function QInterface_IVector_IUICommand is new Generic_QueryInterface (GenericObject_Interface, IVector_IUICommand.Kind, IID_IVector_IUICommand'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IMessageDialog is interface and WinRt.IInspectable;

      function get_Title
      (
         this : access IMessageDialog_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Title
      (
         this : access IMessageDialog_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Commands
      (
         this : access IMessageDialog_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DefaultCommandIndex
      (
         this : access IMessageDialog_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_DefaultCommandIndex
      (
         this : access IMessageDialog_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_CancelCommandIndex
      (
         this : access IMessageDialog_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_CancelCommandIndex
      (
         this : access IMessageDialog_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Content
      (
         this : access IMessageDialog_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Content
      (
         this : access IMessageDialog_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function ShowAsync
      (
         this : access IMessageDialog_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Options
      (
         this : access IMessageDialog_Interface;
         RetVal : access Windows.UI.Popups.MessageDialogOptions
      )
      return WinRt.Hresult is abstract;

      function put_Options
      (
         this : access IMessageDialog_Interface;
         value : Windows.UI.Popups.MessageDialogOptions
      )
      return WinRt.Hresult is abstract;

      IID_IMessageDialog : aliased WinRt.IID := (871734017, 21285, 17323, (154, 179, 189, 174, 68, 14, 65, 33 ));

   -----------------------------------------------------------------------------
   -- type IMessageDialogFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IMessageDialogFactory_Interface;
         content : WinRt.HString;
         RetVal : access Windows.UI.Popups.IMessageDialog
      )
      return WinRt.Hresult is abstract;

      function CreateWithTitle
      (
         this : access IMessageDialogFactory_Interface;
         content : WinRt.HString;
         title : WinRt.HString;
         RetVal : access Windows.UI.Popups.IMessageDialog
      )
      return WinRt.Hresult is abstract;

      IID_IMessageDialogFactory : aliased WinRt.IID := (756422519, 42607, 20133, (187, 135, 121, 63, 250, 73, 65, 242 ));

   -----------------------------------------------------------------------------
   -- type IPopupMenu is interface and WinRt.IInspectable;

      function get_Commands
      (
         this : access IPopupMenu_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ShowAsync
      (
         this : access IPopupMenu_Interface;
         invocationPoint : Windows.Foundation.Point;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ShowForSelectionAsync
      (
         this : access IPopupMenu_Interface;
         selection : Windows.Foundation.Rect;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ShowForSelectionAsync
      (
         this : access IPopupMenu_Interface;
         selection : Windows.Foundation.Rect;
         preferredPlacement : Windows.UI.Popups.Placement;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPopupMenu : aliased WinRt.IID := (1318831836, 34829, 18428, (160, 161, 114, 182, 57, 230, 37, 89 ));

   -----------------------------------------------------------------------------
   -- type IUICommand is interface and WinRt.IInspectable;

      function get_Label
      (
         this : access IUICommand_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Label
      (
         this : access IUICommand_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Invoked
      (
         this : access IUICommand_Interface;
         RetVal : access Windows.UI.Popups.UICommandInvokedHandler
      )
      return WinRt.Hresult is abstract;

      function put_Invoked
      (
         this : access IUICommand_Interface;
         value : Windows.UI.Popups.UICommandInvokedHandler
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access IUICommand_Interface;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function put_Id
      (
         this : access IUICommand_Interface;
         value : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      IID_IUICommand : aliased WinRt.IID := (1341733493, 16709, 18431, (172, 127, 223, 241, 193, 250, 91, 15 ));

   -----------------------------------------------------------------------------
   -- type IUICommandFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IUICommandFactory_Interface;
         label : WinRt.HString;
         RetVal : access Windows.UI.Popups.IUICommand
      )
      return WinRt.Hresult is abstract;

      function CreateWithHandler
      (
         this : access IUICommandFactory_Interface;
         label : WinRt.HString;
         action : Windows.UI.Popups.UICommandInvokedHandler;
         RetVal : access Windows.UI.Popups.IUICommand
      )
      return WinRt.Hresult is abstract;

      function CreateWithHandlerAndId
      (
         this : access IUICommandFactory_Interface;
         label : WinRt.HString;
         action : Windows.UI.Popups.UICommandInvokedHandler;
         commandId : WinRt.IInspectable;
         RetVal : access Windows.UI.Popups.IUICommand
      )
      return WinRt.Hresult is abstract;

      IID_IUICommandFactory : aliased WinRt.IID := (2719646089, 9904, 18038, (174, 148, 84, 4, 27, 193, 37, 232 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MessageDialog

   overriding procedure Initialize (this : in out MessageDialog);
   overriding procedure Finalize (this : in out MessageDialog);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MessageDialog

   function Constructor
   (
      content : WinRt.WString
   )
   return MessageDialog;

   function Constructor
   (
      content : WinRt.WString;
      title : WinRt.WString
   )
   return MessageDialog;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MessageDialog

   function get_Title
   (
      this : in out MessageDialog
   )
   return WinRt.WString;

   procedure put_Title
   (
      this : in out MessageDialog;
      value : WinRt.WString
   );

   function get_Commands
   (
      this : in out MessageDialog
   )
   return IVector_IUICommand.Kind;

   function get_DefaultCommandIndex
   (
      this : in out MessageDialog
   )
   return WinRt.UInt32;

   procedure put_DefaultCommandIndex
   (
      this : in out MessageDialog;
      value : WinRt.UInt32
   );

   function get_CancelCommandIndex
   (
      this : in out MessageDialog
   )
   return WinRt.UInt32;

   procedure put_CancelCommandIndex
   (
      this : in out MessageDialog;
      value : WinRt.UInt32
   );

   function get_Content
   (
      this : in out MessageDialog
   )
   return WinRt.WString;

   procedure put_Content
   (
      this : in out MessageDialog;
      value : WinRt.WString
   );

   function ShowAsync
   (
      this : in out MessageDialog
   )
   return WinRt.Windows.UI.Popups.IUICommand;

   function get_Options
   (
      this : in out MessageDialog
   )
   return WinRt.Windows.UI.Popups.MessageDialogOptions;

   procedure put_Options
   (
      this : in out MessageDialog;
      value : Windows.UI.Popups.MessageDialogOptions
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PopupMenu

   overriding procedure Initialize (this : in out PopupMenu);
   overriding procedure Finalize (this : in out PopupMenu);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PopupMenu

   function Constructor return PopupMenu;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PopupMenu

   function get_Commands
   (
      this : in out PopupMenu
   )
   return IVector_IUICommand.Kind;

   function ShowAsync
   (
      this : in out PopupMenu;
      invocationPoint : Windows.Foundation.Point
   )
   return WinRt.Windows.UI.Popups.IUICommand;

   function ShowForSelectionAsync
   (
      this : in out PopupMenu;
      selection : Windows.Foundation.Rect
   )
   return WinRt.Windows.UI.Popups.IUICommand;

   function ShowForSelectionAsync
   (
      this : in out PopupMenu;
      selection : Windows.Foundation.Rect;
      preferredPlacement : Windows.UI.Popups.Placement
   )
   return WinRt.Windows.UI.Popups.IUICommand;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for UICommand

   overriding procedure Initialize (this : in out UICommand);
   overriding procedure Finalize (this : in out UICommand);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for UICommand

   function Constructor return UICommand;

   function Constructor
   (
      label : WinRt.WString
   )
   return UICommand;

   function Constructor
   (
      label : WinRt.WString;
      action : Windows.UI.Popups.UICommandInvokedHandler
   )
   return UICommand;

   function Constructor
   (
      label : WinRt.WString;
      action : Windows.UI.Popups.UICommandInvokedHandler;
      commandId : WinRt.IInspectable
   )
   return UICommand;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for UICommand

   function get_Label
   (
      this : in out UICommand
   )
   return WinRt.WString;

   procedure put_Label
   (
      this : in out UICommand;
      value : WinRt.WString
   );

   function get_Invoked
   (
      this : in out UICommand
   )
   return WinRt.Windows.UI.Popups.UICommandInvokedHandler;

   procedure put_Invoked
   (
      this : in out UICommand;
      value : Windows.UI.Popups.UICommandInvokedHandler
   );

   function get_Id
   (
      this : in out UICommand
   )
   return WinRt.IInspectable;

   procedure put_Id
   (
      this : in out UICommand;
      value : WinRt.IInspectable
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for UICommandSeparator

   overriding procedure Initialize (this : in out UICommandSeparator);
   overriding procedure Finalize (this : in out UICommandSeparator);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for UICommandSeparator

   function Constructor return UICommandSeparator;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for UICommandSeparator

   function get_Label
   (
      this : in out UICommandSeparator
   )
   return WinRt.WString;

   procedure put_Label
   (
      this : in out UICommandSeparator;
      value : WinRt.WString
   );

   function get_Invoked
   (
      this : in out UICommandSeparator
   )
   return WinRt.Windows.UI.Popups.UICommandInvokedHandler;

   procedure put_Invoked
   (
      this : in out UICommandSeparator;
      value : Windows.UI.Popups.UICommandInvokedHandler
   );

   function get_Id
   (
      this : in out UICommandSeparator
   )
   return WinRt.IInspectable;

   procedure put_Id
   (
      this : in out UICommandSeparator;
      value : WinRt.IInspectable
   );

end;
