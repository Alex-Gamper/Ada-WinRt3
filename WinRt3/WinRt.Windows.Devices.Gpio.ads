--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.Devices.Gpio.Provider;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.Gpio is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IGpioChangeCounter_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioChangeCounter is access all IGpioChangeCounter_Interface'Class;
   type IGpioChangeCounter_Ptr is access all IGpioChangeCounter;

   type IGpioChangeCounterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioChangeCounterFactory is access all IGpioChangeCounterFactory_Interface'Class;

   type IGpioChangeReader_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioChangeReader is access all IGpioChangeReader_Interface'Class;
   type IGpioChangeReader_Ptr is access all IGpioChangeReader;

   type IGpioChangeReaderFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioChangeReaderFactory is access all IGpioChangeReaderFactory_Interface'Class;

   type IGpioController_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioController is access all IGpioController_Interface'Class;
   type IGpioController_Ptr is access all IGpioController;

   type IGpioControllerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioControllerStatics is access all IGpioControllerStatics_Interface'Class;

   type IGpioControllerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioControllerStatics2 is access all IGpioControllerStatics2_Interface'Class;

   type IGpioPin_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioPin is access all IGpioPin_Interface'Class;
   type IGpioPin_Ptr is access all IGpioPin;

   type IGpioPinValueChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IGpioPinValueChangedEventArgs is access all IGpioPinValueChangedEventArgs_Interface'Class;
   type IGpioPinValueChangedEventArgs_Ptr is access all IGpioPinValueChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type GpioChangeCounter is new Ada.Finalization.Limited_Controlled with
      record
         m_IGpioChangeCounter : access Windows.Devices.Gpio.IGpioChangeCounter;
      end record;
   type GpioChangeCounter_Ptr is access all GpioChangeCounter;

   type GpioChangeReader is new Ada.Finalization.Limited_Controlled with
      record
         m_IGpioChangeReader : access Windows.Devices.Gpio.IGpioChangeReader;
      end record;
   type GpioChangeReader_Ptr is access all GpioChangeReader;

   type GpioController is new Ada.Finalization.Limited_Controlled with
      record
         m_IGpioController : access Windows.Devices.Gpio.IGpioController;
      end record;
   type GpioController_Ptr is access all GpioController;

   type GpioPin is new Ada.Finalization.Limited_Controlled with
      record
         m_IGpioPin : access Windows.Devices.Gpio.IGpioPin;
      end record;
   type GpioPin_Ptr is access all GpioPin;

   type GpioPinValueChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IGpioPinValueChangedEventArgs : access Windows.Devices.Gpio.IGpioPinValueChangedEventArgs;
      end record;
   type GpioPinValueChangedEventArgs_Ptr is access all GpioPinValueChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type GpioChangePolarity is (
      Falling_e,
      Rising_e,
      Both_e
   );
   for GpioChangePolarity use (
      Falling_e => 0,
      Rising_e => 1,
      Both_e => 2
   );
   type GpioChangePolarity_Ptr is access all GpioChangePolarity;

   type GpioOpenStatus is (
      PinOpened_e,
      PinUnavailable_e,
      SharingViolation_e,
      MuxingConflict_e,
      UnknownError_e
   );
   for GpioOpenStatus use (
      PinOpened_e => 0,
      PinUnavailable_e => 1,
      SharingViolation_e => 2,
      MuxingConflict_e => 3,
      UnknownError_e => 4
   );
   type GpioOpenStatus_Ptr is access all GpioOpenStatus;

   type GpioPinDriveMode is (
      Input_e,
      Output_e,
      InputPullUp_e,
      InputPullDown_e,
      OutputOpenDrain_e,
      OutputOpenDrainPullUp_e,
      OutputOpenSource_e,
      OutputOpenSourcePullDown_e
   );
   for GpioPinDriveMode use (
      Input_e => 0,
      Output_e => 1,
      InputPullUp_e => 2,
      InputPullDown_e => 3,
      OutputOpenDrain_e => 4,
      OutputOpenDrainPullUp_e => 5,
      OutputOpenSource_e => 6,
      OutputOpenSourcePullDown_e => 7
   );
   type GpioPinDriveMode_Ptr is access all GpioPinDriveMode;

   type GpioPinEdge is (
      FallingEdge_e,
      RisingEdge_e
   );
   for GpioPinEdge use (
      FallingEdge_e => 0,
      RisingEdge_e => 1
   );
   type GpioPinEdge_Ptr is access all GpioPinEdge;

   type GpioPinValue is (
      Low_e,
      High_e
   );
   for GpioPinValue use (
      Low_e => 0,
      High_e => 1
   );
   type GpioPinValue_Ptr is access all GpioPinValue;

   type GpioSharingMode is (
      Exclusive_e,
      SharedReadOnly_e
   );
   for GpioSharingMode use (
      Exclusive_e => 0,
      SharedReadOnly_e => 1
   );
   type GpioSharingMode_Ptr is access all GpioSharingMode;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type GpioChangeCount is record
      Count : WinRt.UInt64;
      RelativeTime : WinRt.Windows.Foundation.TimeSpan;
   end record with Convention => C_Pass_By_Copy;
   type GpioChangeCount_Ptr is access all GpioChangeCount;

   type GpioChangeRecord is record
      RelativeTime : WinRt.Windows.Foundation.TimeSpan;
      Edge : Windows.Devices.Gpio.GpioPinEdge;
   end record with Convention => C_Pass_By_Copy;
   type GpioChangeRecord_Ptr is access all GpioChangeRecord;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVector_GpioChangeRecord is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.Devices.Gpio.GpioChangeRecord);
   IID_IVector_GpioChangeRecord : aliased WinRt.IID := (570934633, 38419, 22673, (142, 20, 212, 40, 37, 215, 215, 51 ));
   function QInterface_IVector_GpioChangeRecord is new Generic_QueryInterface (GenericObject_Interface, IVector_GpioChangeRecord.Kind, IID_IVector_GpioChangeRecord'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IGpioChangeCounter is interface and WinRt.IInspectable;

      function put_Polarity
      (
         this : access IGpioChangeCounter_Interface;
         value : Windows.Devices.Gpio.GpioChangePolarity
      )
      return WinRt.Hresult is abstract;

      function get_Polarity
      (
         this : access IGpioChangeCounter_Interface;
         RetVal : access Windows.Devices.Gpio.GpioChangePolarity
      )
      return WinRt.Hresult is abstract;

      function get_IsStarted
      (
         this : access IGpioChangeCounter_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function Start
      (
         this : access IGpioChangeCounter_Interface
      )
      return WinRt.Hresult is abstract;

      function Stop
      (
         this : access IGpioChangeCounter_Interface
      )
      return WinRt.Hresult is abstract;

      function Read
      (
         this : access IGpioChangeCounter_Interface;
         RetVal : access Windows.Devices.Gpio.GpioChangeCount
      )
      return WinRt.Hresult is abstract;

      function Reset
      (
         this : access IGpioChangeCounter_Interface;
         RetVal : access Windows.Devices.Gpio.GpioChangeCount
      )
      return WinRt.Hresult is abstract;

      IID_IGpioChangeCounter : aliased WinRt.IID := (3411984606, 26625, 17407, (128, 61, 69, 118, 98, 138, 139, 38 ));

   -----------------------------------------------------------------------------
   -- type IGpioChangeCounterFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IGpioChangeCounterFactory_Interface;
         pin : Windows.Devices.Gpio.IGpioPin;
         RetVal : access Windows.Devices.Gpio.IGpioChangeCounter
      )
      return WinRt.Hresult is abstract;

      IID_IGpioChangeCounterFactory : aliased WinRt.IID := (343774390, 2718, 16652, (180, 250, 248, 159, 64, 82, 8, 77 ));

   -----------------------------------------------------------------------------
   -- type IGpioChangeReader is interface and WinRt.IInspectable;

      function get_Capacity
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Length
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_IsEmpty
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsOverflowed
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Polarity
      (
         this : access IGpioChangeReader_Interface;
         value : Windows.Devices.Gpio.GpioChangePolarity
      )
      return WinRt.Hresult is abstract;

      function get_Polarity
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access Windows.Devices.Gpio.GpioChangePolarity
      )
      return WinRt.Hresult is abstract;

      function get_IsStarted
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function Start
      (
         this : access IGpioChangeReader_Interface
      )
      return WinRt.Hresult is abstract;

      function Stop
      (
         this : access IGpioChangeReader_Interface
      )
      return WinRt.Hresult is abstract;

      function Clear
      (
         this : access IGpioChangeReader_Interface
      )
      return WinRt.Hresult is abstract;

      function GetNextItem
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access Windows.Devices.Gpio.GpioChangeRecord
      )
      return WinRt.Hresult is abstract;

      function PeekNextItem
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access Windows.Devices.Gpio.GpioChangeRecord
      )
      return WinRt.Hresult is abstract;

      function GetAllItems
      (
         this : access IGpioChangeReader_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function WaitForItemsAsync
      (
         this : access IGpioChangeReader_Interface;
         count : WinRt.Int32;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IGpioChangeReader : aliased WinRt.IID := (180127839, 57393, 18664, (133, 144, 112, 222, 120, 54, 60, 109 ));

   -----------------------------------------------------------------------------
   -- type IGpioChangeReaderFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IGpioChangeReaderFactory_Interface;
         pin : Windows.Devices.Gpio.IGpioPin;
         RetVal : access Windows.Devices.Gpio.IGpioChangeReader
      )
      return WinRt.Hresult is abstract;

      function CreateWithCapacity
      (
         this : access IGpioChangeReaderFactory_Interface;
         pin : Windows.Devices.Gpio.IGpioPin;
         minCapacity : WinRt.Int32;
         RetVal : access Windows.Devices.Gpio.IGpioChangeReader
      )
      return WinRt.Hresult is abstract;

      IID_IGpioChangeReaderFactory : aliased WinRt.IID := (2841218803, 14606, 17434, (157, 28, 232, 222, 11, 45, 240, 223 ));

   -----------------------------------------------------------------------------
   -- type IGpioController is interface and WinRt.IInspectable;

      function get_PinCount
      (
         this : access IGpioController_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function OpenPin
      (
         this : access IGpioController_Interface;
         pinNumber : WinRt.Int32;
         RetVal : access Windows.Devices.Gpio.IGpioPin
      )
      return WinRt.Hresult is abstract;

      function OpenPin
      (
         this : access IGpioController_Interface;
         pinNumber : WinRt.Int32;
         sharingMode : Windows.Devices.Gpio.GpioSharingMode;
         RetVal : access Windows.Devices.Gpio.IGpioPin
      )
      return WinRt.Hresult is abstract;

      function TryOpenPin
      (
         this : access IGpioController_Interface;
         pinNumber : WinRt.Int32;
         sharingMode : Windows.Devices.Gpio.GpioSharingMode;
         pin : access Windows.Devices.Gpio.IGpioPin;
         openStatus : Windows.Devices.Gpio.GpioOpenStatus_Ptr;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IGpioController : aliased WinRt.IID := (675287779, 29793, 18076, (168, 188, 97, 214, 157, 8, 165, 60 ));

   -----------------------------------------------------------------------------
   -- type IGpioControllerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IGpioControllerStatics_Interface;
         RetVal : access Windows.Devices.Gpio.IGpioController
      )
      return WinRt.Hresult is abstract;

      IID_IGpioControllerStatics : aliased WinRt.IID := (785839150, 31479, 16662, (149, 51, 196, 61, 153, 161, 251, 100 ));

   -----------------------------------------------------------------------------
   -- type IGpioControllerStatics2 is interface and WinRt.IInspectable;

      function GetControllersAsync
      (
         this : access IGpioControllerStatics2_Interface;
         provider : Windows.Devices.Gpio.Provider.IGpioProvider;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDefaultAsync
      (
         this : access IGpioControllerStatics2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGpioControllerStatics2 : aliased WinRt.IID := (2435546400, 27812, 16646, (163, 115, 255, 253, 52, 107, 14, 91 ));

   -----------------------------------------------------------------------------
   -- type IGpioPin is interface and WinRt.IInspectable;

      function add_ValueChanged
      (
         this : access IGpioPin_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ValueChanged
      (
         this : access IGpioPin_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_DebounceTimeout
      (
         this : access IGpioPin_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_DebounceTimeout
      (
         this : access IGpioPin_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_PinNumber
      (
         this : access IGpioPin_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_SharingMode
      (
         this : access IGpioPin_Interface;
         RetVal : access Windows.Devices.Gpio.GpioSharingMode
      )
      return WinRt.Hresult is abstract;

      function IsDriveModeSupported
      (
         this : access IGpioPin_Interface;
         driveMode : Windows.Devices.Gpio.GpioPinDriveMode;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetDriveMode
      (
         this : access IGpioPin_Interface;
         RetVal : access Windows.Devices.Gpio.GpioPinDriveMode
      )
      return WinRt.Hresult is abstract;

      function SetDriveMode
      (
         this : access IGpioPin_Interface;
         value : Windows.Devices.Gpio.GpioPinDriveMode
      )
      return WinRt.Hresult is abstract;

      function Write
      (
         this : access IGpioPin_Interface;
         value : Windows.Devices.Gpio.GpioPinValue
      )
      return WinRt.Hresult is abstract;

      function Read
      (
         this : access IGpioPin_Interface;
         RetVal : access Windows.Devices.Gpio.GpioPinValue
      )
      return WinRt.Hresult is abstract;

      IID_IGpioPin : aliased WinRt.IID := (299479175, 44974, 18320, (158, 233, 224, 234, 201, 66, 210, 1 ));

   -----------------------------------------------------------------------------
   -- type IGpioPinValueChangedEventArgs is interface and WinRt.IInspectable;

      function get_Edge
      (
         this : access IGpioPinValueChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Gpio.GpioPinEdge
      )
      return WinRt.Hresult is abstract;

      IID_IGpioPinValueChangedEventArgs : aliased WinRt.IID := (825731809, 28733, 16473, (189, 36, 181, 178, 93, 255, 184, 78 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GpioChangeCounter

   overriding procedure Initialize (this : in out GpioChangeCounter);
   overriding procedure Finalize (this : in out GpioChangeCounter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for GpioChangeCounter

   function Constructor
   (
      pin : Windows.Devices.Gpio.GpioPin'Class
   )
   return GpioChangeCounter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GpioChangeCounter

   procedure put_Polarity
   (
      this : in out GpioChangeCounter;
      value : Windows.Devices.Gpio.GpioChangePolarity
   );

   function get_Polarity
   (
      this : in out GpioChangeCounter
   )
   return WinRt.Windows.Devices.Gpio.GpioChangePolarity;

   function get_IsStarted
   (
      this : in out GpioChangeCounter
   )
   return WinRt.Boolean;

   procedure Start
   (
      this : in out GpioChangeCounter
   );

   procedure Stop
   (
      this : in out GpioChangeCounter
   );

   function Read
   (
      this : in out GpioChangeCounter
   )
   return WinRt.Windows.Devices.Gpio.GpioChangeCount;

   function Reset
   (
      this : in out GpioChangeCounter
   )
   return WinRt.Windows.Devices.Gpio.GpioChangeCount;

   procedure Close
   (
      this : in out GpioChangeCounter
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GpioChangeReader

   overriding procedure Initialize (this : in out GpioChangeReader);
   overriding procedure Finalize (this : in out GpioChangeReader);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for GpioChangeReader

   function Constructor
   (
      pin : Windows.Devices.Gpio.GpioPin'Class
   )
   return GpioChangeReader;

   function Constructor
   (
      pin : Windows.Devices.Gpio.GpioPin'Class;
      minCapacity : WinRt.Int32
   )
   return GpioChangeReader;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GpioChangeReader

   function get_Capacity
   (
      this : in out GpioChangeReader
   )
   return WinRt.Int32;

   function get_Length
   (
      this : in out GpioChangeReader
   )
   return WinRt.Int32;

   function get_IsEmpty
   (
      this : in out GpioChangeReader
   )
   return WinRt.Boolean;

   function get_IsOverflowed
   (
      this : in out GpioChangeReader
   )
   return WinRt.Boolean;

   procedure put_Polarity
   (
      this : in out GpioChangeReader;
      value : Windows.Devices.Gpio.GpioChangePolarity
   );

   function get_Polarity
   (
      this : in out GpioChangeReader
   )
   return WinRt.Windows.Devices.Gpio.GpioChangePolarity;

   function get_IsStarted
   (
      this : in out GpioChangeReader
   )
   return WinRt.Boolean;

   procedure Start
   (
      this : in out GpioChangeReader
   );

   procedure Stop
   (
      this : in out GpioChangeReader
   );

   procedure Clear
   (
      this : in out GpioChangeReader
   );

   function GetNextItem
   (
      this : in out GpioChangeReader
   )
   return WinRt.Windows.Devices.Gpio.GpioChangeRecord;

   function PeekNextItem
   (
      this : in out GpioChangeReader
   )
   return WinRt.Windows.Devices.Gpio.GpioChangeRecord;

   function GetAllItems
   (
      this : in out GpioChangeReader
   )
   return IVector_GpioChangeRecord.Kind;

   procedure WaitForItemsAsync
   (
      this : in out GpioChangeReader;
      count : WinRt.Int32
   );

   procedure Close
   (
      this : in out GpioChangeReader
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GpioController

   overriding procedure Initialize (this : in out GpioController);
   overriding procedure Finalize (this : in out GpioController);

   -----------------------------------------------------------------------------
   -- Static Interfaces for GpioController

   function GetDefault
   return WinRt.Windows.Devices.Gpio.GpioController;

   function GetControllersAsync
   (
      provider : Windows.Devices.Gpio.Provider.IGpioProvider
   )
   return WinRt.GenericObject;

   function GetDefaultAsync
   return WinRt.Windows.Devices.Gpio.GpioController;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GpioController

   function get_PinCount
   (
      this : in out GpioController
   )
   return WinRt.Int32;

   function OpenPin
   (
      this : in out GpioController;
      pinNumber : WinRt.Int32
   )
   return WinRt.Windows.Devices.Gpio.GpioPin'Class;

   function OpenPin
   (
      this : in out GpioController;
      pinNumber : WinRt.Int32;
      sharingMode : Windows.Devices.Gpio.GpioSharingMode
   )
   return WinRt.Windows.Devices.Gpio.GpioPin'Class;

   function TryOpenPin
   (
      this : in out GpioController;
      pinNumber : WinRt.Int32;
      sharingMode : Windows.Devices.Gpio.GpioSharingMode;
      pin : access Windows.Devices.Gpio.IGpioPin;
      openStatus : Windows.Devices.Gpio.GpioOpenStatus_Ptr
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GpioPin

   overriding procedure Initialize (this : in out GpioPin);
   overriding procedure Finalize (this : in out GpioPin);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GpioPin

   function add_ValueChanged
   (
      this : in out GpioPin;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ValueChanged
   (
      this : in out GpioPin;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DebounceTimeout
   (
      this : in out GpioPin
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_DebounceTimeout
   (
      this : in out GpioPin;
      value : Windows.Foundation.TimeSpan
   );

   function get_PinNumber
   (
      this : in out GpioPin
   )
   return WinRt.Int32;

   function get_SharingMode
   (
      this : in out GpioPin
   )
   return WinRt.Windows.Devices.Gpio.GpioSharingMode;

   function IsDriveModeSupported
   (
      this : in out GpioPin;
      driveMode : Windows.Devices.Gpio.GpioPinDriveMode
   )
   return WinRt.Boolean;

   function GetDriveMode
   (
      this : in out GpioPin
   )
   return WinRt.Windows.Devices.Gpio.GpioPinDriveMode;

   procedure SetDriveMode
   (
      this : in out GpioPin;
      value : Windows.Devices.Gpio.GpioPinDriveMode
   );

   procedure Write
   (
      this : in out GpioPin;
      value : Windows.Devices.Gpio.GpioPinValue
   );

   function Read
   (
      this : in out GpioPin
   )
   return WinRt.Windows.Devices.Gpio.GpioPinValue;

   procedure Close
   (
      this : in out GpioPin
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GpioPinValueChangedEventArgs

   overriding procedure Initialize (this : in out GpioPinValueChangedEventArgs);
   overriding procedure Finalize (this : in out GpioPinValueChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GpioPinValueChangedEventArgs

   function get_Edge
   (
      this : in out GpioPinValueChangedEventArgs
   )
   return WinRt.Windows.Devices.Gpio.GpioPinEdge;

end;
