--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Security.Authentication.Web is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IWebAuthenticationBrokerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IWebAuthenticationBrokerStatics is access all IWebAuthenticationBrokerStatics_Interface'Class;

   type IWebAuthenticationBrokerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IWebAuthenticationBrokerStatics2 is access all IWebAuthenticationBrokerStatics2_Interface'Class;

   type IWebAuthenticationResult_Interface is interface and WinRt.IInspectable_Interface;
   type IWebAuthenticationResult is access all IWebAuthenticationResult_Interface'Class;
   type IWebAuthenticationResult_Ptr is access all IWebAuthenticationResult;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type WebAuthenticationResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IWebAuthenticationResult : access Windows.Security.Authentication.Web.IWebAuthenticationResult;
      end record;
   type WebAuthenticationResult_Ptr is access all WebAuthenticationResult;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type TokenBindingKeyType is (
      Rsa2048_e,
      EcdsaP256_e,
      AnyExisting_e
   );
   for TokenBindingKeyType use (
      Rsa2048_e => 0,
      EcdsaP256_e => 1,
      AnyExisting_e => 2
   );
   type TokenBindingKeyType_Ptr is access all TokenBindingKeyType;

   type WebAuthenticationOptions is (
      None_e,
      SilentMode_e,
      UseTitle_e,
      UseHttpPost_e,
      UseCorporateNetwork_e
   );
   for WebAuthenticationOptions use (
      None_e => 0,
      SilentMode_e => 1,
      UseTitle_e => 2,
      UseHttpPost_e => 4,
      UseCorporateNetwork_e => 8
   );
   type WebAuthenticationOptions_Ptr is access all WebAuthenticationOptions;

   type WebAuthenticationStatus is (
      Success_e,
      UserCancel_e,
      ErrorHttp_e
   );
   for WebAuthenticationStatus use (
      Success_e => 0,
      UserCancel_e => 1,
      ErrorHttp_e => 2
   );
   type WebAuthenticationStatus_Ptr is access all WebAuthenticationStatus;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IWebAuthenticationBrokerStatics is interface and WinRt.IInspectable;

      function AuthenticateAsync
      (
         this : access IWebAuthenticationBrokerStatics_Interface;
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions;
         requestUri : Windows.Foundation.IUriRuntimeClass;
         callbackUri : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AuthenticateAsync
      (
         this : access IWebAuthenticationBrokerStatics_Interface;
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions;
         requestUri : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetCurrentApplicationCallbackUri
      (
         this : access IWebAuthenticationBrokerStatics_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      IID_IWebAuthenticationBrokerStatics : aliased WinRt.IID := (789880602, 58995, 16565, (188, 34, 32, 26, 104, 100, 163, 123 ));

   -----------------------------------------------------------------------------
   -- type IWebAuthenticationBrokerStatics2 is interface and WinRt.IInspectable;

      function AuthenticateAndContinue
      (
         this : access IWebAuthenticationBrokerStatics2_Interface;
         requestUri : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function AuthenticateAndContinue
      (
         this : access IWebAuthenticationBrokerStatics2_Interface;
         requestUri : Windows.Foundation.IUriRuntimeClass;
         callbackUri : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function AuthenticateAndContinue
      (
         this : access IWebAuthenticationBrokerStatics2_Interface;
         requestUri : Windows.Foundation.IUriRuntimeClass;
         callbackUri : Windows.Foundation.IUriRuntimeClass;
         continuationData : Windows.Foundation.Collections.IPropertySet;
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions
      )
      return WinRt.Hresult is abstract;

      function AuthenticateSilentlyAsync
      (
         this : access IWebAuthenticationBrokerStatics2_Interface;
         requestUri : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AuthenticateSilentlyAsync
      (
         this : access IWebAuthenticationBrokerStatics2_Interface;
         requestUri : Windows.Foundation.IUriRuntimeClass;
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IWebAuthenticationBrokerStatics2 : aliased WinRt.IID := (1942879134, 5351, 16858, (169, 113, 170, 244, 65, 11, 98, 30 ));

   -----------------------------------------------------------------------------
   -- type IWebAuthenticationResult is interface and WinRt.IInspectable;

      function get_ResponseData
      (
         this : access IWebAuthenticationResult_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ResponseStatus
      (
         this : access IWebAuthenticationResult_Interface;
         RetVal : access Windows.Security.Authentication.Web.WebAuthenticationStatus
      )
      return WinRt.Hresult is abstract;

      function get_ResponseErrorDetail
      (
         this : access IWebAuthenticationResult_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IWebAuthenticationResult : aliased WinRt.IID := (1677732683, 60905, 18186, (165, 205, 3, 35, 250, 246, 226, 98 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package WebAuthenticationBroker is

      function AuthenticateAsync
      (
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions;
         requestUri : Windows.Foundation.Uri'Class;
         callbackUri : Windows.Foundation.Uri'Class
      )
      return WinRt.Windows.Security.Authentication.Web.WebAuthenticationResult;

      function AuthenticateAsync
      (
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions;
         requestUri : Windows.Foundation.Uri'Class
      )
      return WinRt.Windows.Security.Authentication.Web.WebAuthenticationResult;

      function GetCurrentApplicationCallbackUri
      return WinRt.Windows.Foundation.Uri;

      procedure AuthenticateAndContinue
      (
         requestUri : Windows.Foundation.Uri'Class
      );

      procedure AuthenticateAndContinue
      (
         requestUri : Windows.Foundation.Uri'Class;
         callbackUri : Windows.Foundation.Uri'Class
      );

      procedure AuthenticateAndContinue
      (
         requestUri : Windows.Foundation.Uri'Class;
         callbackUri : Windows.Foundation.Uri'Class;
         continuationData : Windows.Foundation.Collections.ValueSet'Class;
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions
      );

      function AuthenticateSilentlyAsync
      (
         requestUri : Windows.Foundation.Uri'Class
      )
      return WinRt.Windows.Security.Authentication.Web.WebAuthenticationResult;

      function AuthenticateSilentlyAsync
      (
         requestUri : Windows.Foundation.Uri'Class;
         options : Windows.Security.Authentication.Web.WebAuthenticationOptions
      )
      return WinRt.Windows.Security.Authentication.Web.WebAuthenticationResult;

   end WebAuthenticationBroker;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for WebAuthenticationResult

   overriding procedure Initialize (this : in out WebAuthenticationResult);
   overriding procedure Finalize (this : in out WebAuthenticationResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for WebAuthenticationResult

   function get_ResponseData
   (
      this : in out WebAuthenticationResult
   )
   return WinRt.WString;

   function get_ResponseStatus
   (
      this : in out WebAuthenticationResult
   )
   return WinRt.Windows.Security.Authentication.Web.WebAuthenticationStatus;

   function get_ResponseErrorDetail
   (
      this : in out WebAuthenticationResult
   )
   return WinRt.UInt32;

end;
