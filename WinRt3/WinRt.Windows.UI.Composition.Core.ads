--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Composition.Core is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ICompositorController_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositorController is access all ICompositorController_Interface'Class;
   type ICompositorController_Ptr is access all ICompositorController;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type CompositorController is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositorController : access Windows.UI.Composition.Core.ICompositorController;
      end record;
   type CompositorController_Ptr is access all CompositorController;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ICompositorController is interface and WinRt.IInspectable;

      function get_Compositor
      (
         this : access ICompositorController_Interface;
         RetVal : access Windows.UI.Composition.ICompositor
      )
      return WinRt.Hresult is abstract;

      function Commit
      (
         this : access ICompositorController_Interface
      )
      return WinRt.Hresult is abstract;

      function EnsurePreviousCommitCompletedAsync
      (
         this : access ICompositorController_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function add_CommitNeeded
      (
         this : access ICompositorController_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_CommitNeeded
      (
         this : access ICompositorController_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICompositorController : aliased WinRt.IID := (762704730, 28839, 17301, (186, 45, 206, 240, 177, 131, 153, 249 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositorController

   overriding procedure Initialize (this : in out CompositorController);
   overriding procedure Finalize (this : in out CompositorController);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositorController

   function Constructor return CompositorController;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositorController

   function get_Compositor
   (
      this : in out CompositorController
   )
   return WinRt.Windows.UI.Composition.Compositor'Class;

   procedure Commit
   (
      this : in out CompositorController
   );

   procedure EnsurePreviousCommitCompletedAsync
   (
      this : in out CompositorController
   );

   function add_CommitNeeded
   (
      this : in out CompositorController;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_CommitNeeded
   (
      this : in out CompositorController;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure Close
   (
      this : in out CompositorController
   );

end;
