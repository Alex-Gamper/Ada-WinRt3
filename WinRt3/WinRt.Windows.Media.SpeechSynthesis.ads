--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Media.Core;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Media.SpeechSynthesis is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IInstalledVoicesStatic_Interface is interface and WinRt.IInspectable_Interface;
   type IInstalledVoicesStatic is access all IInstalledVoicesStatic_Interface'Class;

   type IInstalledVoicesStatic2_Interface is interface and WinRt.IInspectable_Interface;
   type IInstalledVoicesStatic2 is access all IInstalledVoicesStatic2_Interface'Class;

   type ISpeechSynthesisStream_Interface is interface and WinRt.IInspectable_Interface;
   type ISpeechSynthesisStream is access all ISpeechSynthesisStream_Interface'Class;
   type ISpeechSynthesisStream_Ptr is access all ISpeechSynthesisStream;

   type ISpeechSynthesizer_Interface is interface and WinRt.IInspectable_Interface;
   type ISpeechSynthesizer is access all ISpeechSynthesizer_Interface'Class;
   type ISpeechSynthesizer_Ptr is access all ISpeechSynthesizer;

   type ISpeechSynthesizer2_Interface is interface and WinRt.IInspectable_Interface;
   type ISpeechSynthesizer2 is access all ISpeechSynthesizer2_Interface'Class;

   type ISpeechSynthesizerOptions_Interface is interface and WinRt.IInspectable_Interface;
   type ISpeechSynthesizerOptions is access all ISpeechSynthesizerOptions_Interface'Class;
   type ISpeechSynthesizerOptions_Ptr is access all ISpeechSynthesizerOptions;

   type ISpeechSynthesizerOptions2_Interface is interface and WinRt.IInspectable_Interface;
   type ISpeechSynthesizerOptions2 is access all ISpeechSynthesizerOptions2_Interface'Class;

   type ISpeechSynthesizerOptions3_Interface is interface and WinRt.IInspectable_Interface;
   type ISpeechSynthesizerOptions3 is access all ISpeechSynthesizerOptions3_Interface'Class;

   type IVoiceInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IVoiceInformation is access all IVoiceInformation_Interface'Class;
   type IVoiceInformation_Ptr is access all IVoiceInformation;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type SpeechSynthesisStream is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpeechSynthesisStream : access Windows.Media.SpeechSynthesis.ISpeechSynthesisStream;
      end record;
   type SpeechSynthesisStream_Ptr is access all SpeechSynthesisStream;

   type SpeechSynthesizer is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpeechSynthesizer : access Windows.Media.SpeechSynthesis.ISpeechSynthesizer;
      end record;
   type SpeechSynthesizer_Ptr is access all SpeechSynthesizer;

   type SpeechSynthesizerOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpeechSynthesizerOptions : access Windows.Media.SpeechSynthesis.ISpeechSynthesizerOptions;
      end record;
   type SpeechSynthesizerOptions_Ptr is access all SpeechSynthesizerOptions;

   type VoiceInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IVoiceInformation : access Windows.Media.SpeechSynthesis.IVoiceInformation;
      end record;
   type VoiceInformation_Ptr is access all VoiceInformation;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type SpeechAppendedSilence is (
      Default_e,
      Min_e
   );
   for SpeechAppendedSilence use (
      Default_e => 0,
      Min_e => 1
   );
   type SpeechAppendedSilence_Ptr is access all SpeechAppendedSilence;

   type SpeechPunctuationSilence is (
      Default_e,
      Min_e
   );
   for SpeechPunctuationSilence use (
      Default_e => 0,
      Min_e => 1
   );
   type SpeechPunctuationSilence_Ptr is access all SpeechPunctuationSilence;

   type VoiceGender is (
      Male_e,
      Female_e
   );
   for VoiceGender use (
      Male_e => 0,
      Female_e => 1
   );
   type VoiceGender_Ptr is access all VoiceGender;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_IMediaMarker is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Media.IMediaMarker);
   IID_IVectorView_IMediaMarker : aliased WinRt.IID := (1064925668, 57160, 22288, (184, 71, 50, 38, 225, 150, 128, 45 ));
   function QInterface_IVectorView_IMediaMarker is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IMediaMarker.Kind, IID_IVectorView_IMediaMarker'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IInstalledVoicesStatic is interface and WinRt.IInspectable;

      function get_AllVoices
      (
         this : access IInstalledVoicesStatic_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DefaultVoice
      (
         this : access IInstalledVoicesStatic_Interface;
         RetVal : access Windows.Media.SpeechSynthesis.IVoiceInformation
      )
      return WinRt.Hresult is abstract;

      IID_IInstalledVoicesStatic : aliased WinRt.IID := (2102554316, 30003, 19519, (133, 190, 136, 140, 43, 174, 235, 220 ));

   -----------------------------------------------------------------------------
   -- type IInstalledVoicesStatic2 is interface and WinRt.IInspectable;

      function TrySetDefaultVoiceAsync
      (
         this : access IInstalledVoicesStatic2_Interface;
         voice : Windows.Media.SpeechSynthesis.IVoiceInformation;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IInstalledVoicesStatic2 : aliased WinRt.IID := (1680170798, 13709, 16472, (190, 154, 253, 63, 203, 66, 53, 48 ));

   -----------------------------------------------------------------------------
   -- type ISpeechSynthesisStream is interface and WinRt.IInspectable;

      function get_Markers
      (
         this : access ISpeechSynthesisStream_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ISpeechSynthesisStream : aliased WinRt.IID := (2212785811, 9292, 17954, (186, 11, 98, 41, 196, 208, 214, 93 ));

   -----------------------------------------------------------------------------
   -- type ISpeechSynthesizer is interface and WinRt.IInspectable;

      function SynthesizeTextToStreamAsync
      (
         this : access ISpeechSynthesizer_Interface;
         text : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SynthesizeSsmlToStreamAsync
      (
         this : access ISpeechSynthesizer_Interface;
         Ssml : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_Voice
      (
         this : access ISpeechSynthesizer_Interface;
         value : Windows.Media.SpeechSynthesis.IVoiceInformation
      )
      return WinRt.Hresult is abstract;

      function get_Voice
      (
         this : access ISpeechSynthesizer_Interface;
         RetVal : access Windows.Media.SpeechSynthesis.IVoiceInformation
      )
      return WinRt.Hresult is abstract;

      IID_ISpeechSynthesizer : aliased WinRt.IID := (3466558582, 38900, 19693, (173, 104, 213, 28, 69, 142, 69, 198 ));

   -----------------------------------------------------------------------------
   -- type ISpeechSynthesizer2 is interface and WinRt.IInspectable;

      function get_Options
      (
         this : access ISpeechSynthesizer2_Interface;
         RetVal : access Windows.Media.SpeechSynthesis.ISpeechSynthesizerOptions
      )
      return WinRt.Hresult is abstract;

      IID_ISpeechSynthesizer2 : aliased WinRt.IID := (2814766258, 17209, 19818, (187, 248, 199, 164, 241, 84, 76, 46 ));

   -----------------------------------------------------------------------------
   -- type ISpeechSynthesizerOptions is interface and WinRt.IInspectable;

      function get_IncludeWordBoundaryMetadata
      (
         this : access ISpeechSynthesizerOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IncludeWordBoundaryMetadata
      (
         this : access ISpeechSynthesizerOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IncludeSentenceBoundaryMetadata
      (
         this : access ISpeechSynthesizerOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IncludeSentenceBoundaryMetadata
      (
         this : access ISpeechSynthesizerOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ISpeechSynthesizerOptions : aliased WinRt.IID := (2699180145, 52285, 17353, (145, 177, 238, 24, 83, 36, 216, 61 ));

   -----------------------------------------------------------------------------
   -- type ISpeechSynthesizerOptions2 is interface and WinRt.IInspectable;

      function get_AudioVolume
      (
         this : access ISpeechSynthesizerOptions2_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_AudioVolume
      (
         this : access ISpeechSynthesizerOptions2_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_SpeakingRate
      (
         this : access ISpeechSynthesizerOptions2_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_SpeakingRate
      (
         this : access ISpeechSynthesizerOptions2_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_AudioPitch
      (
         this : access ISpeechSynthesizerOptions2_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_AudioPitch
      (
         this : access ISpeechSynthesizerOptions2_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_ISpeechSynthesizerOptions2 : aliased WinRt.IID := (482276878, 4508, 19437, (177, 24, 210, 80, 195, 162, 87, 147 ));

   -----------------------------------------------------------------------------
   -- type ISpeechSynthesizerOptions3 is interface and WinRt.IInspectable;

      function get_AppendedSilence
      (
         this : access ISpeechSynthesizerOptions3_Interface;
         RetVal : access Windows.Media.SpeechSynthesis.SpeechAppendedSilence
      )
      return WinRt.Hresult is abstract;

      function put_AppendedSilence
      (
         this : access ISpeechSynthesizerOptions3_Interface;
         value : Windows.Media.SpeechSynthesis.SpeechAppendedSilence
      )
      return WinRt.Hresult is abstract;

      function get_PunctuationSilence
      (
         this : access ISpeechSynthesizerOptions3_Interface;
         RetVal : access Windows.Media.SpeechSynthesis.SpeechPunctuationSilence
      )
      return WinRt.Hresult is abstract;

      function put_PunctuationSilence
      (
         this : access ISpeechSynthesizerOptions3_Interface;
         value : Windows.Media.SpeechSynthesis.SpeechPunctuationSilence
      )
      return WinRt.Hresult is abstract;

      IID_ISpeechSynthesizerOptions3 : aliased WinRt.IID := (1075763319, 36908, 18452, (165, 130, 165, 208, 192, 118, 159, 168 ));

   -----------------------------------------------------------------------------
   -- type IVoiceInformation is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IVoiceInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Id
      (
         this : access IVoiceInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Language
      (
         this : access IVoiceInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IVoiceInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Gender
      (
         this : access IVoiceInformation_Interface;
         RetVal : access Windows.Media.SpeechSynthesis.VoiceGender
      )
      return WinRt.Hresult is abstract;

      IID_IVoiceInformation : aliased WinRt.IID := (2972178084, 4753, 17924, (170, 156, 131, 19, 64, 131, 53, 44 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpeechSynthesisStream

   overriding procedure Initialize (this : in out SpeechSynthesisStream);
   overriding procedure Finalize (this : in out SpeechSynthesisStream);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpeechSynthesisStream

   function get_Markers
   (
      this : in out SpeechSynthesisStream
   )
   return IVectorView_IMediaMarker.Kind;

   function get_ContentType
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.WString;

   function get_Size
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.UInt64;

   procedure put_Size
   (
      this : in out SpeechSynthesisStream;
      value : WinRt.UInt64
   );

   function GetInputStreamAt
   (
      this : in out SpeechSynthesisStream;
      position : WinRt.UInt64
   )
   return WinRt.Windows.Storage.Streams.IInputStream;

   function GetOutputStreamAt
   (
      this : in out SpeechSynthesisStream;
      position : WinRt.UInt64
   )
   return WinRt.Windows.Storage.Streams.IOutputStream;

   function get_Position
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.UInt64;

   procedure Seek
   (
      this : in out SpeechSynthesisStream;
      position : WinRt.UInt64
   );

   function CloneStream
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStream;

   function get_CanRead
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.Boolean;

   function get_CanWrite
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.Boolean;

   function WriteAsync
   (
      this : in out SpeechSynthesisStream;
      buffer : Windows.Storage.Streams.IBuffer
   )
   return WinRt.UInt32;

   function FlushAsync
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.Boolean;

   procedure Close
   (
      this : in out SpeechSynthesisStream
   );

   function ReadAsync
   (
      this : in out SpeechSynthesisStream;
      buffer : Windows.Storage.Streams.IBuffer;
      count : WinRt.UInt32;
      options : Windows.Storage.Streams.InputStreamOptions
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function get_TimedMetadataTracks
   (
      this : in out SpeechSynthesisStream
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpeechSynthesizer

   overriding procedure Initialize (this : in out SpeechSynthesizer);
   overriding procedure Finalize (this : in out SpeechSynthesizer);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SpeechSynthesizer

   function Constructor return SpeechSynthesizer;

   -----------------------------------------------------------------------------
   -- Static Interfaces for SpeechSynthesizer

   function TrySetDefaultVoiceAsync
   (
      voice : Windows.Media.SpeechSynthesis.VoiceInformation'Class
   )
   return WinRt.Boolean;

   function get_AllVoices
   return WinRt.GenericObject;

   function get_DefaultVoice
   return WinRt.Windows.Media.SpeechSynthesis.VoiceInformation;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpeechSynthesizer

   function SynthesizeTextToStreamAsync
   (
      this : in out SpeechSynthesizer;
      text : WinRt.WString
   )
   return WinRt.Windows.Media.SpeechSynthesis.SpeechSynthesisStream'Class;

   function SynthesizeSsmlToStreamAsync
   (
      this : in out SpeechSynthesizer;
      Ssml : WinRt.WString
   )
   return WinRt.Windows.Media.SpeechSynthesis.SpeechSynthesisStream'Class;

   procedure put_Voice
   (
      this : in out SpeechSynthesizer;
      value : Windows.Media.SpeechSynthesis.VoiceInformation'Class
   );

   function get_Voice
   (
      this : in out SpeechSynthesizer
   )
   return WinRt.Windows.Media.SpeechSynthesis.VoiceInformation'Class;

   procedure Close
   (
      this : in out SpeechSynthesizer
   );

   function get_Options
   (
      this : in out SpeechSynthesizer
   )
   return WinRt.Windows.Media.SpeechSynthesis.SpeechSynthesizerOptions'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpeechSynthesizerOptions

   overriding procedure Initialize (this : in out SpeechSynthesizerOptions);
   overriding procedure Finalize (this : in out SpeechSynthesizerOptions);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpeechSynthesizerOptions

   function get_IncludeWordBoundaryMetadata
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Boolean;

   procedure put_IncludeWordBoundaryMetadata
   (
      this : in out SpeechSynthesizerOptions;
      value : WinRt.Boolean
   );

   function get_IncludeSentenceBoundaryMetadata
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Boolean;

   procedure put_IncludeSentenceBoundaryMetadata
   (
      this : in out SpeechSynthesizerOptions;
      value : WinRt.Boolean
   );

   function get_AudioVolume
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Double;

   procedure put_AudioVolume
   (
      this : in out SpeechSynthesizerOptions;
      value : WinRt.Double
   );

   function get_SpeakingRate
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Double;

   procedure put_SpeakingRate
   (
      this : in out SpeechSynthesizerOptions;
      value : WinRt.Double
   );

   function get_AudioPitch
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Double;

   procedure put_AudioPitch
   (
      this : in out SpeechSynthesizerOptions;
      value : WinRt.Double
   );

   function get_AppendedSilence
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Windows.Media.SpeechSynthesis.SpeechAppendedSilence;

   procedure put_AppendedSilence
   (
      this : in out SpeechSynthesizerOptions;
      value : Windows.Media.SpeechSynthesis.SpeechAppendedSilence
   );

   function get_PunctuationSilence
   (
      this : in out SpeechSynthesizerOptions
   )
   return WinRt.Windows.Media.SpeechSynthesis.SpeechPunctuationSilence;

   procedure put_PunctuationSilence
   (
      this : in out SpeechSynthesizerOptions;
      value : Windows.Media.SpeechSynthesis.SpeechPunctuationSilence
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for VoiceInformation

   overriding procedure Initialize (this : in out VoiceInformation);
   overriding procedure Finalize (this : in out VoiceInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for VoiceInformation

   function get_DisplayName
   (
      this : in out VoiceInformation
   )
   return WinRt.WString;

   function get_Id
   (
      this : in out VoiceInformation
   )
   return WinRt.WString;

   function get_Language
   (
      this : in out VoiceInformation
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out VoiceInformation
   )
   return WinRt.WString;

   function get_Gender
   (
      this : in out VoiceInformation
   )
   return WinRt.Windows.Media.SpeechSynthesis.VoiceGender;

end;
