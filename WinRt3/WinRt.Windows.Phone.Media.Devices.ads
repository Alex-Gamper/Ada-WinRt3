--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Phone.Media.Devices is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IAudioRoutingManager_Interface is interface and WinRt.IInspectable_Interface;
   type IAudioRoutingManager is access all IAudioRoutingManager_Interface'Class;
   type IAudioRoutingManager_Ptr is access all IAudioRoutingManager;

   type IAudioRoutingManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAudioRoutingManagerStatics is access all IAudioRoutingManagerStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type AudioRoutingManager is new Ada.Finalization.Limited_Controlled with
      record
         m_IAudioRoutingManager : access Windows.Phone.Media.Devices.IAudioRoutingManager;
      end record;
   type AudioRoutingManager_Ptr is access all AudioRoutingManager;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type AudioRoutingEndpoint is (
      Default_e,
      Earpiece_e,
      Speakerphone_e,
      Bluetooth_e,
      WiredHeadset_e,
      WiredHeadsetSpeakerOnly_e,
      BluetoothWithNoiseAndEchoCancellation_e,
      BluetoothPreferred_e
   );
   for AudioRoutingEndpoint use (
      Default_e => 0,
      Earpiece_e => 1,
      Speakerphone_e => 2,
      Bluetooth_e => 3,
      WiredHeadset_e => 4,
      WiredHeadsetSpeakerOnly_e => 5,
      BluetoothWithNoiseAndEchoCancellation_e => 6,
      BluetoothPreferred_e => 7
   );
   type AudioRoutingEndpoint_Ptr is access all AudioRoutingEndpoint;

   type AvailableAudioRoutingEndpoints is (
      None_e,
      Earpiece_e,
      Speakerphone_e,
      Bluetooth_e
   );
   for AvailableAudioRoutingEndpoints use (
      None_e => 0,
      Earpiece_e => 1,
      Speakerphone_e => 2,
      Bluetooth_e => 4
   );
   type AvailableAudioRoutingEndpoints_Ptr is access all AvailableAudioRoutingEndpoints;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IAudioRoutingManager is interface and WinRt.IInspectable;

      function GetAudioEndpoint
      (
         this : access IAudioRoutingManager_Interface;
         RetVal : access Windows.Phone.Media.Devices.AudioRoutingEndpoint
      )
      return WinRt.Hresult is abstract;

      function SetAudioEndpoint
      (
         this : access IAudioRoutingManager_Interface;
         endpoint : Windows.Phone.Media.Devices.AudioRoutingEndpoint
      )
      return WinRt.Hresult is abstract;

      function add_AudioEndpointChanged
      (
         this : access IAudioRoutingManager_Interface;
         endpointChangeHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AudioEndpointChanged
      (
         this : access IAudioRoutingManager_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_AvailableAudioEndpoints
      (
         this : access IAudioRoutingManager_Interface;
         RetVal : access Windows.Phone.Media.Devices.AvailableAudioRoutingEndpoints
      )
      return WinRt.Hresult is abstract;

      IID_IAudioRoutingManager : aliased WinRt.IID := (2033454368, 29132, 17702, (159, 41, 252, 141, 36, 134, 65, 139 ));

   -----------------------------------------------------------------------------
   -- type IAudioRoutingManagerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IAudioRoutingManagerStatics_Interface;
         RetVal : access Windows.Phone.Media.Devices.IAudioRoutingManager
      )
      return WinRt.Hresult is abstract;

      IID_IAudioRoutingManagerStatics : aliased WinRt.IID := (2541728420, 21904, 19055, (173, 222, 106, 61, 10, 213, 130, 80 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AudioRoutingManager

   overriding procedure Initialize (this : in out AudioRoutingManager);
   overriding procedure Finalize (this : in out AudioRoutingManager);

   -----------------------------------------------------------------------------
   -- Static Interfaces for AudioRoutingManager

   function GetDefault
   return WinRt.Windows.Phone.Media.Devices.AudioRoutingManager;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AudioRoutingManager

   function GetAudioEndpoint
   (
      this : in out AudioRoutingManager
   )
   return WinRt.Windows.Phone.Media.Devices.AudioRoutingEndpoint;

   procedure SetAudioEndpoint
   (
      this : in out AudioRoutingManager;
      endpoint : Windows.Phone.Media.Devices.AudioRoutingEndpoint
   );

   function add_AudioEndpointChanged
   (
      this : in out AudioRoutingManager;
      endpointChangeHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AudioEndpointChanged
   (
      this : in out AudioRoutingManager;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_AvailableAudioEndpoints
   (
      this : in out AudioRoutingManager
   )
   return WinRt.Windows.Phone.Media.Devices.AvailableAudioRoutingEndpoints;

end;
