--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.ApplicationModel.Store.LicenseManagement is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ILicenseManagerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILicenseManagerStatics is access ILicenseManagerStatics_Interface'Class;

   type ILicenseManagerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ILicenseManagerStatics2 is access ILicenseManagerStatics2_Interface'Class;

   type ILicenseSatisfactionInfo_Interface is interface and WinRt.IInspectable_Interface;
   type ILicenseSatisfactionInfo is access ILicenseSatisfactionInfo_Interface'Class;
   type ILicenseSatisfactionInfo_Ptr is access all ILicenseSatisfactionInfo;

   type ILicenseSatisfactionResult_Interface is interface and WinRt.IInspectable_Interface;
   type ILicenseSatisfactionResult is access ILicenseSatisfactionResult_Interface'Class;
   type ILicenseSatisfactionResult_Ptr is access all ILicenseSatisfactionResult;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type LicenseSatisfactionInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_ILicenseSatisfactionInfo : access Windows.ApplicationModel.Store.LicenseManagement.ILicenseSatisfactionInfo;
      end record;
   type LicenseSatisfactionInfo_Ptr is access all LicenseSatisfactionInfo;

   type LicenseSatisfactionResult is new Ada.Finalization.Limited_Controlled with
      record
         m_ILicenseSatisfactionResult : access Windows.ApplicationModel.Store.LicenseManagement.ILicenseSatisfactionResult;
      end record;
   type LicenseSatisfactionResult_Ptr is access all LicenseSatisfactionResult;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type LicenseRefreshOption is (
      RunningLicenses_e,
      AllLicenses_e
   );
   for LicenseRefreshOption use (
      RunningLicenses_e => 0,
      AllLicenses_e => 1
   );
   type LicenseRefreshOption_Ptr is access LicenseRefreshOption;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IMapView_HString_ILicenseSatisfactionInfo is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.Windows.ApplicationModel.Store.LicenseManagement.ILicenseSatisfactionInfo);
   IID_IMapView_HString_ILicenseSatisfactionInfo : aliased WinRt.IID := (1994740624, 47316, 22775, (150, 153, 222, 183, 197, 42, 201, 85 ));
   function QInterface_IMapView_HString_ILicenseSatisfactionInfo is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_ILicenseSatisfactionInfo.Kind, IID_IMapView_HString_ILicenseSatisfactionInfo'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ILicenseManagerStatics is interface and WinRt.IInspectable;

      function AddLicenseAsync
      (
         this : access ILicenseManagerStatics_Interface;
         license : Windows.Storage.Streams.IBuffer;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function GetSatisfactionInfosAsync
      (
         this : access ILicenseManagerStatics_Interface;
         contentIds : GenericObject;
         keyIds : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILicenseManagerStatics : aliased WinRt.IID := (3047963360, 55879, 20256, (154, 35, 9, 24, 44, 148, 118, 255 ));

   -----------------------------------------------------------------------------
   -- type ILicenseManagerStatics2 is interface and WinRt.IInspectable;

      function RefreshLicensesAsync
      (
         this : access ILicenseManagerStatics2_Interface;
         refreshOption : Windows.ApplicationModel.Store.LicenseManagement.LicenseRefreshOption;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_ILicenseManagerStatics2 : aliased WinRt.IID := (2871968891, 8057, 17536, (184, 126, 44, 73, 158, 96, 27, 163 ));

   -----------------------------------------------------------------------------
   -- type ILicenseSatisfactionInfo is interface and WinRt.IInspectable;

      function get_SatisfiedByDevice
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SatisfiedByOpenLicense
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SatisfiedByTrial
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SatisfiedByPass
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SatisfiedByInstallMedia
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_SatisfiedBySignedInUser
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSatisfied
      (
         this : access ILicenseSatisfactionInfo_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ILicenseSatisfactionInfo : aliased WinRt.IID := (1019981967, 56113, 18645, (131, 132, 250, 23, 200, 20, 116, 226 ));

   -----------------------------------------------------------------------------
   -- type ILicenseSatisfactionResult is interface and WinRt.IInspectable;

      function get_LicenseSatisfactionInfos
      (
         this : access ILicenseSatisfactionResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access ILicenseSatisfactionResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_ILicenseSatisfactionResult : aliased WinRt.IID := (1013403507, 15495, 20193, (130, 1, 244, 40, 53, 155, 211, 175 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package LicenseManager is

      procedure AddLicenseAsync
      (
         license : Windows.Storage.Streams.IBuffer
      );

      function GetSatisfactionInfosAsync
      (
         contentIds : GenericObject;
         keyIds : GenericObject
      )
      return WinRt.Windows.ApplicationModel.Store.LicenseManagement.LicenseSatisfactionResult;

      procedure RefreshLicensesAsync
      (
         refreshOption : Windows.ApplicationModel.Store.LicenseManagement.LicenseRefreshOption
      );

   end LicenseManager;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LicenseSatisfactionInfo

   overriding procedure Initialize (this : in out LicenseSatisfactionInfo);
   overriding procedure Finalize (this : in out LicenseSatisfactionInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LicenseSatisfactionInfo

   function get_SatisfiedByDevice
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   function get_SatisfiedByOpenLicense
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   function get_SatisfiedByTrial
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   function get_SatisfiedByPass
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   function get_SatisfiedByInstallMedia
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   function get_SatisfiedBySignedInUser
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   function get_IsSatisfied
   (
      this : in out LicenseSatisfactionInfo
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LicenseSatisfactionResult

   overriding procedure Initialize (this : in out LicenseSatisfactionResult);
   overriding procedure Finalize (this : in out LicenseSatisfactionResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LicenseSatisfactionResult

   function get_LicenseSatisfactionInfos
   (
      this : in out LicenseSatisfactionResult
   )
   return IMapView_HString_ILicenseSatisfactionInfo.Kind;

   function get_ExtendedError
   (
      this : in out LicenseSatisfactionResult
   )
   return WinRt.Windows.Foundation.HResult;

end;
