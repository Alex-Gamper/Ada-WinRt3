--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Storage;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.ApplicationModel.Store is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Delegates declarations
   -----------------------------------------------------------------------------

   type LicenseChangedEventHandler_Delegate;
   type LicenseChangedEventHandler is access LicenseChangedEventHandler_Delegate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ICurrentApp_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentApp is access ICurrentApp_Interface'Class;

   type ICurrentApp2Statics_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentApp2Statics is access ICurrentApp2Statics_Interface'Class;

   type ICurrentAppSimulator_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppSimulator is access ICurrentAppSimulator_Interface'Class;

   type ICurrentAppSimulatorStaticsWithFiltering_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppSimulatorStaticsWithFiltering is access ICurrentAppSimulatorStaticsWithFiltering_Interface'Class;

   type ICurrentAppSimulatorWithCampaignId_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppSimulatorWithCampaignId is access ICurrentAppSimulatorWithCampaignId_Interface'Class;

   type ICurrentAppSimulatorWithConsumables_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppSimulatorWithConsumables is access ICurrentAppSimulatorWithConsumables_Interface'Class;

   type ICurrentAppStaticsWithFiltering_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppStaticsWithFiltering is access ICurrentAppStaticsWithFiltering_Interface'Class;

   type ICurrentAppWithCampaignId_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppWithCampaignId is access ICurrentAppWithCampaignId_Interface'Class;

   type ICurrentAppWithConsumables_Interface is interface and WinRt.IInspectable_Interface;
   type ICurrentAppWithConsumables is access ICurrentAppWithConsumables_Interface'Class;

   type ILicenseInformation_Interface is interface and WinRt.IInspectable_Interface;
   type ILicenseInformation is access ILicenseInformation_Interface'Class;
   type ILicenseInformation_Ptr is access all ILicenseInformation;

   type IListingInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IListingInformation is access IListingInformation_Interface'Class;
   type IListingInformation_Ptr is access all IListingInformation;

   type IListingInformation2_Interface is interface and WinRt.IInspectable_Interface;
   type IListingInformation2 is access IListingInformation2_Interface'Class;

   type IProductLicense_Interface is interface and WinRt.IInspectable_Interface;
   type IProductLicense is access IProductLicense_Interface'Class;
   type IProductLicense_Ptr is access all IProductLicense;

   type IProductLicenseWithFulfillment_Interface is interface and WinRt.IInspectable_Interface;
   type IProductLicenseWithFulfillment is access IProductLicenseWithFulfillment_Interface'Class;

   type IProductListing_Interface is interface and WinRt.IInspectable_Interface;
   type IProductListing is access IProductListing_Interface'Class;
   type IProductListing_Ptr is access all IProductListing;

   type IProductListing2_Interface is interface and WinRt.IInspectable_Interface;
   type IProductListing2 is access IProductListing2_Interface'Class;

   type IProductListingWithConsumables_Interface is interface and WinRt.IInspectable_Interface;
   type IProductListingWithConsumables is access IProductListingWithConsumables_Interface'Class;

   type IProductListingWithMetadata_Interface is interface and WinRt.IInspectable_Interface;
   type IProductListingWithMetadata is access IProductListingWithMetadata_Interface'Class;

   type IProductPurchaseDisplayProperties_Interface is interface and WinRt.IInspectable_Interface;
   type IProductPurchaseDisplayProperties is access IProductPurchaseDisplayProperties_Interface'Class;
   type IProductPurchaseDisplayProperties_Ptr is access all IProductPurchaseDisplayProperties;

   type IProductPurchaseDisplayPropertiesFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IProductPurchaseDisplayPropertiesFactory is access IProductPurchaseDisplayPropertiesFactory_Interface'Class;

   type IPurchaseResults_Interface is interface and WinRt.IInspectable_Interface;
   type IPurchaseResults is access IPurchaseResults_Interface'Class;
   type IPurchaseResults_Ptr is access all IPurchaseResults;

   type IUnfulfilledConsumable_Interface is interface and WinRt.IInspectable_Interface;
   type IUnfulfilledConsumable is access IUnfulfilledConsumable_Interface'Class;
   type IUnfulfilledConsumable_Ptr is access all IUnfulfilledConsumable;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type LicenseInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_ILicenseInformation : access Windows.ApplicationModel.Store.ILicenseInformation;
      end record;
   type LicenseInformation_Ptr is access all LicenseInformation;

   type ListingInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IListingInformation : access Windows.ApplicationModel.Store.IListingInformation;
      end record;
   type ListingInformation_Ptr is access all ListingInformation;

   type ProductLicense is new Ada.Finalization.Limited_Controlled with
      record
         m_IProductLicense : access Windows.ApplicationModel.Store.IProductLicense;
      end record;
   type ProductLicense_Ptr is access all ProductLicense;

   type ProductListing is new Ada.Finalization.Limited_Controlled with
      record
         m_IProductListing : access Windows.ApplicationModel.Store.IProductListing;
      end record;
   type ProductListing_Ptr is access all ProductListing;

   type ProductPurchaseDisplayProperties is new Ada.Finalization.Limited_Controlled with
      record
         m_IProductPurchaseDisplayProperties : access Windows.ApplicationModel.Store.IProductPurchaseDisplayProperties;
      end record;
   type ProductPurchaseDisplayProperties_Ptr is access all ProductPurchaseDisplayProperties;

   type PurchaseResults is new Ada.Finalization.Limited_Controlled with
      record
         m_IPurchaseResults : access Windows.ApplicationModel.Store.IPurchaseResults;
      end record;
   type PurchaseResults_Ptr is access all PurchaseResults;

   type UnfulfilledConsumable is new Ada.Finalization.Limited_Controlled with
      record
         m_IUnfulfilledConsumable : access Windows.ApplicationModel.Store.IUnfulfilledConsumable;
      end record;
   type UnfulfilledConsumable_Ptr is access all UnfulfilledConsumable;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type FulfillmentResult is (
      Succeeded_e,
      NothingToFulfill_e,
      PurchasePending_e,
      PurchaseReverted_e,
      ServerError_e
   );
   for FulfillmentResult use (
      Succeeded_e => 0,
      NothingToFulfill_e => 1,
      PurchasePending_e => 2,
      PurchaseReverted_e => 3,
      ServerError_e => 4
   );
   type FulfillmentResult_Ptr is access FulfillmentResult;

   type ProductPurchaseStatus is (
      Succeeded_e,
      AlreadyPurchased_e,
      NotFulfilled_e,
      NotPurchased_e
   );
   for ProductPurchaseStatus use (
      Succeeded_e => 0,
      AlreadyPurchased_e => 1,
      NotFulfilled_e => 2,
      NotPurchased_e => 3
   );
   type ProductPurchaseStatus_Ptr is access ProductPurchaseStatus;

   type ProductType is (
      Unknown_e,
      Durable_e,
      Consumable_e
   );
   for ProductType use (
      Unknown_e => 0,
      Durable_e => 1,
      Consumable_e => 2
   );
   type ProductType_Ptr is access ProductType;

   -----------------------------------------------------------------------------
   -- Delegate declarations
   -----------------------------------------------------------------------------

   IID_LicenseChangedEventHandler : aliased WinRt.IID := (3567583829, 4969, 19510, (131, 47, 111, 45, 136, 227, 101, 155 ));
   type LicenseChangedEventHandler_Delegate (Callback : access procedure ) is new WinRt.IMulticastDelegate_Interface (IID_LicenseChangedEventHandler'Access) with null record;
      function Invoke
      (
         this : access LicenseChangedEventHandler_Delegate
      )
      return WinRt.Hresult;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IMapView_HString_IProductLicense is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.Windows.ApplicationModel.Store.IProductLicense);
   IID_IMapView_HString_IProductLicense : aliased WinRt.IID := (348922225, 54599, 21311, (141, 115, 115, 6, 206, 197, 147, 235 ));
   function QInterface_IMapView_HString_IProductLicense is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_IProductLicense.Kind, IID_IMapView_HString_IProductLicense'Access);

   package IMapView_HString_IProductListing is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.Windows.ApplicationModel.Store.IProductListing);
   IID_IMapView_HString_IProductListing : aliased WinRt.IID := (4125311269, 42831, 21305, (128, 17, 9, 219, 230, 11, 82, 130 ));
   function QInterface_IMapView_HString_IProductListing is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_IProductListing.Kind, IID_IMapView_HString_IProductListing'Access);

   package IIterable_HString is new WinRt.Windows.Foundation.Collections.IIterable (WinRt.HString);
   IID_IIterable_HString : aliased WinRt.IID := (1095481932, 52133, 24215, (142, 217, 160, 227, 205, 139, 60, 37 ));
   function QInterface_IIterable_HString is new Generic_QueryInterface (GenericObject_Interface, IIterable_HString.Kind, IID_IIterable_HString'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ICurrentApp is interface and WinRt.IInspectable;

      function get_LicenseInformation
      (
         this : access ICurrentApp_Interface;
         RetVal : access Windows.ApplicationModel.Store.ILicenseInformation
      )
      return WinRt.Hresult is abstract;

      function get_LinkUri
      (
         this : access ICurrentApp_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_AppId
      (
         this : access ICurrentApp_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function RequestAppPurchaseAsync
      (
         this : access ICurrentApp_Interface;
         includeReceipt : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestProductPurchaseAsync
      (
         this : access ICurrentApp_Interface;
         productId : WinRt.HString;
         includeReceipt : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function LoadListingInformationAsync
      (
         this : access ICurrentApp_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetAppReceiptAsync
      (
         this : access ICurrentApp_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetProductReceiptAsync
      (
         this : access ICurrentApp_Interface;
         productId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentApp : aliased WinRt.IID := (3576545381, 55871, 18053, (153, 94, 155, 72, 46, 181, 230, 3 ));

   -----------------------------------------------------------------------------
   -- type ICurrentApp2Statics is interface and WinRt.IInspectable;

      function GetCustomerPurchaseIdAsync
      (
         this : access ICurrentApp2Statics_Interface;
         serviceTicket : WinRt.HString;
         publisherUserId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetCustomerCollectionsIdAsync
      (
         this : access ICurrentApp2Statics_Interface;
         serviceTicket : WinRt.HString;
         publisherUserId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentApp2Statics : aliased WinRt.IID := (3746459181, 12657, 19155, (134, 20, 44, 97, 36, 67, 115, 203 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppSimulator is interface and WinRt.IInspectable;

      function get_LicenseInformation
      (
         this : access ICurrentAppSimulator_Interface;
         RetVal : access Windows.ApplicationModel.Store.ILicenseInformation
      )
      return WinRt.Hresult is abstract;

      function get_LinkUri
      (
         this : access ICurrentAppSimulator_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_AppId
      (
         this : access ICurrentAppSimulator_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function RequestAppPurchaseAsync
      (
         this : access ICurrentAppSimulator_Interface;
         includeReceipt : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestProductPurchaseAsync
      (
         this : access ICurrentAppSimulator_Interface;
         productId : WinRt.HString;
         includeReceipt : WinRt.Boolean;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function LoadListingInformationAsync
      (
         this : access ICurrentAppSimulator_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetAppReceiptAsync
      (
         this : access ICurrentAppSimulator_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetProductReceiptAsync
      (
         this : access ICurrentAppSimulator_Interface;
         productId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ReloadSimulatorAsync
      (
         this : access ICurrentAppSimulator_Interface;
         simulatorSettingsFile : Windows.Storage.IStorageFile;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppSimulator : aliased WinRt.IID := (4051672497, 29901, 18311, (151, 135, 25, 134, 110, 154, 85, 89 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppSimulatorStaticsWithFiltering is interface and WinRt.IInspectable;

      function LoadListingInformationByProductIdsAsync
      (
         this : access ICurrentAppSimulatorStaticsWithFiltering_Interface;
         productIds : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function LoadListingInformationByKeywordsAsync
      (
         this : access ICurrentAppSimulatorStaticsWithFiltering_Interface;
         keywords : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppSimulatorStaticsWithFiltering : aliased WinRt.IID := (1635676386, 63599, 19284, (150, 102, 221, 226, 133, 9, 44, 104 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppSimulatorWithCampaignId is interface and WinRt.IInspectable;

      function GetAppPurchaseCampaignIdAsync
      (
         this : access ICurrentAppSimulatorWithCampaignId_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppSimulatorWithCampaignId : aliased WinRt.IID := (2221378115, 57088, 18034, (164, 63, 178, 91, 20, 65, 207, 207 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppSimulatorWithConsumables is interface and WinRt.IInspectable;

      function ReportConsumableFulfillmentAsync
      (
         this : access ICurrentAppSimulatorWithConsumables_Interface;
         productId : WinRt.HString;
         transactionId : WinRt.Guid;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestProductPurchaseAsync
      (
         this : access ICurrentAppSimulatorWithConsumables_Interface;
         productId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestProductPurchaseAsync
      (
         this : access ICurrentAppSimulatorWithConsumables_Interface;
         productId : WinRt.HString;
         offerId : WinRt.HString;
         displayProperties : Windows.ApplicationModel.Store.IProductPurchaseDisplayProperties;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetUnfulfilledConsumablesAsync
      (
         this : access ICurrentAppSimulatorWithConsumables_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppSimulatorWithConsumables : aliased WinRt.IID := (1313992875, 8423, 17426, (155, 133, 89, 187, 120, 56, 134, 103 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppStaticsWithFiltering is interface and WinRt.IInspectable;

      function LoadListingInformationByProductIdsAsync
      (
         this : access ICurrentAppStaticsWithFiltering_Interface;
         productIds : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function LoadListingInformationByKeywordsAsync
      (
         this : access ICurrentAppStaticsWithFiltering_Interface;
         keywords : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ReportProductFulfillment
      (
         this : access ICurrentAppStaticsWithFiltering_Interface;
         productId : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppStaticsWithFiltering : aliased WinRt.IID := (3547161922, 36997, 17294, (151, 186, 162, 92, 151, 107, 226, 253 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppWithCampaignId is interface and WinRt.IInspectable;

      function GetAppPurchaseCampaignIdAsync
      (
         this : access ICurrentAppWithCampaignId_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppWithCampaignId : aliased WinRt.IID := (825183440, 14017, 17574, (179, 43, 67, 45, 96, 142, 77, 214 ));

   -----------------------------------------------------------------------------
   -- type ICurrentAppWithConsumables is interface and WinRt.IInspectable;

      function ReportConsumableFulfillmentAsync
      (
         this : access ICurrentAppWithConsumables_Interface;
         productId : WinRt.HString;
         transactionId : WinRt.Guid;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestProductPurchaseAsync
      (
         this : access ICurrentAppWithConsumables_Interface;
         productId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestProductPurchaseAsync
      (
         this : access ICurrentAppWithConsumables_Interface;
         productId : WinRt.HString;
         offerId : WinRt.HString;
         displayProperties : Windows.ApplicationModel.Store.IProductPurchaseDisplayProperties;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetUnfulfilledConsumablesAsync
      (
         this : access ICurrentAppWithConsumables_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICurrentAppWithConsumables : aliased WinRt.IID := (2219704433, 40527, 20345, (153, 90, 95, 145, 23, 46, 108, 239 ));

   -----------------------------------------------------------------------------
   -- type ILicenseInformation is interface and WinRt.IInspectable;

      function get_ProductLicenses
      (
         this : access ILicenseInformation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_IsActive
      (
         this : access ILicenseInformation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTrial
      (
         this : access ILicenseInformation_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ExpirationDate
      (
         this : access ILicenseInformation_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function add_LicenseChanged
      (
         this : access ILicenseInformation_Interface;
         handler : Windows.ApplicationModel.Store.LicenseChangedEventHandler;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_LicenseChanged
      (
         this : access ILicenseInformation_Interface;
         cookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ILicenseInformation : aliased WinRt.IID := (2394414128, 61808, 20181, (142, 33, 21, 22, 218, 63, 211, 103 ));

   -----------------------------------------------------------------------------
   -- type IListingInformation is interface and WinRt.IInspectable;

      function get_CurrentMarket
      (
         this : access IListingInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IListingInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ProductListings
      (
         this : access IListingInformation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_FormattedPrice
      (
         this : access IListingInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access IListingInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AgeRating
      (
         this : access IListingInformation_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IListingInformation : aliased WinRt.IID := (1485523647, 48244, 17283, (183, 140, 153, 96, 99, 35, 222, 206 ));

   -----------------------------------------------------------------------------
   -- type IListingInformation2 is interface and WinRt.IInspectable;

      function get_FormattedBasePrice
      (
         this : access IListingInformation2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SaleEndDate
      (
         this : access IListingInformation2_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_IsOnSale
      (
         this : access IListingInformation2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CurrencyCode
      (
         this : access IListingInformation2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IListingInformation2 : aliased WinRt.IID := (3237817373, 45838, 17284, (132, 234, 114, 254, 250, 130, 34, 62 ));

   -----------------------------------------------------------------------------
   -- type IProductLicense is interface and WinRt.IInspectable;

      function get_ProductId
      (
         this : access IProductLicense_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IsActive
      (
         this : access IProductLicense_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ExpirationDate
      (
         this : access IProductLicense_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      IID_IProductLicense : aliased WinRt.IID := (909314247, 11215, 19470, (143, 47, 232, 8, 170, 168, 249, 157 ));

   -----------------------------------------------------------------------------
   -- type IProductLicenseWithFulfillment is interface and WinRt.IInspectable;

      function get_IsConsumable
      (
         this : access IProductLicenseWithFulfillment_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IProductLicenseWithFulfillment : aliased WinRt.IID := (4233321610, 63079, 16627, (186, 60, 4, 90, 99, 171, 179, 172 ));

   -----------------------------------------------------------------------------
   -- type IProductListing is interface and WinRt.IInspectable;

      function get_ProductId
      (
         this : access IProductListing_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FormattedPrice
      (
         this : access IProductListing_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access IProductListing_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IProductListing : aliased WinRt.IID := (1168627373, 51024, 19868, (148, 124, 176, 13, 203, 249, 233, 194 ));

   -----------------------------------------------------------------------------
   -- type IProductListing2 is interface and WinRt.IInspectable;

      function get_FormattedBasePrice
      (
         this : access IProductListing2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SaleEndDate
      (
         this : access IProductListing2_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_IsOnSale
      (
         this : access IProductListing2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CurrencyCode
      (
         this : access IProductListing2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IProductListing2 : aliased WinRt.IID := (4171114767, 29694, 18765, (169, 57, 8, 169, 178, 73, 90, 190 ));

   -----------------------------------------------------------------------------
   -- type IProductListingWithConsumables is interface and WinRt.IInspectable;

      function get_ProductType
      (
         this : access IProductListingWithConsumables_Interface;
         RetVal : access Windows.ApplicationModel.Store.ProductType
      )
      return WinRt.Hresult is abstract;

      IID_IProductListingWithConsumables : aliased WinRt.IID := (3953039248, 36715, 18463, (147, 167, 92, 58, 99, 6, 129, 73 ));

   -----------------------------------------------------------------------------
   -- type IProductListingWithMetadata is interface and WinRt.IInspectable;

      function get_Description
      (
         this : access IProductListingWithMetadata_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Keywords
      (
         this : access IProductListingWithMetadata_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ProductType
      (
         this : access IProductListingWithMetadata_Interface;
         RetVal : access Windows.ApplicationModel.Store.ProductType
      )
      return WinRt.Hresult is abstract;

      function get_Tag
      (
         this : access IProductListingWithMetadata_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ImageUri
      (
         this : access IProductListingWithMetadata_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      IID_IProductListingWithMetadata : aliased WinRt.IID := (307078503, 9208, 16958, (149, 50, 24, 153, 67, 196, 10, 206 ));

   -----------------------------------------------------------------------------
   -- type IProductPurchaseDisplayProperties is interface and WinRt.IInspectable;

      function get_Name
      (
         this : access IProductPurchaseDisplayProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Name
      (
         this : access IProductPurchaseDisplayProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IProductPurchaseDisplayProperties_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Description
      (
         this : access IProductPurchaseDisplayProperties_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Image
      (
         this : access IProductPurchaseDisplayProperties_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function put_Image
      (
         this : access IProductPurchaseDisplayProperties_Interface;
         value : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      IID_IProductPurchaseDisplayProperties : aliased WinRt.IID := (3607852064, 48274, 16411, (168, 9, 201, 178, 229, 219, 189, 175 ));

   -----------------------------------------------------------------------------
   -- type IProductPurchaseDisplayPropertiesFactory is interface and WinRt.IInspectable;

      function CreateProductPurchaseDisplayProperties
      (
         this : access IProductPurchaseDisplayPropertiesFactory_Interface;
         name : WinRt.HString;
         RetVal : access Windows.ApplicationModel.Store.IProductPurchaseDisplayProperties
      )
      return WinRt.Hresult is abstract;

      IID_IProductPurchaseDisplayPropertiesFactory : aliased WinRt.IID := (1867062772, 13014, 19264, (180, 116, 184, 48, 56, 164, 217, 207 ));

   -----------------------------------------------------------------------------
   -- type IPurchaseResults is interface and WinRt.IInspectable;

      function get_Status
      (
         this : access IPurchaseResults_Interface;
         RetVal : access Windows.ApplicationModel.Store.ProductPurchaseStatus
      )
      return WinRt.Hresult is abstract;

      function get_TransactionId
      (
         this : access IPurchaseResults_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_ReceiptXml
      (
         this : access IPurchaseResults_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_OfferId
      (
         this : access IPurchaseResults_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IPurchaseResults : aliased WinRt.IID := (3981489022, 34390, 20325, (184, 200, 172, 126, 12, 177, 161, 194 ));

   -----------------------------------------------------------------------------
   -- type IUnfulfilledConsumable is interface and WinRt.IInspectable;

      function get_ProductId
      (
         this : access IUnfulfilledConsumable_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TransactionId
      (
         this : access IUnfulfilledConsumable_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_OfferId
      (
         this : access IUnfulfilledConsumable_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IUnfulfilledConsumable : aliased WinRt.IID := (771226555, 7389, 19640, (160, 20, 123, 156, 248, 152, 105, 39 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CurrentApp is

      function get_LicenseInformation
      return WinRt.Windows.ApplicationModel.Store.LicenseInformation;

      function get_LinkUri
      return WinRt.Windows.Foundation.Uri;

      function get_AppId
      return WinRt.Guid;

      function RequestAppPurchaseAsync
      (
         includeReceipt : WinRt.Boolean
      )
      return WinRt.WString;

      function RequestProductPurchaseAsync
      (
         productId : WinRt.WString;
         includeReceipt : WinRt.Boolean
      )
      return WinRt.WString;

      function LoadListingInformationAsync
      return WinRt.Windows.ApplicationModel.Store.ListingInformation;

      function GetAppReceiptAsync
      return WinRt.WString;

      function GetProductReceiptAsync
      (
         productId : WinRt.WString
      )
      return WinRt.WString;

      function ReportConsumableFulfillmentAsync
      (
         productId : WinRt.WString;
         transactionId : WinRt.Guid
      )
      return WinRt.Windows.ApplicationModel.Store.FulfillmentResult;

      function RequestProductPurchaseAsync
      (
         productId : WinRt.WString
      )
      return WinRt.Windows.ApplicationModel.Store.PurchaseResults;

      function RequestProductPurchaseAsync
      (
         productId : WinRt.WString;
         offerId : WinRt.WString;
         displayProperties : Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties'Class
      )
      return WinRt.Windows.ApplicationModel.Store.PurchaseResults;

      function GetUnfulfilledConsumablesAsync
      return WinRt.GenericObject;

      function GetCustomerPurchaseIdAsync
      (
         serviceTicket : WinRt.WString;
         publisherUserId : WinRt.WString
      )
      return WinRt.WString;

      function GetCustomerCollectionsIdAsync
      (
         serviceTicket : WinRt.WString;
         publisherUserId : WinRt.WString
      )
      return WinRt.WString;

      function LoadListingInformationByProductIdsAsync
      (
         productIds : GenericObject
      )
      return WinRt.Windows.ApplicationModel.Store.ListingInformation;

      function LoadListingInformationByKeywordsAsync
      (
         keywords : GenericObject
      )
      return WinRt.Windows.ApplicationModel.Store.ListingInformation;

      procedure ReportProductFulfillment
      (
         productId : WinRt.WString
      );

      function GetAppPurchaseCampaignIdAsync
      return WinRt.WString;

   end CurrentApp;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package CurrentAppSimulator is

      function LoadListingInformationByProductIdsAsync_CurrentAppSimulator
      (
         productIds : GenericObject
      )
      return WinRt.Windows.ApplicationModel.Store.ListingInformation;

      function LoadListingInformationByKeywordsAsync_CurrentAppSimulator
      (
         keywords : GenericObject
      )
      return WinRt.Windows.ApplicationModel.Store.ListingInformation;

      function get_LicenseInformation_CurrentAppSimulator
      return WinRt.Windows.ApplicationModel.Store.LicenseInformation;

      function get_LinkUri_CurrentAppSimulator
      return WinRt.Windows.Foundation.Uri;

      function get_AppId_CurrentAppSimulator
      return WinRt.Guid;

      function RequestAppPurchaseAsync_CurrentAppSimulator
      (
         includeReceipt : WinRt.Boolean
      )
      return WinRt.WString;

      function RequestProductPurchaseAsync_CurrentAppSimulator
      (
         productId : WinRt.WString;
         includeReceipt : WinRt.Boolean
      )
      return WinRt.WString;

      function LoadListingInformationAsync_CurrentAppSimulator
      return WinRt.Windows.ApplicationModel.Store.ListingInformation;

      function GetAppReceiptAsync_CurrentAppSimulator
      return WinRt.WString;

      function GetProductReceiptAsync_CurrentAppSimulator
      (
         productId : WinRt.WString
      )
      return WinRt.WString;

      procedure ReloadSimulatorAsync
      (
         simulatorSettingsFile : Windows.Storage.StorageFile'Class
      );

      function GetAppPurchaseCampaignIdAsync_CurrentAppSimulator
      return WinRt.WString;

      function ReportConsumableFulfillmentAsync_CurrentAppSimulator
      (
         productId : WinRt.WString;
         transactionId : WinRt.Guid
      )
      return WinRt.Windows.ApplicationModel.Store.FulfillmentResult;

      function RequestProductPurchaseAsync_CurrentAppSimulator
      (
         productId : WinRt.WString
      )
      return WinRt.Windows.ApplicationModel.Store.PurchaseResults;

      function RequestProductPurchaseAsync_CurrentAppSimulator
      (
         productId : WinRt.WString;
         offerId : WinRt.WString;
         displayProperties : Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties'Class
      )
      return WinRt.Windows.ApplicationModel.Store.PurchaseResults;

      function GetUnfulfilledConsumablesAsync_CurrentAppSimulator
      return WinRt.GenericObject;

   end CurrentAppSimulator;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LicenseInformation

   overriding procedure Initialize (this : in out LicenseInformation);
   overriding procedure Finalize (this : in out LicenseInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LicenseInformation

   function get_ProductLicenses
   (
      this : in out LicenseInformation
   )
   return IMapView_HString_IProductLicense.Kind;

   function get_IsActive
   (
      this : in out LicenseInformation
   )
   return WinRt.Boolean;

   function get_IsTrial
   (
      this : in out LicenseInformation
   )
   return WinRt.Boolean;

   function get_ExpirationDate
   (
      this : in out LicenseInformation
   )
   return WinRt.Windows.Foundation.DateTime;

   function add_LicenseChanged
   (
      this : in out LicenseInformation;
      handler : Windows.ApplicationModel.Store.LicenseChangedEventHandler
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_LicenseChanged
   (
      this : in out LicenseInformation;
      cookie : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ListingInformation

   overriding procedure Initialize (this : in out ListingInformation);
   overriding procedure Finalize (this : in out ListingInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ListingInformation

   function get_CurrentMarket
   (
      this : in out ListingInformation
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out ListingInformation
   )
   return WinRt.WString;

   function get_ProductListings
   (
      this : in out ListingInformation
   )
   return IMapView_HString_IProductListing.Kind;

   function get_FormattedPrice
   (
      this : in out ListingInformation
   )
   return WinRt.WString;

   function get_Name
   (
      this : in out ListingInformation
   )
   return WinRt.WString;

   function get_AgeRating
   (
      this : in out ListingInformation
   )
   return WinRt.UInt32;

   function get_FormattedBasePrice
   (
      this : in out ListingInformation
   )
   return WinRt.WString;

   function get_SaleEndDate
   (
      this : in out ListingInformation
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_IsOnSale
   (
      this : in out ListingInformation
   )
   return WinRt.Boolean;

   function get_CurrencyCode
   (
      this : in out ListingInformation
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProductLicense

   overriding procedure Initialize (this : in out ProductLicense);
   overriding procedure Finalize (this : in out ProductLicense);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProductLicense

   function get_ProductId
   (
      this : in out ProductLicense
   )
   return WinRt.WString;

   function get_IsActive
   (
      this : in out ProductLicense
   )
   return WinRt.Boolean;

   function get_ExpirationDate
   (
      this : in out ProductLicense
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_IsConsumable
   (
      this : in out ProductLicense
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProductListing

   overriding procedure Initialize (this : in out ProductListing);
   overriding procedure Finalize (this : in out ProductListing);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProductListing

   function get_ProductId
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   function get_FormattedPrice
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   function get_Name
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   function get_Description
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   function get_Keywords
   (
      this : in out ProductListing
   )
   return IIterable_HString.Kind;

   function get_ProductType
   (
      this : in out ProductListing
   )
   return WinRt.Windows.ApplicationModel.Store.ProductType;

   function get_Tag
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   function get_ImageUri
   (
      this : in out ProductListing
   )
   return WinRt.Windows.Foundation.Uri'Class;

   function get_FormattedBasePrice
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   function get_SaleEndDate
   (
      this : in out ProductListing
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_IsOnSale
   (
      this : in out ProductListing
   )
   return WinRt.Boolean;

   function get_CurrencyCode
   (
      this : in out ProductListing
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProductPurchaseDisplayProperties

   overriding procedure Initialize (this : in out ProductPurchaseDisplayProperties);
   overriding procedure Finalize (this : in out ProductPurchaseDisplayProperties);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ProductPurchaseDisplayProperties

   function Constructor return ProductPurchaseDisplayProperties;

   function Constructor
   (
      name : WinRt.WString
   )
   return ProductPurchaseDisplayProperties;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProductPurchaseDisplayProperties

   function get_Name
   (
      this : in out ProductPurchaseDisplayProperties
   )
   return WinRt.WString;

   procedure put_Name
   (
      this : in out ProductPurchaseDisplayProperties;
      value : WinRt.WString
   );

   function get_Description
   (
      this : in out ProductPurchaseDisplayProperties
   )
   return WinRt.WString;

   procedure put_Description
   (
      this : in out ProductPurchaseDisplayProperties;
      value : WinRt.WString
   );

   function get_Image
   (
      this : in out ProductPurchaseDisplayProperties
   )
   return WinRt.Windows.Foundation.Uri'Class;

   procedure put_Image
   (
      this : in out ProductPurchaseDisplayProperties;
      value : Windows.Foundation.Uri'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PurchaseResults

   overriding procedure Initialize (this : in out PurchaseResults);
   overriding procedure Finalize (this : in out PurchaseResults);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PurchaseResults

   function get_Status
   (
      this : in out PurchaseResults
   )
   return WinRt.Windows.ApplicationModel.Store.ProductPurchaseStatus;

   function get_TransactionId
   (
      this : in out PurchaseResults
   )
   return WinRt.Guid;

   function get_ReceiptXml
   (
      this : in out PurchaseResults
   )
   return WinRt.WString;

   function get_OfferId
   (
      this : in out PurchaseResults
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for UnfulfilledConsumable

   overriding procedure Initialize (this : in out UnfulfilledConsumable);
   overriding procedure Finalize (this : in out UnfulfilledConsumable);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for UnfulfilledConsumable

   function get_ProductId
   (
      this : in out UnfulfilledConsumable
   )
   return WinRt.WString;

   function get_TransactionId
   (
      this : in out UnfulfilledConsumable
   )
   return WinRt.Guid;

   function get_OfferId
   (
      this : in out UnfulfilledConsumable
   )
   return WinRt.WString;

end;
