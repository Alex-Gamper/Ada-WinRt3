--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Storage;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Media.Playlists is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IPlaylist_Interface is interface and WinRt.IInspectable_Interface;
   type IPlaylist is access IPlaylist_Interface'Class;
   type IPlaylist_Ptr is access all IPlaylist;

   type IPlaylistStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPlaylistStatics is access IPlaylistStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Playlist is new Ada.Finalization.Limited_Controlled with
      record
         m_IPlaylist : access Windows.Media.Playlists.IPlaylist;
      end record;
   type Playlist_Ptr is access all Playlist;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type PlaylistFormat is (
      WindowsMedia_e,
      Zune_e,
      M3u_e
   );
   for PlaylistFormat use (
      WindowsMedia_e => 0,
      Zune_e => 1,
      M3u_e => 2
   );
   type PlaylistFormat_Ptr is access PlaylistFormat;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type PlaylistsContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type PlaylistsContract_Ptr is access PlaylistsContract;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IPlaylist is interface and WinRt.IInspectable;

      function get_Files
      (
         this : access IPlaylist_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SaveAsync
      (
         this : access IPlaylist_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function SaveAsAsync
      (
         this : access IPlaylist_Interface;
         saveLocation : Windows.Storage.IStorageFolder;
         desiredName : WinRt.HString;
         option : Windows.Storage.NameCollisionOption;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SaveAsAsync
      (
         this : access IPlaylist_Interface;
         saveLocation : Windows.Storage.IStorageFolder;
         desiredName : WinRt.HString;
         option : Windows.Storage.NameCollisionOption;
         playlistFormat : Windows.Media.Playlists.PlaylistFormat;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPlaylist : aliased WinRt.IID := (2151102197, 53060, 19863, (131, 179, 122, 8, 158, 154, 182, 99 ));

   -----------------------------------------------------------------------------
   -- type IPlaylistStatics is interface and WinRt.IInspectable;

      function LoadAsync
      (
         this : access IPlaylistStatics_Interface;
         file : Windows.Storage.IStorageFile;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPlaylistStatics : aliased WinRt.IID := (3317903821, 33273, 20467, (149, 185, 112, 182, 255, 4, 107, 104 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Playlist

   overriding procedure Initialize (this : in out Playlist);
   overriding procedure Finalize (this : in out Playlist);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Playlist

   function Constructor return Playlist;

   -----------------------------------------------------------------------------
   -- Static Interfaces for Playlist

   function LoadAsync
   (
      file : Windows.Storage.IStorageFile
   )
   return WinRt.Windows.Media.Playlists.Playlist;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Playlist

   function get_Files
   (
      this : in out Playlist
   )
   return WinRt.GenericObject;

   procedure SaveAsync
   (
      this : in out Playlist
   );

   function SaveAsAsync
   (
      this : in out Playlist;
      saveLocation : Windows.Storage.IStorageFolder;
      desiredName : WinRt.WString;
      option : Windows.Storage.NameCollisionOption
   )
   return WinRt.Windows.Storage.StorageFile'Class;

   function SaveAsAsync
   (
      this : in out Playlist;
      saveLocation : Windows.Storage.IStorageFolder;
      desiredName : WinRt.WString;
      option : Windows.Storage.NameCollisionOption;
      playlistFormat : Windows.Media.Playlists.PlaylistFormat
   )
   return WinRt.Windows.Storage.StorageFile'Class;

end;
