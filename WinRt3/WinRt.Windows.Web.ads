--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Web is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IUriToStreamResolver_Interface is interface and WinRt.IInspectable_Interface;
   type IUriToStreamResolver is access all IUriToStreamResolver_Interface'Class;

   type IWebErrorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IWebErrorStatics is access all IWebErrorStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type WebErrorStatus is (
      Unknown_e,
      CertificateCommonNameIsIncorrect_e,
      CertificateExpired_e,
      CertificateContainsErrors_e,
      CertificateRevoked_e,
      CertificateIsInvalid_e,
      ServerUnreachable_e,
      Timeout_e,
      ErrorHttpInvalidServerResponse_e,
      ConnectionAborted_e,
      ConnectionReset_e,
      Disconnected_e,
      HttpToHttpsOnRedirection_e,
      HttpsToHttpOnRedirection_e,
      CannotConnect_e,
      HostNameNotResolved_e,
      OperationCanceled_e,
      RedirectFailed_e,
      UnexpectedStatusCode_e,
      UnexpectedRedirection_e,
      UnexpectedClientError_e,
      UnexpectedServerError_e,
      InsufficientRangeSupport_e,
      MissingContentLengthSupport_e,
      MultipleChoices_e,
      MovedPermanently_e,
      Found_e,
      SeeOther_e,
      NotModified_e,
      UseProxy_e,
      TemporaryRedirect_e,
      BadRequest_e,
      Unauthorized_e,
      PaymentRequired_e,
      Forbidden_e,
      NotFound_e,
      MethodNotAllowed_e,
      NotAcceptable_e,
      ProxyAuthenticationRequired_e,
      RequestTimeout_e,
      Conflict_e,
      Gone_e,
      LengthRequired_e,
      PreconditionFailed_e,
      RequestEntityTooLarge_e,
      RequestUriTooLong_e,
      UnsupportedMediaType_e,
      RequestedRangeNotSatisfiable_e,
      ExpectationFailed_e,
      InternalServerError_e,
      NotImplemented_e,
      BadGateway_e,
      ServiceUnavailable_e,
      GatewayTimeout_e,
      HttpVersionNotSupported_e
   );
   for WebErrorStatus use (
      Unknown_e => 0,
      CertificateCommonNameIsIncorrect_e => 1,
      CertificateExpired_e => 2,
      CertificateContainsErrors_e => 3,
      CertificateRevoked_e => 4,
      CertificateIsInvalid_e => 5,
      ServerUnreachable_e => 6,
      Timeout_e => 7,
      ErrorHttpInvalidServerResponse_e => 8,
      ConnectionAborted_e => 9,
      ConnectionReset_e => 10,
      Disconnected_e => 11,
      HttpToHttpsOnRedirection_e => 12,
      HttpsToHttpOnRedirection_e => 13,
      CannotConnect_e => 14,
      HostNameNotResolved_e => 15,
      OperationCanceled_e => 16,
      RedirectFailed_e => 17,
      UnexpectedStatusCode_e => 18,
      UnexpectedRedirection_e => 19,
      UnexpectedClientError_e => 20,
      UnexpectedServerError_e => 21,
      InsufficientRangeSupport_e => 22,
      MissingContentLengthSupport_e => 23,
      MultipleChoices_e => 300,
      MovedPermanently_e => 301,
      Found_e => 302,
      SeeOther_e => 303,
      NotModified_e => 304,
      UseProxy_e => 305,
      TemporaryRedirect_e => 307,
      BadRequest_e => 400,
      Unauthorized_e => 401,
      PaymentRequired_e => 402,
      Forbidden_e => 403,
      NotFound_e => 404,
      MethodNotAllowed_e => 405,
      NotAcceptable_e => 406,
      ProxyAuthenticationRequired_e => 407,
      RequestTimeout_e => 408,
      Conflict_e => 409,
      Gone_e => 410,
      LengthRequired_e => 411,
      PreconditionFailed_e => 412,
      RequestEntityTooLarge_e => 413,
      RequestUriTooLong_e => 414,
      UnsupportedMediaType_e => 415,
      RequestedRangeNotSatisfiable_e => 416,
      ExpectationFailed_e => 417,
      InternalServerError_e => 500,
      NotImplemented_e => 501,
      BadGateway_e => 502,
      ServiceUnavailable_e => 503,
      GatewayTimeout_e => 504,
      HttpVersionNotSupported_e => 505
   );
   type WebErrorStatus_Ptr is access all WebErrorStatus;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IUriToStreamResolver is interface and WinRt.IInspectable;

      function UriToStreamAsync
      (
         this : access IUriToStreamResolver_Interface;
         uri : Windows.Foundation.IUriRuntimeClass;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IUriToStreamResolver : aliased WinRt.IID := (2964039786, 39659, 19770, (149, 144, 0, 62, 60, 167, 226, 144 ));

   -----------------------------------------------------------------------------
   -- type IWebErrorStatics is interface and WinRt.IInspectable;

      function GetStatus
      (
         this : access IWebErrorStatics_Interface;
         hresult : WinRt.Int32;
         RetVal : access Windows.Web.WebErrorStatus
      )
      return WinRt.Hresult is abstract;

      IID_IWebErrorStatics : aliased WinRt.IID := (4267796326, 48935, 16484, (135, 183, 101, 99, 187, 17, 206, 46 ));

end;
