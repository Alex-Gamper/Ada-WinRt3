--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.ApplicationModel.ExtendedExecution is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IExtendedExecutionRevokedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IExtendedExecutionRevokedEventArgs is access IExtendedExecutionRevokedEventArgs_Interface'Class;
   type IExtendedExecutionRevokedEventArgs_Ptr is access all IExtendedExecutionRevokedEventArgs;

   type IExtendedExecutionSession_Interface is interface and WinRt.IInspectable_Interface;
   type IExtendedExecutionSession is access IExtendedExecutionSession_Interface'Class;
   type IExtendedExecutionSession_Ptr is access all IExtendedExecutionSession;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type ExtendedExecutionRevokedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IExtendedExecutionRevokedEventArgs : access Windows.ApplicationModel.ExtendedExecution.IExtendedExecutionRevokedEventArgs;
      end record;
   type ExtendedExecutionRevokedEventArgs_Ptr is access all ExtendedExecutionRevokedEventArgs;

   type ExtendedExecutionSession is new Ada.Finalization.Limited_Controlled with
      record
         m_IExtendedExecutionSession : access Windows.ApplicationModel.ExtendedExecution.IExtendedExecutionSession;
      end record;
   type ExtendedExecutionSession_Ptr is access all ExtendedExecutionSession;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type ExtendedExecutionReason is (
      Unspecified_e,
      LocationTracking_e,
      SavingData_e
   );
   for ExtendedExecutionReason use (
      Unspecified_e => 0,
      LocationTracking_e => 1,
      SavingData_e => 2
   );
   type ExtendedExecutionReason_Ptr is access ExtendedExecutionReason;

   type ExtendedExecutionResult is (
      Allowed_e,
      Denied_e
   );
   for ExtendedExecutionResult use (
      Allowed_e => 0,
      Denied_e => 1
   );
   type ExtendedExecutionResult_Ptr is access ExtendedExecutionResult;

   type ExtendedExecutionRevokedReason is (
      Resumed_e,
      SystemPolicy_e
   );
   for ExtendedExecutionRevokedReason use (
      Resumed_e => 0,
      SystemPolicy_e => 1
   );
   type ExtendedExecutionRevokedReason_Ptr is access ExtendedExecutionRevokedReason;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IExtendedExecutionRevokedEventArgs is interface and WinRt.IInspectable;

      function get_Reason
      (
         this : access IExtendedExecutionRevokedEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionRevokedReason
      )
      return WinRt.Hresult is abstract;

      IID_IExtendedExecutionRevokedEventArgs : aliased WinRt.IID := (3216809750, 25525, 19467, (170, 214, 130, 138, 245, 55, 62, 195 ));

   -----------------------------------------------------------------------------
   -- type IExtendedExecutionSession is interface and WinRt.IInspectable;

      function get_Reason
      (
         this : access IExtendedExecutionSession_Interface;
         RetVal : access Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionReason
      )
      return WinRt.Hresult is abstract;

      function put_Reason
      (
         this : access IExtendedExecutionSession_Interface;
         value : Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionReason
      )
      return WinRt.Hresult is abstract;

      function get_Description
      (
         this : access IExtendedExecutionSession_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Description
      (
         this : access IExtendedExecutionSession_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PercentProgress
      (
         this : access IExtendedExecutionSession_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_PercentProgress
      (
         this : access IExtendedExecutionSession_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_Revoked
      (
         this : access IExtendedExecutionSession_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Revoked
      (
         this : access IExtendedExecutionSession_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function RequestExtensionAsync
      (
         this : access IExtendedExecutionSession_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IExtendedExecutionSession : aliased WinRt.IID := (2945485357, 4491, 18673, (147, 8, 12, 79, 196, 30, 32, 15 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ExtendedExecutionRevokedEventArgs

   overriding procedure Initialize (this : in out ExtendedExecutionRevokedEventArgs);
   overriding procedure Finalize (this : in out ExtendedExecutionRevokedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ExtendedExecutionRevokedEventArgs

   function get_Reason
   (
      this : in out ExtendedExecutionRevokedEventArgs
   )
   return WinRt.Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionRevokedReason;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ExtendedExecutionSession

   overriding procedure Initialize (this : in out ExtendedExecutionSession);
   overriding procedure Finalize (this : in out ExtendedExecutionSession);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ExtendedExecutionSession

   function Constructor return ExtendedExecutionSession;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ExtendedExecutionSession

   function get_Reason
   (
      this : in out ExtendedExecutionSession
   )
   return WinRt.Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionReason;

   procedure put_Reason
   (
      this : in out ExtendedExecutionSession;
      value : Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionReason
   );

   function get_Description
   (
      this : in out ExtendedExecutionSession
   )
   return WinRt.WString;

   procedure put_Description
   (
      this : in out ExtendedExecutionSession;
      value : WinRt.WString
   );

   function get_PercentProgress
   (
      this : in out ExtendedExecutionSession
   )
   return WinRt.UInt32;

   procedure put_PercentProgress
   (
      this : in out ExtendedExecutionSession;
      value : WinRt.UInt32
   );

   function add_Revoked
   (
      this : in out ExtendedExecutionSession;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Revoked
   (
      this : in out ExtendedExecutionSession;
      token : Windows.Foundation.EventRegistrationToken
   );

   function RequestExtensionAsync
   (
      this : in out ExtendedExecutionSession
   )
   return WinRt.Windows.ApplicationModel.ExtendedExecution.ExtendedExecutionResult;

   procedure Close
   (
      this : in out ExtendedExecutionSession
   );

end;
