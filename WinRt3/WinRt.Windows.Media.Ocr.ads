--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Globalization;
limited with WinRt.Windows.Graphics.Imaging;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Media.Ocr is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IOcrEngine_Interface is interface and WinRt.IInspectable_Interface;
   type IOcrEngine is access IOcrEngine_Interface'Class;
   type IOcrEngine_Ptr is access all IOcrEngine;

   type IOcrEngineStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IOcrEngineStatics is access IOcrEngineStatics_Interface'Class;

   type IOcrLine_Interface is interface and WinRt.IInspectable_Interface;
   type IOcrLine is access IOcrLine_Interface'Class;
   type IOcrLine_Ptr is access all IOcrLine;

   type IOcrResult_Interface is interface and WinRt.IInspectable_Interface;
   type IOcrResult is access IOcrResult_Interface'Class;
   type IOcrResult_Ptr is access all IOcrResult;

   type IOcrWord_Interface is interface and WinRt.IInspectable_Interface;
   type IOcrWord is access IOcrWord_Interface'Class;
   type IOcrWord_Ptr is access all IOcrWord;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type OcrEngine is new Ada.Finalization.Limited_Controlled with
      record
         m_IOcrEngine : access Windows.Media.Ocr.IOcrEngine;
      end record;
   type OcrEngine_Ptr is access all OcrEngine;

   type OcrLine is new Ada.Finalization.Limited_Controlled with
      record
         m_IOcrLine : access Windows.Media.Ocr.IOcrLine;
      end record;
   type OcrLine_Ptr is access all OcrLine;

   type OcrResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IOcrResult : access Windows.Media.Ocr.IOcrResult;
      end record;
   type OcrResult_Ptr is access all OcrResult;

   type OcrWord is new Ada.Finalization.Limited_Controlled with
      record
         m_IOcrWord : access Windows.Media.Ocr.IOcrWord;
      end record;
   type OcrWord_Ptr is access all OcrWord;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_IOcrWord is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Media.Ocr.IOcrWord);
   IID_IVectorView_IOcrWord : aliased WinRt.IID := (2553682480, 7745, 22888, (185, 212, 25, 37, 58, 252, 188, 131 ));
   function QInterface_IVectorView_IOcrWord is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IOcrWord.Kind, IID_IVectorView_IOcrWord'Access);

   package IVectorView_IOcrLine is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Media.Ocr.IOcrLine);
   IID_IVectorView_IOcrLine : aliased WinRt.IID := (1396734671, 64622, 24380, (153, 76, 197, 254, 143, 160, 29, 129 ));
   function QInterface_IVectorView_IOcrLine is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IOcrLine.Kind, IID_IVectorView_IOcrLine'Access);

   package IReference_Double is new WinRt.Windows.Foundation.IReference (WinRt.Double);
   IID_IReference_Double : aliased WinRt.IID := (1396734671, 64622, 24380, (153, 76, 197, 254, 143, 160, 29, 129 ));
   function QInterface_IReference_Double is new Generic_QueryInterface (GenericObject_Interface, IReference_Double.Kind, IID_IReference_Double'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IOcrEngine is interface and WinRt.IInspectable;

      function RecognizeAsync
      (
         this : access IOcrEngine_Interface;
         bitmap : Windows.Graphics.Imaging.ISoftwareBitmap;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_RecognizerLanguage
      (
         this : access IOcrEngine_Interface;
         RetVal : access Windows.Globalization.ILanguage
      )
      return WinRt.Hresult is abstract;

      IID_IOcrEngine : aliased WinRt.IID := (1511308353, 23414, 12608, (182, 128, 136, 37, 86, 38, 131, 172 ));

   -----------------------------------------------------------------------------
   -- type IOcrEngineStatics is interface and WinRt.IInspectable;

      function get_MaxImageDimension
      (
         this : access IOcrEngineStatics_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_AvailableRecognizerLanguages
      (
         this : access IOcrEngineStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function IsLanguageSupported
      (
         this : access IOcrEngineStatics_Interface;
         language : Windows.Globalization.ILanguage;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function TryCreateFromLanguage
      (
         this : access IOcrEngineStatics_Interface;
         language : Windows.Globalization.ILanguage;
         RetVal : access Windows.Media.Ocr.IOcrEngine
      )
      return WinRt.Hresult is abstract;

      function TryCreateFromUserProfileLanguages
      (
         this : access IOcrEngineStatics_Interface;
         RetVal : access Windows.Media.Ocr.IOcrEngine
      )
      return WinRt.Hresult is abstract;

      IID_IOcrEngineStatics : aliased WinRt.IID := (1543481434, 13188, 13632, (153, 64, 105, 145, 32, 212, 40, 168 ));

   -----------------------------------------------------------------------------
   -- type IOcrLine is interface and WinRt.IInspectable;

      function get_Words
      (
         this : access IOcrLine_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Text
      (
         this : access IOcrLine_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IOcrLine : aliased WinRt.IID := (4432239, 58143, 14884, (137, 156, 212, 68, 189, 8, 129, 36 ));

   -----------------------------------------------------------------------------
   -- type IOcrResult is interface and WinRt.IInspectable;

      function get_Lines
      (
         this : access IOcrResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_TextAngle
      (
         this : access IOcrResult_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Text
      (
         this : access IOcrResult_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IOcrResult : aliased WinRt.IID := (2614244786, 5979, 15722, (146, 226, 56, 140, 32, 110, 47, 99 ));

   -----------------------------------------------------------------------------
   -- type IOcrWord is interface and WinRt.IInspectable;

      function get_BoundingRect
      (
         this : access IOcrWord_Interface;
         RetVal : access Windows.Foundation.Rect
      )
      return WinRt.Hresult is abstract;

      function get_Text
      (
         this : access IOcrWord_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IOcrWord : aliased WinRt.IID := (1009403770, 23769, 13605, (186, 42, 35, 209, 224, 166, 138, 29 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OcrEngine

   overriding procedure Initialize (this : in out OcrEngine);
   overriding procedure Finalize (this : in out OcrEngine);

   -----------------------------------------------------------------------------
   -- Static Interfaces for OcrEngine

   function get_MaxImageDimension
   return WinRt.UInt32;

   function get_AvailableRecognizerLanguages
   return WinRt.GenericObject;

   function IsLanguageSupported
   (
      language : Windows.Globalization.Language'Class
   )
   return WinRt.Boolean;

   function TryCreateFromLanguage
   (
      language : Windows.Globalization.Language'Class
   )
   return WinRt.Windows.Media.Ocr.OcrEngine;

   function TryCreateFromUserProfileLanguages
   return WinRt.Windows.Media.Ocr.OcrEngine;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OcrEngine

   function RecognizeAsync
   (
      this : in out OcrEngine;
      bitmap : Windows.Graphics.Imaging.SoftwareBitmap'Class
   )
   return WinRt.Windows.Media.Ocr.OcrResult'Class;

   function get_RecognizerLanguage
   (
      this : in out OcrEngine
   )
   return WinRt.Windows.Globalization.Language'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OcrLine

   overriding procedure Initialize (this : in out OcrLine);
   overriding procedure Finalize (this : in out OcrLine);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OcrLine

   function get_Words
   (
      this : in out OcrLine
   )
   return IVectorView_IOcrWord.Kind;

   function get_Text
   (
      this : in out OcrLine
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OcrResult

   overriding procedure Initialize (this : in out OcrResult);
   overriding procedure Finalize (this : in out OcrResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OcrResult

   function get_Lines
   (
      this : in out OcrResult
   )
   return IVectorView_IOcrLine.Kind;

   function get_TextAngle
   (
      this : in out OcrResult
   )
   return IReference_Double.Kind;

   function get_Text
   (
      this : in out OcrResult
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OcrWord

   overriding procedure Initialize (this : in out OcrWord);
   overriding procedure Finalize (this : in out OcrWord);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OcrWord

   function get_BoundingRect
   (
      this : in out OcrWord
   )
   return WinRt.Windows.Foundation.Rect;

   function get_Text
   (
      this : in out OcrWord
   )
   return WinRt.WString;

end;
