--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with WinRt.Windows.Foundation.Numerics;
limited with WinRt.Windows.Graphics.DirectX;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Composition.Scenes is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ISceneBoundingBox_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneBoundingBox is access ISceneBoundingBox_Interface'Class;
   type ISceneBoundingBox_Ptr is access all ISceneBoundingBox;

   type ISceneComponent_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneComponent is access ISceneComponent_Interface'Class;
   type ISceneComponent_Ptr is access all ISceneComponent;
   type ISceneComponent_Array is array (Natural range <>) of ISceneComponent;

   type ISceneComponentCollection_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneComponentCollection is access ISceneComponentCollection_Interface'Class;

   type ISceneComponentFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneComponentFactory is access ISceneComponentFactory_Interface'Class;

   type ISceneMaterial_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMaterial is access ISceneMaterial_Interface'Class;
   type ISceneMaterial_Ptr is access all ISceneMaterial;

   type ISceneMaterialFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMaterialFactory is access ISceneMaterialFactory_Interface'Class;

   type ISceneMaterialInput_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMaterialInput is access ISceneMaterialInput_Interface'Class;
   type ISceneMaterialInput_Ptr is access all ISceneMaterialInput;

   type ISceneMaterialInputFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMaterialInputFactory is access ISceneMaterialInputFactory_Interface'Class;

   type ISceneMesh_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMesh is access ISceneMesh_Interface'Class;
   type ISceneMesh_Ptr is access all ISceneMesh;

   type ISceneMeshMaterialAttributeMap_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMeshMaterialAttributeMap is access ISceneMeshMaterialAttributeMap_Interface'Class;
   type ISceneMeshMaterialAttributeMap_Ptr is access all ISceneMeshMaterialAttributeMap;

   type ISceneMeshRendererComponent_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMeshRendererComponent is access ISceneMeshRendererComponent_Interface'Class;
   type ISceneMeshRendererComponent_Ptr is access all ISceneMeshRendererComponent;

   type ISceneMeshRendererComponentStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMeshRendererComponentStatics is access ISceneMeshRendererComponentStatics_Interface'Class;

   type ISceneMeshStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMeshStatics is access ISceneMeshStatics_Interface'Class;

   type ISceneMetallicRoughnessMaterial_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMetallicRoughnessMaterial is access ISceneMetallicRoughnessMaterial_Interface'Class;
   type ISceneMetallicRoughnessMaterial_Ptr is access all ISceneMetallicRoughnessMaterial;

   type ISceneMetallicRoughnessMaterialStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneMetallicRoughnessMaterialStatics is access ISceneMetallicRoughnessMaterialStatics_Interface'Class;

   type ISceneModelTransform_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneModelTransform is access ISceneModelTransform_Interface'Class;
   type ISceneModelTransform_Ptr is access all ISceneModelTransform;

   type ISceneNode_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneNode is access ISceneNode_Interface'Class;
   type ISceneNode_Ptr is access all ISceneNode;
   type ISceneNode_Array is array (Natural range <>) of ISceneNode;

   type ISceneNodeCollection_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneNodeCollection is access ISceneNodeCollection_Interface'Class;

   type ISceneNodeStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneNodeStatics is access ISceneNodeStatics_Interface'Class;

   type ISceneObject_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneObject is access ISceneObject_Interface'Class;
   type ISceneObject_Ptr is access all ISceneObject;

   type ISceneObjectFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneObjectFactory is access ISceneObjectFactory_Interface'Class;

   type IScenePbrMaterial_Interface is interface and WinRt.IInspectable_Interface;
   type IScenePbrMaterial is access IScenePbrMaterial_Interface'Class;
   type IScenePbrMaterial_Ptr is access all IScenePbrMaterial;

   type IScenePbrMaterialFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IScenePbrMaterialFactory is access IScenePbrMaterialFactory_Interface'Class;

   type ISceneRendererComponent_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneRendererComponent is access ISceneRendererComponent_Interface'Class;
   type ISceneRendererComponent_Ptr is access all ISceneRendererComponent;

   type ISceneRendererComponentFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneRendererComponentFactory is access ISceneRendererComponentFactory_Interface'Class;

   type ISceneSurfaceMaterialInput_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneSurfaceMaterialInput is access ISceneSurfaceMaterialInput_Interface'Class;
   type ISceneSurfaceMaterialInput_Ptr is access all ISceneSurfaceMaterialInput;

   type ISceneSurfaceMaterialInputStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneSurfaceMaterialInputStatics is access ISceneSurfaceMaterialInputStatics_Interface'Class;

   type ISceneVisual_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneVisual is access ISceneVisual_Interface'Class;
   type ISceneVisual_Ptr is access all ISceneVisual;

   type ISceneVisualStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISceneVisualStatics is access ISceneVisualStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type SceneObject is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneObject : access Windows.UI.Composition.Scenes.ISceneObject;
      end record;
   type SceneObject_Ptr is access all SceneObject;

   type SceneBoundingBox is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneBoundingBox : access Windows.UI.Composition.Scenes.ISceneBoundingBox;
      end record;
   type SceneBoundingBox_Ptr is access all SceneBoundingBox;

   type SceneComponent is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneComponent : access Windows.UI.Composition.Scenes.ISceneComponent;
      end record;
   type SceneComponent_Ptr is access all SceneComponent;

   type SceneComponentCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_GenericObject : access GenericObject;
      end record;
   type SceneComponentCollection_Ptr is access all SceneComponentCollection;

   type SceneMaterial is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneMaterial : access Windows.UI.Composition.Scenes.ISceneMaterial;
      end record;
   type SceneMaterial_Ptr is access all SceneMaterial;

   type SceneMaterialInput is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneMaterialInput : access Windows.UI.Composition.Scenes.ISceneMaterialInput;
      end record;
   type SceneMaterialInput_Ptr is access all SceneMaterialInput;

   type SceneMesh is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneMesh : access Windows.UI.Composition.Scenes.ISceneMesh;
      end record;
   type SceneMesh_Ptr is access all SceneMesh;

   type SceneMeshMaterialAttributeMap is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneMeshMaterialAttributeMap : access Windows.UI.Composition.Scenes.ISceneMeshMaterialAttributeMap;
      end record;
   type SceneMeshMaterialAttributeMap_Ptr is access all SceneMeshMaterialAttributeMap;

   type SceneRendererComponent is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneRendererComponent : access Windows.UI.Composition.Scenes.ISceneRendererComponent;
      end record;
   type SceneRendererComponent_Ptr is access all SceneRendererComponent;

   type SceneMeshRendererComponent is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneMeshRendererComponent : access Windows.UI.Composition.Scenes.ISceneMeshRendererComponent;
      end record;
   type SceneMeshRendererComponent_Ptr is access all SceneMeshRendererComponent;

   type ScenePbrMaterial is new Ada.Finalization.Limited_Controlled with
      record
         m_IScenePbrMaterial : access Windows.UI.Composition.Scenes.IScenePbrMaterial;
      end record;
   type ScenePbrMaterial_Ptr is access all ScenePbrMaterial;

   type SceneMetallicRoughnessMaterial is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneMetallicRoughnessMaterial : access Windows.UI.Composition.Scenes.ISceneMetallicRoughnessMaterial;
      end record;
   type SceneMetallicRoughnessMaterial_Ptr is access all SceneMetallicRoughnessMaterial;

   type SceneModelTransform is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneModelTransform : access Windows.UI.Composition.Scenes.ISceneModelTransform;
      end record;
   type SceneModelTransform_Ptr is access all SceneModelTransform;

   type SceneNode is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneNode : access Windows.UI.Composition.Scenes.ISceneNode;
      end record;
   type SceneNode_Ptr is access all SceneNode;

   type SceneNodeCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_GenericObject : access GenericObject;
      end record;
   type SceneNodeCollection_Ptr is access all SceneNodeCollection;

   type SceneSurfaceMaterialInput is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneSurfaceMaterialInput : access Windows.UI.Composition.Scenes.ISceneSurfaceMaterialInput;
      end record;
   type SceneSurfaceMaterialInput_Ptr is access all SceneSurfaceMaterialInput;

   type SceneVisual is new Ada.Finalization.Limited_Controlled with
      record
         m_ISceneVisual : access Windows.UI.Composition.Scenes.ISceneVisual;
      end record;
   type SceneVisual_Ptr is access all SceneVisual;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type SceneAlphaMode is (
      Opaque_e,
      AlphaTest_e,
      Blend_e
   );
   for SceneAlphaMode use (
      Opaque_e => 0,
      AlphaTest_e => 1,
      Blend_e => 2
   );
   type SceneAlphaMode_Ptr is access SceneAlphaMode;

   type SceneAttributeSemantic is (
      Index_e,
      Vertex_e,
      Normal_e,
      TexCoord0_e,
      TexCoord1_e,
      Color_e,
      Tangent_e
   );
   for SceneAttributeSemantic use (
      Index_e => 0,
      Vertex_e => 1,
      Normal_e => 2,
      TexCoord0_e => 3,
      TexCoord1_e => 4,
      Color_e => 5,
      Tangent_e => 6
   );
   type SceneAttributeSemantic_Ptr is access SceneAttributeSemantic;

   type SceneComponentType is (
      MeshRendererComponent_e
   );
   for SceneComponentType use (
      MeshRendererComponent_e => 0
   );
   type SceneComponentType_Ptr is access SceneComponentType;

   type SceneWrappingMode is (
      ClampToEdge_e,
      MirroredRepeat_e,
      Repeat_e
   );
   for SceneWrappingMode use (
      ClampToEdge_e => 0,
      MirroredRepeat_e => 1,
      Repeat_e => 2
   );
   type SceneWrappingMode_Ptr is access SceneWrappingMode;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ISceneBoundingBox is interface and WinRt.IInspectable;

      function get_Center
      (
         this : access ISceneBoundingBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Extents
      (
         this : access ISceneBoundingBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Max
      (
         this : access ISceneBoundingBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Min
      (
         this : access ISceneBoundingBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access ISceneBoundingBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      IID_ISceneBoundingBox : aliased WinRt.IID := (1569717360, 50712, 16515, (130, 81, 153, 98, 89, 49, 20, 170 ));

   -----------------------------------------------------------------------------
   -- type ISceneComponent is interface and WinRt.IInspectable;

      function get_ComponentType
      (
         this : access ISceneComponent_Interface;
         RetVal : access Windows.UI.Composition.Scenes.SceneComponentType
      )
      return WinRt.Hresult is abstract;

      IID_ISceneComponent : aliased WinRt.IID := (2921397398, 8812, 17597, (149, 203, 221, 94, 217, 235, 233, 165 ));

   -----------------------------------------------------------------------------
   -- type ISceneComponentCollection is interface and WinRt.IInspectable;

      IID_ISceneComponentCollection : aliased WinRt.IID := (3296950556, 24390, 17892, (182, 102, 163, 210, 37, 159, 155, 46 ));

   -----------------------------------------------------------------------------
   -- type ISceneComponentFactory is interface and WinRt.IInspectable;

      IID_ISceneComponentFactory : aliased WinRt.IID := (1606178164, 56792, 22665, (171, 91, 216, 250, 113, 110, 124, 158 ));

   -----------------------------------------------------------------------------
   -- type ISceneMaterial is interface and WinRt.IInspectable;

      IID_ISceneMaterial : aliased WinRt.IID := (2359774076, 12511, 19975, (148, 144, 55, 135, 90, 241, 161, 35 ));

   -----------------------------------------------------------------------------
   -- type ISceneMaterialFactory is interface and WinRt.IInspectable;

      IID_ISceneMaterialFactory : aliased WinRt.IID := (1733520409, 42759, 21076, (164, 149, 127, 220, 121, 152, 147, 185 ));

   -----------------------------------------------------------------------------
   -- type ISceneMaterialInput is interface and WinRt.IInspectable;

      IID_ISceneMaterialInput : aliased WinRt.IID := (1110054466, 7921, 18524, (151, 233, 174, 111, 149, 173, 129, 47 ));

   -----------------------------------------------------------------------------
   -- type ISceneMaterialInputFactory is interface and WinRt.IInspectable;

      IID_ISceneMaterialInputFactory : aliased WinRt.IID := (2828004212, 32010, 24140, (167, 72, 16, 21, 175, 156, 167, 79 ));

   -----------------------------------------------------------------------------
   -- type ISceneMesh is interface and WinRt.IInspectable;

      function get_Bounds
      (
         this : access ISceneMesh_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneBoundingBox
      )
      return WinRt.Hresult is abstract;

      function get_PrimitiveTopology
      (
         this : access ISceneMesh_Interface;
         RetVal : access Windows.Graphics.DirectX.DirectXPrimitiveTopology
      )
      return WinRt.Hresult is abstract;

      function put_PrimitiveTopology
      (
         this : access ISceneMesh_Interface;
         value : Windows.Graphics.DirectX.DirectXPrimitiveTopology
      )
      return WinRt.Hresult is abstract;

      function FillMeshAttribute
      (
         this : access ISceneMesh_Interface;
         semantic : Windows.UI.Composition.Scenes.SceneAttributeSemantic;
         format : Windows.Graphics.DirectX.DirectXPixelFormat;
         memory : Windows.Foundation.IMemoryBuffer
      )
      return WinRt.Hresult is abstract;

      IID_ISceneMesh : aliased WinRt.IID := (4003075376, 4437, 19468, (146, 189, 64, 2, 12, 247, 131, 71 ));

   -----------------------------------------------------------------------------
   -- type ISceneMeshMaterialAttributeMap is interface and WinRt.IInspectable;

      IID_ISceneMeshMaterialAttributeMap : aliased WinRt.IID := (3464769905, 15683, 18517, (170, 105, 49, 255, 152, 141, 4, 157 ));

   -----------------------------------------------------------------------------
   -- type ISceneMeshRendererComponent is interface and WinRt.IInspectable;

      function get_Material
      (
         this : access ISceneMeshRendererComponent_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMaterial
      )
      return WinRt.Hresult is abstract;

      function put_Material
      (
         this : access ISceneMeshRendererComponent_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMaterial
      )
      return WinRt.Hresult is abstract;

      function get_Mesh
      (
         this : access ISceneMeshRendererComponent_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMesh
      )
      return WinRt.Hresult is abstract;

      function put_Mesh
      (
         this : access ISceneMeshRendererComponent_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMesh
      )
      return WinRt.Hresult is abstract;

      function get_UVMappings
      (
         this : access ISceneMeshRendererComponent_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMeshMaterialAttributeMap
      )
      return WinRt.Hresult is abstract;

      IID_ISceneMeshRendererComponent : aliased WinRt.IID := (2569664483, 25444, 18302, (152, 254, 116, 237, 159, 212, 194, 222 ));

   -----------------------------------------------------------------------------
   -- type ISceneMeshRendererComponentStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISceneMeshRendererComponentStatics_Interface;
         compositor : Windows.UI.Composition.ICompositor;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMeshRendererComponent
      )
      return WinRt.Hresult is abstract;

      IID_ISceneMeshRendererComponentStatics : aliased WinRt.IID := (1230304122, 17497, 17697, (189, 110, 43, 56, 184, 215, 17, 234 ));

   -----------------------------------------------------------------------------
   -- type ISceneMeshStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISceneMeshStatics_Interface;
         compositor : Windows.UI.Composition.ICompositor;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMesh
      )
      return WinRt.Hresult is abstract;

      IID_ISceneMeshStatics : aliased WinRt.IID := (2215784812, 31575, 18239, (150, 107, 129, 220, 39, 123, 23, 81 ));

   -----------------------------------------------------------------------------
   -- type ISceneMetallicRoughnessMaterial is interface and WinRt.IInspectable;

      function get_BaseColorInput
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function put_BaseColorInput
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function get_BaseColorFactor
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector4
      )
      return WinRt.Hresult is abstract;

      function put_BaseColorFactor
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         value : Windows.Foundation.Numerics.Vector4
      )
      return WinRt.Hresult is abstract;

      function get_MetallicFactor
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MetallicFactor
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MetallicRoughnessInput
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function put_MetallicRoughnessInput
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function get_RoughnessFactor
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RoughnessFactor
      (
         this : access ISceneMetallicRoughnessMaterial_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ISceneMetallicRoughnessMaterial : aliased WinRt.IID := (3252229190, 31132, 17054, (164, 228, 93, 166, 69, 241, 142, 97 ));

   -----------------------------------------------------------------------------
   -- type ISceneMetallicRoughnessMaterialStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISceneMetallicRoughnessMaterialStatics_Interface;
         compositor : Windows.UI.Composition.ICompositor;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMetallicRoughnessMaterial
      )
      return WinRt.Hresult is abstract;

      IID_ISceneMetallicRoughnessMaterialStatics : aliased WinRt.IID := (1004390992, 28061, 17713, (141, 196, 178, 126, 62, 73, 183, 171 ));

   -----------------------------------------------------------------------------
   -- type ISceneModelTransform is interface and WinRt.IInspectable;

      function get_Orientation
      (
         this : access ISceneModelTransform_Interface;
         RetVal : access Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function put_Orientation
      (
         this : access ISceneModelTransform_Interface;
         value : Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngle
      (
         this : access ISceneModelTransform_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngle
      (
         this : access ISceneModelTransform_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngleInDegrees
      (
         this : access ISceneModelTransform_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngleInDegrees
      (
         this : access ISceneModelTransform_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAxis
      (
         this : access ISceneModelTransform_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_RotationAxis
      (
         this : access ISceneModelTransform_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access ISceneModelTransform_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access ISceneModelTransform_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Translation
      (
         this : access ISceneModelTransform_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Translation
      (
         this : access ISceneModelTransform_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      IID_ISceneModelTransform : aliased WinRt.IID := (3226826434, 12977, 17001, (152, 13, 185, 133, 55, 16, 10, 228 ));

   -----------------------------------------------------------------------------
   -- type ISceneNode is interface and WinRt.IInspectable;

      function get_Children
      (
         this : access ISceneNode_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Components
      (
         this : access ISceneNode_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Parent
      (
         this : access ISceneNode_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneNode
      )
      return WinRt.Hresult is abstract;

      function get_Transform
      (
         this : access ISceneNode_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneModelTransform
      )
      return WinRt.Hresult is abstract;

      function FindFirstComponentOfType
      (
         this : access ISceneNode_Interface;
         value : Windows.UI.Composition.Scenes.SceneComponentType;
         RetVal : access Windows.UI.Composition.Scenes.ISceneComponent
      )
      return WinRt.Hresult is abstract;

      IID_ISceneNode : aliased WinRt.IID := (2901590599, 62215, 17793, (156, 65, 175, 46, 41, 195, 176, 22 ));

   -----------------------------------------------------------------------------
   -- type ISceneNodeCollection is interface and WinRt.IInspectable;

      IID_ISceneNodeCollection : aliased WinRt.IID := (699244801, 11737, 17202, (190, 99, 96, 210, 207, 66, 105, 242 ));

   -----------------------------------------------------------------------------
   -- type ISceneNodeStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISceneNodeStatics_Interface;
         compositor : Windows.UI.Composition.ICompositor;
         RetVal : access Windows.UI.Composition.Scenes.ISceneNode
      )
      return WinRt.Hresult is abstract;

      IID_ISceneNodeStatics : aliased WinRt.IID := (1469714346, 48797, 16912, (144, 140, 147, 209, 95, 238, 208, 183 ));

   -----------------------------------------------------------------------------
   -- type ISceneObject is interface and WinRt.IInspectable;

      IID_ISceneObject : aliased WinRt.IID := (513025179, 3867, 18923, (168, 25, 135, 125, 132, 80, 0, 91 ));

   -----------------------------------------------------------------------------
   -- type ISceneObjectFactory is interface and WinRt.IInspectable;

      IID_ISceneObjectFactory : aliased WinRt.IID := (352221594, 13284, 21231, (149, 108, 68, 34, 157, 33, 242, 193 ));

   -----------------------------------------------------------------------------
   -- type IScenePbrMaterial is interface and WinRt.IInspectable;

      function get_AlphaCutoff
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_AlphaCutoff
      (
         this : access IScenePbrMaterial_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_AlphaMode
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access Windows.UI.Composition.Scenes.SceneAlphaMode
      )
      return WinRt.Hresult is abstract;

      function put_AlphaMode
      (
         this : access IScenePbrMaterial_Interface;
         value : Windows.UI.Composition.Scenes.SceneAlphaMode
      )
      return WinRt.Hresult is abstract;

      function get_EmissiveInput
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function put_EmissiveInput
      (
         this : access IScenePbrMaterial_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function get_EmissiveFactor
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_EmissiveFactor
      (
         this : access IScenePbrMaterial_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_IsDoubleSided
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsDoubleSided
      (
         this : access IScenePbrMaterial_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_NormalInput
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function put_NormalInput
      (
         this : access IScenePbrMaterial_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function get_NormalScale
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_NormalScale
      (
         this : access IScenePbrMaterial_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_OcclusionInput
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function put_OcclusionInput
      (
         this : access IScenePbrMaterial_Interface;
         value : Windows.UI.Composition.Scenes.ISceneMaterialInput
      )
      return WinRt.Hresult is abstract;

      function get_OcclusionStrength
      (
         this : access IScenePbrMaterial_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_OcclusionStrength
      (
         this : access IScenePbrMaterial_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IScenePbrMaterial : aliased WinRt.IID := (2864114622, 54912, 18143, (130, 148, 182, 128, 10, 159, 149, 231 ));

   -----------------------------------------------------------------------------
   -- type IScenePbrMaterialFactory is interface and WinRt.IInspectable;

      IID_IScenePbrMaterialFactory : aliased WinRt.IID := (775896574, 2949, 22311, (181, 190, 183, 211, 203, 172, 55, 250 ));

   -----------------------------------------------------------------------------
   -- type ISceneRendererComponent is interface and WinRt.IInspectable;

      IID_ISceneRendererComponent : aliased WinRt.IID := (4054628439, 53071, 16421, (155, 37, 162, 209, 148, 76, 245, 7 ));

   -----------------------------------------------------------------------------
   -- type ISceneRendererComponentFactory is interface and WinRt.IInspectable;

      IID_ISceneRendererComponentFactory : aliased WinRt.IID := (498527596, 43564, 22887, (144, 53, 86, 53, 45, 198, 150, 88 ));

   -----------------------------------------------------------------------------
   -- type ISceneSurfaceMaterialInput is interface and WinRt.IInspectable;

      function get_BitmapInterpolationMode
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         RetVal : access Windows.UI.Composition.CompositionBitmapInterpolationMode
      )
      return WinRt.Hresult is abstract;

      function put_BitmapInterpolationMode
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         value : Windows.UI.Composition.CompositionBitmapInterpolationMode
      )
      return WinRt.Hresult is abstract;

      function get_Surface
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         RetVal : access Windows.UI.Composition.ICompositionSurface
      )
      return WinRt.Hresult is abstract;

      function put_Surface
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         value : Windows.UI.Composition.ICompositionSurface
      )
      return WinRt.Hresult is abstract;

      function get_WrappingUMode
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         RetVal : access Windows.UI.Composition.Scenes.SceneWrappingMode
      )
      return WinRt.Hresult is abstract;

      function put_WrappingUMode
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         value : Windows.UI.Composition.Scenes.SceneWrappingMode
      )
      return WinRt.Hresult is abstract;

      function get_WrappingVMode
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         RetVal : access Windows.UI.Composition.Scenes.SceneWrappingMode
      )
      return WinRt.Hresult is abstract;

      function put_WrappingVMode
      (
         this : access ISceneSurfaceMaterialInput_Interface;
         value : Windows.UI.Composition.Scenes.SceneWrappingMode
      )
      return WinRt.Hresult is abstract;

      IID_ISceneSurfaceMaterialInput : aliased WinRt.IID := (2570574428, 43466, 19708, (179, 170, 8, 131, 86, 81, 135, 66 ));

   -----------------------------------------------------------------------------
   -- type ISceneSurfaceMaterialInputStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISceneSurfaceMaterialInputStatics_Interface;
         compositor : Windows.UI.Composition.ICompositor;
         RetVal : access Windows.UI.Composition.Scenes.ISceneSurfaceMaterialInput
      )
      return WinRt.Hresult is abstract;

      IID_ISceneSurfaceMaterialInputStatics : aliased WinRt.IID := (1512281299, 25641, 17801, (187, 207, 184, 79, 79, 60, 251, 254 ));

   -----------------------------------------------------------------------------
   -- type ISceneVisual is interface and WinRt.IInspectable;

      function get_Root
      (
         this : access ISceneVisual_Interface;
         RetVal : access Windows.UI.Composition.Scenes.ISceneNode
      )
      return WinRt.Hresult is abstract;

      function put_Root
      (
         this : access ISceneVisual_Interface;
         value : Windows.UI.Composition.Scenes.ISceneNode
      )
      return WinRt.Hresult is abstract;

      IID_ISceneVisual : aliased WinRt.IID := (2389126174, 55092, 18353, (190, 20, 61, 105, 79, 250, 67, 1 ));

   -----------------------------------------------------------------------------
   -- type ISceneVisualStatics is interface and WinRt.IInspectable;

      function Create
      (
         this : access ISceneVisualStatics_Interface;
         compositor : Windows.UI.Composition.ICompositor;
         RetVal : access Windows.UI.Composition.Scenes.ISceneVisual
      )
      return WinRt.Hresult is abstract;

      IID_ISceneVisualStatics : aliased WinRt.IID := (3090448026, 20650, 17703, (141, 52, 222, 76, 184, 234, 136, 180 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneObject

   overriding procedure Initialize (this : in out SceneObject);
   overriding procedure Finalize (this : in out SceneObject);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SceneObject

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneObject

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneBoundingBox

   overriding procedure Initialize (this : in out SceneBoundingBox);
   overriding procedure Finalize (this : in out SceneBoundingBox);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneBoundingBox

   function get_Center
   (
      this : in out SceneBoundingBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   function get_Extents
   (
      this : in out SceneBoundingBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   function get_Max
   (
      this : in out SceneBoundingBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   function get_Min
   (
      this : in out SceneBoundingBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   function get_Size
   (
      this : in out SceneBoundingBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneComponent

   overriding procedure Initialize (this : in out SceneComponent);
   overriding procedure Finalize (this : in out SceneComponent);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SceneComponent

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneComponent

   function get_ComponentType
   (
      this : in out SceneComponent
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneComponentType;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneComponentCollection

   overriding procedure Initialize (this : in out SceneComponentCollection);
   overriding procedure Finalize (this : in out SceneComponentCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneComponentCollection

   -- Generic Interface Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.Scenes.SceneComponent>
   function GetAt
   (
      this : in out SceneComponentCollection;
      index : WinRt.UInt32
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneComponent'Class;

   function get_Size
   (
      this : in out SceneComponentCollection
   )
   return WinRt.UInt32;

   function GetView
   (
      this : in out SceneComponentCollection
   )
   return WinRt.GenericObject;

   function IndexOf
   (
      this : in out SceneComponentCollection;
      value : Windows.UI.Composition.Scenes.SceneComponent'Class;
      index : WinRt.UInt32_Ptr
   )
   return WinRt.Boolean;

   procedure SetAt
   (
      this : in out SceneComponentCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.Scenes.SceneComponent'Class
   );

   procedure InsertAt
   (
      this : in out SceneComponentCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.Scenes.SceneComponent'Class
   );

   procedure RemoveAt
   (
      this : in out SceneComponentCollection;
      index : WinRt.UInt32
   );

   procedure Append
   (
      this : in out SceneComponentCollection;
      value : Windows.UI.Composition.Scenes.SceneComponent'Class
   );

   procedure RemoveAtEnd
   (
      this : in out SceneComponentCollection
   );

   procedure Clear
   (
      this : in out SceneComponentCollection
   );

   function GetMany
   (
      this : in out SceneComponentCollection;
      startIndex : WinRt.UInt32;
      items : Windows.UI.Composition.Scenes.ISceneComponent_Array
   )
   return WinRt.UInt32;

   procedure ReplaceAll
   (
      this : in out SceneComponentCollection;
      items : Windows.UI.Composition.Scenes.ISceneComponent_Array
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Scenes.SceneComponent>
   function First
   (
      this : in out SceneComponentCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneMaterial

   overriding procedure Initialize (this : in out SceneMaterial);
   overriding procedure Finalize (this : in out SceneMaterial);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SceneMaterial

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneMaterial

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneMaterialInput

   overriding procedure Initialize (this : in out SceneMaterialInput);
   overriding procedure Finalize (this : in out SceneMaterialInput);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SceneMaterialInput

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneMaterialInput

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneMesh

   overriding procedure Initialize (this : in out SceneMesh);
   overriding procedure Finalize (this : in out SceneMesh);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SceneMesh

   function Create
   (
      compositor : Windows.UI.Composition.Compositor'Class
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMesh;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneMesh

   function get_Bounds
   (
      this : in out SceneMesh
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneBoundingBox'Class;

   function get_PrimitiveTopology
   (
      this : in out SceneMesh
   )
   return WinRt.Windows.Graphics.DirectX.DirectXPrimitiveTopology;

   procedure put_PrimitiveTopology
   (
      this : in out SceneMesh;
      value : Windows.Graphics.DirectX.DirectXPrimitiveTopology
   );

   procedure FillMeshAttribute
   (
      this : in out SceneMesh;
      semantic : Windows.UI.Composition.Scenes.SceneAttributeSemantic;
      format : Windows.Graphics.DirectX.DirectXPixelFormat;
      memory : Windows.Foundation.MemoryBuffer'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneMeshMaterialAttributeMap

   overriding procedure Initialize (this : in out SceneMeshMaterialAttributeMap);
   overriding procedure Finalize (this : in out SceneMeshMaterialAttributeMap);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneMeshMaterialAttributeMap

   -- Generic Interface Windows.Foundation.Collections.IMap`2<System.String,Windows.UI.Composition.Scenes.SceneAttributeSemantic>
   function Lookup
   (
      this : in out SceneMeshMaterialAttributeMap;
      key : WinRt.WString
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneAttributeSemantic;

   function get_Size
   (
      this : in out SceneMeshMaterialAttributeMap
   )
   return WinRt.UInt32;

   function HasKey
   (
      this : in out SceneMeshMaterialAttributeMap;
      key : WinRt.WString
   )
   return WinRt.Boolean;

   function GetView
   (
      this : in out SceneMeshMaterialAttributeMap
   )
   return WinRt.GenericObject;

   function Insert
   (
      this : in out SceneMeshMaterialAttributeMap;
      key : WinRt.WString;
      value : Windows.UI.Composition.Scenes.SceneAttributeSemantic
   )
   return WinRt.Boolean;

   procedure Remove
   (
      this : in out SceneMeshMaterialAttributeMap;
      key : WinRt.WString
   );

   procedure Clear
   (
      this : in out SceneMeshMaterialAttributeMap
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneRendererComponent

   overriding procedure Initialize (this : in out SceneRendererComponent);
   overriding procedure Finalize (this : in out SceneRendererComponent);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for SceneRendererComponent

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneRendererComponent

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneMeshRendererComponent

   overriding procedure Initialize (this : in out SceneMeshRendererComponent);
   overriding procedure Finalize (this : in out SceneMeshRendererComponent);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SceneMeshRendererComponent

   function Create
   (
      compositor : Windows.UI.Composition.Compositor'Class
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMeshRendererComponent;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneMeshRendererComponent

   function get_Material
   (
      this : in out SceneMeshRendererComponent
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMaterial'Class;

   procedure put_Material
   (
      this : in out SceneMeshRendererComponent;
      value : Windows.UI.Composition.Scenes.SceneMaterial'Class
   );

   function get_Mesh
   (
      this : in out SceneMeshRendererComponent
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMesh'Class;

   procedure put_Mesh
   (
      this : in out SceneMeshRendererComponent;
      value : Windows.UI.Composition.Scenes.SceneMesh'Class
   );

   function get_UVMappings
   (
      this : in out SceneMeshRendererComponent
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMeshMaterialAttributeMap'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ScenePbrMaterial

   overriding procedure Initialize (this : in out ScenePbrMaterial);
   overriding procedure Finalize (this : in out ScenePbrMaterial);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ScenePbrMaterial

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ScenePbrMaterial

   function get_AlphaCutoff
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Single;

   procedure put_AlphaCutoff
   (
      this : in out ScenePbrMaterial;
      value : WinRt.Single
   );

   function get_AlphaMode
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneAlphaMode;

   procedure put_AlphaMode
   (
      this : in out ScenePbrMaterial;
      value : Windows.UI.Composition.Scenes.SceneAlphaMode
   );

   function get_EmissiveInput
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMaterialInput'Class;

   procedure put_EmissiveInput
   (
      this : in out ScenePbrMaterial;
      value : Windows.UI.Composition.Scenes.SceneMaterialInput'Class
   );

   function get_EmissiveFactor
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_EmissiveFactor
   (
      this : in out ScenePbrMaterial;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_IsDoubleSided
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Boolean;

   procedure put_IsDoubleSided
   (
      this : in out ScenePbrMaterial;
      value : WinRt.Boolean
   );

   function get_NormalInput
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMaterialInput'Class;

   procedure put_NormalInput
   (
      this : in out ScenePbrMaterial;
      value : Windows.UI.Composition.Scenes.SceneMaterialInput'Class
   );

   function get_NormalScale
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Single;

   procedure put_NormalScale
   (
      this : in out ScenePbrMaterial;
      value : WinRt.Single
   );

   function get_OcclusionInput
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMaterialInput'Class;

   procedure put_OcclusionInput
   (
      this : in out ScenePbrMaterial;
      value : Windows.UI.Composition.Scenes.SceneMaterialInput'Class
   );

   function get_OcclusionStrength
   (
      this : in out ScenePbrMaterial
   )
   return WinRt.Single;

   procedure put_OcclusionStrength
   (
      this : in out ScenePbrMaterial;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneMetallicRoughnessMaterial

   overriding procedure Initialize (this : in out SceneMetallicRoughnessMaterial);
   overriding procedure Finalize (this : in out SceneMetallicRoughnessMaterial);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SceneMetallicRoughnessMaterial

   function Create
   (
      compositor : Windows.UI.Composition.Compositor'Class
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMetallicRoughnessMaterial;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneMetallicRoughnessMaterial

   function get_BaseColorInput
   (
      this : in out SceneMetallicRoughnessMaterial
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMaterialInput'Class;

   procedure put_BaseColorInput
   (
      this : in out SceneMetallicRoughnessMaterial;
      value : Windows.UI.Composition.Scenes.SceneMaterialInput'Class
   );

   function get_BaseColorFactor
   (
      this : in out SceneMetallicRoughnessMaterial
   )
   return WinRt.Windows.Foundation.Numerics.Vector4;

   procedure put_BaseColorFactor
   (
      this : in out SceneMetallicRoughnessMaterial;
      value : Windows.Foundation.Numerics.Vector4
   );

   function get_MetallicFactor
   (
      this : in out SceneMetallicRoughnessMaterial
   )
   return WinRt.Single;

   procedure put_MetallicFactor
   (
      this : in out SceneMetallicRoughnessMaterial;
      value : WinRt.Single
   );

   function get_MetallicRoughnessInput
   (
      this : in out SceneMetallicRoughnessMaterial
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneMaterialInput'Class;

   procedure put_MetallicRoughnessInput
   (
      this : in out SceneMetallicRoughnessMaterial;
      value : Windows.UI.Composition.Scenes.SceneMaterialInput'Class
   );

   function get_RoughnessFactor
   (
      this : in out SceneMetallicRoughnessMaterial
   )
   return WinRt.Single;

   procedure put_RoughnessFactor
   (
      this : in out SceneMetallicRoughnessMaterial;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneModelTransform

   overriding procedure Initialize (this : in out SceneModelTransform);
   overriding procedure Finalize (this : in out SceneModelTransform);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneModelTransform

   function get_Orientation
   (
      this : in out SceneModelTransform
   )
   return WinRt.Windows.Foundation.Numerics.Quaternion;

   procedure put_Orientation
   (
      this : in out SceneModelTransform;
      value : Windows.Foundation.Numerics.Quaternion
   );

   function get_RotationAngle
   (
      this : in out SceneModelTransform
   )
   return WinRt.Single;

   procedure put_RotationAngle
   (
      this : in out SceneModelTransform;
      value : WinRt.Single
   );

   function get_RotationAngleInDegrees
   (
      this : in out SceneModelTransform
   )
   return WinRt.Single;

   procedure put_RotationAngleInDegrees
   (
      this : in out SceneModelTransform;
      value : WinRt.Single
   );

   function get_RotationAxis
   (
      this : in out SceneModelTransform
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_RotationAxis
   (
      this : in out SceneModelTransform;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Scale
   (
      this : in out SceneModelTransform
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Scale
   (
      this : in out SceneModelTransform;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Translation
   (
      this : in out SceneModelTransform
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Translation
   (
      this : in out SceneModelTransform;
      value : Windows.Foundation.Numerics.Vector3
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneNode

   overriding procedure Initialize (this : in out SceneNode);
   overriding procedure Finalize (this : in out SceneNode);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SceneNode

   function Create
   (
      compositor : Windows.UI.Composition.Compositor'Class
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneNode;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneNode

   function get_Children
   (
      this : in out SceneNode
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneNodeCollection'Class;

   function get_Components
   (
      this : in out SceneNode
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneComponentCollection'Class;

   function get_Parent
   (
      this : in out SceneNode
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneNode'Class;

   function get_Transform
   (
      this : in out SceneNode
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneModelTransform'Class;

   function FindFirstComponentOfType
   (
      this : in out SceneNode;
      value : Windows.UI.Composition.Scenes.SceneComponentType
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneComponent'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneNodeCollection

   overriding procedure Initialize (this : in out SceneNodeCollection);
   overriding procedure Finalize (this : in out SceneNodeCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneNodeCollection

   -- Generic Interface Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.Scenes.SceneNode>
   function GetAt
   (
      this : in out SceneNodeCollection;
      index : WinRt.UInt32
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneNode'Class;

   function get_Size
   (
      this : in out SceneNodeCollection
   )
   return WinRt.UInt32;

   function GetView
   (
      this : in out SceneNodeCollection
   )
   return WinRt.GenericObject;

   function IndexOf
   (
      this : in out SceneNodeCollection;
      value : Windows.UI.Composition.Scenes.SceneNode'Class;
      index : WinRt.UInt32_Ptr
   )
   return WinRt.Boolean;

   procedure SetAt
   (
      this : in out SceneNodeCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.Scenes.SceneNode'Class
   );

   procedure InsertAt
   (
      this : in out SceneNodeCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.Scenes.SceneNode'Class
   );

   procedure RemoveAt
   (
      this : in out SceneNodeCollection;
      index : WinRt.UInt32
   );

   procedure Append
   (
      this : in out SceneNodeCollection;
      value : Windows.UI.Composition.Scenes.SceneNode'Class
   );

   procedure RemoveAtEnd
   (
      this : in out SceneNodeCollection
   );

   procedure Clear
   (
      this : in out SceneNodeCollection
   );

   function GetMany
   (
      this : in out SceneNodeCollection;
      startIndex : WinRt.UInt32;
      items : Windows.UI.Composition.Scenes.ISceneNode_Array
   )
   return WinRt.UInt32;

   procedure ReplaceAll
   (
      this : in out SceneNodeCollection;
      items : Windows.UI.Composition.Scenes.ISceneNode_Array
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Scenes.SceneNode>
   function First
   (
      this : in out SceneNodeCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneSurfaceMaterialInput

   overriding procedure Initialize (this : in out SceneSurfaceMaterialInput);
   overriding procedure Finalize (this : in out SceneSurfaceMaterialInput);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SceneSurfaceMaterialInput

   function Create
   (
      compositor : Windows.UI.Composition.Compositor'Class
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneSurfaceMaterialInput;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneSurfaceMaterialInput

   function get_BitmapInterpolationMode
   (
      this : in out SceneSurfaceMaterialInput
   )
   return WinRt.Windows.UI.Composition.CompositionBitmapInterpolationMode;

   procedure put_BitmapInterpolationMode
   (
      this : in out SceneSurfaceMaterialInput;
      value : Windows.UI.Composition.CompositionBitmapInterpolationMode
   );

   function get_Surface
   (
      this : in out SceneSurfaceMaterialInput
   )
   return WinRt.Windows.UI.Composition.ICompositionSurface;

   procedure put_Surface
   (
      this : in out SceneSurfaceMaterialInput;
      value : Windows.UI.Composition.ICompositionSurface
   );

   function get_WrappingUMode
   (
      this : in out SceneSurfaceMaterialInput
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneWrappingMode;

   procedure put_WrappingUMode
   (
      this : in out SceneSurfaceMaterialInput;
      value : Windows.UI.Composition.Scenes.SceneWrappingMode
   );

   function get_WrappingVMode
   (
      this : in out SceneSurfaceMaterialInput
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneWrappingMode;

   procedure put_WrappingVMode
   (
      this : in out SceneSurfaceMaterialInput;
      value : Windows.UI.Composition.Scenes.SceneWrappingMode
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SceneVisual

   overriding procedure Initialize (this : in out SceneVisual);
   overriding procedure Finalize (this : in out SceneVisual);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SceneVisual

   function Create
   (
      compositor : Windows.UI.Composition.Compositor'Class
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneVisual;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SceneVisual

   function get_Root
   (
      this : in out SceneVisual
   )
   return WinRt.Windows.UI.Composition.Scenes.SceneNode'Class;

   procedure put_Root
   (
      this : in out SceneVisual;
      value : Windows.UI.Composition.Scenes.SceneNode'Class
   );

end;
