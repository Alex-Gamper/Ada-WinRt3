--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.ApplicationModel;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Management.Deployment is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IAddPackageOptions_Interface is interface and WinRt.IInspectable_Interface;
   type IAddPackageOptions is access all IAddPackageOptions_Interface'Class;
   type IAddPackageOptions_Ptr is access all IAddPackageOptions;

   type IDeploymentResult_Interface is interface and WinRt.IInspectable_Interface;
   type IDeploymentResult is access all IDeploymentResult_Interface'Class;
   type IDeploymentResult_Ptr is access all IDeploymentResult;

   type IDeploymentResult2_Interface is interface and WinRt.IInspectable_Interface;
   type IDeploymentResult2 is access all IDeploymentResult2_Interface'Class;

   type IPackageManager_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager is access all IPackageManager_Interface'Class;
   type IPackageManager_Ptr is access all IPackageManager;

   type IPackageManager2_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager2 is access all IPackageManager2_Interface'Class;

   type IPackageManager3_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager3 is access all IPackageManager3_Interface'Class;

   type IPackageManager4_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager4 is access all IPackageManager4_Interface'Class;

   type IPackageManager5_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager5 is access all IPackageManager5_Interface'Class;

   type IPackageManager6_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager6 is access all IPackageManager6_Interface'Class;

   type IPackageManager7_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager7 is access all IPackageManager7_Interface'Class;

   type IPackageManager8_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager8 is access all IPackageManager8_Interface'Class;

   type IPackageManager9_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManager9 is access all IPackageManager9_Interface'Class;

   type IPackageManagerDebugSettings_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageManagerDebugSettings is access all IPackageManagerDebugSettings_Interface'Class;
   type IPackageManagerDebugSettings_Ptr is access all IPackageManagerDebugSettings;

   type IPackageUserInformation_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageUserInformation is access all IPackageUserInformation_Interface'Class;
   type IPackageUserInformation_Ptr is access all IPackageUserInformation;

   type IPackageVolume_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageVolume is access all IPackageVolume_Interface'Class;
   type IPackageVolume_Ptr is access all IPackageVolume;

   type IPackageVolume2_Interface is interface and WinRt.IInspectable_Interface;
   type IPackageVolume2 is access all IPackageVolume2_Interface'Class;

   type IRegisterPackageOptions_Interface is interface and WinRt.IInspectable_Interface;
   type IRegisterPackageOptions is access all IRegisterPackageOptions_Interface'Class;
   type IRegisterPackageOptions_Ptr is access all IRegisterPackageOptions;

   type IStagePackageOptions_Interface is interface and WinRt.IInspectable_Interface;
   type IStagePackageOptions is access all IStagePackageOptions_Interface'Class;
   type IStagePackageOptions_Ptr is access all IStagePackageOptions;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type AddPackageOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_IAddPackageOptions : access Windows.Management.Deployment.IAddPackageOptions;
      end record;
   type AddPackageOptions_Ptr is access all AddPackageOptions;

   type DeploymentResult is new Ada.Finalization.Limited_Controlled with
      record
         m_IDeploymentResult : access Windows.Management.Deployment.IDeploymentResult;
      end record;
   type DeploymentResult_Ptr is access all DeploymentResult;

   type PackageManager is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageManager : access Windows.Management.Deployment.IPackageManager;
      end record;
   type PackageManager_Ptr is access all PackageManager;

   type PackageManagerDebugSettings is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageManagerDebugSettings : access Windows.Management.Deployment.IPackageManagerDebugSettings;
      end record;
   type PackageManagerDebugSettings_Ptr is access all PackageManagerDebugSettings;

   type PackageUserInformation is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageUserInformation : access Windows.Management.Deployment.IPackageUserInformation;
      end record;
   type PackageUserInformation_Ptr is access all PackageUserInformation;

   type PackageVolume is new Ada.Finalization.Limited_Controlled with
      record
         m_IPackageVolume : access Windows.Management.Deployment.IPackageVolume;
      end record;
   type PackageVolume_Ptr is access all PackageVolume;

   type RegisterPackageOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_IRegisterPackageOptions : access Windows.Management.Deployment.IRegisterPackageOptions;
      end record;
   type RegisterPackageOptions_Ptr is access all RegisterPackageOptions;

   type StagePackageOptions is new Ada.Finalization.Limited_Controlled with
      record
         m_IStagePackageOptions : access Windows.Management.Deployment.IStagePackageOptions;
      end record;
   type StagePackageOptions_Ptr is access all StagePackageOptions;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type AddPackageByAppInstallerOptions is (
      None_e,
      InstallAllResources_e,
      ForceTargetAppShutdown_e,
      RequiredContentGroupOnly_e,
      LimitToExistingPackages_e
   );
   for AddPackageByAppInstallerOptions use (
      None_e => 0,
      InstallAllResources_e => 32,
      ForceTargetAppShutdown_e => 64,
      RequiredContentGroupOnly_e => 256,
      LimitToExistingPackages_e => 512
   );
   type AddPackageByAppInstallerOptions_Ptr is access all AddPackageByAppInstallerOptions;

   type DeploymentOptions is (
      None_e,
      ForceApplicationShutdown_e,
      DevelopmentMode_e,
      InstallAllResources_e,
      ForceTargetApplicationShutdown_e,
      RequiredContentGroupOnly_e,
      ForceUpdateFromAnyVersion_e,
      RetainFilesOnFailure_e,
      StageInPlace_e
   );
   for DeploymentOptions use (
      None_e => 0,
      ForceApplicationShutdown_e => 1,
      DevelopmentMode_e => 2,
      InstallAllResources_e => 32,
      ForceTargetApplicationShutdown_e => 64,
      RequiredContentGroupOnly_e => 256,
      ForceUpdateFromAnyVersion_e => 262144,
      RetainFilesOnFailure_e => 2097152,
      StageInPlace_e => 4194304
   );
   type DeploymentOptions_Ptr is access all DeploymentOptions;

   type DeploymentProgressState is (
      Queued_e,
      Processing_e
   );
   for DeploymentProgressState use (
      Queued_e => 0,
      Processing_e => 1
   );
   type DeploymentProgressState_Ptr is access all DeploymentProgressState;

   type PackageInstallState is (
      NotInstalled_e,
      Staged_e,
      Installed_e,
      Paused_e
   );
   for PackageInstallState use (
      NotInstalled_e => 0,
      Staged_e => 1,
      Installed_e => 2,
      Paused_e => 6
   );
   type PackageInstallState_Ptr is access all PackageInstallState;

   type PackageState is (
      Normal_e,
      LicenseInvalid_e,
      Modified_e,
      Tampered_e
   );
   for PackageState use (
      Normal_e => 0,
      LicenseInvalid_e => 1,
      Modified_e => 2,
      Tampered_e => 3
   );
   type PackageState_Ptr is access all PackageState;

   type PackageStatus is (
      OK_e,
      LicenseIssue_e,
      Modified_e,
      Tampered_e,
      Disabled_e
   );
   for PackageStatus use (
      OK_e => 0,
      LicenseIssue_e => 1,
      Modified_e => 2,
      Tampered_e => 4,
      Disabled_e => 8
   );
   type PackageStatus_Ptr is access all PackageStatus;

   type PackageStubPreference is (
      Full_e,
      Stub_e
   );
   for PackageStubPreference use (
      Full_e => 0,
      Stub_e => 1
   );
   type PackageStubPreference_Ptr is access all PackageStubPreference;

   type PackageTypes is (
      None_e,
      Main_e,
      Framework_e,
      Resource_e,
      Bundle_e,
      Xap_e,
      Optional_e,
      All_e
   );
   for PackageTypes use (
      None_e => 0,
      Main_e => 1,
      Framework_e => 2,
      Resource_e => 4,
      Bundle_e => 8,
      Xap_e => 16,
      Optional_e => 32,
      All_e => 4294967295
   );
   type PackageTypes_Ptr is access all PackageTypes;

   type RemovalOptions is (
      None_e,
      PreserveRoamableApplicationData_e,
      PreserveApplicationData_e,
      RemoveForAllUsers_e
   );
   for RemovalOptions use (
      None_e => 0,
      PreserveRoamableApplicationData_e => 128,
      PreserveApplicationData_e => 4096,
      RemoveForAllUsers_e => 524288
   );
   type RemovalOptions_Ptr is access all RemovalOptions;

   type StubPackageOption is (
      Default_e,
      InstallFull_e,
      InstallStub_e,
      UsePreference_e
   );
   for StubPackageOption use (
      Default_e => 0,
      InstallFull_e => 1,
      InstallStub_e => 2,
      UsePreference_e => 3
   );
   type StubPackageOption_Ptr is access all StubPackageOption;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type DeploymentProgress is record
      state : Windows.Management.Deployment.DeploymentProgressState;
      percentage : WinRt.UInt32;
   end record with Convention => C_Pass_By_Copy;
   type DeploymentProgress_Ptr is access all DeploymentProgress;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVector_IUriRuntimeClass is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.Foundation.IUriRuntimeClass);
   IID_IVector_IUriRuntimeClass : aliased WinRt.IID := (452610822, 63973, 23541, (145, 81, 174, 128, 179, 64, 102, 12 ));
   function QInterface_IVector_IUriRuntimeClass is new Generic_QueryInterface (GenericObject_Interface, IVector_IUriRuntimeClass.Kind, IID_IVector_IUriRuntimeClass'Access);

   package IVector_HString is new WinRt.Windows.Foundation.Collections.IVector (WinRt.HString);
   IID_IVector_HString : aliased WinRt.IID := (452610822, 63973, 23541, (145, 81, 174, 128, 179, 64, 102, 12 ));
   function QInterface_IVector_HString is new Generic_QueryInterface (GenericObject_Interface, IVector_HString.Kind, IID_IVector_HString'Access);

   package IIterable_IPackageUserInformation is new WinRt.Windows.Foundation.Collections.IIterable (WinRt.Windows.Management.Deployment.IPackageUserInformation);
   IID_IIterable_IPackageUserInformation : aliased WinRt.IID := (1041388540, 30476, 23957, (175, 5, 88, 173, 164, 47, 24, 43 ));
   function QInterface_IIterable_IPackageUserInformation is new Generic_QueryInterface (GenericObject_Interface, IIterable_IPackageUserInformation.Kind, IID_IIterable_IPackageUserInformation'Access);

   package IIterable_IPackageVolume is new WinRt.Windows.Foundation.Collections.IIterable (WinRt.Windows.Management.Deployment.IPackageVolume);
   IID_IIterable_IPackageVolume : aliased WinRt.IID := (3628842396, 15151, 23081, (191, 34, 41, 66, 173, 204, 102, 197 ));
   function QInterface_IIterable_IPackageVolume is new Generic_QueryInterface (GenericObject_Interface, IIterable_IPackageVolume.Kind, IID_IIterable_IPackageVolume'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IAddPackageOptions is interface and WinRt.IInspectable;

      function get_DependencyPackageUris
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_TargetVolume
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function put_TargetVolume
      (
         this : access IAddPackageOptions_Interface;
         value : Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function get_OptionalPackageFamilyNames
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_OptionalPackageUris
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_RelatedPackageUris
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExternalLocationUri
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function put_ExternalLocationUri
      (
         this : access IAddPackageOptions_Interface;
         value : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_StubPackageOption
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access Windows.Management.Deployment.StubPackageOption
      )
      return WinRt.Hresult is abstract;

      function put_StubPackageOption
      (
         this : access IAddPackageOptions_Interface;
         value : Windows.Management.Deployment.StubPackageOption
      )
      return WinRt.Hresult is abstract;

      function get_DeveloperMode
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DeveloperMode
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceAppShutdown
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceAppShutdown
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceTargetAppShutdown
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceTargetAppShutdown
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceUpdateFromAnyVersion
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceUpdateFromAnyVersion
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_InstallAllResources
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_InstallAllResources
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_RequiredContentGroupOnly
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_RequiredContentGroupOnly
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_RetainFilesOnFailure
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_RetainFilesOnFailure
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StageInPlace
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_StageInPlace
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_AllowUnsigned
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AllowUnsigned
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DeferRegistrationWhenPackagesAreInUse
      (
         this : access IAddPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DeferRegistrationWhenPackagesAreInUse
      (
         this : access IAddPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IAddPackageOptions : aliased WinRt.IID := (97443864, 63119, 16939, (149, 164, 102, 103, 158, 199, 127, 192 ));

   -----------------------------------------------------------------------------
   -- type IDeploymentResult is interface and WinRt.IInspectable;

      function get_ErrorText
      (
         this : access IDeploymentResult_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ActivityId
      (
         this : access IDeploymentResult_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedErrorCode
      (
         this : access IDeploymentResult_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      IID_IDeploymentResult : aliased WinRt.IID := (627292590, 46973, 19487, (138, 123, 32, 230, 173, 81, 94, 243 ));

   -----------------------------------------------------------------------------
   -- type IDeploymentResult2 is interface and WinRt.IInspectable;

      function get_IsRegistered
      (
         this : access IDeploymentResult2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IDeploymentResult2 : aliased WinRt.IID := (4228804956, 23041, 19415, (188, 241, 56, 28, 140, 130, 224, 74 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager is interface and WinRt.IInspectable;

      function AddPackageAsync
      (
         this : access IPackageManager_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function UpdatePackageAsync
      (
         this : access IPackageManager_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RemovePackageAsync
      (
         this : access IPackageManager_Interface;
         packageFullName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StagePackageAsync
      (
         this : access IPackageManager_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RegisterPackageAsync
      (
         this : access IPackageManager_Interface;
         manifestUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IPackageManager_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUser
      (
         this : access IPackageManager_Interface;
         userSecurityId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IPackageManager_Interface;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUser
      (
         this : access IPackageManager_Interface;
         userSecurityId : WinRt.HString;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindUsers
      (
         this : access IPackageManager_Interface;
         packageFullName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SetPackageState
      (
         this : access IPackageManager_Interface;
         packageFullName : WinRt.HString;
         packageState : Windows.Management.Deployment.PackageState
      )
      return WinRt.Hresult is abstract;

      function FindPackage
      (
         this : access IPackageManager_Interface;
         packageFullName : WinRt.HString;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      function CleanupPackageForUserAsync
      (
         this : access IPackageManager_Interface;
         packageName : WinRt.HString;
         userSecurityId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IPackageManager_Interface;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUser
      (
         this : access IPackageManager_Interface;
         userSecurityId : WinRt.HString;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackageForUser
      (
         this : access IPackageManager_Interface;
         userSecurityId : WinRt.HString;
         packageFullName : WinRt.HString;
         RetVal : access Windows.ApplicationModel.IPackage
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager : aliased WinRt.IID := (2591902565, 24207, 20423, (162, 229, 127, 105, 37, 203, 139, 83 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager2 is interface and WinRt.IInspectable;

      function RemovePackageAsync
      (
         this : access IPackageManager2_Interface;
         packageFullName : WinRt.HString;
         removalOptions : Windows.Management.Deployment.RemovalOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StagePackageAsync
      (
         this : access IPackageManager2_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RegisterPackageByFullNameAsync
      (
         this : access IPackageManager2_Interface;
         mainPackageFullName : WinRt.HString;
         dependencyPackageFullNames : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesWithPackageTypes
      (
         this : access IPackageManager2_Interface;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUserWithPackageTypes
      (
         this : access IPackageManager2_Interface;
         userSecurityId : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesWithPackageTypes
      (
         this : access IPackageManager2_Interface;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUserWithPackageTypes
      (
         this : access IPackageManager2_Interface;
         userSecurityId : WinRt.HString;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesWithPackageTypes
      (
         this : access IPackageManager2_Interface;
         packageFamilyName : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUserWithPackageTypes
      (
         this : access IPackageManager2_Interface;
         userSecurityId : WinRt.HString;
         packageFamilyName : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StageUserDataAsync
      (
         this : access IPackageManager2_Interface;
         packageFullName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager2 : aliased WinRt.IID := (4155166861, 2112, 18162, (181, 216, 202, 212, 118, 147, 160, 149 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager3 is interface and WinRt.IInspectable;

      function AddPackageVolumeAsync
      (
         this : access IPackageManager3_Interface;
         packageStorePath : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AddPackageAsync
      (
         this : access IPackageManager3_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function ClearPackageStatus
      (
         this : access IPackageManager3_Interface;
         packageFullName : WinRt.HString;
         status : Windows.Management.Deployment.PackageStatus
      )
      return WinRt.Hresult is abstract;

      function RegisterPackageAsync
      (
         this : access IPackageManager3_Interface;
         manifestUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         appDataVolume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackageVolume
      (
         this : access IPackageManager3_Interface;
         volumeName : WinRt.HString;
         RetVal : access Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function FindPackageVolumes
      (
         this : access IPackageManager3_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDefaultPackageVolume
      (
         this : access IPackageManager3_Interface;
         RetVal : access Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function MovePackageToVolumeAsync
      (
         this : access IPackageManager3_Interface;
         packageFullName : WinRt.HString;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RemovePackageVolumeAsync
      (
         this : access IPackageManager3_Interface;
         volume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SetDefaultPackageVolume
      (
         this : access IPackageManager3_Interface;
         volume : Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function SetPackageStatus
      (
         this : access IPackageManager3_Interface;
         packageFullName : WinRt.HString;
         status : Windows.Management.Deployment.PackageStatus
      )
      return WinRt.Hresult is abstract;

      function SetPackageVolumeOfflineAsync
      (
         this : access IPackageManager3_Interface;
         packageVolume_p : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SetPackageVolumeOnlineAsync
      (
         this : access IPackageManager3_Interface;
         packageVolume_p : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StagePackageAsync
      (
         this : access IPackageManager3_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StageUserDataAsync
      (
         this : access IPackageManager3_Interface;
         packageFullName : WinRt.HString;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager3 : aliased WinRt.IID := (3668810056, 14065, 16807, (145, 136, 188, 38, 62, 13, 203, 114 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager4 is interface and WinRt.IInspectable;

      function GetPackageVolumesAsync
      (
         this : access IPackageManager4_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager4 : aliased WinRt.IID := (1014077795, 47798, 18111, (143, 247, 218, 71, 25, 35, 10, 230 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager5 is interface and WinRt.IInspectable;

      function AddPackageAsync
      (
         this : access IPackageManager5_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         externalPackageUris : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StagePackageAsync
      (
         this : access IPackageManager5_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         externalPackageUris : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RegisterPackageByFamilyNameAsync
      (
         this : access IPackageManager5_Interface;
         mainPackageFamilyName : WinRt.HString;
         dependencyPackageFamilyNames : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         appDataVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DebugSettings
      (
         this : access IPackageManager5_Interface;
         RetVal : access Windows.Management.Deployment.IPackageManagerDebugSettings
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager5 : aliased WinRt.IID := (1897869591, 6909, 17171, (151, 140, 155, 182, 225, 184, 100, 167 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager6 is interface and WinRt.IInspectable;

      function ProvisionPackageForAllUsersAsync
      (
         this : access IPackageManager6_Interface;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AddPackageByAppInstallerFileAsync
      (
         this : access IPackageManager6_Interface;
         appInstallerFileUri : Windows.Foundation.IUriRuntimeClass;
         options : Windows.Management.Deployment.AddPackageByAppInstallerOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestAddPackageByAppInstallerFileAsync
      (
         this : access IPackageManager6_Interface;
         appInstallerFileUri : Windows.Foundation.IUriRuntimeClass;
         options : Windows.Management.Deployment.AddPackageByAppInstallerOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AddPackageAsync
      (
         this : access IPackageManager6_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         options : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         packageUrisToInstall : GenericObject;
         relatedPackageUris : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StagePackageAsync
      (
         this : access IPackageManager6_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         options : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         packageUrisToInstall : GenericObject;
         relatedPackageUris : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestAddPackageAsync
      (
         this : access IPackageManager6_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         relatedPackageUris : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager6 : aliased WinRt.IID := (138930441, 21453, 20047, (131, 46, 87, 209, 128, 246, 228, 71 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager7 is interface and WinRt.IInspectable;

      function RequestAddPackageAsync
      (
         this : access IPackageManager7_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         dependencyPackageUris : GenericObject;
         deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
         targetVolume : Windows.Management.Deployment.IPackageVolume;
         optionalPackageFamilyNames : GenericObject;
         relatedPackageUris : GenericObject;
         packageUrisToInstall : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager7 : aliased WinRt.IID := (4068889844, 11175, 19328, (136, 214, 190, 21, 249, 162, 63, 186 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager8 is interface and WinRt.IInspectable;

      function DeprovisionPackageForAllUsersAsync
      (
         this : access IPackageManager8_Interface;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager8 : aliased WinRt.IID := (3092730672, 4760, 20194, (128, 238, 127, 101, 156, 93, 39, 130 ));

   -----------------------------------------------------------------------------
   -- type IPackageManager9 is interface and WinRt.IInspectable;

      function FindProvisionedPackages
      (
         this : access IPackageManager9_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function AddPackageByUriAsync
      (
         this : access IPackageManager9_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         options : Windows.Management.Deployment.IAddPackageOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function StagePackageByUriAsync
      (
         this : access IPackageManager9_Interface;
         packageUri : Windows.Foundation.IUriRuntimeClass;
         options : Windows.Management.Deployment.IStagePackageOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RegisterPackageByUriAsync
      (
         this : access IPackageManager9_Interface;
         manifestUri : Windows.Foundation.IUriRuntimeClass;
         options : Windows.Management.Deployment.IRegisterPackageOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RegisterPackagesByFullNameAsync
      (
         this : access IPackageManager9_Interface;
         packageFullNames : GenericObject;
         options : Windows.Management.Deployment.IRegisterPackageOptions;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function SetPackageStubPreference
      (
         this : access IPackageManager9_Interface;
         packageFamilyName : WinRt.HString;
         useStub : Windows.Management.Deployment.PackageStubPreference
      )
      return WinRt.Hresult is abstract;

      function GetPackageStubPreference
      (
         this : access IPackageManager9_Interface;
         packageFamilyName : WinRt.HString;
         RetVal : access Windows.Management.Deployment.PackageStubPreference
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManager9 : aliased WinRt.IID := (447189045, 52337, 19246, (128, 166, 199, 4, 29, 133, 121, 167 ));

   -----------------------------------------------------------------------------
   -- type IPackageManagerDebugSettings is interface and WinRt.IInspectable;

      function SetContentGroupStateAsync
      (
         this : access IPackageManagerDebugSettings_Interface;
         package_x : Windows.ApplicationModel.IPackage;
         contentGroupName : WinRt.HString;
         state : Windows.ApplicationModel.PackageContentGroupState;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      function SetContentGroupStateAsync
      (
         this : access IPackageManagerDebugSettings_Interface;
         package_x : Windows.ApplicationModel.IPackage;
         contentGroupName : WinRt.HString;
         state : Windows.ApplicationModel.PackageContentGroupState;
         completionPercentage : WinRt.Double;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_IPackageManagerDebugSettings : aliased WinRt.IID := (442570371, 43400, 20431, (143, 15, 206, 23, 88, 152, 232, 235 ));

   -----------------------------------------------------------------------------
   -- type IPackageUserInformation is interface and WinRt.IInspectable;

      function get_UserSecurityId
      (
         this : access IPackageUserInformation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_InstallState
      (
         this : access IPackageUserInformation_Interface;
         RetVal : access Windows.Management.Deployment.PackageInstallState
      )
      return WinRt.Hresult is abstract;

      IID_IPackageUserInformation : aliased WinRt.IID := (4130878499, 64009, 19644, (144, 85, 21, 202, 39, 94, 46, 126 ));

   -----------------------------------------------------------------------------
   -- type IPackageVolume is interface and WinRt.IInspectable;

      function get_IsOffline
      (
         this : access IPackageVolume_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsSystemVolume
      (
         this : access IPackageVolume_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_MountPoint
      (
         this : access IPackageVolume_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access IPackageVolume_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PackageStorePath
      (
         this : access IPackageVolume_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SupportsHardLinks
      (
         this : access IPackageVolume_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IPackageVolume_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IPackageVolume_Interface;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackages
      (
         this : access IPackageVolume_Interface;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesWithPackageTypes
      (
         this : access IPackageVolume_Interface;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesWithPackageTypes
      (
         this : access IPackageVolume_Interface;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesWithPackageTypes
      (
         this : access IPackageVolume_Interface;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackage
      (
         this : access IPackageVolume_Interface;
         packageFullName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUser
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUser
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUser
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUserWithPackageTypes
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUserWithPackageTypes
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         packageName : WinRt.HString;
         packagePublisher : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackagesForUserWithPackageTypes
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         packageTypes : Windows.Management.Deployment.PackageTypes;
         packageFamilyName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindPackageForUser
      (
         this : access IPackageVolume_Interface;
         userSecurityId : WinRt.HString;
         packageFullName : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageVolume : aliased WinRt.IID := (3475403459, 6720, 17488, (151, 57, 42, 206, 46, 137, 136, 83 ));

   -----------------------------------------------------------------------------
   -- type IPackageVolume2 is interface and WinRt.IInspectable;

      function get_IsFullTrustPackageSupported
      (
         this : access IPackageVolume2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsAppxInstallSupported
      (
         this : access IPackageVolume2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetAvailableSpaceAsync
      (
         this : access IPackageVolume2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPackageVolume2 : aliased WinRt.IID := (1185664814, 40404, 18338, (171, 140, 198, 64, 131, 73, 188, 216 ));

   -----------------------------------------------------------------------------
   -- type IRegisterPackageOptions is interface and WinRt.IInspectable;

      function get_DependencyPackageUris
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_AppDataVolume
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function put_AppDataVolume
      (
         this : access IRegisterPackageOptions_Interface;
         value : Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function get_OptionalPackageFamilyNames
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExternalLocationUri
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function put_ExternalLocationUri
      (
         this : access IRegisterPackageOptions_Interface;
         value : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_DeveloperMode
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DeveloperMode
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceAppShutdown
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceAppShutdown
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceTargetAppShutdown
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceTargetAppShutdown
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceUpdateFromAnyVersion
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceUpdateFromAnyVersion
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_InstallAllResources
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_InstallAllResources
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StageInPlace
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_StageInPlace
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_AllowUnsigned
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AllowUnsigned
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DeferRegistrationWhenPackagesAreInUse
      (
         this : access IRegisterPackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DeferRegistrationWhenPackagesAreInUse
      (
         this : access IRegisterPackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IRegisterPackageOptions : aliased WinRt.IID := (1735463591, 20692, 18796, (132, 21, 6, 2, 180, 198, 211, 191 ));

   -----------------------------------------------------------------------------
   -- type IStagePackageOptions is interface and WinRt.IInspectable;

      function get_DependencyPackageUris
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_TargetVolume
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function put_TargetVolume
      (
         this : access IStagePackageOptions_Interface;
         value : Windows.Management.Deployment.IPackageVolume
      )
      return WinRt.Hresult is abstract;

      function get_OptionalPackageFamilyNames
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_OptionalPackageUris
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_RelatedPackageUris
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ExternalLocationUri
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function put_ExternalLocationUri
      (
         this : access IStagePackageOptions_Interface;
         value : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_StubPackageOption
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access Windows.Management.Deployment.StubPackageOption
      )
      return WinRt.Hresult is abstract;

      function put_StubPackageOption
      (
         this : access IStagePackageOptions_Interface;
         value : Windows.Management.Deployment.StubPackageOption
      )
      return WinRt.Hresult is abstract;

      function get_DeveloperMode
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_DeveloperMode
      (
         this : access IStagePackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ForceUpdateFromAnyVersion
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ForceUpdateFromAnyVersion
      (
         this : access IStagePackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_InstallAllResources
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_InstallAllResources
      (
         this : access IStagePackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_RequiredContentGroupOnly
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_RequiredContentGroupOnly
      (
         this : access IStagePackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StageInPlace
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_StageInPlace
      (
         this : access IStagePackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_AllowUnsigned
      (
         this : access IStagePackageOptions_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AllowUnsigned
      (
         this : access IStagePackageOptions_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IStagePackageOptions : aliased WinRt.IID := (185666716, 47453, 19542, (189, 54, 109, 101, 104, 0, 208, 107 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AddPackageOptions

   overriding procedure Initialize (this : in out AddPackageOptions);
   overriding procedure Finalize (this : in out AddPackageOptions);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for AddPackageOptions

   function Constructor return AddPackageOptions;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AddPackageOptions

   function get_DependencyPackageUris
   (
      this : in out AddPackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_TargetVolume
   (
      this : in out AddPackageOptions
   )
   return WinRt.Windows.Management.Deployment.PackageVolume'Class;

   procedure put_TargetVolume
   (
      this : in out AddPackageOptions;
      value : Windows.Management.Deployment.PackageVolume'Class
   );

   function get_OptionalPackageFamilyNames
   (
      this : in out AddPackageOptions
   )
   return IVector_HString.Kind;

   function get_OptionalPackageUris
   (
      this : in out AddPackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_RelatedPackageUris
   (
      this : in out AddPackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_ExternalLocationUri
   (
      this : in out AddPackageOptions
   )
   return WinRt.Windows.Foundation.Uri'Class;

   procedure put_ExternalLocationUri
   (
      this : in out AddPackageOptions;
      value : Windows.Foundation.Uri'Class
   );

   function get_StubPackageOption
   (
      this : in out AddPackageOptions
   )
   return WinRt.Windows.Management.Deployment.StubPackageOption;

   procedure put_StubPackageOption
   (
      this : in out AddPackageOptions;
      value : Windows.Management.Deployment.StubPackageOption
   );

   function get_DeveloperMode
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_DeveloperMode
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceAppShutdown
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceAppShutdown
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceTargetAppShutdown
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceTargetAppShutdown
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceUpdateFromAnyVersion
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceUpdateFromAnyVersion
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_InstallAllResources
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_InstallAllResources
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_RequiredContentGroupOnly
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_RequiredContentGroupOnly
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_RetainFilesOnFailure
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_RetainFilesOnFailure
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_StageInPlace
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_StageInPlace
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_AllowUnsigned
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_AllowUnsigned
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   function get_DeferRegistrationWhenPackagesAreInUse
   (
      this : in out AddPackageOptions
   )
   return WinRt.Boolean;

   procedure put_DeferRegistrationWhenPackagesAreInUse
   (
      this : in out AddPackageOptions;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DeploymentResult

   overriding procedure Initialize (this : in out DeploymentResult);
   overriding procedure Finalize (this : in out DeploymentResult);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DeploymentResult

   function get_ErrorText
   (
      this : in out DeploymentResult
   )
   return WinRt.WString;

   function get_ActivityId
   (
      this : in out DeploymentResult
   )
   return WinRt.Guid;

   function get_ExtendedErrorCode
   (
      this : in out DeploymentResult
   )
   return WinRt.Windows.Foundation.HResult;

   function get_IsRegistered
   (
      this : in out DeploymentResult
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageManager

   overriding procedure Initialize (this : in out PackageManager);
   overriding procedure Finalize (this : in out PackageManager);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PackageManager

   function Constructor return PackageManager;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageManager

   function AddPackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function UpdatePackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RemovePackageAsync
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StagePackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RegisterPackageAsync
   (
      this : in out PackageManager;
      manifestUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function FindPackages
   (
      this : in out PackageManager
   )
   return WinRt.GenericObject;

   function FindPackagesForUser
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackages
   (
      this : in out PackageManager;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUser
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindUsers
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString
   )
   return IIterable_IPackageUserInformation.Kind;

   procedure SetPackageState
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString;
      packageState : Windows.Management.Deployment.PackageState
   );

   function FindPackage
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function CleanupPackageForUserAsync
   (
      this : in out PackageManager;
      packageName : WinRt.WString;
      userSecurityId : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function FindPackages
   (
      this : in out PackageManager;
      packageFamilyName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUser
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString;
      packageFamilyName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackageForUser
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString;
      packageFullName : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Package_x'Class;

   function RemovePackageAsync
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString;
      removalOptions : Windows.Management.Deployment.RemovalOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StagePackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RegisterPackageByFullNameAsync
   (
      this : in out PackageManager;
      mainPackageFullName : WinRt.WString;
      dependencyPackageFullNames : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function FindPackagesWithPackageTypes
   (
      this : in out PackageManager;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesForUserWithPackageTypes
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesWithPackageTypes
   (
      this : in out PackageManager;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesForUserWithPackageTypes
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesWithPackageTypes
   (
      this : in out PackageManager;
      packageFamilyName : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesForUserWithPackageTypes
   (
      this : in out PackageManager;
      userSecurityId : WinRt.WString;
      packageFamilyName : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function StageUserDataAsync
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function AddPackageVolumeAsync
   (
      this : in out PackageManager;
      packageStorePath : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.PackageVolume'Class;

   function AddPackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   procedure ClearPackageStatus
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString;
      status : Windows.Management.Deployment.PackageStatus
   );

   function RegisterPackageAsync
   (
      this : in out PackageManager;
      manifestUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      appDataVolume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function FindPackageVolume
   (
      this : in out PackageManager;
      volumeName : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.PackageVolume'Class;

   function FindPackageVolumes
   (
      this : in out PackageManager
   )
   return IIterable_IPackageVolume.Kind;

   function GetDefaultPackageVolume
   (
      this : in out PackageManager
   )
   return WinRt.Windows.Management.Deployment.PackageVolume'Class;

   function MovePackageToVolumeAsync
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RemovePackageVolumeAsync
   (
      this : in out PackageManager;
      volume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   procedure SetDefaultPackageVolume
   (
      this : in out PackageManager;
      volume : Windows.Management.Deployment.PackageVolume'Class
   );

   procedure SetPackageStatus
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString;
      status : Windows.Management.Deployment.PackageStatus
   );

   function SetPackageVolumeOfflineAsync
   (
      this : in out PackageManager;
      packageVolume_p : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function SetPackageVolumeOnlineAsync
   (
      this : in out PackageManager;
      packageVolume_p : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StagePackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StageUserDataAsync
   (
      this : in out PackageManager;
      packageFullName : WinRt.WString;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function GetPackageVolumesAsync
   (
      this : in out PackageManager
   )
   return WinRt.GenericObject;

   function AddPackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject;
      externalPackageUris : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StagePackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject;
      externalPackageUris : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RegisterPackageByFamilyNameAsync
   (
      this : in out PackageManager;
      mainPackageFamilyName : WinRt.WString;
      dependencyPackageFamilyNames : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      appDataVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function get_DebugSettings
   (
      this : in out PackageManager
   )
   return WinRt.Windows.Management.Deployment.PackageManagerDebugSettings'Class;

   function ProvisionPackageForAllUsersAsync
   (
      this : in out PackageManager;
      packageFamilyName : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function AddPackageByAppInstallerFileAsync
   (
      this : in out PackageManager;
      appInstallerFileUri : Windows.Foundation.Uri'Class;
      options : Windows.Management.Deployment.AddPackageByAppInstallerOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RequestAddPackageByAppInstallerFileAsync
   (
      this : in out PackageManager;
      appInstallerFileUri : Windows.Foundation.Uri'Class;
      options : Windows.Management.Deployment.AddPackageByAppInstallerOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function AddPackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      options : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject;
      packageUrisToInstall : GenericObject;
      relatedPackageUris : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StagePackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      options : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject;
      packageUrisToInstall : GenericObject;
      relatedPackageUris : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RequestAddPackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject;
      relatedPackageUris : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RequestAddPackageAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      dependencyPackageUris : GenericObject;
      deploymentOptions : Windows.Management.Deployment.DeploymentOptions;
      targetVolume : Windows.Management.Deployment.PackageVolume'Class;
      optionalPackageFamilyNames : GenericObject;
      relatedPackageUris : GenericObject;
      packageUrisToInstall : GenericObject
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function DeprovisionPackageForAllUsersAsync
   (
      this : in out PackageManager;
      packageFamilyName : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function FindProvisionedPackages
   (
      this : in out PackageManager
   )
   return WinRt.GenericObject;

   function AddPackageByUriAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      options : Windows.Management.Deployment.AddPackageOptions'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function StagePackageByUriAsync
   (
      this : in out PackageManager;
      packageUri : Windows.Foundation.Uri'Class;
      options : Windows.Management.Deployment.StagePackageOptions'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RegisterPackageByUriAsync
   (
      this : in out PackageManager;
      manifestUri : Windows.Foundation.Uri'Class;
      options : Windows.Management.Deployment.RegisterPackageOptions'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   function RegisterPackagesByFullNameAsync
   (
      this : in out PackageManager;
      packageFullNames : GenericObject;
      options : Windows.Management.Deployment.RegisterPackageOptions'Class
   )
   return WinRt.Windows.Management.Deployment.DeploymentResult'Class;

   procedure SetPackageStubPreference
   (
      this : in out PackageManager;
      packageFamilyName : WinRt.WString;
      useStub : Windows.Management.Deployment.PackageStubPreference
   );

   function GetPackageStubPreference
   (
      this : in out PackageManager;
      packageFamilyName : WinRt.WString
   )
   return WinRt.Windows.Management.Deployment.PackageStubPreference;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageManagerDebugSettings

   overriding procedure Initialize (this : in out PackageManagerDebugSettings);
   overriding procedure Finalize (this : in out PackageManagerDebugSettings);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageManagerDebugSettings

   procedure SetContentGroupStateAsync
   (
      this : in out PackageManagerDebugSettings;
      package_x : Windows.ApplicationModel.Package_x'Class;
      contentGroupName : WinRt.WString;
      state : Windows.ApplicationModel.PackageContentGroupState
   );

   procedure SetContentGroupStateAsync
   (
      this : in out PackageManagerDebugSettings;
      package_x : Windows.ApplicationModel.Package_x'Class;
      contentGroupName : WinRt.WString;
      state : Windows.ApplicationModel.PackageContentGroupState;
      completionPercentage : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageUserInformation

   overriding procedure Initialize (this : in out PackageUserInformation);
   overriding procedure Finalize (this : in out PackageUserInformation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageUserInformation

   function get_UserSecurityId
   (
      this : in out PackageUserInformation
   )
   return WinRt.WString;

   function get_InstallState
   (
      this : in out PackageUserInformation
   )
   return WinRt.Windows.Management.Deployment.PackageInstallState;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PackageVolume

   overriding procedure Initialize (this : in out PackageVolume);
   overriding procedure Finalize (this : in out PackageVolume);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PackageVolume

   function get_IsOffline
   (
      this : in out PackageVolume
   )
   return WinRt.Boolean;

   function get_IsSystemVolume
   (
      this : in out PackageVolume
   )
   return WinRt.Boolean;

   function get_MountPoint
   (
      this : in out PackageVolume
   )
   return WinRt.WString;

   function get_Name
   (
      this : in out PackageVolume
   )
   return WinRt.WString;

   function get_PackageStorePath
   (
      this : in out PackageVolume
   )
   return WinRt.WString;

   function get_SupportsHardLinks
   (
      this : in out PackageVolume
   )
   return WinRt.Boolean;

   function FindPackages
   (
      this : in out PackageVolume
   )
   return WinRt.GenericObject;

   function FindPackages
   (
      this : in out PackageVolume;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackages
   (
      this : in out PackageVolume;
      packageFamilyName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesWithPackageTypes
   (
      this : in out PackageVolume;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesWithPackageTypes
   (
      this : in out PackageVolume;
      packageTypes : Windows.Management.Deployment.PackageTypes;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesWithPackageTypes
   (
      this : in out PackageVolume;
      packageTypes : Windows.Management.Deployment.PackageTypes;
      packageFamilyName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackage
   (
      this : in out PackageVolume;
      packageFullName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUser
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUser
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUser
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString;
      packageFamilyName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUserWithPackageTypes
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes
   )
   return WinRt.GenericObject;

   function FindPackagesForUserWithPackageTypes
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes;
      packageName : WinRt.WString;
      packagePublisher : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackagesForUserWithPackageTypes
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString;
      packageTypes : Windows.Management.Deployment.PackageTypes;
      packageFamilyName : WinRt.WString
   )
   return WinRt.GenericObject;

   function FindPackageForUser
   (
      this : in out PackageVolume;
      userSecurityId : WinRt.WString;
      packageFullName : WinRt.WString
   )
   return WinRt.GenericObject;

   function get_IsFullTrustPackageSupported
   (
      this : in out PackageVolume
   )
   return WinRt.Boolean;

   function get_IsAppxInstallSupported
   (
      this : in out PackageVolume
   )
   return WinRt.Boolean;

   function GetAvailableSpaceAsync
   (
      this : in out PackageVolume
   )
   return WinRt.UInt64;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for RegisterPackageOptions

   overriding procedure Initialize (this : in out RegisterPackageOptions);
   overriding procedure Finalize (this : in out RegisterPackageOptions);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for RegisterPackageOptions

   function Constructor return RegisterPackageOptions;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for RegisterPackageOptions

   function get_DependencyPackageUris
   (
      this : in out RegisterPackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_AppDataVolume
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Windows.Management.Deployment.PackageVolume'Class;

   procedure put_AppDataVolume
   (
      this : in out RegisterPackageOptions;
      value : Windows.Management.Deployment.PackageVolume'Class
   );

   function get_OptionalPackageFamilyNames
   (
      this : in out RegisterPackageOptions
   )
   return IVector_HString.Kind;

   function get_ExternalLocationUri
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Windows.Foundation.Uri'Class;

   procedure put_ExternalLocationUri
   (
      this : in out RegisterPackageOptions;
      value : Windows.Foundation.Uri'Class
   );

   function get_DeveloperMode
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_DeveloperMode
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceAppShutdown
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceAppShutdown
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceTargetAppShutdown
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceTargetAppShutdown
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceUpdateFromAnyVersion
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceUpdateFromAnyVersion
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_InstallAllResources
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_InstallAllResources
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_StageInPlace
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_StageInPlace
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_AllowUnsigned
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_AllowUnsigned
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   function get_DeferRegistrationWhenPackagesAreInUse
   (
      this : in out RegisterPackageOptions
   )
   return WinRt.Boolean;

   procedure put_DeferRegistrationWhenPackagesAreInUse
   (
      this : in out RegisterPackageOptions;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StagePackageOptions

   overriding procedure Initialize (this : in out StagePackageOptions);
   overriding procedure Finalize (this : in out StagePackageOptions);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for StagePackageOptions

   function Constructor return StagePackageOptions;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StagePackageOptions

   function get_DependencyPackageUris
   (
      this : in out StagePackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_TargetVolume
   (
      this : in out StagePackageOptions
   )
   return WinRt.Windows.Management.Deployment.PackageVolume'Class;

   procedure put_TargetVolume
   (
      this : in out StagePackageOptions;
      value : Windows.Management.Deployment.PackageVolume'Class
   );

   function get_OptionalPackageFamilyNames
   (
      this : in out StagePackageOptions
   )
   return IVector_HString.Kind;

   function get_OptionalPackageUris
   (
      this : in out StagePackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_RelatedPackageUris
   (
      this : in out StagePackageOptions
   )
   return IVector_IUriRuntimeClass.Kind;

   function get_ExternalLocationUri
   (
      this : in out StagePackageOptions
   )
   return WinRt.Windows.Foundation.Uri'Class;

   procedure put_ExternalLocationUri
   (
      this : in out StagePackageOptions;
      value : Windows.Foundation.Uri'Class
   );

   function get_StubPackageOption
   (
      this : in out StagePackageOptions
   )
   return WinRt.Windows.Management.Deployment.StubPackageOption;

   procedure put_StubPackageOption
   (
      this : in out StagePackageOptions;
      value : Windows.Management.Deployment.StubPackageOption
   );

   function get_DeveloperMode
   (
      this : in out StagePackageOptions
   )
   return WinRt.Boolean;

   procedure put_DeveloperMode
   (
      this : in out StagePackageOptions;
      value : WinRt.Boolean
   );

   function get_ForceUpdateFromAnyVersion
   (
      this : in out StagePackageOptions
   )
   return WinRt.Boolean;

   procedure put_ForceUpdateFromAnyVersion
   (
      this : in out StagePackageOptions;
      value : WinRt.Boolean
   );

   function get_InstallAllResources
   (
      this : in out StagePackageOptions
   )
   return WinRt.Boolean;

   procedure put_InstallAllResources
   (
      this : in out StagePackageOptions;
      value : WinRt.Boolean
   );

   function get_RequiredContentGroupOnly
   (
      this : in out StagePackageOptions
   )
   return WinRt.Boolean;

   procedure put_RequiredContentGroupOnly
   (
      this : in out StagePackageOptions;
      value : WinRt.Boolean
   );

   function get_StageInPlace
   (
      this : in out StagePackageOptions
   )
   return WinRt.Boolean;

   procedure put_StageInPlace
   (
      this : in out StagePackageOptions;
      value : WinRt.Boolean
   );

   function get_AllowUnsigned
   (
      this : in out StagePackageOptions
   )
   return WinRt.Boolean;

   procedure put_AllowUnsigned
   (
      this : in out StagePackageOptions;
      value : WinRt.Boolean
   );

end;
