--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Xaml.Interop is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Delegates declarations
   -----------------------------------------------------------------------------

   type BindableVectorChangedEventHandler_Delegate;
   type BindableVectorChangedEventHandler is access BindableVectorChangedEventHandler_Delegate;

   type NotifyCollectionChangedEventHandler_Delegate;
   type NotifyCollectionChangedEventHandler is access NotifyCollectionChangedEventHandler_Delegate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IBindableIterable_Interface is interface and WinRt.IInspectable_Interface;
   type IBindableIterable is access IBindableIterable_Interface'Class;

   type IBindableIterator_Interface is interface and WinRt.IInspectable_Interface;
   type IBindableIterator is access IBindableIterator_Interface'Class;

   type IBindableObservableVector_Interface is interface and WinRt.IInspectable_Interface;
   type IBindableObservableVector is access IBindableObservableVector_Interface'Class;

   type IBindableVector_Interface is interface and WinRt.IInspectable_Interface;
   type IBindableVector is access IBindableVector_Interface'Class;

   type IBindableVectorView_Interface is interface and WinRt.IInspectable_Interface;
   type IBindableVectorView is access IBindableVectorView_Interface'Class;

   type INotifyCollectionChanged_Interface is interface and WinRt.IInspectable_Interface;
   type INotifyCollectionChanged is access INotifyCollectionChanged_Interface'Class;

   type INotifyCollectionChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type INotifyCollectionChangedEventArgs is access INotifyCollectionChangedEventArgs_Interface'Class;
   type INotifyCollectionChangedEventArgs_Ptr is access all INotifyCollectionChangedEventArgs;

   type INotifyCollectionChangedEventArgsFactory_Interface is interface and WinRt.IInspectable_Interface;
   type INotifyCollectionChangedEventArgsFactory is access INotifyCollectionChangedEventArgsFactory_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type NotifyCollectionChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_INotifyCollectionChangedEventArgs : access Windows.UI.Xaml.Interop.INotifyCollectionChangedEventArgs;
      end record;
   type NotifyCollectionChangedEventArgs_Ptr is access all NotifyCollectionChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type NotifyCollectionChangedAction is (
      Add_e,
      Remove_e,
      Replace_e,
      Move_e,
      Reset_e
   );
   for NotifyCollectionChangedAction use (
      Add_e => 0,
      Remove_e => 1,
      Replace_e => 2,
      Move_e => 3,
      Reset_e => 4
   );
   type NotifyCollectionChangedAction_Ptr is access NotifyCollectionChangedAction;

   type TypeKind is (
      Primitive_e,
      Metadata_e,
      Custom_e
   );
   for TypeKind use (
      Primitive_e => 0,
      Metadata_e => 1,
      Custom_e => 2
   );
   type TypeKind_Ptr is access TypeKind;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type TypeName is record
      Name : WinRt.HString;
      Kind : Windows.UI.Xaml.Interop.TypeKind;
   end record with Convention => C_Pass_By_Copy;
   type TypeName_Ptr is access TypeName;

   -----------------------------------------------------------------------------
   -- Delegate declarations
   -----------------------------------------------------------------------------

   IID_BindableVectorChangedEventHandler : aliased WinRt.IID := (1649202401, 53255, 17329, (156, 3, 175, 77, 62, 98, 88, 196 ));
   type BindableVectorChangedEventHandler_Delegate (Callback : access procedure  (vector : Windows.UI.Xaml.Interop.IBindableObservableVector;e : WinRt.IInspectable)) is new WinRt.IMulticastDelegate_Interface (IID_BindableVectorChangedEventHandler'Access) with null record;
      function Invoke
      (
         this : access BindableVectorChangedEventHandler_Delegate;
         vector : Windows.UI.Xaml.Interop.IBindableObservableVector;
         e : WinRt.IInspectable
      )
      return WinRt.Hresult;

   IID_NotifyCollectionChangedEventHandler : aliased WinRt.IID := (3390092156, 62338, 17809, (133, 87, 94, 36, 150, 82, 121, 176 ));
   type NotifyCollectionChangedEventHandler_Delegate (Callback : access procedure  (sender : WinRt.IInspectable;e : Windows.UI.Xaml.Interop.INotifyCollectionChangedEventArgs)) is new WinRt.IMulticastDelegate_Interface (IID_NotifyCollectionChangedEventHandler'Access) with null record;
      function Invoke
      (
         this : access NotifyCollectionChangedEventHandler_Delegate;
         sender : WinRt.IInspectable;
         e : Windows.UI.Xaml.Interop.INotifyCollectionChangedEventArgs
      )
      return WinRt.Hresult;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IBindableIterable is interface and WinRt.IInspectable;

      function First
      (
         this : access IBindableIterable_Interface;
         RetVal : access Windows.UI.Xaml.Interop.IBindableIterator
      )
      return WinRt.Hresult is abstract;

      IID_IBindableIterable : aliased WinRt.IID := (57486344, 57129, 16815, (138, 162, 215, 116, 190, 98, 186, 111 ));

   -----------------------------------------------------------------------------
   -- type IBindableIterator is interface and WinRt.IInspectable;

      function get_Current
      (
         this : access IBindableIterator_Interface;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function get_HasCurrent
      (
         this : access IBindableIterator_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function MoveNext
      (
         this : access IBindableIterator_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBindableIterator : aliased WinRt.IID := (1780313095, 1901, 18930, (131, 20, 245, 44, 156, 154, 131, 49 ));

   -----------------------------------------------------------------------------
   -- type IBindableObservableVector is interface and WinRt.IInspectable;

      function add_VectorChanged
      (
         this : access IBindableObservableVector_Interface;
         handler : Windows.UI.Xaml.Interop.BindableVectorChangedEventHandler;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_VectorChanged
      (
         this : access IBindableObservableVector_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IBindableObservableVector : aliased WinRt.IID := (4263425334, 32383, 20368, (172, 154, 71, 73, 132, 170, 229, 18 ));

   -----------------------------------------------------------------------------
   -- type IBindableVector is interface and WinRt.IInspectable;

      function GetAt
      (
         this : access IBindableVector_Interface;
         index : WinRt.UInt32;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access IBindableVector_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function GetView
      (
         this : access IBindableVector_Interface;
         RetVal : access Windows.UI.Xaml.Interop.IBindableVectorView
      )
      return WinRt.Hresult is abstract;

      function IndexOf
      (
         this : access IBindableVector_Interface;
         value : WinRt.IInspectable;
         index : WinRt.UInt32_Ptr;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function SetAt
      (
         this : access IBindableVector_Interface;
         index : WinRt.UInt32;
         value : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function InsertAt
      (
         this : access IBindableVector_Interface;
         index : WinRt.UInt32;
         value : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function RemoveAt
      (
         this : access IBindableVector_Interface;
         index : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function Append
      (
         this : access IBindableVector_Interface;
         value : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function RemoveAtEnd
      (
         this : access IBindableVector_Interface
      )
      return WinRt.Hresult is abstract;

      function Clear
      (
         this : access IBindableVector_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IBindableVector : aliased WinRt.IID := (960358366, 28624, 19469, (187, 113, 71, 36, 74, 17, 62, 147 ));

   -----------------------------------------------------------------------------
   -- type IBindableVectorView is interface and WinRt.IInspectable;

      function GetAt
      (
         this : access IBindableVectorView_Interface;
         index : WinRt.UInt32;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access IBindableVectorView_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function IndexOf
      (
         this : access IBindableVectorView_Interface;
         value : WinRt.IInspectable;
         index : WinRt.UInt32_Ptr;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBindableVectorView : aliased WinRt.IID := (879613671, 38766, 19395, (129, 93, 236, 226, 67, 188, 15, 51 ));

   -----------------------------------------------------------------------------
   -- type INotifyCollectionChanged is interface and WinRt.IInspectable;

      function add_CollectionChanged
      (
         this : access INotifyCollectionChanged_Interface;
         handler : Windows.UI.Xaml.Interop.NotifyCollectionChangedEventHandler;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_CollectionChanged
      (
         this : access INotifyCollectionChanged_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_INotifyCollectionChanged : aliased WinRt.IID := (682715093, 6705, 18011, (155, 37, 213, 195, 174, 104, 108, 64 ));

   -----------------------------------------------------------------------------
   -- type INotifyCollectionChangedEventArgs is interface and WinRt.IInspectable;

      function get_Action
      (
         this : access INotifyCollectionChangedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Interop.NotifyCollectionChangedAction
      )
      return WinRt.Hresult is abstract;

      function get_NewItems
      (
         this : access INotifyCollectionChangedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Interop.IBindableVector
      )
      return WinRt.Hresult is abstract;

      function get_OldItems
      (
         this : access INotifyCollectionChangedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Interop.IBindableVector
      )
      return WinRt.Hresult is abstract;

      function get_NewStartingIndex
      (
         this : access INotifyCollectionChangedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_OldStartingIndex
      (
         this : access INotifyCollectionChangedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_INotifyCollectionChangedEventArgs : aliased WinRt.IID := (1291226419, 58354, 18788, (184, 94, 148, 91, 79, 126, 47, 33 ));

   -----------------------------------------------------------------------------
   -- type INotifyCollectionChangedEventArgsFactory is interface and WinRt.IInspectable;

      function CreateInstanceWithAllParameters
      (
         this : access INotifyCollectionChangedEventArgsFactory_Interface;
         action : Windows.UI.Xaml.Interop.NotifyCollectionChangedAction;
         newItems : Windows.UI.Xaml.Interop.IBindableVector;
         oldItems : Windows.UI.Xaml.Interop.IBindableVector;
         newIndex : WinRt.Int32;
         oldIndex : WinRt.Int32;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Interop.INotifyCollectionChangedEventArgs
      )
      return WinRt.Hresult is abstract;

      IID_INotifyCollectionChangedEventArgsFactory : aliased WinRt.IID := (3003924026, 57229, 17573, (154, 56, 122, 192, 208, 140, 230, 61 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for NotifyCollectionChangedEventArgs

   overriding procedure Initialize (this : in out NotifyCollectionChangedEventArgs);
   overriding procedure Finalize (this : in out NotifyCollectionChangedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for NotifyCollectionChangedEventArgs

   function Constructor
   (
      action : Windows.UI.Xaml.Interop.NotifyCollectionChangedAction;
      newItems : Windows.UI.Xaml.Interop.IBindableVector;
      oldItems : Windows.UI.Xaml.Interop.IBindableVector;
      newIndex : WinRt.Int32;
      oldIndex : WinRt.Int32;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return NotifyCollectionChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for NotifyCollectionChangedEventArgs

   function get_Action
   (
      this : in out NotifyCollectionChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Interop.NotifyCollectionChangedAction;

   function get_NewItems
   (
      this : in out NotifyCollectionChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Interop.IBindableVector;

   function get_OldItems
   (
      this : in out NotifyCollectionChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Interop.IBindableVector;

   function get_NewStartingIndex
   (
      this : in out NotifyCollectionChangedEventArgs
   )
   return WinRt.Int32;

   function get_OldStartingIndex
   (
      this : in out NotifyCollectionChangedEventArgs
   )
   return WinRt.Int32;

end;
