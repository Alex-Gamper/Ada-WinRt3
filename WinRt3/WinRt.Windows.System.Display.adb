--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;
--------------------------------------------------------------------------------
package body WinRt.Windows.System.Display is

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DisplayRequest

   procedure Initialize (this : in out DisplayRequest) is
   begin
      null;
   end;

   procedure Finalize (this : in out DisplayRequest) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IDisplayRequest, IDisplayRequest_Ptr);
   begin
      if this.m_IDisplayRequest /= null then
         if this.m_IDisplayRequest.all /= null then
            RefCount := this.m_IDisplayRequest.all.Release;
            Free (this.m_IDisplayRequest);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for DisplayRequest

   function Constructor return DisplayRequest is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.System.Display.DisplayRequest");
      m_ComRetVal  : aliased Windows.System.Display.IDisplayRequest;
   begin
      return RetVal : DisplayRequest do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IDisplayRequest := new Windows.System.Display.IDisplayRequest;
            Retval.m_IDisplayRequest.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DisplayRequest

   procedure RequestActive
   (
      this : in out DisplayRequest
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IDisplayRequest.all.RequestActive;
   end;

   procedure RequestRelease
   (
      this : in out DisplayRequest
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IDisplayRequest.all.RequestRelease;
   end;

end;
