--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.ApplicationModel.Appointments;
with WinRt.Windows.Foundation; use WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with WinRt.Windows.Security.Cryptography.Certificates;
with WinRt.Windows.Storage.Streams;
with WinRt.Windows.System;
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;
--------------------------------------------------------------------------------
package body WinRt.Windows.ApplicationModel.Email is

   package IAsyncOperation_GenericObject is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.GenericObject);
   package AsyncOperationCompletedHandler_GenericObject is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.GenericObject);

   package IAsyncOperation_EmailConversationBatch is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailConversationBatch);
   package AsyncOperationCompletedHandler_EmailConversationBatch is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailConversationBatch);

   package IAsyncOperation_EmailFolder is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailFolder);
   package AsyncOperationCompletedHandler_EmailFolder is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailFolder);

   package IAsyncOperation_EmailMessage is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailMessage);
   package AsyncOperationCompletedHandler_EmailMessage is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailMessage);

   package IAsyncOperation_EmailItemCounts is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailItemCounts);
   package AsyncOperationCompletedHandler_EmailItemCounts is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailItemCounts);

   package IAsyncOperation_Boolean is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Boolean);
   package AsyncOperationCompletedHandler_Boolean is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Boolean);

   package IAsyncOperation_EmailConversation is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailConversation);
   package AsyncOperationCompletedHandler_EmailConversation is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailConversation);

   package IAsyncOperation_EmailMailboxAutoReplySettings is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings);
   package AsyncOperationCompletedHandler_EmailMailboxAutoReplySettings is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings);

   package IAsyncOperation_EmailMailboxEmptyFolderStatus is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus);
   package AsyncOperationCompletedHandler_EmailMailboxEmptyFolderStatus is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus);

   package IAsyncOperation_EmailMailboxCreateFolderResult is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCreateFolderResult);
   package AsyncOperationCompletedHandler_EmailMailboxCreateFolderResult is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCreateFolderResult);

   package IAsyncOperation_EmailMailboxDeleteFolderStatus is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus);
   package AsyncOperationCompletedHandler_EmailMailboxDeleteFolderStatus is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus);

   package IAsyncOperation_EmailStore is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailStore);
   package AsyncOperationCompletedHandler_EmailStore is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailStore);

   package IAsyncOperation_EmailMessageBatch is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailMessageBatch);
   package AsyncOperationCompletedHandler_EmailMessageBatch is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailMessageBatch);

   package IAsyncOperation_EmailMailbox is new WinRt.Windows.Foundation.IAsyncOperation (WinRt.Windows.ApplicationModel.Email.IEmailMailbox);
   package AsyncOperationCompletedHandler_EmailMailbox is new WinRt.Windows.Foundation.AsyncOperationCompletedHandler (WinRt.Windows.ApplicationModel.Email.IEmailMailbox);

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailAttachment

   procedure Initialize (this : in out EmailAttachment) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailAttachment) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailAttachment, IEmailAttachment_Ptr);
   begin
      if this.m_IEmailAttachment /= null then
         if this.m_IEmailAttachment.all /= null then
            RefCount := this.m_IEmailAttachment.all.Release;
            Free (this.m_IEmailAttachment);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailAttachment

   function Constructor return EmailAttachment is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailAttachment");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailAttachment;
   begin
      return RetVal : EmailAttachment do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailAttachment := new Windows.ApplicationModel.Email.IEmailAttachment;
            Retval.m_IEmailAttachment.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   function Constructor
   (
      fileName : WinRt.WString;
      data : Windows.Storage.Streams.IRandomAccessStreamReference;
      mimeType : WinRt.WString
   )
   return EmailAttachment is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailAttachment");
      m_Factory    : access IEmailAttachmentFactory2_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailAttachment;
      HStr_fileName : WinRt.HString := To_HString (fileName);
      HStr_mimeType : WinRt.HString := To_HString (mimeType);
   begin
      return RetVal : EmailAttachment do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailAttachmentFactory2'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.Create (HStr_fileName, data, HStr_mimeType, m_ComRetVal'Access);
            Retval.m_IEmailAttachment := new Windows.ApplicationModel.Email.IEmailAttachment;
            Retval.m_IEmailAttachment.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_fileName);
         Hr := WindowsDeleteString (HStr_mimeType);
      end return;
   end;

   function Constructor
   (
      fileName : WinRt.WString;
      data : Windows.Storage.Streams.IRandomAccessStreamReference
   )
   return EmailAttachment is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailAttachment");
      m_Factory    : access IEmailAttachmentFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailAttachment;
      HStr_fileName : WinRt.HString := To_HString (fileName);
   begin
      return RetVal : EmailAttachment do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailAttachmentFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.Create (HStr_fileName, data, m_ComRetVal'Access);
            Retval.m_IEmailAttachment := new Windows.ApplicationModel.Email.IEmailAttachment;
            Retval.m_IEmailAttachment.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_fileName);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailAttachment

   function get_FileName
   (
      this : in out EmailAttachment
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailAttachment.all.get_FileName (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_FileName
   (
      this : in out EmailAttachment;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailAttachment.all.put_FileName (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_Data
   (
      this : in out EmailAttachment
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamReference is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Storage.Streams.IRandomAccessStreamReference;
   begin
      Hr := this.m_IEmailAttachment.all.get_Data (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_Data
   (
      this : in out EmailAttachment;
      value : Windows.Storage.Streams.IRandomAccessStreamReference
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailAttachment.all.put_Data (value);
   end;

   function get_Id
   (
      this : in out EmailAttachment
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_Id (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_ContentId
   (
      this : in out EmailAttachment
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_ContentId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_ContentId
   (
      this : in out EmailAttachment;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.put_ContentId (HStr_value);
      m_RefCount := m_Interface.Release;
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_ContentLocation
   (
      this : in out EmailAttachment
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_ContentLocation (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_ContentLocation
   (
      this : in out EmailAttachment;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.put_ContentLocation (HStr_value);
      m_RefCount := m_Interface.Release;
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_DownloadState
   (
      this : in out EmailAttachment
   )
   return WinRt.Windows.ApplicationModel.Email.EmailAttachmentDownloadState is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailAttachmentDownloadState;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_DownloadState (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_DownloadState
   (
      this : in out EmailAttachment;
      value : Windows.ApplicationModel.Email.EmailAttachmentDownloadState
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.put_DownloadState (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_EstimatedDownloadSizeInBytes
   (
      this : in out EmailAttachment
   )
   return WinRt.UInt64 is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt64;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_EstimatedDownloadSizeInBytes (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_EstimatedDownloadSizeInBytes
   (
      this : in out EmailAttachment;
      value : WinRt.UInt64
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.put_EstimatedDownloadSizeInBytes (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_IsFromBaseMessage
   (
      this : in out EmailAttachment
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_IsFromBaseMessage (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_IsInline
   (
      this : in out EmailAttachment
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_IsInline (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_IsInline
   (
      this : in out EmailAttachment;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.put_IsInline (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_MimeType
   (
      this : in out EmailAttachment
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.get_MimeType (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_MimeType
   (
      this : in out EmailAttachment;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailAttachment2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailAttachment_Interface, WinRt.Windows.ApplicationModel.Email.IEmailAttachment2, WinRt.Windows.ApplicationModel.Email.IID_IEmailAttachment2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailAttachment.all);
      Hr := m_Interface.put_MimeType (HStr_value);
      m_RefCount := m_Interface.Release;
      Hr := WindowsDeleteString (HStr_value);
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailConversation

   procedure Initialize (this : in out EmailConversation) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailConversation) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailConversation, IEmailConversation_Ptr);
   begin
      if this.m_IEmailConversation /= null then
         if this.m_IEmailConversation.all /= null then
            RefCount := this.m_IEmailConversation.all.Release;
            Free (this.m_IEmailConversation);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailConversation

   function get_Id
   (
      this : in out EmailConversation
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailConversation.all.get_Id (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_MailboxId
   (
      this : in out EmailConversation
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailConversation.all.get_MailboxId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_FlagState
   (
      this : in out EmailConversation
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFlagState is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailFlagState;
   begin
      Hr := this.m_IEmailConversation.all.get_FlagState (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_HasAttachment
   (
      this : in out EmailConversation
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailConversation.all.get_HasAttachment (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_Importance
   (
      this : in out EmailConversation
   )
   return WinRt.Windows.ApplicationModel.Email.EmailImportance is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailImportance;
   begin
      Hr := this.m_IEmailConversation.all.get_Importance (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_LastEmailResponseKind
   (
      this : in out EmailConversation
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageResponseKind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMessageResponseKind;
   begin
      Hr := this.m_IEmailConversation.all.get_LastEmailResponseKind (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_MessageCount
   (
      this : in out EmailConversation
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
   begin
      Hr := this.m_IEmailConversation.all.get_MessageCount (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_MostRecentMessageId
   (
      this : in out EmailConversation
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailConversation.all.get_MostRecentMessageId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_MostRecentMessageTime
   (
      this : in out EmailConversation
   )
   return WinRt.Windows.Foundation.DateTime is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.DateTime;
   begin
      Hr := this.m_IEmailConversation.all.get_MostRecentMessageTime (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_Preview
   (
      this : in out EmailConversation
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailConversation.all.get_Preview (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_LatestSender
   (
      this : in out EmailConversation
   )
   return WinRt.Windows.ApplicationModel.Email.EmailRecipient'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailRecipient;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailRecipient do
         Hr := this.m_IEmailConversation.all.get_LatestSender (m_ComRetVal'Access);
         Retval.m_IEmailRecipient := new Windows.ApplicationModel.Email.IEmailRecipient;
         Retval.m_IEmailRecipient.all := m_ComRetVal;
      end return;
   end;

   function get_Subject
   (
      this : in out EmailConversation
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailConversation.all.get_Subject (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_UnreadMessageCount
   (
      this : in out EmailConversation
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
   begin
      Hr := this.m_IEmailConversation.all.get_UnreadMessageCount (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function FindMessagesAsync
   (
      this : in out EmailConversation
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (1191596321, 56448, 23033, (135, 25, 63, 12, 110, 239, 135, 83 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (310810598, 8991, 23599, (145, 125, 195, 48, 222, 29, 166, 155 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailConversation.all.FindMessagesAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function FindMessagesAsync
   (
      this : in out EmailConversation;
      count : WinRt.UInt32
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (1191596321, 56448, 23033, (135, 25, 63, 12, 110, 239, 135, 83 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (310810598, 8991, 23599, (145, 125, 195, 48, 222, 29, 166, 155 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailConversation.all.FindMessagesAsync (count, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailConversationBatch

   procedure Initialize (this : in out EmailConversationBatch) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailConversationBatch) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailConversationBatch, IEmailConversationBatch_Ptr);
   begin
      if this.m_IEmailConversationBatch /= null then
         if this.m_IEmailConversationBatch.all /= null then
            RefCount := this.m_IEmailConversationBatch.all.Release;
            Free (this.m_IEmailConversationBatch);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailConversationBatch

   function get_Conversations
   (
      this : in out EmailConversationBatch
   )
   return IVectorView_IEmailConversation.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVectorView_IEmailConversation.Kind;
   begin
      Hr := this.m_IEmailConversationBatch.all.get_Conversations (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVectorView_IEmailConversation (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_Status
   (
      this : in out EmailConversationBatch
   )
   return WinRt.Windows.ApplicationModel.Email.EmailBatchStatus is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailBatchStatus;
   begin
      Hr := this.m_IEmailConversationBatch.all.get_Status (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailConversationReader

   procedure Initialize (this : in out EmailConversationReader) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailConversationReader) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailConversationReader, IEmailConversationReader_Ptr);
   begin
      if this.m_IEmailConversationReader /= null then
         if this.m_IEmailConversationReader.all /= null then
            RefCount := this.m_IEmailConversationReader.all.Release;
            Free (this.m_IEmailConversationReader);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailConversationReader

   function ReadBatchAsync
   (
      this : in out EmailConversationReader
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationBatch'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailConversationBatch.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailConversationBatch.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailConversationBatch;
      m_IID            : aliased WinRt.IID := (2106055580, 38013, 24076, (140, 242, 36, 89, 152, 209, 157, 143 )); -- Windows.ApplicationModel.Email.EmailConversationBatch;
      m_HandlerIID     : aliased WinRt.IID := (4047528067, 10869, 22310, (186, 72, 144, 227, 46, 173, 215, 250 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailConversationBatch.Kind := new AsyncOperationCompletedHandler_EmailConversationBatch.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailConversationBatch.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailConversationBatch.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailConversationBatch.Kind_Delegate, AsyncOperationCompletedHandler_EmailConversationBatch.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationBatch do
         Hr := this.m_IEmailConversationReader.all.ReadBatchAsync (m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailConversationBatch := new Windows.ApplicationModel.Email.IEmailConversationBatch;
                  Retval.m_IEmailConversationBatch.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailFolder

   procedure Initialize (this : in out EmailFolder) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailFolder) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailFolder, IEmailFolder_Ptr);
   begin
      if this.m_IEmailFolder /= null then
         if this.m_IEmailFolder.all /= null then
            RefCount := this.m_IEmailFolder.all.Release;
            Free (this.m_IEmailFolder);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailFolder

   function get_Id
   (
      this : in out EmailFolder
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailFolder.all.get_Id (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_RemoteId
   (
      this : in out EmailFolder
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailFolder.all.get_RemoteId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_RemoteId
   (
      this : in out EmailFolder;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailFolder.all.put_RemoteId (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_MailboxId
   (
      this : in out EmailFolder
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailFolder.all.get_MailboxId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_ParentFolderId
   (
      this : in out EmailFolder
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailFolder.all.get_ParentFolderId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_DisplayName
   (
      this : in out EmailFolder
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailFolder.all.get_DisplayName (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_DisplayName
   (
      this : in out EmailFolder;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailFolder.all.put_DisplayName (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_IsSyncEnabled
   (
      this : in out EmailFolder
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailFolder.all.get_IsSyncEnabled (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsSyncEnabled
   (
      this : in out EmailFolder;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailFolder.all.put_IsSyncEnabled (value);
   end;

   function get_LastSuccessfulSyncTime
   (
      this : in out EmailFolder
   )
   return WinRt.Windows.Foundation.DateTime is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.DateTime;
   begin
      Hr := this.m_IEmailFolder.all.get_LastSuccessfulSyncTime (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_LastSuccessfulSyncTime
   (
      this : in out EmailFolder;
      value : Windows.Foundation.DateTime
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailFolder.all.put_LastSuccessfulSyncTime (value);
   end;

   function get_Kind
   (
      this : in out EmailFolder
   )
   return WinRt.Windows.ApplicationModel.Email.EmailSpecialFolderKind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailSpecialFolderKind;
   begin
      Hr := this.m_IEmailFolder.all.get_Kind (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function CreateFolderAsync
   (
      this : in out EmailFolder;
      name : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFolder'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_name : WinRt.HString := To_HString (name);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailFolder.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailFolder.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailFolder;
      m_IID            : aliased WinRt.IID := (1630676815, 29501, 21393, (144, 119, 8, 103, 252, 51, 9, 22 )); -- Windows.ApplicationModel.Email.EmailFolder;
      m_HandlerIID     : aliased WinRt.IID := (4055265015, 1317, 23973, (163, 214, 178, 91, 63, 83, 58, 161 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailFolder.Kind := new AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailFolder.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailFolder.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate, AsyncOperationCompletedHandler_EmailFolder.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailFolder do
         Hr := this.m_IEmailFolder.all.CreateFolderAsync (HStr_name, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailFolder := new Windows.ApplicationModel.Email.IEmailFolder;
                  Retval.m_IEmailFolder.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_name);
      end return;
   end;

   procedure DeleteAsync
   (
      this : in out EmailFolder
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailFolder.all.DeleteAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   function FindChildFoldersAsync
   (
      this : in out EmailFolder
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (203204793, 32645, 21325, (152, 241, 15, 92, 216, 231, 44, 31 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (506739079, 52147, 21088, (166, 157, 203, 0, 225, 124, 142, 82 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailFolder.all.FindChildFoldersAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function GetConversationReader
   (
      this : in out EmailFolder
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailConversationReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationReader do
         Hr := this.m_IEmailFolder.all.GetConversationReader (m_ComRetVal'Access);
         Retval.m_IEmailConversationReader := new Windows.ApplicationModel.Email.IEmailConversationReader;
         Retval.m_IEmailConversationReader.all := m_ComRetVal;
      end return;
   end;

   function GetConversationReader
   (
      this : in out EmailFolder;
      options : Windows.ApplicationModel.Email.EmailQueryOptions'Class
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailConversationReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationReader do
         Hr := this.m_IEmailFolder.all.GetConversationReader (options.m_IEmailQueryOptions.all, m_ComRetVal'Access);
         Retval.m_IEmailConversationReader := new Windows.ApplicationModel.Email.IEmailConversationReader;
         Retval.m_IEmailConversationReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageAsync
   (
      this : in out EmailFolder;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessage'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMessage.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMessage.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMessage;
      m_IID            : aliased WinRt.IID := (1930785049, 64088, 23853, (129, 124, 181, 99, 12, 21, 17, 228 )); -- Windows.ApplicationModel.Email.EmailMessage;
      m_HandlerIID     : aliased WinRt.IID := (1775312158, 61627, 24347, (172, 181, 18, 12, 38, 254, 189, 237 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMessage.Kind := new AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMessage.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMessage.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate, AsyncOperationCompletedHandler_EmailMessage.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessage do
         Hr := this.m_IEmailFolder.all.GetMessageAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMessage := new Windows.ApplicationModel.Email.IEmailMessage;
                  Retval.m_IEmailMessage.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetMessageReader
   (
      this : in out EmailFolder
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessageReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageReader do
         Hr := this.m_IEmailFolder.all.GetMessageReader (m_ComRetVal'Access);
         Retval.m_IEmailMessageReader := new Windows.ApplicationModel.Email.IEmailMessageReader;
         Retval.m_IEmailMessageReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageReader
   (
      this : in out EmailFolder;
      options : Windows.ApplicationModel.Email.EmailQueryOptions'Class
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessageReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageReader do
         Hr := this.m_IEmailFolder.all.GetMessageReader (options.m_IEmailQueryOptions.all, m_ComRetVal'Access);
         Retval.m_IEmailMessageReader := new Windows.ApplicationModel.Email.IEmailMessageReader;
         Retval.m_IEmailMessageReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageCountsAsync
   (
      this : in out EmailFolder
   )
   return WinRt.Windows.ApplicationModel.Email.EmailItemCounts'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailItemCounts.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailItemCounts.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailItemCounts;
      m_IID            : aliased WinRt.IID := (1482062093, 20996, 23193, (182, 158, 199, 22, 47, 210, 88, 105 )); -- Windows.ApplicationModel.Email.EmailItemCounts;
      m_HandlerIID     : aliased WinRt.IID := (46481952, 57048, 21653, (132, 29, 212, 50, 200, 121, 184, 38 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailItemCounts.Kind := new AsyncOperationCompletedHandler_EmailItemCounts.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailItemCounts.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailItemCounts.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailItemCounts.Kind_Delegate, AsyncOperationCompletedHandler_EmailItemCounts.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailItemCounts do
         Hr := this.m_IEmailFolder.all.GetMessageCountsAsync (m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailItemCounts := new Windows.ApplicationModel.Email.IEmailItemCounts;
                  Retval.m_IEmailItemCounts.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   function TryMoveAsync
   (
      this : in out EmailFolder;
      newParentFolder : Windows.ApplicationModel.Email.EmailFolder'Class
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailFolder.all.TryMoveAsync (newParentFolder.m_IEmailFolder.all, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function TryMoveAsync
   (
      this : in out EmailFolder;
      newParentFolder : Windows.ApplicationModel.Email.EmailFolder'Class;
      newFolderName : WinRt.WString
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_newFolderName : WinRt.HString := To_HString (newFolderName);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailFolder.all.TryMoveAsync (newParentFolder.m_IEmailFolder.all, HStr_newFolderName, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_newFolderName);
      return m_RetVal;
   end;

   function TrySaveAsync
   (
      this : in out EmailFolder
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailFolder.all.TrySaveAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   procedure SaveMessageAsync
   (
      this : in out EmailFolder;
      message : Windows.ApplicationModel.Email.EmailMessage'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailFolder.all.SaveMessageAsync (message.m_IEmailMessage.all, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailIrmInfo

   procedure Initialize (this : in out EmailIrmInfo) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailIrmInfo) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailIrmInfo, IEmailIrmInfo_Ptr);
   begin
      if this.m_IEmailIrmInfo /= null then
         if this.m_IEmailIrmInfo.all /= null then
            RefCount := this.m_IEmailIrmInfo.all.Release;
            Free (this.m_IEmailIrmInfo);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailIrmInfo

   function Constructor
   (
      expiration : Windows.Foundation.DateTime;
      irmTemplate : Windows.ApplicationModel.Email.EmailIrmTemplate'Class
   )
   return EmailIrmInfo is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailIrmInfo");
      m_Factory    : access IEmailIrmInfoFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailIrmInfo;
   begin
      return RetVal : EmailIrmInfo do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailIrmInfoFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.Create (expiration, irmTemplate.m_IEmailIrmTemplate.all, m_ComRetVal'Access);
            Retval.m_IEmailIrmInfo := new Windows.ApplicationModel.Email.IEmailIrmInfo;
            Retval.m_IEmailIrmInfo.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   function Constructor return EmailIrmInfo is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailIrmInfo");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailIrmInfo;
   begin
      return RetVal : EmailIrmInfo do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailIrmInfo := new Windows.ApplicationModel.Email.IEmailIrmInfo;
            Retval.m_IEmailIrmInfo.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailIrmInfo

   function get_CanEdit
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanEdit (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanEdit
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanEdit (value);
   end;

   function get_CanExtractData
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanExtractData (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanExtractData
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanExtractData (value);
   end;

   function get_CanForward
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanForward (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanForward
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanForward (value);
   end;

   function get_CanModifyRecipientsOnResponse
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanModifyRecipientsOnResponse (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanModifyRecipientsOnResponse
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanModifyRecipientsOnResponse (value);
   end;

   function get_CanPrintData
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanPrintData (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanPrintData
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanPrintData (value);
   end;

   function get_CanRemoveIrmOnResponse
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanRemoveIrmOnResponse (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanRemoveIrmOnResponse
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanRemoveIrmOnResponse (value);
   end;

   function get_CanReply
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanReply (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanReply
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanReply (value);
   end;

   function get_CanReplyAll
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_CanReplyAll (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_CanReplyAll
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_CanReplyAll (value);
   end;

   function get_ExpirationDate
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Windows.Foundation.DateTime is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.DateTime;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_ExpirationDate (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_ExpirationDate
   (
      this : in out EmailIrmInfo;
      value : Windows.Foundation.DateTime
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_ExpirationDate (value);
   end;

   function get_IsIrmOriginator
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_IsIrmOriginator (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsIrmOriginator
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_IsIrmOriginator (value);
   end;

   function get_IsProgramaticAccessAllowed
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailIrmInfo.all.get_IsProgramaticAccessAllowed (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsProgramaticAccessAllowed
   (
      this : in out EmailIrmInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_IsProgramaticAccessAllowed (value);
   end;

   function get_Template
   (
      this : in out EmailIrmInfo
   )
   return WinRt.Windows.ApplicationModel.Email.EmailIrmTemplate'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailIrmTemplate;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailIrmTemplate do
         Hr := this.m_IEmailIrmInfo.all.get_Template (m_ComRetVal'Access);
         Retval.m_IEmailIrmTemplate := new Windows.ApplicationModel.Email.IEmailIrmTemplate;
         Retval.m_IEmailIrmTemplate.all := m_ComRetVal;
      end return;
   end;

   procedure put_Template
   (
      this : in out EmailIrmInfo;
      value : Windows.ApplicationModel.Email.EmailIrmTemplate'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailIrmInfo.all.put_Template (value.m_IEmailIrmTemplate.all);
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailIrmTemplate

   procedure Initialize (this : in out EmailIrmTemplate) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailIrmTemplate) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailIrmTemplate, IEmailIrmTemplate_Ptr);
   begin
      if this.m_IEmailIrmTemplate /= null then
         if this.m_IEmailIrmTemplate.all /= null then
            RefCount := this.m_IEmailIrmTemplate.all.Release;
            Free (this.m_IEmailIrmTemplate);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailIrmTemplate

   function Constructor
   (
      id : WinRt.WString;
      name : WinRt.WString;
      description : WinRt.WString
   )
   return EmailIrmTemplate is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailIrmTemplate");
      m_Factory    : access IEmailIrmTemplateFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailIrmTemplate;
      HStr_id : WinRt.HString := To_HString (id);
      HStr_name : WinRt.HString := To_HString (name);
      HStr_description : WinRt.HString := To_HString (description);
   begin
      return RetVal : EmailIrmTemplate do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailIrmTemplateFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.Create (HStr_id, HStr_name, HStr_description, m_ComRetVal'Access);
            Retval.m_IEmailIrmTemplate := new Windows.ApplicationModel.Email.IEmailIrmTemplate;
            Retval.m_IEmailIrmTemplate.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_id);
         Hr := WindowsDeleteString (HStr_name);
         Hr := WindowsDeleteString (HStr_description);
      end return;
   end;

   function Constructor return EmailIrmTemplate is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailIrmTemplate");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailIrmTemplate;
   begin
      return RetVal : EmailIrmTemplate do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailIrmTemplate := new Windows.ApplicationModel.Email.IEmailIrmTemplate;
            Retval.m_IEmailIrmTemplate.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailIrmTemplate

   function get_Id
   (
      this : in out EmailIrmTemplate
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailIrmTemplate.all.get_Id (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Id
   (
      this : in out EmailIrmTemplate;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailIrmTemplate.all.put_Id (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_Description
   (
      this : in out EmailIrmTemplate
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailIrmTemplate.all.get_Description (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Description
   (
      this : in out EmailIrmTemplate;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailIrmTemplate.all.put_Description (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_Name
   (
      this : in out EmailIrmTemplate
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailIrmTemplate.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Name
   (
      this : in out EmailIrmTemplate;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailIrmTemplate.all.put_Name (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailItemCounts

   procedure Initialize (this : in out EmailItemCounts) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailItemCounts) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailItemCounts, IEmailItemCounts_Ptr);
   begin
      if this.m_IEmailItemCounts /= null then
         if this.m_IEmailItemCounts.all /= null then
            RefCount := this.m_IEmailItemCounts.all.Release;
            Free (this.m_IEmailItemCounts);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailItemCounts

   function get_Flagged
   (
      this : in out EmailItemCounts
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
   begin
      Hr := this.m_IEmailItemCounts.all.get_Flagged (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_Important
   (
      this : in out EmailItemCounts
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
   begin
      Hr := this.m_IEmailItemCounts.all.get_Important (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_Total
   (
      this : in out EmailItemCounts
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
   begin
      Hr := this.m_IEmailItemCounts.all.get_Total (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_Unread
   (
      this : in out EmailItemCounts
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
   begin
      Hr := this.m_IEmailItemCounts.all.get_Unread (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailbox

   procedure Initialize (this : in out EmailMailbox) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailbox) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailbox, IEmailMailbox_Ptr);
   begin
      if this.m_IEmailMailbox /= null then
         if this.m_IEmailMailbox.all /= null then
            RefCount := this.m_IEmailMailbox.all.Release;
            Free (this.m_IEmailMailbox);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailbox

   function get_Capabilities
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxCapabilities'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxCapabilities;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxCapabilities do
         Hr := this.m_IEmailMailbox.all.get_Capabilities (m_ComRetVal'Access);
         Retval.m_IEmailMailboxCapabilities := new Windows.ApplicationModel.Email.IEmailMailboxCapabilities;
         Retval.m_IEmailMailboxCapabilities.all := m_ComRetVal;
      end return;
   end;

   function get_ChangeTracker
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeTracker'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxChangeTracker;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeTracker do
         Hr := this.m_IEmailMailbox.all.get_ChangeTracker (m_ComRetVal'Access);
         Retval.m_IEmailMailboxChangeTracker := new Windows.ApplicationModel.Email.IEmailMailboxChangeTracker;
         Retval.m_IEmailMailboxChangeTracker.all := m_ComRetVal;
      end return;
   end;

   function get_DisplayName
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMailbox.all.get_DisplayName (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_DisplayName
   (
      this : in out EmailMailbox;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMailbox.all.put_DisplayName (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_Id
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMailbox.all.get_Id (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_IsOwnedByCurrentApp
   (
      this : in out EmailMailbox
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailbox.all.get_IsOwnedByCurrentApp (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_IsDataEncryptedUnderLock
   (
      this : in out EmailMailbox
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailbox.all.get_IsDataEncryptedUnderLock (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_MailAddress
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMailbox.all.get_MailAddress (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_MailAddress
   (
      this : in out EmailMailbox;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMailbox.all.put_MailAddress (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_MailAddressAliases
   (
      this : in out EmailMailbox
   )
   return IVector_HString.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_HString.Kind;
   begin
      Hr := this.m_IEmailMailbox.all.get_MailAddressAliases (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_HString (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_OtherAppReadAccess
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess;
   begin
      Hr := this.m_IEmailMailbox.all.get_OtherAppReadAccess (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_OtherAppReadAccess
   (
      this : in out EmailMailbox;
      value : Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailbox.all.put_OtherAppReadAccess (value);
   end;

   function get_OtherAppWriteAccess
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess;
   begin
      Hr := this.m_IEmailMailbox.all.get_OtherAppWriteAccess (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_OtherAppWriteAccess
   (
      this : in out EmailMailbox;
      value : Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailbox.all.put_OtherAppWriteAccess (value);
   end;

   function get_Policies
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxPolicies'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxPolicies;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxPolicies do
         Hr := this.m_IEmailMailbox.all.get_Policies (m_ComRetVal'Access);
         Retval.m_IEmailMailboxPolicies := new Windows.ApplicationModel.Email.IEmailMailboxPolicies;
         Retval.m_IEmailMailboxPolicies.all := m_ComRetVal;
      end return;
   end;

   function get_SourceDisplayName
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMailbox.all.get_SourceDisplayName (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_SyncManager
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxSyncManager'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxSyncManager;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxSyncManager do
         Hr := this.m_IEmailMailbox.all.get_SyncManager (m_ComRetVal'Access);
         Retval.m_IEmailMailboxSyncManager := new Windows.ApplicationModel.Email.IEmailMailboxSyncManager;
         Retval.m_IEmailMailboxSyncManager.all := m_ComRetVal;
      end return;
   end;

   function get_UserDataAccountId
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMailbox.all.get_UserDataAccountId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function GetConversationReader
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailConversationReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationReader do
         Hr := this.m_IEmailMailbox.all.GetConversationReader (m_ComRetVal'Access);
         Retval.m_IEmailConversationReader := new Windows.ApplicationModel.Email.IEmailConversationReader;
         Retval.m_IEmailConversationReader.all := m_ComRetVal;
      end return;
   end;

   function GetConversationReader
   (
      this : in out EmailMailbox;
      options : Windows.ApplicationModel.Email.EmailQueryOptions'Class
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailConversationReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationReader do
         Hr := this.m_IEmailMailbox.all.GetConversationReader (options.m_IEmailQueryOptions.all, m_ComRetVal'Access);
         Retval.m_IEmailConversationReader := new Windows.ApplicationModel.Email.IEmailConversationReader;
         Retval.m_IEmailConversationReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageReader
   (
      this : in out EmailMailbox
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessageReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageReader do
         Hr := this.m_IEmailMailbox.all.GetMessageReader (m_ComRetVal'Access);
         Retval.m_IEmailMessageReader := new Windows.ApplicationModel.Email.IEmailMessageReader;
         Retval.m_IEmailMessageReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageReader
   (
      this : in out EmailMailbox;
      options : Windows.ApplicationModel.Email.EmailQueryOptions'Class
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessageReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageReader do
         Hr := this.m_IEmailMailbox.all.GetMessageReader (options.m_IEmailQueryOptions.all, m_ComRetVal'Access);
         Retval.m_IEmailMessageReader := new Windows.ApplicationModel.Email.IEmailMessageReader;
         Retval.m_IEmailMessageReader.all := m_ComRetVal;
      end return;
   end;

   procedure DeleteAsync
   (
      this : in out EmailMailbox
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.DeleteAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   function GetConversationAsync
   (
      this : in out EmailMailbox;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversation'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailConversation.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailConversation.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailConversation;
      m_IID            : aliased WinRt.IID := (1753585260, 5049, 22988, (179, 88, 173, 248, 46, 236, 132, 42 )); -- Windows.ApplicationModel.Email.EmailConversation;
      m_HandlerIID     : aliased WinRt.IID := (43305117, 36248, 21314, (184, 47, 1, 16, 36, 21, 200, 112 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailConversation.Kind := new AsyncOperationCompletedHandler_EmailConversation.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailConversation.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailConversation.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailConversation.Kind_Delegate, AsyncOperationCompletedHandler_EmailConversation.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversation do
         Hr := this.m_IEmailMailbox.all.GetConversationAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailConversation := new Windows.ApplicationModel.Email.IEmailConversation;
                  Retval.m_IEmailConversation.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetFolderAsync
   (
      this : in out EmailMailbox;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFolder'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailFolder.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailFolder.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailFolder;
      m_IID            : aliased WinRt.IID := (1630676815, 29501, 21393, (144, 119, 8, 103, 252, 51, 9, 22 )); -- Windows.ApplicationModel.Email.EmailFolder;
      m_HandlerIID     : aliased WinRt.IID := (4055265015, 1317, 23973, (163, 214, 178, 91, 63, 83, 58, 161 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailFolder.Kind := new AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailFolder.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailFolder.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate, AsyncOperationCompletedHandler_EmailFolder.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailFolder do
         Hr := this.m_IEmailMailbox.all.GetFolderAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailFolder := new Windows.ApplicationModel.Email.IEmailFolder;
                  Retval.m_IEmailFolder.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetMessageAsync
   (
      this : in out EmailMailbox;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessage'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMessage.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMessage.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMessage;
      m_IID            : aliased WinRt.IID := (1930785049, 64088, 23853, (129, 124, 181, 99, 12, 21, 17, 228 )); -- Windows.ApplicationModel.Email.EmailMessage;
      m_HandlerIID     : aliased WinRt.IID := (1775312158, 61627, 24347, (172, 181, 18, 12, 38, 254, 189, 237 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMessage.Kind := new AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMessage.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMessage.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate, AsyncOperationCompletedHandler_EmailMessage.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessage do
         Hr := this.m_IEmailMailbox.all.GetMessageAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMessage := new Windows.ApplicationModel.Email.IEmailMessage;
                  Retval.m_IEmailMessage.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetSpecialFolderAsync
   (
      this : in out EmailMailbox;
      folderType : Windows.ApplicationModel.Email.EmailSpecialFolderKind
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFolder'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailFolder.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailFolder.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailFolder;
      m_IID            : aliased WinRt.IID := (1630676815, 29501, 21393, (144, 119, 8, 103, 252, 51, 9, 22 )); -- Windows.ApplicationModel.Email.EmailFolder;
      m_HandlerIID     : aliased WinRt.IID := (4055265015, 1317, 23973, (163, 214, 178, 91, 63, 83, 58, 161 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailFolder.Kind := new AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailFolder.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailFolder.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate, AsyncOperationCompletedHandler_EmailFolder.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailFolder do
         Hr := this.m_IEmailMailbox.all.GetSpecialFolderAsync (folderType, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailFolder := new Windows.ApplicationModel.Email.IEmailFolder;
                  Retval.m_IEmailFolder.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   procedure SaveAsync
   (
      this : in out EmailMailbox
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.SaveAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   procedure MarkMessageAsSeenAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.MarkMessageAsSeenAsync (HStr_messageId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_messageId);
   end;

   procedure MarkFolderAsSeenAsync
   (
      this : in out EmailMailbox;
      folderId : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_folderId : WinRt.HString := To_HString (folderId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.MarkFolderAsSeenAsync (HStr_folderId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_folderId);
   end;

   procedure MarkMessageReadAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString;
      isRead : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.MarkMessageReadAsync (HStr_messageId, isRead, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_messageId);
   end;

   procedure ChangeMessageFlagStateAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString;
      flagState : Windows.ApplicationModel.Email.EmailFlagState
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.ChangeMessageFlagStateAsync (HStr_messageId, flagState, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_messageId);
   end;

   function TryMoveMessageAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString;
      newParentFolderId : WinRt.WString
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      HStr_newParentFolderId : WinRt.HString := To_HString (newParentFolderId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TryMoveMessageAsync (HStr_messageId, HStr_newParentFolderId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_messageId);
      Hr := WindowsDeleteString (HStr_newParentFolderId);
      return m_RetVal;
   end;

   function TryMoveFolderAsync
   (
      this : in out EmailMailbox;
      folderId : WinRt.WString;
      newParentFolderId : WinRt.WString
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_folderId : WinRt.HString := To_HString (folderId);
      HStr_newParentFolderId : WinRt.HString := To_HString (newParentFolderId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TryMoveFolderAsync (HStr_folderId, HStr_newParentFolderId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_folderId);
      Hr := WindowsDeleteString (HStr_newParentFolderId);
      return m_RetVal;
   end;

   function TryMoveFolderAsync
   (
      this : in out EmailMailbox;
      folderId : WinRt.WString;
      newParentFolderId : WinRt.WString;
      newFolderName : WinRt.WString
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_folderId : WinRt.HString := To_HString (folderId);
      HStr_newParentFolderId : WinRt.HString := To_HString (newParentFolderId);
      HStr_newFolderName : WinRt.HString := To_HString (newFolderName);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TryMoveFolderAsync (HStr_folderId, HStr_newParentFolderId, HStr_newFolderName, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_folderId);
      Hr := WindowsDeleteString (HStr_newParentFolderId);
      Hr := WindowsDeleteString (HStr_newFolderName);
      return m_RetVal;
   end;

   procedure DeleteMessageAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.DeleteMessageAsync (HStr_messageId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_messageId);
   end;

   procedure MarkFolderSyncEnabledAsync
   (
      this : in out EmailMailbox;
      folderId : WinRt.WString;
      isSyncEnabled : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_folderId : WinRt.HString := To_HString (folderId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.MarkFolderSyncEnabledAsync (HStr_folderId, isSyncEnabled, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_folderId);
   end;

   procedure SendMessageAsync
   (
      this : in out EmailMailbox;
      message : Windows.ApplicationModel.Email.EmailMessage'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.SendMessageAsync (message.m_IEmailMessage.all, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   procedure SaveDraftAsync
   (
      this : in out EmailMailbox;
      message : Windows.ApplicationModel.Email.EmailMessage'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.SaveDraftAsync (message.m_IEmailMessage.all, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   procedure DownloadMessageAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.DownloadMessageAsync (HStr_messageId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_messageId);
   end;

   procedure DownloadAttachmentAsync
   (
      this : in out EmailMailbox;
      attachmentId : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_attachmentId : WinRt.HString := To_HString (attachmentId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.DownloadAttachmentAsync (HStr_attachmentId, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_attachmentId);
   end;

   function CreateResponseMessageAsync
   (
      this : in out EmailMailbox;
      messageId : WinRt.WString;
      responseType : Windows.ApplicationModel.Email.EmailMessageResponseKind;
      subject : WinRt.WString;
      responseHeaderType : Windows.ApplicationModel.Email.EmailMessageBodyKind;
      responseHeader : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessage'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_messageId : WinRt.HString := To_HString (messageId);
      HStr_subject : WinRt.HString := To_HString (subject);
      HStr_responseHeader : WinRt.HString := To_HString (responseHeader);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMessage.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMessage.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMessage;
      m_IID            : aliased WinRt.IID := (1930785049, 64088, 23853, (129, 124, 181, 99, 12, 21, 17, 228 )); -- Windows.ApplicationModel.Email.EmailMessage;
      m_HandlerIID     : aliased WinRt.IID := (1775312158, 61627, 24347, (172, 181, 18, 12, 38, 254, 189, 237 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMessage.Kind := new AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMessage.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMessage.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate, AsyncOperationCompletedHandler_EmailMessage.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessage do
         Hr := this.m_IEmailMailbox.all.CreateResponseMessageAsync (HStr_messageId, responseType, HStr_subject, responseHeaderType, HStr_responseHeader, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMessage := new Windows.ApplicationModel.Email.IEmailMessage;
                  Retval.m_IEmailMessage.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_messageId);
         Hr := WindowsDeleteString (HStr_subject);
         Hr := WindowsDeleteString (HStr_responseHeader);
      end return;
   end;

   function TryUpdateMeetingResponseAsync
   (
      this : in out EmailMailbox;
      meeting : Windows.ApplicationModel.Email.EmailMessage'Class;
      response : Windows.ApplicationModel.Email.EmailMeetingResponseType;
      subject : WinRt.WString;
      comment : WinRt.WString;
      sendUpdate : WinRt.Boolean
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_subject : WinRt.HString := To_HString (subject);
      HStr_comment : WinRt.HString := To_HString (comment);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TryUpdateMeetingResponseAsync (meeting.m_IEmailMessage.all, response, HStr_subject, HStr_comment, sendUpdate, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_subject);
      Hr := WindowsDeleteString (HStr_comment);
      return m_RetVal;
   end;

   function TryForwardMeetingAsync
   (
      this : in out EmailMailbox;
      meeting : Windows.ApplicationModel.Email.EmailMessage'Class;
      recipients : GenericObject;
      subject : WinRt.WString;
      forwardHeaderType : Windows.ApplicationModel.Email.EmailMessageBodyKind;
      forwardHeader : WinRt.WString;
      comment : WinRt.WString
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_subject : WinRt.HString := To_HString (subject);
      HStr_forwardHeader : WinRt.HString := To_HString (forwardHeader);
      HStr_comment : WinRt.HString := To_HString (comment);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TryForwardMeetingAsync (meeting.m_IEmailMessage.all, recipients, HStr_subject, forwardHeaderType, HStr_forwardHeader, HStr_comment, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_subject);
      Hr := WindowsDeleteString (HStr_forwardHeader);
      Hr := WindowsDeleteString (HStr_comment);
      return m_RetVal;
   end;

   function TryProposeNewTimeForMeetingAsync
   (
      this : in out EmailMailbox;
      meeting : Windows.ApplicationModel.Email.EmailMessage'Class;
      newStartTime : Windows.Foundation.DateTime;
      newDuration : Windows.Foundation.TimeSpan;
      subject : WinRt.WString;
      comment : WinRt.WString
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_subject : WinRt.HString := To_HString (subject);
      HStr_comment : WinRt.HString := To_HString (comment);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TryProposeNewTimeForMeetingAsync (meeting.m_IEmailMessage.all, newStartTime, newDuration, HStr_subject, HStr_comment, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_subject);
      Hr := WindowsDeleteString (HStr_comment);
      return m_RetVal;
   end;

   function add_MailboxChanged
   (
      this : in out EmailMailbox;
      pHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.EventRegistrationToken;
   begin
      Hr := this.m_IEmailMailbox.all.add_MailboxChanged (pHandler, m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure remove_MailboxChanged
   (
      this : in out EmailMailbox;
      token : Windows.Foundation.EventRegistrationToken
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailbox.all.remove_MailboxChanged (token);
   end;

   procedure SendMessageAsync
   (
      this : in out EmailMailbox;
      message : Windows.ApplicationModel.Email.EmailMessage'Class;
      smartSend : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailMailbox.all.SendMessageAsync (message.m_IEmailMessage.all, smartSend, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   function TrySetAutoReplySettingsAsync
   (
      this : in out EmailMailbox;
      autoReplySettings : Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings'Class
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailbox.all.TrySetAutoReplySettingsAsync (autoReplySettings.m_IEmailMailboxAutoReplySettings.all, m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function TryGetAutoReplySettingsAsync
   (
      this : in out EmailMailbox;
      requestedFormat : Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailboxAutoReplySettings.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailboxAutoReplySettings.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings;
      m_IID            : aliased WinRt.IID := (3008681156, 58528, 23100, (184, 151, 141, 235, 69, 138, 198, 115 )); -- Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings;
      m_HandlerIID     : aliased WinRt.IID := (3753977690, 51120, 24548, (147, 112, 50, 185, 74, 208, 186, 142 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailboxAutoReplySettings.Kind := new AsyncOperationCompletedHandler_EmailMailboxAutoReplySettings.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailboxAutoReplySettings.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailboxAutoReplySettings.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailboxAutoReplySettings.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailboxAutoReplySettings.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings do
         Hr := this.m_IEmailMailbox.all.TryGetAutoReplySettingsAsync (requestedFormat, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMailboxAutoReplySettings := new Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings;
                  Retval.m_IEmailMailboxAutoReplySettings.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   function get_LinkedMailboxId
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.get_LinkedMailboxId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_NetworkAccountId
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.get_NetworkAccountId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_NetworkId
   (
      this : in out EmailMailbox
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.get_NetworkId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function ResolveRecipientsAsync
   (
      this : in out EmailMailbox;
      recipients : GenericObject
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (312962958, 60689, 23595, (129, 198, 17, 2, 150, 252, 122, 67 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (2951634072, 62189, 23487, (144, 251, 149, 95, 142, 108, 21, 224 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.ResolveRecipientsAsync (recipients, m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function ValidateCertificatesAsync
   (
      this : in out EmailMailbox;
      certificates : GenericObject
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (4092063579, 34964, 21640, (151, 239, 2, 156, 164, 145, 57, 71 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (2108798104, 2372, 23423, (134, 83, 69, 208, 211, 93, 223, 241 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.ValidateCertificatesAsync (certificates, m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function TryEmptyFolderAsync
   (
      this : in out EmailMailbox;
      folderId : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_folderId : WinRt.HString := To_HString (folderId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailboxEmptyFolderStatus.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailboxEmptyFolderStatus.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus;
      m_IID            : aliased WinRt.IID := (3385166, 39850, 24400, (141, 110, 35, 134, 53, 230, 253, 211 )); -- Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus;
      m_HandlerIID     : aliased WinRt.IID := (1345531909, 56045, 22142, (187, 136, 177, 188, 70, 99, 176, 117 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailboxEmptyFolderStatus.Kind := new AsyncOperationCompletedHandler_EmailMailboxEmptyFolderStatus.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailboxEmptyFolderStatus.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailboxEmptyFolderStatus.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailboxEmptyFolderStatus.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailboxEmptyFolderStatus.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.TryEmptyFolderAsync (HStr_folderId, m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_folderId);
      return m_RetVal;
   end;

   function TryCreateFolderAsync
   (
      this : in out EmailMailbox;
      parentFolderId : WinRt.WString;
      name : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult'Class is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_parentFolderId : WinRt.HString := To_HString (parentFolderId);
      HStr_name : WinRt.HString := To_HString (name);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailboxCreateFolderResult.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailboxCreateFolderResult.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMailboxCreateFolderResult;
      m_IID            : aliased WinRt.IID := (1834618497, 26953, 20729, (191, 251, 146, 190, 18, 22, 114, 77 )); -- Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult;
      m_HandlerIID     : aliased WinRt.IID := (2459897818, 62288, 21950, (133, 85, 233, 141, 129, 234, 241, 165 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailboxCreateFolderResult.Kind := new AsyncOperationCompletedHandler_EmailMailboxCreateFolderResult.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailboxCreateFolderResult.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailboxCreateFolderResult.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailboxCreateFolderResult.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailboxCreateFolderResult.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox3'Unchecked_Access);
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult do
         m_Interface := QInterface (this.m_IEmailMailbox.all);
         Hr := m_Interface.TryCreateFolderAsync (HStr_parentFolderId, HStr_name, m_ComRetVal'Access);
         m_RefCount := m_Interface.Release;
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMailboxCreateFolderResult := new Windows.ApplicationModel.Email.IEmailMailboxCreateFolderResult;
                  Retval.m_IEmailMailboxCreateFolderResult.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_parentFolderId);
         Hr := WindowsDeleteString (HStr_name);
      end return;
   end;

   function TryDeleteFolderAsync
   (
      this : in out EmailMailbox;
      folderId : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_folderId : WinRt.HString := To_HString (folderId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailboxDeleteFolderStatus.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailboxDeleteFolderStatus.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus;
      m_IID            : aliased WinRt.IID := (1751185535, 663, 23263, (170, 22, 159, 31, 8, 226, 217, 80 )); -- Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus;
      m_HandlerIID     : aliased WinRt.IID := (1382043046, 18523, 21573, (142, 111, 100, 204, 19, 5, 96, 69 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailboxDeleteFolderStatus.Kind := new AsyncOperationCompletedHandler_EmailMailboxDeleteFolderStatus.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailboxDeleteFolderStatus.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailboxDeleteFolderStatus.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailboxDeleteFolderStatus.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailboxDeleteFolderStatus.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.TryDeleteFolderAsync (HStr_folderId, m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      Hr := WindowsDeleteString (HStr_folderId);
      return m_RetVal;
   end;

   procedure RegisterSyncManagerAsync
   (
      this : in out EmailMailbox
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox4 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox4, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox4'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailbox.all);
      Hr := m_Interface.RegisterSyncManagerAsync (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   function GetChangeTracker
   (
      this : in out EmailMailbox;
      identity : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeTracker'Class is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailbox5 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxChangeTracker;
      HStr_identity : WinRt.HString := To_HString (identity);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailbox_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailbox5, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailbox5'Unchecked_Access);
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeTracker do
         m_Interface := QInterface (this.m_IEmailMailbox.all);
         Hr := m_Interface.GetChangeTracker (HStr_identity, m_ComRetVal'Access);
         m_RefCount := m_Interface.Release;
         Retval.m_IEmailMailboxChangeTracker := new Windows.ApplicationModel.Email.IEmailMailboxChangeTracker;
         Retval.m_IEmailMailboxChangeTracker.all := m_ComRetVal;
         Hr := WindowsDeleteString (HStr_identity);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxAction

   procedure Initialize (this : in out EmailMailboxAction) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxAction) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxAction, IEmailMailboxAction_Ptr);
   begin
      if this.m_IEmailMailboxAction /= null then
         if this.m_IEmailMailboxAction.all /= null then
            RefCount := this.m_IEmailMailboxAction.all.Release;
            Free (this.m_IEmailMailboxAction);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxAction

   function get_Kind
   (
      this : in out EmailMailboxAction
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxActionKind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxActionKind;
   begin
      Hr := this.m_IEmailMailboxAction.all.get_Kind (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_ChangeNumber
   (
      this : in out EmailMailboxAction
   )
   return WinRt.UInt64 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt64;
   begin
      Hr := this.m_IEmailMailboxAction.all.get_ChangeNumber (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxAutoReply

   procedure Initialize (this : in out EmailMailboxAutoReply) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxAutoReply) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxAutoReply, IEmailMailboxAutoReply_Ptr);
   begin
      if this.m_IEmailMailboxAutoReply /= null then
         if this.m_IEmailMailboxAutoReply.all /= null then
            RefCount := this.m_IEmailMailboxAutoReply.all.Release;
            Free (this.m_IEmailMailboxAutoReply);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxAutoReply

   function get_IsEnabled
   (
      this : in out EmailMailboxAutoReply
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxAutoReply.all.get_IsEnabled (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsEnabled
   (
      this : in out EmailMailboxAutoReply;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxAutoReply.all.put_IsEnabled (value);
   end;

   function get_Response
   (
      this : in out EmailMailboxAutoReply
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMailboxAutoReply.all.get_Response (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Response
   (
      this : in out EmailMailboxAutoReply;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMailboxAutoReply.all.put_Response (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxAutoReplySettings

   procedure Initialize (this : in out EmailMailboxAutoReplySettings) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxAutoReplySettings) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxAutoReplySettings, IEmailMailboxAutoReplySettings_Ptr);
   begin
      if this.m_IEmailMailboxAutoReplySettings /= null then
         if this.m_IEmailMailboxAutoReplySettings.all /= null then
            RefCount := this.m_IEmailMailboxAutoReplySettings.all.Release;
            Free (this.m_IEmailMailboxAutoReplySettings);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailMailboxAutoReplySettings

   function Constructor return EmailMailboxAutoReplySettings is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings;
   begin
      return RetVal : EmailMailboxAutoReplySettings do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailMailboxAutoReplySettings := new Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings;
            Retval.m_IEmailMailboxAutoReplySettings.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxAutoReplySettings

   function get_IsEnabled
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.get_IsEnabled (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsEnabled
   (
      this : in out EmailMailboxAutoReplySettings;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.put_IsEnabled (value);
   end;

   function get_ResponseKind
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.get_ResponseKind (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_ResponseKind
   (
      this : in out EmailMailboxAutoReplySettings;
      value : Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.put_ResponseKind (value);
   end;

   function get_StartTime
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return IReference_DateTime.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_DateTime.Kind;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.get_StartTime (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_DateTime (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_StartTime
   (
      this : in out EmailMailboxAutoReplySettings;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.put_StartTime (value);
   end;

   function get_EndTime
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return IReference_DateTime.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_DateTime.Kind;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.get_EndTime (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_DateTime (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_EndTime
   (
      this : in out EmailMailboxAutoReplySettings;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxAutoReplySettings.all.put_EndTime (value);
   end;

   function get_InternalReply
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReply'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxAutoReply;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReply do
         Hr := this.m_IEmailMailboxAutoReplySettings.all.get_InternalReply (m_ComRetVal'Access);
         Retval.m_IEmailMailboxAutoReply := new Windows.ApplicationModel.Email.IEmailMailboxAutoReply;
         Retval.m_IEmailMailboxAutoReply.all := m_ComRetVal;
      end return;
   end;

   function get_KnownExternalReply
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReply'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxAutoReply;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReply do
         Hr := this.m_IEmailMailboxAutoReplySettings.all.get_KnownExternalReply (m_ComRetVal'Access);
         Retval.m_IEmailMailboxAutoReply := new Windows.ApplicationModel.Email.IEmailMailboxAutoReply;
         Retval.m_IEmailMailboxAutoReply.all := m_ComRetVal;
      end return;
   end;

   function get_UnknownExternalReply
   (
      this : in out EmailMailboxAutoReplySettings
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReply'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxAutoReply;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxAutoReply do
         Hr := this.m_IEmailMailboxAutoReplySettings.all.get_UnknownExternalReply (m_ComRetVal'Access);
         Retval.m_IEmailMailboxAutoReply := new Windows.ApplicationModel.Email.IEmailMailboxAutoReply;
         Retval.m_IEmailMailboxAutoReply.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxCapabilities

   procedure Initialize (this : in out EmailMailboxCapabilities) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxCapabilities) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxCapabilities, IEmailMailboxCapabilities_Ptr);
   begin
      if this.m_IEmailMailboxCapabilities /= null then
         if this.m_IEmailMailboxCapabilities.all /= null then
            RefCount := this.m_IEmailMailboxCapabilities.all.Release;
            Free (this.m_IEmailMailboxCapabilities);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxCapabilities

   function get_CanForwardMeetings
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanForwardMeetings (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanGetAndSetExternalAutoReplies
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanGetAndSetExternalAutoReplies (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanGetAndSetInternalAutoReplies
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanGetAndSetInternalAutoReplies (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanUpdateMeetingResponses
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanUpdateMeetingResponses (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanServerSearchFolders
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanServerSearchFolders (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanServerSearchMailbox
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanServerSearchMailbox (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanProposeNewTimeForMeetings
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanProposeNewTimeForMeetings (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanSmartSend
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxCapabilities.all.get_CanSmartSend (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_CanResolveRecipients
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.get_CanResolveRecipients (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_CanValidateCertificates
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.get_CanValidateCertificates (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_CanEmptyFolder
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.get_CanEmptyFolder (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_CanCreateFolder
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.get_CanCreateFolder (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_CanDeleteFolder
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.get_CanDeleteFolder (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_CanMoveFolder
   (
      this : in out EmailMailboxCapabilities
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.get_CanMoveFolder (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_CanForwardMeetings
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanForwardMeetings (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanGetAndSetExternalAutoReplies
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanGetAndSetExternalAutoReplies (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanGetAndSetInternalAutoReplies
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanGetAndSetInternalAutoReplies (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanUpdateMeetingResponses
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanUpdateMeetingResponses (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanServerSearchFolders
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanServerSearchFolders (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanServerSearchMailbox
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanServerSearchMailbox (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanProposeNewTimeForMeetings
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanProposeNewTimeForMeetings (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanSmartSend
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanSmartSend (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanResolveRecipients
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanResolveRecipients (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanValidateCertificates
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanValidateCertificates (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanEmptyFolder
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanEmptyFolder (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanCreateFolder
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanCreateFolder (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanDeleteFolder
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanDeleteFolder (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_CanMoveFolder
   (
      this : in out EmailMailboxCapabilities;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxCapabilities3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxCapabilities3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxCapabilities.all);
      Hr := m_Interface.put_CanMoveFolder (value);
      m_RefCount := m_Interface.Release;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxChange

   procedure Initialize (this : in out EmailMailboxChange) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxChange) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxChange, IEmailMailboxChange_Ptr);
   begin
      if this.m_IEmailMailboxChange /= null then
         if this.m_IEmailMailboxChange.all /= null then
            RefCount := this.m_IEmailMailboxChange.all.Release;
            Free (this.m_IEmailMailboxChange);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxChange

   function get_ChangeType
   (
      this : in out EmailMailboxChange
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeType is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxChangeType;
   begin
      Hr := this.m_IEmailMailboxChange.all.get_ChangeType (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_MailboxActions
   (
      this : in out EmailMailboxChange
   )
   return IVector_IEmailMailboxAction.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_IEmailMailboxAction.Kind;
   begin
      Hr := this.m_IEmailMailboxChange.all.get_MailboxActions (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_IEmailMailboxAction (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_Message
   (
      this : in out EmailMailboxChange
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessage'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessage;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessage do
         Hr := this.m_IEmailMailboxChange.all.get_Message (m_ComRetVal'Access);
         Retval.m_IEmailMessage := new Windows.ApplicationModel.Email.IEmailMessage;
         Retval.m_IEmailMessage.all := m_ComRetVal;
      end return;
   end;

   function get_Folder
   (
      this : in out EmailMailboxChange
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFolder'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailFolder;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailFolder do
         Hr := this.m_IEmailMailboxChange.all.get_Folder (m_ComRetVal'Access);
         Retval.m_IEmailFolder := new Windows.ApplicationModel.Email.IEmailFolder;
         Retval.m_IEmailFolder.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxChangeReader

   procedure Initialize (this : in out EmailMailboxChangeReader) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxChangeReader) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxChangeReader, IEmailMailboxChangeReader_Ptr);
   begin
      if this.m_IEmailMailboxChangeReader /= null then
         if this.m_IEmailMailboxChangeReader.all /= null then
            RefCount := this.m_IEmailMailboxChangeReader.all.Release;
            Free (this.m_IEmailMailboxChangeReader);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxChangeReader

   procedure AcceptChanges
   (
      this : in out EmailMailboxChangeReader
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxChangeReader.all.AcceptChanges;
   end;

   procedure AcceptChangesThrough
   (
      this : in out EmailMailboxChangeReader;
      lastChangeToAcknowledge : Windows.ApplicationModel.Email.EmailMailboxChange'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxChangeReader.all.AcceptChangesThrough (lastChangeToAcknowledge.m_IEmailMailboxChange.all);
   end;

   function ReadBatchAsync
   (
      this : in out EmailMailboxChangeReader
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (2165652777, 54530, 20560, (175, 100, 177, 51, 52, 98, 209, 106 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (3974752299, 48065, 23858, (179, 6, 30, 77, 69, 1, 182, 138 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailboxChangeReader.all.ReadBatchAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxChangeTracker

   procedure Initialize (this : in out EmailMailboxChangeTracker) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxChangeTracker) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxChangeTracker, IEmailMailboxChangeTracker_Ptr);
   begin
      if this.m_IEmailMailboxChangeTracker /= null then
         if this.m_IEmailMailboxChangeTracker.all /= null then
            RefCount := this.m_IEmailMailboxChangeTracker.all.Release;
            Free (this.m_IEmailMailboxChangeTracker);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxChangeTracker

   function get_IsTracking
   (
      this : in out EmailMailboxChangeTracker
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxChangeTracker.all.get_IsTracking (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure Enable
   (
      this : in out EmailMailboxChangeTracker
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxChangeTracker.all.Enable;
   end;

   function GetChangeReader
   (
      this : in out EmailMailboxChangeTracker
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxChangeReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxChangeReader do
         Hr := this.m_IEmailMailboxChangeTracker.all.GetChangeReader (m_ComRetVal'Access);
         Retval.m_IEmailMailboxChangeReader := new Windows.ApplicationModel.Email.IEmailMailboxChangeReader;
         Retval.m_IEmailMailboxChangeReader.all := m_ComRetVal;
      end return;
   end;

   procedure Reset
   (
      this : in out EmailMailboxChangeTracker
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxChangeTracker.all.Reset;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxChangedDeferral

   procedure Initialize (this : in out EmailMailboxChangedDeferral) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxChangedDeferral) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxChangedDeferral, IEmailMailboxChangedDeferral_Ptr);
   begin
      if this.m_IEmailMailboxChangedDeferral /= null then
         if this.m_IEmailMailboxChangedDeferral.all /= null then
            RefCount := this.m_IEmailMailboxChangedDeferral.all.Release;
            Free (this.m_IEmailMailboxChangedDeferral);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxChangedDeferral

   procedure Complete
   (
      this : in out EmailMailboxChangedDeferral
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxChangedDeferral.all.Complete;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxChangedEventArgs

   procedure Initialize (this : in out EmailMailboxChangedEventArgs) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxChangedEventArgs) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxChangedEventArgs, IEmailMailboxChangedEventArgs_Ptr);
   begin
      if this.m_IEmailMailboxChangedEventArgs /= null then
         if this.m_IEmailMailboxChangedEventArgs.all /= null then
            RefCount := this.m_IEmailMailboxChangedEventArgs.all.Release;
            Free (this.m_IEmailMailboxChangedEventArgs);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxChangedEventArgs

   function GetDeferral
   (
      this : in out EmailMailboxChangedEventArgs
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxChangedDeferral'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMailboxChangedDeferral;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailboxChangedDeferral do
         Hr := this.m_IEmailMailboxChangedEventArgs.all.GetDeferral (m_ComRetVal'Access);
         Retval.m_IEmailMailboxChangedDeferral := new Windows.ApplicationModel.Email.IEmailMailboxChangedDeferral;
         Retval.m_IEmailMailboxChangedDeferral.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxCreateFolderResult

   procedure Initialize (this : in out EmailMailboxCreateFolderResult) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxCreateFolderResult) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxCreateFolderResult, IEmailMailboxCreateFolderResult_Ptr);
   begin
      if this.m_IEmailMailboxCreateFolderResult /= null then
         if this.m_IEmailMailboxCreateFolderResult.all /= null then
            RefCount := this.m_IEmailMailboxCreateFolderResult.all.Release;
            Free (this.m_IEmailMailboxCreateFolderResult);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxCreateFolderResult

   function get_Status
   (
      this : in out EmailMailboxCreateFolderResult
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxCreateFolderStatus is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxCreateFolderStatus;
   begin
      Hr := this.m_IEmailMailboxCreateFolderResult.all.get_Status (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_Folder
   (
      this : in out EmailMailboxCreateFolderResult
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFolder'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailFolder;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailFolder do
         Hr := this.m_IEmailMailboxCreateFolderResult.all.get_Folder (m_ComRetVal'Access);
         Retval.m_IEmailFolder := new Windows.ApplicationModel.Email.IEmailFolder;
         Retval.m_IEmailFolder.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxPolicies

   procedure Initialize (this : in out EmailMailboxPolicies) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxPolicies) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxPolicies, IEmailMailboxPolicies_Ptr);
   begin
      if this.m_IEmailMailboxPolicies /= null then
         if this.m_IEmailMailboxPolicies.all /= null then
            RefCount := this.m_IEmailMailboxPolicies.all.Release;
            Free (this.m_IEmailMailboxPolicies);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxPolicies

   function get_AllowedSmimeEncryptionAlgorithmNegotiation
   (
      this : in out EmailMailboxPolicies
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation;
   begin
      Hr := this.m_IEmailMailboxPolicies.all.get_AllowedSmimeEncryptionAlgorithmNegotiation (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_AllowSmimeSoftCertificates
   (
      this : in out EmailMailboxPolicies
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMailboxPolicies.all.get_AllowSmimeSoftCertificates (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_RequiredSmimeEncryptionAlgorithm
   (
      this : in out EmailMailboxPolicies
   )
   return IReference_EmailMailboxSmimeEncryptionAlgorithm.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_EmailMailboxSmimeEncryptionAlgorithm.Kind;
   begin
      Hr := this.m_IEmailMailboxPolicies.all.get_RequiredSmimeEncryptionAlgorithm (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_EmailMailboxSmimeEncryptionAlgorithm (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_RequiredSmimeSigningAlgorithm
   (
      this : in out EmailMailboxPolicies
   )
   return IReference_EmailMailboxSmimeSigningAlgorithm.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_EmailMailboxSmimeSigningAlgorithm.Kind;
   begin
      Hr := this.m_IEmailMailboxPolicies.all.get_RequiredSmimeSigningAlgorithm (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_EmailMailboxSmimeSigningAlgorithm (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_MustEncryptSmimeMessages
   (
      this : in out EmailMailboxPolicies
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.get_MustEncryptSmimeMessages (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_MustSignSmimeMessages
   (
      this : in out EmailMailboxPolicies
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.get_MustSignSmimeMessages (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_AllowedSmimeEncryptionAlgorithmNegotiation
   (
      this : in out EmailMailboxPolicies;
      value : Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.put_AllowedSmimeEncryptionAlgorithmNegotiation (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_AllowSmimeSoftCertificates
   (
      this : in out EmailMailboxPolicies;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.put_AllowSmimeSoftCertificates (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_RequiredSmimeEncryptionAlgorithm
   (
      this : in out EmailMailboxPolicies;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.put_RequiredSmimeEncryptionAlgorithm (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_RequiredSmimeSigningAlgorithm
   (
      this : in out EmailMailboxPolicies;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.put_RequiredSmimeSigningAlgorithm (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_MustEncryptSmimeMessages
   (
      this : in out EmailMailboxPolicies;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.put_MustEncryptSmimeMessages (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_MustSignSmimeMessages
   (
      this : in out EmailMailboxPolicies;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxPolicies3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxPolicies3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxPolicies.all);
      Hr := m_Interface.put_MustSignSmimeMessages (value);
      m_RefCount := m_Interface.Release;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMailboxSyncManager

   procedure Initialize (this : in out EmailMailboxSyncManager) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMailboxSyncManager) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMailboxSyncManager, IEmailMailboxSyncManager_Ptr);
   begin
      if this.m_IEmailMailboxSyncManager /= null then
         if this.m_IEmailMailboxSyncManager.all /= null then
            RefCount := this.m_IEmailMailboxSyncManager.all.Release;
            Free (this.m_IEmailMailboxSyncManager);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMailboxSyncManager

   function get_Status
   (
      this : in out EmailMailboxSyncManager
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailboxSyncStatus is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMailboxSyncStatus;
   begin
      Hr := this.m_IEmailMailboxSyncManager.all.get_Status (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_LastSuccessfulSyncTime
   (
      this : in out EmailMailboxSyncManager
   )
   return WinRt.Windows.Foundation.DateTime is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.DateTime;
   begin
      Hr := this.m_IEmailMailboxSyncManager.all.get_LastSuccessfulSyncTime (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_LastAttemptedSyncTime
   (
      this : in out EmailMailboxSyncManager
   )
   return WinRt.Windows.Foundation.DateTime is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.DateTime;
   begin
      Hr := this.m_IEmailMailboxSyncManager.all.get_LastAttemptedSyncTime (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function SyncAsync
   (
      this : in out EmailMailboxSyncManager
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_Boolean.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_Boolean.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Boolean;
      m_IID            : aliased WinRt.IID := (3451252659, 22408, 20637, (155, 225, 113, 204, 184, 163, 54, 42 )); -- Boolean;
      m_HandlerIID     : aliased WinRt.IID := (3251884450, 44567, 23135, (181, 162, 189, 204, 136, 68, 136, 154 ));
      m_Handler        : AsyncOperationCompletedHandler_Boolean.Kind := new AsyncOperationCompletedHandler_Boolean.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_Boolean.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_Boolean.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_Boolean.Kind_Delegate, AsyncOperationCompletedHandler_Boolean.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailMailboxSyncManager.all.SyncAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function add_SyncStatusChanged
   (
      this : in out EmailMailboxSyncManager;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.EventRegistrationToken;
   begin
      Hr := this.m_IEmailMailboxSyncManager.all.add_SyncStatusChanged (handler, m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure remove_SyncStatusChanged
   (
      this : in out EmailMailboxSyncManager;
      token : Windows.Foundation.EventRegistrationToken
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMailboxSyncManager.all.remove_SyncStatusChanged (token);
   end;

   procedure put_Status
   (
      this : in out EmailMailboxSyncManager;
      value : Windows.ApplicationModel.Email.EmailMailboxSyncStatus
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxSyncManager2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxSyncManager.all);
      Hr := m_Interface.put_Status (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_LastSuccessfulSyncTime
   (
      this : in out EmailMailboxSyncManager;
      value : Windows.Foundation.DateTime
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxSyncManager2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxSyncManager.all);
      Hr := m_Interface.put_LastSuccessfulSyncTime (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure put_LastAttemptedSyncTime
   (
      this : in out EmailMailboxSyncManager;
      value : Windows.Foundation.DateTime
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMailboxSyncManager2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMailboxSyncManager2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMailboxSyncManager.all);
      Hr := m_Interface.put_LastAttemptedSyncTime (value);
      m_RefCount := m_Interface.Release;
   end;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package body EmailManager is

      procedure ShowComposeNewEmailAsync
      (
         message : Windows.ApplicationModel.Email.EmailMessage'Class
      ) is
         Hr               : WinRt.HResult := S_OK;
         m_hString        : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailManager");
         m_Factory        : access WinRt.Windows.ApplicationModel.Email.IEmailManagerStatics_Interface'Class := null;
         m_RefCount       : WinRt.UInt32 := 0;
         m_Temp           : WinRt.Int32 := 0;
         m_Completed      : WinRt.UInt32 := 0;
         m_Captured       : WinRt.UInt32 := 0;
         m_Compare        : constant WinRt.UInt32 := 0;
         m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

         procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
            Hr        : WinRt.HResult := 0;
         begin
            if asyncStatus = Completed_e then
               Hr := asyncInfo.GetResults;
            end if;
            m_Completed := 1;
            WakeByAddressSingle (m_Completed'Address);
         end;

         m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
         procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

      begin
         Hr := RoGetActivationFactory (m_hString, IID_IEmailManagerStatics'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.ShowComposeNewEmailAsync (message.m_IEmailMessage.all, m_ComRetVal'Access);
            m_RefCount := m_Factory.Release;
            if Hr = S_OK then
               m_Captured := m_Completed;
               Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               m_RefCount := m_ComRetVal.Release;
               m_RefCount := m_CompletedHandler.Release;
               if m_RefCount = 0 then
                  Free (m_CompletedHandler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end;

      function RequestStoreAsync
      (
         accessType : Windows.ApplicationModel.Email.EmailStoreAccessType
      )
      return WinRt.Windows.ApplicationModel.Email.EmailStore is
         Hr               : WinRt.HResult := S_OK;
         m_hString        : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailManager");
         m_Factory        : access WinRt.Windows.ApplicationModel.Email.IEmailManagerStatics2_Interface'Class := null;
         m_RefCount       : WinRt.UInt32 := 0;
         m_Temp           : WinRt.Int32 := 0;
         m_Completed      : WinRt.UInt32 := 0;
         m_Captured       : WinRt.UInt32 := 0;
         m_Compare        : constant WinRt.UInt32 := 0;

         use type WinRt.Windows.Foundation.AsyncStatus;
         use type IAsyncOperation_EmailStore.Kind;

         procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

         m_AsyncOperation : aliased IAsyncOperation_EmailStore.Kind;
         m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
         m_ComRetVal      : aliased WinRt.GenericObject := null;
         m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailStore;
         m_IID            : aliased WinRt.IID := (2090727825, 23961, 21940, (180, 57, 6, 78, 221, 9, 122, 196 )); -- Windows.ApplicationModel.Email.EmailStore;
         m_HandlerIID     : aliased WinRt.IID := (3719782867, 29112, 23627, (173, 139, 30, 101, 34, 102, 73, 33 ));
         m_Handler        : AsyncOperationCompletedHandler_EmailStore.Kind := new AsyncOperationCompletedHandler_EmailStore.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

         function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailStore.Kind, m_IID'Unchecked_Access);
         function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailStore.Kind, GenericObject);
         procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailStore.Kind_Delegate, AsyncOperationCompletedHandler_EmailStore.Kind);

         procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
            Hr        : WinRt.HResult := 0;
         begin
            if asyncStatus = Completed_e then
               m_AsyncStatus := AsyncStatus;
            end if;
            m_Completed := 1;
            WakeByAddressSingle (m_Completed'Address);
         end;

      begin
         return RetVal : WinRt.Windows.ApplicationModel.Email.EmailStore do
            Hr := RoGetActivationFactory (m_hString, IID_IEmailManagerStatics2'Access , m_Factory'Address);
            if Hr = S_OK then
               Hr := m_Factory.RequestStoreAsync (accessType, m_ComRetVal'Access);
               m_RefCount := m_Factory.Release;
               if Hr = S_OK then
                  m_AsyncOperation := QI (m_ComRetVal);
                  m_RefCount := m_ComRetVal.Release;
                  if m_AsyncOperation /= null then
                     Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
                     while m_Captured = m_Compare loop
                        m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                        m_Captured := m_Completed;
                     end loop;
                     if m_AsyncStatus = Completed_e then
                        Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                        Retval.m_IEmailStore := new Windows.ApplicationModel.Email.IEmailStore;
                        Retval.m_IEmailStore.all := m_RetVal;
                     end if;
                     m_RefCount := m_AsyncOperation.Release;
                     m_RefCount := m_Handler.Release;
                     if m_RefCount = 0 then
                        Free (m_Handler);
                     end if;
                  end if;
               end if;
            end if;
            Hr := WindowsDeleteString (m_hString);
         end return;
      end;

      function GetForUser
      (
         user : Windows.System.User'Class
      )
      return WinRt.Windows.ApplicationModel.Email.EmailManagerForUser is
         Hr               : WinRt.HResult := S_OK;
         m_hString        : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailManager");
         m_Factory        : access WinRt.Windows.ApplicationModel.Email.IEmailManagerStatics3_Interface'Class := null;
         m_RefCount       : WinRt.UInt32 := 0;
         m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailManagerForUser;
      begin
         return RetVal : WinRt.Windows.ApplicationModel.Email.EmailManagerForUser do
            Hr := RoGetActivationFactory (m_hString, IID_IEmailManagerStatics3'Access , m_Factory'Address);
            if Hr = S_OK then
               Hr := m_Factory.GetForUser (user.m_IUser.all, m_ComRetVal'Access);
               m_RefCount := m_Factory.Release;
               Retval.m_IEmailManagerForUser := new Windows.ApplicationModel.Email.IEmailManagerForUser;
               Retval.m_IEmailManagerForUser.all := m_ComRetVal;
            end if;
            Hr := WindowsDeleteString (m_hString);
         end return;
      end;

   end EmailManager;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailManagerForUser

   procedure Initialize (this : in out EmailManagerForUser) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailManagerForUser) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailManagerForUser, IEmailManagerForUser_Ptr);
   begin
      if this.m_IEmailManagerForUser /= null then
         if this.m_IEmailManagerForUser.all /= null then
            RefCount := this.m_IEmailManagerForUser.all.Release;
            Free (this.m_IEmailManagerForUser);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailManagerForUser

   procedure ShowComposeNewEmailAsync
   (
      this : in out EmailManagerForUser;
      message : Windows.ApplicationModel.Email.EmailMessage'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Windows.Foundation.IAsyncAction := null;

      procedure IAsyncAction_Callback (asyncInfo : WinRt.Windows.Foundation.IAsyncAction; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            Hr := asyncInfo.GetResults;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

      m_CompletedHandler : WinRt.Windows.Foundation.AsyncActionCompletedHandler := new WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate'(IAsyncAction_Callback'Access, 1, null);
      procedure Free is new Ada.Unchecked_Deallocation (WinRt.Windows.Foundation.AsyncActionCompletedHandler_Delegate, WinRt.Windows.Foundation.AsyncActionCompletedHandler);

   begin
      Hr := this.m_IEmailManagerForUser.all.ShowComposeNewEmailAsync (message.m_IEmailMessage.all, m_ComRetVal'Access);
      if Hr = S_OK then
         m_Captured := m_Completed;
         Hr := m_ComRetVal.Put_Completed (m_CompletedHandler);
         while m_Captured = m_Compare loop
            m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
            m_Captured := m_Completed;
         end loop;
         m_RefCount := m_ComRetVal.Release;
         m_RefCount := m_CompletedHandler.Release;
         if m_RefCount = 0 then
            Free (m_CompletedHandler);
         end if;
      end if;
   end;

   function RequestStoreAsync
   (
      this : in out EmailManagerForUser;
      accessType : Windows.ApplicationModel.Email.EmailStoreAccessType
   )
   return WinRt.Windows.ApplicationModel.Email.EmailStore'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailStore.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailStore.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailStore;
      m_IID            : aliased WinRt.IID := (2090727825, 23961, 21940, (180, 57, 6, 78, 221, 9, 122, 196 )); -- Windows.ApplicationModel.Email.EmailStore;
      m_HandlerIID     : aliased WinRt.IID := (3719782867, 29112, 23627, (173, 139, 30, 101, 34, 102, 73, 33 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailStore.Kind := new AsyncOperationCompletedHandler_EmailStore.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailStore.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailStore.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailStore.Kind_Delegate, AsyncOperationCompletedHandler_EmailStore.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailStore do
         Hr := this.m_IEmailManagerForUser.all.RequestStoreAsync (accessType, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailStore := new Windows.ApplicationModel.Email.IEmailStore;
                  Retval.m_IEmailStore.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   function get_User
   (
      this : in out EmailManagerForUser
   )
   return WinRt.Windows.System.User'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.System.IUser;
   begin
      return RetVal : WinRt.Windows.System.User do
         Hr := this.m_IEmailManagerForUser.all.get_User (m_ComRetVal'Access);
         Retval.m_IUser := new Windows.System.IUser;
         Retval.m_IUser.all := m_ComRetVal;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMeetingInfo

   procedure Initialize (this : in out EmailMeetingInfo) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMeetingInfo) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMeetingInfo, IEmailMeetingInfo_Ptr);
   begin
      if this.m_IEmailMeetingInfo /= null then
         if this.m_IEmailMeetingInfo.all /= null then
            RefCount := this.m_IEmailMeetingInfo.all.Release;
            Free (this.m_IEmailMeetingInfo);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailMeetingInfo

   function Constructor return EmailMeetingInfo is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailMeetingInfo");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailMeetingInfo;
   begin
      return RetVal : EmailMeetingInfo do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailMeetingInfo := new Windows.ApplicationModel.Email.IEmailMeetingInfo;
            Retval.m_IEmailMeetingInfo.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMeetingInfo

   function get_AllowNewTimeProposal
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_AllowNewTimeProposal (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_AllowNewTimeProposal
   (
      this : in out EmailMeetingInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_AllowNewTimeProposal (value);
   end;

   function get_AppointmentRoamingId
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_AppointmentRoamingId (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_AppointmentRoamingId
   (
      this : in out EmailMeetingInfo;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_AppointmentRoamingId (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_AppointmentOriginalStartTime
   (
      this : in out EmailMeetingInfo
   )
   return IReference_DateTime.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_DateTime.Kind;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_AppointmentOriginalStartTime (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_DateTime (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_AppointmentOriginalStartTime
   (
      this : in out EmailMeetingInfo;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_AppointmentOriginalStartTime (value);
   end;

   function get_Duration
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Windows.Foundation.TimeSpan is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.TimeSpan;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_Duration (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_Duration
   (
      this : in out EmailMeetingInfo;
      value : Windows.Foundation.TimeSpan
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_Duration (value);
   end;

   function get_IsAllDay
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_IsAllDay (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsAllDay
   (
      this : in out EmailMeetingInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_IsAllDay (value);
   end;

   function get_IsResponseRequested
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_IsResponseRequested (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_IsResponseRequested
   (
      this : in out EmailMeetingInfo;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_IsResponseRequested (value);
   end;

   function get_Location
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_Location (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Location
   (
      this : in out EmailMeetingInfo;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_Location (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_ProposedStartTime
   (
      this : in out EmailMeetingInfo
   )
   return IReference_DateTime.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_DateTime.Kind;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_ProposedStartTime (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_DateTime (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_ProposedStartTime
   (
      this : in out EmailMeetingInfo;
      proposedStartTime : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_ProposedStartTime (proposedStartTime);
   end;

   function get_ProposedDuration
   (
      this : in out EmailMeetingInfo
   )
   return IReference_TimeSpan.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_TimeSpan.Kind;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_ProposedDuration (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_TimeSpan (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_ProposedDuration
   (
      this : in out EmailMeetingInfo;
      duration : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_ProposedDuration (duration);
   end;

   function get_RecurrenceStartTime
   (
      this : in out EmailMeetingInfo
   )
   return IReference_DateTime.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_DateTime.Kind;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_RecurrenceStartTime (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IReference_DateTime (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_RecurrenceStartTime
   (
      this : in out EmailMeetingInfo;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_RecurrenceStartTime (value);
   end;

   function get_Recurrence
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Windows.ApplicationModel.Appointments.AppointmentRecurrence'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Appointments.IAppointmentRecurrence;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Appointments.AppointmentRecurrence do
         Hr := this.m_IEmailMeetingInfo.all.get_Recurrence (m_ComRetVal'Access);
         Retval.m_IAppointmentRecurrence := new Windows.ApplicationModel.Appointments.IAppointmentRecurrence;
         Retval.m_IAppointmentRecurrence.all := m_ComRetVal;
      end return;
   end;

   procedure put_Recurrence
   (
      this : in out EmailMeetingInfo;
      value : Windows.ApplicationModel.Appointments.AppointmentRecurrence'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_Recurrence (value.m_IAppointmentRecurrence.all);
   end;

   function get_RemoteChangeNumber
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.UInt64 is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt64;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_RemoteChangeNumber (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_RemoteChangeNumber
   (
      this : in out EmailMeetingInfo;
      value : WinRt.UInt64
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_RemoteChangeNumber (value);
   end;

   function get_StartTime
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Windows.Foundation.DateTime is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Foundation.DateTime;
   begin
      Hr := this.m_IEmailMeetingInfo.all.get_StartTime (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_StartTime
   (
      this : in out EmailMeetingInfo;
      value : Windows.Foundation.DateTime
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailMeetingInfo.all.put_StartTime (value);
   end;

   function get_IsReportedOutOfDateByServer
   (
      this : in out EmailMeetingInfo
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMeetingInfo2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMeetingInfo_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMeetingInfo2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMeetingInfo2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMeetingInfo.all);
      Hr := m_Interface.get_IsReportedOutOfDateByServer (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMessage

   procedure Initialize (this : in out EmailMessage) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMessage) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMessage, IEmailMessage_Ptr);
   begin
      if this.m_IEmailMessage /= null then
         if this.m_IEmailMessage.all /= null then
            RefCount := this.m_IEmailMessage.all.Release;
            Free (this.m_IEmailMessage);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailMessage

   function Constructor return EmailMessage is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailMessage");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailMessage;
   begin
      return RetVal : EmailMessage do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailMessage := new Windows.ApplicationModel.Email.IEmailMessage;
            Retval.m_IEmailMessage.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMessage

   function get_Subject
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMessage.all.get_Subject (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Subject
   (
      this : in out EmailMessage;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMessage.all.put_Subject (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_Body
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailMessage.all.get_Body (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Body
   (
      this : in out EmailMessage;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailMessage.all.put_Body (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_To
   (
      this : in out EmailMessage
   )
   return IVector_IEmailRecipient.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_IEmailRecipient.Kind;
   begin
      Hr := this.m_IEmailMessage.all.get_To (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_IEmailRecipient (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_CC
   (
      this : in out EmailMessage
   )
   return IVector_IEmailRecipient.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_IEmailRecipient.Kind;
   begin
      Hr := this.m_IEmailMessage.all.get_CC (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_IEmailRecipient (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_Bcc
   (
      this : in out EmailMessage
   )
   return IVector_IEmailRecipient.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_IEmailRecipient.Kind;
   begin
      Hr := this.m_IEmailMessage.all.get_Bcc (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_IEmailRecipient (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_Attachments
   (
      this : in out EmailMessage
   )
   return IVector_IEmailAttachment.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_IEmailAttachment.Kind;
   begin
      Hr := this.m_IEmailMessage.all.get_Attachments (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_IEmailAttachment (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_Id
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_Id (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_RemoteId
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_RemoteId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_RemoteId
   (
      this : in out EmailMessage;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_RemoteId (HStr_value);
      m_RefCount := m_Interface.Release;
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_MailboxId
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_MailboxId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_ConversationId
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_ConversationId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_FolderId
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_FolderId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_AllowInternetImages
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_AllowInternetImages (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_AllowInternetImages
   (
      this : in out EmailMessage;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_AllowInternetImages (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_ChangeNumber
   (
      this : in out EmailMessage
   )
   return WinRt.UInt64 is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt64;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_ChangeNumber (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_DownloadState
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageDownloadState is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMessageDownloadState;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_DownloadState (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_DownloadState
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailMessageDownloadState
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_DownloadState (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_EstimatedDownloadSizeInBytes
   (
      this : in out EmailMessage
   )
   return WinRt.UInt32 is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.UInt32;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_EstimatedDownloadSizeInBytes (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_EstimatedDownloadSizeInBytes
   (
      this : in out EmailMessage;
      value : WinRt.UInt32
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_EstimatedDownloadSizeInBytes (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_FlagState
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFlagState is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailFlagState;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_FlagState (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_FlagState
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailFlagState
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_FlagState (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_HasPartialBodies
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_HasPartialBodies (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_Importance
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailImportance is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailImportance;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_Importance (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_Importance
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailImportance
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_Importance (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_InResponseToMessageId
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_InResponseToMessageId (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_IrmInfo
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailIrmInfo'Class is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailIrmInfo;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailIrmInfo do
         m_Interface := QInterface (this.m_IEmailMessage.all);
         Hr := m_Interface.get_IrmInfo (m_ComRetVal'Access);
         m_RefCount := m_Interface.Release;
         Retval.m_IEmailIrmInfo := new Windows.ApplicationModel.Email.IEmailIrmInfo;
         Retval.m_IEmailIrmInfo.all := m_ComRetVal;
      end return;
   end;

   procedure put_IrmInfo
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailIrmInfo'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_IrmInfo (value.m_IEmailIrmInfo.all);
      m_RefCount := m_Interface.Release;
   end;

   function get_IsDraftMessage
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_IsDraftMessage (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_IsRead
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_IsRead (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_IsRead
   (
      this : in out EmailMessage;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_IsRead (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_IsSeen
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_IsSeen (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_IsSeen
   (
      this : in out EmailMessage;
      value : WinRt.Boolean
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_IsSeen (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_IsServerSearchMessage
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_IsServerSearchMessage (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_IsSmartSendable
   (
      this : in out EmailMessage
   )
   return WinRt.Boolean is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Boolean;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_IsSmartSendable (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   function get_MessageClass
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_MessageClass (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_MessageClass
   (
      this : in out EmailMessage;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_MessageClass (HStr_value);
      m_RefCount := m_Interface.Release;
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_NormalizedSubject
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_NormalizedSubject (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   function get_OriginalCodePage
   (
      this : in out EmailMessage
   )
   return WinRt.Int32 is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.Int32;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_OriginalCodePage (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_OriginalCodePage
   (
      this : in out EmailMessage;
      value : WinRt.Int32
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_OriginalCodePage (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_Preview
   (
      this : in out EmailMessage
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_Preview (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Preview
   (
      this : in out EmailMessage;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_Preview (HStr_value);
      m_RefCount := m_Interface.Release;
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_LastResponseKind
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageResponseKind is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMessageResponseKind;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_LastResponseKind (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_LastResponseKind
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailMessageResponseKind
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_LastResponseKind (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_Sender
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailRecipient'Class is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailRecipient;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailRecipient do
         m_Interface := QInterface (this.m_IEmailMessage.all);
         Hr := m_Interface.get_Sender (m_ComRetVal'Access);
         m_RefCount := m_Interface.Release;
         Retval.m_IEmailRecipient := new Windows.ApplicationModel.Email.IEmailRecipient;
         Retval.m_IEmailRecipient.all := m_ComRetVal;
      end return;
   end;

   procedure put_Sender
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailRecipient'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_Sender (value.m_IEmailRecipient.all);
      m_RefCount := m_Interface.Release;
   end;

   function get_SentTime
   (
      this : in out EmailMessage
   )
   return IReference_DateTime.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IReference_DateTime.Kind;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_SentTime (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      m_GenericRetVal := QInterface_IReference_DateTime (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   procedure put_SentTime
   (
      this : in out EmailMessage;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_SentTime (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_MeetingInfo
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMeetingInfo'Class is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMeetingInfo;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMeetingInfo do
         m_Interface := QInterface (this.m_IEmailMessage.all);
         Hr := m_Interface.get_MeetingInfo (m_ComRetVal'Access);
         m_RefCount := m_Interface.Release;
         Retval.m_IEmailMeetingInfo := new Windows.ApplicationModel.Email.IEmailMeetingInfo;
         Retval.m_IEmailMeetingInfo.all := m_ComRetVal;
      end return;
   end;

   procedure put_MeetingInfo
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailMeetingInfo'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_MeetingInfo (value.m_IEmailMeetingInfo.all);
      m_RefCount := m_Interface.Release;
   end;

   function GetBodyStream
   (
      this : in out EmailMessage;
      type_x : Windows.ApplicationModel.Email.EmailMessageBodyKind
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamReference is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Storage.Streams.IRandomAccessStreamReference;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.GetBodyStream (type_x, m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure SetBodyStream
   (
      this : in out EmailMessage;
      type_x : Windows.ApplicationModel.Email.EmailMessageBodyKind;
      stream : Windows.Storage.Streams.IRandomAccessStreamReference
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage2, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.SetBodyStream (type_x, stream);
      m_RefCount := m_Interface.Release;
   end;

   function get_SmimeData
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamReference is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.Storage.Streams.IRandomAccessStreamReference;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_SmimeData (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_SmimeData
   (
      this : in out EmailMessage;
      value : Windows.Storage.Streams.IRandomAccessStreamReference
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_SmimeData (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_SmimeKind
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageSmimeKind is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailMessageSmimeKind;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_SmimeKind (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      return m_ComRetVal;
   end;

   procedure put_SmimeKind
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailMessageSmimeKind
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage3 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage3, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage3'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_SmimeKind (value);
      m_RefCount := m_Interface.Release;
   end;

   function get_ReplyTo
   (
      this : in out EmailMessage
   )
   return IVector_IEmailRecipient.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage4 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_IEmailRecipient.Kind;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage4, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage4'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.get_ReplyTo (m_ComRetVal'Access);
      m_RefCount := m_Interface.Release;
      m_GenericRetVal := QInterface_IVector_IEmailRecipient (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_SentRepresenting
   (
      this : in out EmailMessage
   )
   return WinRt.Windows.ApplicationModel.Email.EmailRecipient'Class is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage4 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailRecipient;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage4, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage4'Unchecked_Access);
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailRecipient do
         m_Interface := QInterface (this.m_IEmailMessage.all);
         Hr := m_Interface.get_SentRepresenting (m_ComRetVal'Access);
         m_RefCount := m_Interface.Release;
         Retval.m_IEmailRecipient := new Windows.ApplicationModel.Email.IEmailRecipient;
         Retval.m_IEmailRecipient.all := m_ComRetVal;
      end return;
   end;

   procedure put_SentRepresenting
   (
      this : in out EmailMessage;
      value : Windows.ApplicationModel.Email.EmailRecipient'Class
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailMessage4 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailMessage_Interface, WinRt.Windows.ApplicationModel.Email.IEmailMessage4, WinRt.Windows.ApplicationModel.Email.IID_IEmailMessage4'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailMessage.all);
      Hr := m_Interface.put_SentRepresenting (value.m_IEmailRecipient.all);
      m_RefCount := m_Interface.Release;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMessageBatch

   procedure Initialize (this : in out EmailMessageBatch) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMessageBatch) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMessageBatch, IEmailMessageBatch_Ptr);
   begin
      if this.m_IEmailMessageBatch /= null then
         if this.m_IEmailMessageBatch.all /= null then
            RefCount := this.m_IEmailMessageBatch.all.Release;
            Free (this.m_IEmailMessageBatch);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMessageBatch

   function get_Messages
   (
      this : in out EmailMessageBatch
   )
   return IVectorView_IEmailMessage.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVectorView_IEmailMessage.Kind;
   begin
      Hr := this.m_IEmailMessageBatch.all.get_Messages (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVectorView_IEmailMessage (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   function get_Status
   (
      this : in out EmailMessageBatch
   )
   return WinRt.Windows.ApplicationModel.Email.EmailBatchStatus is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailBatchStatus;
   begin
      Hr := this.m_IEmailMessageBatch.all.get_Status (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailMessageReader

   procedure Initialize (this : in out EmailMessageReader) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailMessageReader) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailMessageReader, IEmailMessageReader_Ptr);
   begin
      if this.m_IEmailMessageReader /= null then
         if this.m_IEmailMessageReader.all /= null then
            RefCount := this.m_IEmailMessageReader.all.Release;
            Free (this.m_IEmailMessageReader);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailMessageReader

   function ReadBatchAsync
   (
      this : in out EmailMessageReader
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageBatch'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMessageBatch.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMessageBatch.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMessageBatch;
      m_IID            : aliased WinRt.IID := (939434265, 3870, 20498, (136, 187, 240, 23, 159, 143, 77, 229 )); -- Windows.ApplicationModel.Email.EmailMessageBatch;
      m_HandlerIID     : aliased WinRt.IID := (3060220309, 34808, 21877, (145, 8, 156, 86, 33, 213, 41, 177 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMessageBatch.Kind := new AsyncOperationCompletedHandler_EmailMessageBatch.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMessageBatch.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMessageBatch.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMessageBatch.Kind_Delegate, AsyncOperationCompletedHandler_EmailMessageBatch.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageBatch do
         Hr := this.m_IEmailMessageReader.all.ReadBatchAsync (m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMessageBatch := new Windows.ApplicationModel.Email.IEmailMessageBatch;
                  Retval.m_IEmailMessageBatch.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailQueryOptions

   procedure Initialize (this : in out EmailQueryOptions) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailQueryOptions) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailQueryOptions, IEmailQueryOptions_Ptr);
   begin
      if this.m_IEmailQueryOptions /= null then
         if this.m_IEmailQueryOptions.all /= null then
            RefCount := this.m_IEmailQueryOptions.all.Release;
            Free (this.m_IEmailQueryOptions);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailQueryOptions

   function Constructor return EmailQueryOptions is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailQueryOptions");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailQueryOptions;
   begin
      return RetVal : EmailQueryOptions do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailQueryOptions := new Windows.ApplicationModel.Email.IEmailQueryOptions;
            Retval.m_IEmailQueryOptions.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   function Constructor
   (
      text : WinRt.WString
   )
   return EmailQueryOptions is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailQueryOptions");
      m_Factory    : access IEmailQueryOptionsFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailQueryOptions;
      HStr_text : WinRt.HString := To_HString (text);
   begin
      return RetVal : EmailQueryOptions do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailQueryOptionsFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.CreateWithText (HStr_text, m_ComRetVal'Access);
            Retval.m_IEmailQueryOptions := new Windows.ApplicationModel.Email.IEmailQueryOptions;
            Retval.m_IEmailQueryOptions.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_text);
      end return;
   end;

   function Constructor
   (
      text : WinRt.WString;
      fields : Windows.ApplicationModel.Email.EmailQuerySearchFields
   )
   return EmailQueryOptions is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailQueryOptions");
      m_Factory    : access IEmailQueryOptionsFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailQueryOptions;
      HStr_text : WinRt.HString := To_HString (text);
   begin
      return RetVal : EmailQueryOptions do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailQueryOptionsFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.CreateWithTextAndFields (HStr_text, fields, m_ComRetVal'Access);
            Retval.m_IEmailQueryOptions := new Windows.ApplicationModel.Email.IEmailQueryOptions;
            Retval.m_IEmailQueryOptions.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_text);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailQueryOptions

   function get_TextSearch
   (
      this : in out EmailQueryOptions
   )
   return WinRt.Windows.ApplicationModel.Email.EmailQueryTextSearch'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailQueryTextSearch;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailQueryTextSearch do
         Hr := this.m_IEmailQueryOptions.all.get_TextSearch (m_ComRetVal'Access);
         Retval.m_IEmailQueryTextSearch := new Windows.ApplicationModel.Email.IEmailQueryTextSearch;
         Retval.m_IEmailQueryTextSearch.all := m_ComRetVal;
      end return;
   end;

   function get_SortDirection
   (
      this : in out EmailQueryOptions
   )
   return WinRt.Windows.ApplicationModel.Email.EmailQuerySortDirection is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailQuerySortDirection;
   begin
      Hr := this.m_IEmailQueryOptions.all.get_SortDirection (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_SortDirection
   (
      this : in out EmailQueryOptions;
      value : Windows.ApplicationModel.Email.EmailQuerySortDirection
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailQueryOptions.all.put_SortDirection (value);
   end;

   function get_SortProperty
   (
      this : in out EmailQueryOptions
   )
   return WinRt.Windows.ApplicationModel.Email.EmailQuerySortProperty is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailQuerySortProperty;
   begin
      Hr := this.m_IEmailQueryOptions.all.get_SortProperty (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_SortProperty
   (
      this : in out EmailQueryOptions;
      value : Windows.ApplicationModel.Email.EmailQuerySortProperty
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailQueryOptions.all.put_SortProperty (value);
   end;

   function get_Kind
   (
      this : in out EmailQueryOptions
   )
   return WinRt.Windows.ApplicationModel.Email.EmailQueryKind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailQueryKind;
   begin
      Hr := this.m_IEmailQueryOptions.all.get_Kind (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_Kind
   (
      this : in out EmailQueryOptions;
      value : Windows.ApplicationModel.Email.EmailQueryKind
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailQueryOptions.all.put_Kind (value);
   end;

   function get_FolderIds
   (
      this : in out EmailQueryOptions
   )
   return IVector_HString.Kind is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
      m_GenericRetval  : aliased IVector_HString.Kind;
   begin
      Hr := this.m_IEmailQueryOptions.all.get_FolderIds (m_ComRetVal'Access);
      m_GenericRetVal := QInterface_IVector_HString (m_ComRetVal);
      m_RefCount := m_ComRetVal.Release;
      return m_GenericRetVal;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailQueryTextSearch

   procedure Initialize (this : in out EmailQueryTextSearch) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailQueryTextSearch) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailQueryTextSearch, IEmailQueryTextSearch_Ptr);
   begin
      if this.m_IEmailQueryTextSearch /= null then
         if this.m_IEmailQueryTextSearch.all /= null then
            RefCount := this.m_IEmailQueryTextSearch.all.Release;
            Free (this.m_IEmailQueryTextSearch);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailQueryTextSearch

   function get_Fields
   (
      this : in out EmailQueryTextSearch
   )
   return WinRt.Windows.ApplicationModel.Email.EmailQuerySearchFields is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailQuerySearchFields;
   begin
      Hr := this.m_IEmailQueryTextSearch.all.get_Fields (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_Fields
   (
      this : in out EmailQueryTextSearch;
      value : Windows.ApplicationModel.Email.EmailQuerySearchFields
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailQueryTextSearch.all.put_Fields (value);
   end;

   function get_SearchScope
   (
      this : in out EmailQueryTextSearch
   )
   return WinRt.Windows.ApplicationModel.Email.EmailQuerySearchScope is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailQuerySearchScope;
   begin
      Hr := this.m_IEmailQueryTextSearch.all.get_SearchScope (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_SearchScope
   (
      this : in out EmailQueryTextSearch;
      value : Windows.ApplicationModel.Email.EmailQuerySearchScope
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
   begin
      Hr := this.m_IEmailQueryTextSearch.all.put_SearchScope (value);
   end;

   function get_Text
   (
      this : in out EmailQueryTextSearch
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailQueryTextSearch.all.get_Text (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Text
   (
      this : in out EmailQueryTextSearch;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailQueryTextSearch.all.put_Text (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailRecipient

   procedure Initialize (this : in out EmailRecipient) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailRecipient) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailRecipient, IEmailRecipient_Ptr);
   begin
      if this.m_IEmailRecipient /= null then
         if this.m_IEmailRecipient.all /= null then
            RefCount := this.m_IEmailRecipient.all.Release;
            Free (this.m_IEmailRecipient);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailRecipient

   function Constructor return EmailRecipient is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailRecipient");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailRecipient;
   begin
      return RetVal : EmailRecipient do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailRecipient := new Windows.ApplicationModel.Email.IEmailRecipient;
            Retval.m_IEmailRecipient.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   function Constructor
   (
      address_x : WinRt.WString
   )
   return EmailRecipient is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailRecipient");
      m_Factory    : access IEmailRecipientFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailRecipient;
      HStr_address_x : WinRt.HString := To_HString (address_x);
   begin
      return RetVal : EmailRecipient do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailRecipientFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.Create (HStr_address_x, m_ComRetVal'Access);
            Retval.m_IEmailRecipient := new Windows.ApplicationModel.Email.IEmailRecipient;
            Retval.m_IEmailRecipient.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_address_x);
      end return;
   end;

   function Constructor
   (
      address_x : WinRt.WString;
      name : WinRt.WString
   )
   return EmailRecipient is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailRecipient");
      m_Factory    : access IEmailRecipientFactory_Interface'Class := null;
      m_RefCount   : WinRt.UInt32 := 0;
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailRecipient;
      HStr_address_x : WinRt.HString := To_HString (address_x);
      HStr_name : WinRt.HString := To_HString (name);
   begin
      return RetVal : EmailRecipient do
         Hr := RoGetActivationFactory (m_hString, IID_IEmailRecipientFactory'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.CreateWithName (HStr_address_x, HStr_name, m_ComRetVal'Access);
            Retval.m_IEmailRecipient := new Windows.ApplicationModel.Email.IEmailRecipient;
            Retval.m_IEmailRecipient.all := m_ComRetVal;
            m_RefCount := m_Factory.Release;
         end if;
         Hr := WindowsDeleteString (m_hString);
         Hr := WindowsDeleteString (HStr_address_x);
         Hr := WindowsDeleteString (HStr_name);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailRecipient

   function get_Name
   (
      this : in out EmailRecipient
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailRecipient.all.get_Name (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Name
   (
      this : in out EmailRecipient;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailRecipient.all.put_Name (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   function get_Address
   (
      this : in out EmailRecipient
   )
   return WinRt.WString is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased WinRt.HString;
      AdaRetval        : WString;
   begin
      Hr := this.m_IEmailRecipient.all.get_Address (m_ComRetVal'Access);
      AdaRetval := To_Ada (m_ComRetVal);
      Hr := WindowsDeleteString (m_ComRetVal);
      return AdaRetVal;
   end;

   procedure put_Address
   (
      this : in out EmailRecipient;
      value : WinRt.WString
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_value : WinRt.HString := To_HString (value);
   begin
      Hr := this.m_IEmailRecipient.all.put_Address (HStr_value);
      Hr := WindowsDeleteString (HStr_value);
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailRecipientResolutionResult

   procedure Initialize (this : in out EmailRecipientResolutionResult) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailRecipientResolutionResult) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailRecipientResolutionResult, IEmailRecipientResolutionResult_Ptr);
   begin
      if this.m_IEmailRecipientResolutionResult /= null then
         if this.m_IEmailRecipientResolutionResult.all /= null then
            RefCount := this.m_IEmailRecipientResolutionResult.all.Release;
            Free (this.m_IEmailRecipientResolutionResult);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for EmailRecipientResolutionResult

   function Constructor return EmailRecipientResolutionResult is
      Hr           : WinRt.HResult := S_OK;
      m_hString    : WinRt.HString := To_HString ("Windows.ApplicationModel.Email.EmailRecipientResolutionResult");
      m_ComRetVal  : aliased Windows.ApplicationModel.Email.IEmailRecipientResolutionResult;
   begin
      return RetVal : EmailRecipientResolutionResult do
         Hr := RoActivateInstance (m_hString, m_ComRetVal'Address);
         if Hr = S_OK then
            Retval.m_IEmailRecipientResolutionResult := new Windows.ApplicationModel.Email.IEmailRecipientResolutionResult;
            Retval.m_IEmailRecipientResolutionResult.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailRecipientResolutionResult

   function get_Status
   (
      this : in out EmailRecipientResolutionResult
   )
   return WinRt.Windows.ApplicationModel.Email.EmailRecipientResolutionStatus is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.EmailRecipientResolutionStatus;
   begin
      Hr := this.m_IEmailRecipientResolutionResult.all.get_Status (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   function get_PublicKeys
   (
      this : in out EmailRecipientResolutionResult
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased GenericObject;
   begin
      Hr := this.m_IEmailRecipientResolutionResult.all.get_PublicKeys (m_ComRetVal'Access);
      return m_ComRetVal;
   end;

   procedure put_Status
   (
      this : in out EmailRecipientResolutionResult;
      value : Windows.ApplicationModel.Email.EmailRecipientResolutionStatus
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailRecipientResolutionResult2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailRecipientResolutionResult_Interface, WinRt.Windows.ApplicationModel.Email.IEmailRecipientResolutionResult2, WinRt.Windows.ApplicationModel.Email.IID_IEmailRecipientResolutionResult2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailRecipientResolutionResult.all);
      Hr := m_Interface.put_Status (value);
      m_RefCount := m_Interface.Release;
   end;

   procedure SetPublicKeys
   (
      this : in out EmailRecipientResolutionResult;
      value : GenericObject
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.ApplicationModel.Email.IEmailRecipientResolutionResult2 := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.ApplicationModel.Email.IEmailRecipientResolutionResult_Interface, WinRt.Windows.ApplicationModel.Email.IEmailRecipientResolutionResult2, WinRt.Windows.ApplicationModel.Email.IID_IEmailRecipientResolutionResult2'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IEmailRecipientResolutionResult.all);
      Hr := m_Interface.SetPublicKeys (value);
      m_RefCount := m_Interface.Release;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailStore

   procedure Initialize (this : in out EmailStore) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailStore) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailStore, IEmailStore_Ptr);
   begin
      if this.m_IEmailStore /= null then
         if this.m_IEmailStore.all /= null then
            RefCount := this.m_IEmailStore.all.Release;
            Free (this.m_IEmailStore);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailStore

   function FindMailboxesAsync
   (
      this : in out EmailStore
   )
   return WinRt.GenericObject is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_GenericObject.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_GenericObject.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.GenericObject;
      m_IID            : aliased WinRt.IID := (1542260716, 62933, 23333, (176, 103, 155, 34, 164, 167, 98, 234 )); -- GenericObject;
      m_HandlerIID     : aliased WinRt.IID := (1200479082, 57634, 22578, (130, 99, 243, 217, 10, 31, 83, 119 ));
      m_Handler        : AsyncOperationCompletedHandler_GenericObject.Kind := new AsyncOperationCompletedHandler_GenericObject.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_GenericObject.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_GenericObject.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_GenericObject.Kind_Delegate, AsyncOperationCompletedHandler_GenericObject.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      Hr := this.m_IEmailStore.all.FindMailboxesAsync (m_ComRetVal'Access);
      if Hr = S_OK then
         m_AsyncOperation := QI (m_ComRetVal);
         m_RefCount := m_ComRetVal.Release;
         if m_AsyncOperation /= null then
            Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
            while m_Captured = m_Compare loop
               m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
               m_Captured := m_Completed;
            end loop;
            if m_AsyncStatus = Completed_e then
               Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
            end if;
            m_RefCount := m_AsyncOperation.Release;
            m_RefCount := m_Handler.Release;
            if m_RefCount = 0 then
               Free (m_Handler);
            end if;
         end if;
      end if;
      return m_RetVal;
   end;

   function GetConversationReader
   (
      this : in out EmailStore
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailConversationReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationReader do
         Hr := this.m_IEmailStore.all.GetConversationReader (m_ComRetVal'Access);
         Retval.m_IEmailConversationReader := new Windows.ApplicationModel.Email.IEmailConversationReader;
         Retval.m_IEmailConversationReader.all := m_ComRetVal;
      end return;
   end;

   function GetConversationReader
   (
      this : in out EmailStore;
      options : Windows.ApplicationModel.Email.EmailQueryOptions'Class
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversationReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailConversationReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversationReader do
         Hr := this.m_IEmailStore.all.GetConversationReader (options.m_IEmailQueryOptions.all, m_ComRetVal'Access);
         Retval.m_IEmailConversationReader := new Windows.ApplicationModel.Email.IEmailConversationReader;
         Retval.m_IEmailConversationReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageReader
   (
      this : in out EmailStore
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessageReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageReader do
         Hr := this.m_IEmailStore.all.GetMessageReader (m_ComRetVal'Access);
         Retval.m_IEmailMessageReader := new Windows.ApplicationModel.Email.IEmailMessageReader;
         Retval.m_IEmailMessageReader.all := m_ComRetVal;
      end return;
   end;

   function GetMessageReader
   (
      this : in out EmailStore;
      options : Windows.ApplicationModel.Email.EmailQueryOptions'Class
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessageReader'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.ApplicationModel.Email.IEmailMessageReader;
   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessageReader do
         Hr := this.m_IEmailStore.all.GetMessageReader (options.m_IEmailQueryOptions.all, m_ComRetVal'Access);
         Retval.m_IEmailMessageReader := new Windows.ApplicationModel.Email.IEmailMessageReader;
         Retval.m_IEmailMessageReader.all := m_ComRetVal;
      end return;
   end;

   function GetMailboxAsync
   (
      this : in out EmailStore;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailbox'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailbox.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailbox.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMailbox;
      m_IID            : aliased WinRt.IID := (1862398046, 39053, 23336, (171, 168, 219, 170, 187, 78, 176, 217 )); -- Windows.ApplicationModel.Email.EmailMailbox;
      m_HandlerIID     : aliased WinRt.IID := (1298094047, 57564, 23797, (178, 229, 250, 30, 92, 0, 6, 250 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailbox.Kind := new AsyncOperationCompletedHandler_EmailMailbox.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailbox.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailbox.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailbox.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailbox.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailbox do
         Hr := this.m_IEmailStore.all.GetMailboxAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMailbox := new Windows.ApplicationModel.Email.IEmailMailbox;
                  Retval.m_IEmailMailbox.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetConversationAsync
   (
      this : in out EmailStore;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailConversation'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailConversation.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailConversation.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailConversation;
      m_IID            : aliased WinRt.IID := (1753585260, 5049, 22988, (179, 88, 173, 248, 46, 236, 132, 42 )); -- Windows.ApplicationModel.Email.EmailConversation;
      m_HandlerIID     : aliased WinRt.IID := (43305117, 36248, 21314, (184, 47, 1, 16, 36, 21, 200, 112 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailConversation.Kind := new AsyncOperationCompletedHandler_EmailConversation.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailConversation.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailConversation.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailConversation.Kind_Delegate, AsyncOperationCompletedHandler_EmailConversation.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailConversation do
         Hr := this.m_IEmailStore.all.GetConversationAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailConversation := new Windows.ApplicationModel.Email.IEmailConversation;
                  Retval.m_IEmailConversation.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetFolderAsync
   (
      this : in out EmailStore;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailFolder'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailFolder.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailFolder.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailFolder;
      m_IID            : aliased WinRt.IID := (1630676815, 29501, 21393, (144, 119, 8, 103, 252, 51, 9, 22 )); -- Windows.ApplicationModel.Email.EmailFolder;
      m_HandlerIID     : aliased WinRt.IID := (4055265015, 1317, 23973, (163, 214, 178, 91, 63, 83, 58, 161 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailFolder.Kind := new AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailFolder.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailFolder.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailFolder.Kind_Delegate, AsyncOperationCompletedHandler_EmailFolder.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailFolder do
         Hr := this.m_IEmailStore.all.GetFolderAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailFolder := new Windows.ApplicationModel.Email.IEmailFolder;
                  Retval.m_IEmailFolder.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function GetMessageAsync
   (
      this : in out EmailStore;
      id : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMessage'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_id : WinRt.HString := To_HString (id);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMessage.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMessage.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMessage;
      m_IID            : aliased WinRt.IID := (1930785049, 64088, 23853, (129, 124, 181, 99, 12, 21, 17, 228 )); -- Windows.ApplicationModel.Email.EmailMessage;
      m_HandlerIID     : aliased WinRt.IID := (1775312158, 61627, 24347, (172, 181, 18, 12, 38, 254, 189, 237 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMessage.Kind := new AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMessage.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMessage.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMessage.Kind_Delegate, AsyncOperationCompletedHandler_EmailMessage.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMessage do
         Hr := this.m_IEmailStore.all.GetMessageAsync (HStr_id, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMessage := new Windows.ApplicationModel.Email.IEmailMessage;
                  Retval.m_IEmailMessage.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_id);
      end return;
   end;

   function CreateMailboxAsync
   (
      this : in out EmailStore;
      accountName : WinRt.WString;
      accountAddress : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailbox'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_accountName : WinRt.HString := To_HString (accountName);
      HStr_accountAddress : WinRt.HString := To_HString (accountAddress);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailbox.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailbox.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMailbox;
      m_IID            : aliased WinRt.IID := (1862398046, 39053, 23336, (171, 168, 219, 170, 187, 78, 176, 217 )); -- Windows.ApplicationModel.Email.EmailMailbox;
      m_HandlerIID     : aliased WinRt.IID := (1298094047, 57564, 23797, (178, 229, 250, 30, 92, 0, 6, 250 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailbox.Kind := new AsyncOperationCompletedHandler_EmailMailbox.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailbox.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailbox.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailbox.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailbox.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailbox do
         Hr := this.m_IEmailStore.all.CreateMailboxAsync (HStr_accountName, HStr_accountAddress, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMailbox := new Windows.ApplicationModel.Email.IEmailMailbox;
                  Retval.m_IEmailMailbox.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_accountName);
         Hr := WindowsDeleteString (HStr_accountAddress);
      end return;
   end;

   function CreateMailboxAsync
   (
      this : in out EmailStore;
      accountName : WinRt.WString;
      accountAddress : WinRt.WString;
      userDataAccountId : WinRt.WString
   )
   return WinRt.Windows.ApplicationModel.Email.EmailMailbox'Class is
      Hr               : WinRt.HResult := S_OK;
      m_RefCount       : WinRt.UInt32 := 0;
      HStr_accountName : WinRt.HString := To_HString (accountName);
      HStr_accountAddress : WinRt.HString := To_HString (accountAddress);
      HStr_userDataAccountId : WinRt.HString := To_HString (userDataAccountId);
      m_Temp           : WinRt.Int32 := 0;
      m_Completed      : WinRt.UInt32 := 0;
      m_Captured       : WinRt.UInt32 := 0;
      m_Compare        : constant WinRt.UInt32 := 0;

      use type WinRt.Windows.Foundation.AsyncStatus;
      use type IAsyncOperation_EmailMailbox.Kind;

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus);

      m_AsyncOperation : aliased IAsyncOperation_EmailMailbox.Kind;
      m_AsyncStatus    : aliased WinRt.Windows.Foundation.AsyncStatus;
      m_ComRetVal      : aliased WinRt.GenericObject := null;
      m_RetVal         : aliased WinRt.Windows.ApplicationModel.Email.IEmailMailbox;
      m_IID            : aliased WinRt.IID := (1862398046, 39053, 23336, (171, 168, 219, 170, 187, 78, 176, 217 )); -- Windows.ApplicationModel.Email.EmailMailbox;
      m_HandlerIID     : aliased WinRt.IID := (1298094047, 57564, 23797, (178, 229, 250, 30, 92, 0, 6, 250 ));
      m_Handler        : AsyncOperationCompletedHandler_EmailMailbox.Kind := new AsyncOperationCompletedHandler_EmailMailbox.Kind_Delegate'(IAsyncOperation_Callback'Access, 1, m_HandlerIID'Unchecked_Access);

      function QI is new Generic_QueryInterface (GenericObject_Interface, IAsyncOperation_EmailMailbox.Kind, m_IID'Unchecked_Access);
      function Convert is new Ada.Unchecked_Conversion (AsyncOperationCompletedHandler_EmailMailbox.Kind, GenericObject);
      procedure Free is new Ada.Unchecked_Deallocation (AsyncOperationCompletedHandler_EmailMailbox.Kind_Delegate, AsyncOperationCompletedHandler_EmailMailbox.Kind);

      procedure IAsyncOperation_Callback (asyncInfo : WinRt.GenericObject; asyncStatus: WinRt.Windows.Foundation.AsyncStatus) is
         Hr        : WinRt.HResult := 0;
      begin
         if asyncStatus = Completed_e then
            m_AsyncStatus := AsyncStatus;
         end if;
         m_Completed := 1;
         WakeByAddressSingle (m_Completed'Address);
      end;

   begin
      return RetVal : WinRt.Windows.ApplicationModel.Email.EmailMailbox do
         Hr := this.m_IEmailStore.all.CreateMailboxAsync (HStr_accountName, HStr_accountAddress, HStr_userDataAccountId, m_ComRetVal'Access);
         if Hr = S_OK then
            m_AsyncOperation := QI (m_ComRetVal);
            m_RefCount := m_ComRetVal.Release;
            if m_AsyncOperation /= null then
               Hr := m_AsyncOperation.Put_Completed (Convert (m_Handler));
               while m_Captured = m_Compare loop
                  m_Temp := WaitOnAddress (m_Completed'Address, m_Compare'Address, 4, 4294967295);
                  m_Captured := m_Completed;
               end loop;
               if m_AsyncStatus = Completed_e then
                  Hr := m_AsyncOperation.GetResults (m_RetVal'Access);
                  Retval.m_IEmailMailbox := new Windows.ApplicationModel.Email.IEmailMailbox;
                  Retval.m_IEmailMailbox.all := m_RetVal;
               end if;
               m_RefCount := m_AsyncOperation.Release;
               m_RefCount := m_Handler.Release;
               if m_RefCount = 0 then
                  Free (m_Handler);
               end if;
            end if;
         end if;
         Hr := WindowsDeleteString (HStr_accountName);
         Hr := WindowsDeleteString (HStr_accountAddress);
         Hr := WindowsDeleteString (HStr_userDataAccountId);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for EmailStoreNotificationTriggerDetails

   procedure Initialize (this : in out EmailStoreNotificationTriggerDetails) is
   begin
      null;
   end;

   procedure Finalize (this : in out EmailStoreNotificationTriggerDetails) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IEmailStoreNotificationTriggerDetails, IEmailStoreNotificationTriggerDetails_Ptr);
   begin
      if this.m_IEmailStoreNotificationTriggerDetails /= null then
         if this.m_IEmailStoreNotificationTriggerDetails.all /= null then
            RefCount := this.m_IEmailStoreNotificationTriggerDetails.all.Release;
            Free (this.m_IEmailStoreNotificationTriggerDetails);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for EmailStoreNotificationTriggerDetails

end;
