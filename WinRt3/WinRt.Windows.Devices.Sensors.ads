--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Graphics.Display;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Devices.Sensors is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IAccelerometer_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometer is access all IAccelerometer_Interface'Class;
   type IAccelerometer_Ptr is access all IAccelerometer;

   type IAccelerometer2_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometer2 is access all IAccelerometer2_Interface'Class;

   type IAccelerometer3_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometer3 is access all IAccelerometer3_Interface'Class;

   type IAccelerometer4_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometer4 is access all IAccelerometer4_Interface'Class;

   type IAccelerometer5_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometer5 is access all IAccelerometer5_Interface'Class;

   type IAccelerometerDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerDataThreshold is access all IAccelerometerDataThreshold_Interface'Class;
   type IAccelerometerDataThreshold_Ptr is access all IAccelerometerDataThreshold;

   type IAccelerometerDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerDeviceId is access all IAccelerometerDeviceId_Interface'Class;

   type IAccelerometerReading_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerReading is access all IAccelerometerReading_Interface'Class;
   type IAccelerometerReading_Ptr is access all IAccelerometerReading;

   type IAccelerometerReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerReading2 is access all IAccelerometerReading2_Interface'Class;

   type IAccelerometerReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerReadingChangedEventArgs is access all IAccelerometerReadingChangedEventArgs_Interface'Class;
   type IAccelerometerReadingChangedEventArgs_Ptr is access all IAccelerometerReadingChangedEventArgs;

   type IAccelerometerShakenEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerShakenEventArgs is access all IAccelerometerShakenEventArgs_Interface'Class;
   type IAccelerometerShakenEventArgs_Ptr is access all IAccelerometerShakenEventArgs;

   type IAccelerometerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerStatics is access all IAccelerometerStatics_Interface'Class;

   type IAccelerometerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerStatics2 is access all IAccelerometerStatics2_Interface'Class;

   type IAccelerometerStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IAccelerometerStatics3 is access all IAccelerometerStatics3_Interface'Class;

   type IActivitySensor_Interface is interface and WinRt.IInspectable_Interface;
   type IActivitySensor is access all IActivitySensor_Interface'Class;
   type IActivitySensor_Ptr is access all IActivitySensor;

   type IActivitySensorReading_Interface is interface and WinRt.IInspectable_Interface;
   type IActivitySensorReading is access all IActivitySensorReading_Interface'Class;
   type IActivitySensorReading_Ptr is access all IActivitySensorReading;

   type IActivitySensorReadingChangeReport_Interface is interface and WinRt.IInspectable_Interface;
   type IActivitySensorReadingChangeReport is access all IActivitySensorReadingChangeReport_Interface'Class;
   type IActivitySensorReadingChangeReport_Ptr is access all IActivitySensorReadingChangeReport;

   type IActivitySensorReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IActivitySensorReadingChangedEventArgs is access all IActivitySensorReadingChangedEventArgs_Interface'Class;
   type IActivitySensorReadingChangedEventArgs_Ptr is access all IActivitySensorReadingChangedEventArgs;

   type IActivitySensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IActivitySensorStatics is access all IActivitySensorStatics_Interface'Class;

   type IActivitySensorTriggerDetails_Interface is interface and WinRt.IInspectable_Interface;
   type IActivitySensorTriggerDetails is access all IActivitySensorTriggerDetails_Interface'Class;
   type IActivitySensorTriggerDetails_Ptr is access all IActivitySensorTriggerDetails;

   type IAltimeter_Interface is interface and WinRt.IInspectable_Interface;
   type IAltimeter is access all IAltimeter_Interface'Class;
   type IAltimeter_Ptr is access all IAltimeter;

   type IAltimeter2_Interface is interface and WinRt.IInspectable_Interface;
   type IAltimeter2 is access all IAltimeter2_Interface'Class;

   type IAltimeterReading_Interface is interface and WinRt.IInspectable_Interface;
   type IAltimeterReading is access all IAltimeterReading_Interface'Class;
   type IAltimeterReading_Ptr is access all IAltimeterReading;

   type IAltimeterReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IAltimeterReading2 is access all IAltimeterReading2_Interface'Class;

   type IAltimeterReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IAltimeterReadingChangedEventArgs is access all IAltimeterReadingChangedEventArgs_Interface'Class;
   type IAltimeterReadingChangedEventArgs_Ptr is access all IAltimeterReadingChangedEventArgs;

   type IAltimeterStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAltimeterStatics is access all IAltimeterStatics_Interface'Class;

   type IBarometer_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometer is access all IBarometer_Interface'Class;
   type IBarometer_Ptr is access all IBarometer;

   type IBarometer2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometer2 is access all IBarometer2_Interface'Class;

   type IBarometer3_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometer3 is access all IBarometer3_Interface'Class;

   type IBarometerDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometerDataThreshold is access all IBarometerDataThreshold_Interface'Class;
   type IBarometerDataThreshold_Ptr is access all IBarometerDataThreshold;

   type IBarometerReading_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometerReading is access all IBarometerReading_Interface'Class;
   type IBarometerReading_Ptr is access all IBarometerReading;

   type IBarometerReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometerReading2 is access all IBarometerReading2_Interface'Class;

   type IBarometerReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometerReadingChangedEventArgs is access all IBarometerReadingChangedEventArgs_Interface'Class;
   type IBarometerReadingChangedEventArgs_Ptr is access all IBarometerReadingChangedEventArgs;

   type IBarometerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometerStatics is access all IBarometerStatics_Interface'Class;

   type IBarometerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IBarometerStatics2 is access all IBarometerStatics2_Interface'Class;

   type ICompass_Interface is interface and WinRt.IInspectable_Interface;
   type ICompass is access all ICompass_Interface'Class;
   type ICompass_Ptr is access all ICompass;

   type ICompass2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompass2 is access all ICompass2_Interface'Class;

   type ICompass3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompass3 is access all ICompass3_Interface'Class;

   type ICompass4_Interface is interface and WinRt.IInspectable_Interface;
   type ICompass4 is access all ICompass4_Interface'Class;

   type ICompassDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassDataThreshold is access all ICompassDataThreshold_Interface'Class;
   type ICompassDataThreshold_Ptr is access all ICompassDataThreshold;

   type ICompassDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassDeviceId is access all ICompassDeviceId_Interface'Class;

   type ICompassReading_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassReading is access all ICompassReading_Interface'Class;
   type ICompassReading_Ptr is access all ICompassReading;

   type ICompassReading2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassReading2 is access all ICompassReading2_Interface'Class;

   type ICompassReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassReadingChangedEventArgs is access all ICompassReadingChangedEventArgs_Interface'Class;
   type ICompassReadingChangedEventArgs_Ptr is access all ICompassReadingChangedEventArgs;

   type ICompassReadingHeadingAccuracy_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassReadingHeadingAccuracy is access all ICompassReadingHeadingAccuracy_Interface'Class;

   type ICompassStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassStatics is access all ICompassStatics_Interface'Class;

   type ICompassStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompassStatics2 is access all ICompassStatics2_Interface'Class;

   type IGyrometer_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometer is access all IGyrometer_Interface'Class;
   type IGyrometer_Ptr is access all IGyrometer;

   type IGyrometer2_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometer2 is access all IGyrometer2_Interface'Class;

   type IGyrometer3_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometer3 is access all IGyrometer3_Interface'Class;

   type IGyrometer4_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometer4 is access all IGyrometer4_Interface'Class;

   type IGyrometerDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerDataThreshold is access all IGyrometerDataThreshold_Interface'Class;
   type IGyrometerDataThreshold_Ptr is access all IGyrometerDataThreshold;

   type IGyrometerDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerDeviceId is access all IGyrometerDeviceId_Interface'Class;

   type IGyrometerReading_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerReading is access all IGyrometerReading_Interface'Class;
   type IGyrometerReading_Ptr is access all IGyrometerReading;

   type IGyrometerReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerReading2 is access all IGyrometerReading2_Interface'Class;

   type IGyrometerReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerReadingChangedEventArgs is access all IGyrometerReadingChangedEventArgs_Interface'Class;
   type IGyrometerReadingChangedEventArgs_Ptr is access all IGyrometerReadingChangedEventArgs;

   type IGyrometerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerStatics is access all IGyrometerStatics_Interface'Class;

   type IGyrometerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IGyrometerStatics2 is access all IGyrometerStatics2_Interface'Class;

   type IHingeAngleReading_Interface is interface and WinRt.IInspectable_Interface;
   type IHingeAngleReading is access all IHingeAngleReading_Interface'Class;
   type IHingeAngleReading_Ptr is access all IHingeAngleReading;

   type IHingeAngleSensor_Interface is interface and WinRt.IInspectable_Interface;
   type IHingeAngleSensor is access all IHingeAngleSensor_Interface'Class;
   type IHingeAngleSensor_Ptr is access all IHingeAngleSensor;

   type IHingeAngleSensorReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IHingeAngleSensorReadingChangedEventArgs is access all IHingeAngleSensorReadingChangedEventArgs_Interface'Class;
   type IHingeAngleSensorReadingChangedEventArgs_Ptr is access all IHingeAngleSensorReadingChangedEventArgs;

   type IHingeAngleSensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IHingeAngleSensorStatics is access all IHingeAngleSensorStatics_Interface'Class;

   type IInclinometer_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometer is access all IInclinometer_Interface'Class;
   type IInclinometer_Ptr is access all IInclinometer;

   type IInclinometer2_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometer2 is access all IInclinometer2_Interface'Class;

   type IInclinometer3_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometer3 is access all IInclinometer3_Interface'Class;

   type IInclinometer4_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometer4 is access all IInclinometer4_Interface'Class;

   type IInclinometerDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerDataThreshold is access all IInclinometerDataThreshold_Interface'Class;
   type IInclinometerDataThreshold_Ptr is access all IInclinometerDataThreshold;

   type IInclinometerDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerDeviceId is access all IInclinometerDeviceId_Interface'Class;

   type IInclinometerReading_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerReading is access all IInclinometerReading_Interface'Class;
   type IInclinometerReading_Ptr is access all IInclinometerReading;

   type IInclinometerReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerReading2 is access all IInclinometerReading2_Interface'Class;

   type IInclinometerReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerReadingChangedEventArgs is access all IInclinometerReadingChangedEventArgs_Interface'Class;
   type IInclinometerReadingChangedEventArgs_Ptr is access all IInclinometerReadingChangedEventArgs;

   type IInclinometerReadingYawAccuracy_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerReadingYawAccuracy is access all IInclinometerReadingYawAccuracy_Interface'Class;

   type IInclinometerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerStatics is access all IInclinometerStatics_Interface'Class;

   type IInclinometerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerStatics2 is access all IInclinometerStatics2_Interface'Class;

   type IInclinometerStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerStatics3 is access all IInclinometerStatics3_Interface'Class;

   type IInclinometerStatics4_Interface is interface and WinRt.IInspectable_Interface;
   type IInclinometerStatics4 is access all IInclinometerStatics4_Interface'Class;

   type ILightSensor_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensor is access all ILightSensor_Interface'Class;
   type ILightSensor_Ptr is access all ILightSensor;

   type ILightSensor2_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensor2 is access all ILightSensor2_Interface'Class;

   type ILightSensor3_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensor3 is access all ILightSensor3_Interface'Class;

   type ILightSensorDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorDataThreshold is access all ILightSensorDataThreshold_Interface'Class;
   type ILightSensorDataThreshold_Ptr is access all ILightSensorDataThreshold;

   type ILightSensorDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorDeviceId is access all ILightSensorDeviceId_Interface'Class;

   type ILightSensorReading_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorReading is access all ILightSensorReading_Interface'Class;
   type ILightSensorReading_Ptr is access all ILightSensorReading;

   type ILightSensorReading2_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorReading2 is access all ILightSensorReading2_Interface'Class;

   type ILightSensorReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorReadingChangedEventArgs is access all ILightSensorReadingChangedEventArgs_Interface'Class;
   type ILightSensorReadingChangedEventArgs_Ptr is access all ILightSensorReadingChangedEventArgs;

   type ILightSensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorStatics is access all ILightSensorStatics_Interface'Class;

   type ILightSensorStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ILightSensorStatics2 is access all ILightSensorStatics2_Interface'Class;

   type IMagnetometer_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometer is access all IMagnetometer_Interface'Class;
   type IMagnetometer_Ptr is access all IMagnetometer;

   type IMagnetometer2_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometer2 is access all IMagnetometer2_Interface'Class;

   type IMagnetometer3_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometer3 is access all IMagnetometer3_Interface'Class;

   type IMagnetometer4_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometer4 is access all IMagnetometer4_Interface'Class;

   type IMagnetometerDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerDataThreshold is access all IMagnetometerDataThreshold_Interface'Class;
   type IMagnetometerDataThreshold_Ptr is access all IMagnetometerDataThreshold;

   type IMagnetometerDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerDeviceId is access all IMagnetometerDeviceId_Interface'Class;

   type IMagnetometerReading_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerReading is access all IMagnetometerReading_Interface'Class;
   type IMagnetometerReading_Ptr is access all IMagnetometerReading;

   type IMagnetometerReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerReading2 is access all IMagnetometerReading2_Interface'Class;

   type IMagnetometerReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerReadingChangedEventArgs is access all IMagnetometerReadingChangedEventArgs_Interface'Class;
   type IMagnetometerReadingChangedEventArgs_Ptr is access all IMagnetometerReadingChangedEventArgs;

   type IMagnetometerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerStatics is access all IMagnetometerStatics_Interface'Class;

   type IMagnetometerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMagnetometerStatics2 is access all IMagnetometerStatics2_Interface'Class;

   type IOrientationSensor_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensor is access all IOrientationSensor_Interface'Class;
   type IOrientationSensor_Ptr is access all IOrientationSensor;

   type IOrientationSensor2_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensor2 is access all IOrientationSensor2_Interface'Class;

   type IOrientationSensor3_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensor3 is access all IOrientationSensor3_Interface'Class;

   type IOrientationSensorDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorDeviceId is access all IOrientationSensorDeviceId_Interface'Class;

   type IOrientationSensorReading_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorReading is access all IOrientationSensorReading_Interface'Class;
   type IOrientationSensorReading_Ptr is access all IOrientationSensorReading;

   type IOrientationSensorReading2_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorReading2 is access all IOrientationSensorReading2_Interface'Class;

   type IOrientationSensorReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorReadingChangedEventArgs is access all IOrientationSensorReadingChangedEventArgs_Interface'Class;
   type IOrientationSensorReadingChangedEventArgs_Ptr is access all IOrientationSensorReadingChangedEventArgs;

   type IOrientationSensorReadingYawAccuracy_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorReadingYawAccuracy is access all IOrientationSensorReadingYawAccuracy_Interface'Class;

   type IOrientationSensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorStatics is access all IOrientationSensorStatics_Interface'Class;

   type IOrientationSensorStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorStatics2 is access all IOrientationSensorStatics2_Interface'Class;

   type IOrientationSensorStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorStatics3 is access all IOrientationSensorStatics3_Interface'Class;

   type IOrientationSensorStatics4_Interface is interface and WinRt.IInspectable_Interface;
   type IOrientationSensorStatics4 is access all IOrientationSensorStatics4_Interface'Class;

   type IPedometer_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometer is access all IPedometer_Interface'Class;
   type IPedometer_Ptr is access all IPedometer;

   type IPedometer2_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometer2 is access all IPedometer2_Interface'Class;

   type IPedometerDataThresholdFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometerDataThresholdFactory is access all IPedometerDataThresholdFactory_Interface'Class;

   type IPedometerReading_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometerReading is access all IPedometerReading_Interface'Class;
   type IPedometerReading_Ptr is access all IPedometerReading;

   type IPedometerReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometerReadingChangedEventArgs is access all IPedometerReadingChangedEventArgs_Interface'Class;
   type IPedometerReadingChangedEventArgs_Ptr is access all IPedometerReadingChangedEventArgs;

   type IPedometerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometerStatics is access all IPedometerStatics_Interface'Class;

   type IPedometerStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IPedometerStatics2 is access all IPedometerStatics2_Interface'Class;

   type IProximitySensor_Interface is interface and WinRt.IInspectable_Interface;
   type IProximitySensor is access all IProximitySensor_Interface'Class;
   type IProximitySensor_Ptr is access all IProximitySensor;

   type IProximitySensorDataThresholdFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IProximitySensorDataThresholdFactory is access all IProximitySensorDataThresholdFactory_Interface'Class;

   type IProximitySensorReading_Interface is interface and WinRt.IInspectable_Interface;
   type IProximitySensorReading is access all IProximitySensorReading_Interface'Class;
   type IProximitySensorReading_Ptr is access all IProximitySensorReading;

   type IProximitySensorReadingChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IProximitySensorReadingChangedEventArgs is access all IProximitySensorReadingChangedEventArgs_Interface'Class;
   type IProximitySensorReadingChangedEventArgs_Ptr is access all IProximitySensorReadingChangedEventArgs;

   type IProximitySensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IProximitySensorStatics is access all IProximitySensorStatics_Interface'Class;

   type IProximitySensorStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IProximitySensorStatics2 is access all IProximitySensorStatics2_Interface'Class;

   type ISensorDataThreshold_Interface is interface and WinRt.IInspectable_Interface;
   type ISensorDataThreshold is access all ISensorDataThreshold_Interface'Class;
   type ISensorDataThreshold_Ptr is access all ISensorDataThreshold;

   type ISensorDataThresholdTriggerDetails_Interface is interface and WinRt.IInspectable_Interface;
   type ISensorDataThresholdTriggerDetails is access all ISensorDataThresholdTriggerDetails_Interface'Class;
   type ISensorDataThresholdTriggerDetails_Ptr is access all ISensorDataThresholdTriggerDetails;

   type ISensorQuaternion_Interface is interface and WinRt.IInspectable_Interface;
   type ISensorQuaternion is access all ISensorQuaternion_Interface'Class;
   type ISensorQuaternion_Ptr is access all ISensorQuaternion;

   type ISensorRotationMatrix_Interface is interface and WinRt.IInspectable_Interface;
   type ISensorRotationMatrix is access all ISensorRotationMatrix_Interface'Class;
   type ISensorRotationMatrix_Ptr is access all ISensorRotationMatrix;

   type ISimpleOrientationSensor_Interface is interface and WinRt.IInspectable_Interface;
   type ISimpleOrientationSensor is access all ISimpleOrientationSensor_Interface'Class;
   type ISimpleOrientationSensor_Ptr is access all ISimpleOrientationSensor;

   type ISimpleOrientationSensor2_Interface is interface and WinRt.IInspectable_Interface;
   type ISimpleOrientationSensor2 is access all ISimpleOrientationSensor2_Interface'Class;

   type ISimpleOrientationSensorDeviceId_Interface is interface and WinRt.IInspectable_Interface;
   type ISimpleOrientationSensorDeviceId is access all ISimpleOrientationSensorDeviceId_Interface'Class;

   type ISimpleOrientationSensorOrientationChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ISimpleOrientationSensorOrientationChangedEventArgs is access all ISimpleOrientationSensorOrientationChangedEventArgs_Interface'Class;
   type ISimpleOrientationSensorOrientationChangedEventArgs_Ptr is access all ISimpleOrientationSensorOrientationChangedEventArgs;

   type ISimpleOrientationSensorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ISimpleOrientationSensorStatics is access all ISimpleOrientationSensorStatics_Interface'Class;

   type ISimpleOrientationSensorStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type ISimpleOrientationSensorStatics2 is access all ISimpleOrientationSensorStatics2_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type Accelerometer is new Ada.Finalization.Limited_Controlled with
      record
         m_IAccelerometer : access Windows.Devices.Sensors.IAccelerometer;
      end record;
   type Accelerometer_Ptr is access all Accelerometer;

   type AccelerometerDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_IAccelerometerDataThreshold : access Windows.Devices.Sensors.IAccelerometerDataThreshold;
      end record;
   type AccelerometerDataThreshold_Ptr is access all AccelerometerDataThreshold;

   type AccelerometerReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IAccelerometerReading : access Windows.Devices.Sensors.IAccelerometerReading;
      end record;
   type AccelerometerReading_Ptr is access all AccelerometerReading;

   type AccelerometerReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IAccelerometerReadingChangedEventArgs : access Windows.Devices.Sensors.IAccelerometerReadingChangedEventArgs;
      end record;
   type AccelerometerReadingChangedEventArgs_Ptr is access all AccelerometerReadingChangedEventArgs;

   type AccelerometerShakenEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IAccelerometerShakenEventArgs : access Windows.Devices.Sensors.IAccelerometerShakenEventArgs;
      end record;
   type AccelerometerShakenEventArgs_Ptr is access all AccelerometerShakenEventArgs;

   type ActivitySensor is new Ada.Finalization.Limited_Controlled with
      record
         m_IActivitySensor : access Windows.Devices.Sensors.IActivitySensor;
      end record;
   type ActivitySensor_Ptr is access all ActivitySensor;

   type ActivitySensorReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IActivitySensorReading : access Windows.Devices.Sensors.IActivitySensorReading;
      end record;
   type ActivitySensorReading_Ptr is access all ActivitySensorReading;

   type ActivitySensorReadingChangeReport is new Ada.Finalization.Limited_Controlled with
      record
         m_IActivitySensorReadingChangeReport : access Windows.Devices.Sensors.IActivitySensorReadingChangeReport;
      end record;
   type ActivitySensorReadingChangeReport_Ptr is access all ActivitySensorReadingChangeReport;

   type ActivitySensorReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IActivitySensorReadingChangedEventArgs : access Windows.Devices.Sensors.IActivitySensorReadingChangedEventArgs;
      end record;
   type ActivitySensorReadingChangedEventArgs_Ptr is access all ActivitySensorReadingChangedEventArgs;

   type ActivitySensorTriggerDetails is new Ada.Finalization.Limited_Controlled with
      record
         m_IActivitySensorTriggerDetails : access Windows.Devices.Sensors.IActivitySensorTriggerDetails;
      end record;
   type ActivitySensorTriggerDetails_Ptr is access all ActivitySensorTriggerDetails;

   type Altimeter is new Ada.Finalization.Limited_Controlled with
      record
         m_IAltimeter : access Windows.Devices.Sensors.IAltimeter;
      end record;
   type Altimeter_Ptr is access all Altimeter;

   type AltimeterReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IAltimeterReading : access Windows.Devices.Sensors.IAltimeterReading;
      end record;
   type AltimeterReading_Ptr is access all AltimeterReading;

   type AltimeterReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IAltimeterReadingChangedEventArgs : access Windows.Devices.Sensors.IAltimeterReadingChangedEventArgs;
      end record;
   type AltimeterReadingChangedEventArgs_Ptr is access all AltimeterReadingChangedEventArgs;

   type Barometer is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarometer : access Windows.Devices.Sensors.IBarometer;
      end record;
   type Barometer_Ptr is access all Barometer;

   type BarometerDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarometerDataThreshold : access Windows.Devices.Sensors.IBarometerDataThreshold;
      end record;
   type BarometerDataThreshold_Ptr is access all BarometerDataThreshold;

   type BarometerReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarometerReading : access Windows.Devices.Sensors.IBarometerReading;
      end record;
   type BarometerReading_Ptr is access all BarometerReading;

   type BarometerReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IBarometerReadingChangedEventArgs : access Windows.Devices.Sensors.IBarometerReadingChangedEventArgs;
      end record;
   type BarometerReadingChangedEventArgs_Ptr is access all BarometerReadingChangedEventArgs;

   type Compass is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompass : access Windows.Devices.Sensors.ICompass;
      end record;
   type Compass_Ptr is access all Compass;

   type CompassDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompassDataThreshold : access Windows.Devices.Sensors.ICompassDataThreshold;
      end record;
   type CompassDataThreshold_Ptr is access all CompassDataThreshold;

   type CompassReading is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompassReading : access Windows.Devices.Sensors.ICompassReading;
      end record;
   type CompassReading_Ptr is access all CompassReading;

   type CompassReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompassReadingChangedEventArgs : access Windows.Devices.Sensors.ICompassReadingChangedEventArgs;
      end record;
   type CompassReadingChangedEventArgs_Ptr is access all CompassReadingChangedEventArgs;

   type Gyrometer is new Ada.Finalization.Limited_Controlled with
      record
         m_IGyrometer : access Windows.Devices.Sensors.IGyrometer;
      end record;
   type Gyrometer_Ptr is access all Gyrometer;

   type GyrometerDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_IGyrometerDataThreshold : access Windows.Devices.Sensors.IGyrometerDataThreshold;
      end record;
   type GyrometerDataThreshold_Ptr is access all GyrometerDataThreshold;

   type GyrometerReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IGyrometerReading : access Windows.Devices.Sensors.IGyrometerReading;
      end record;
   type GyrometerReading_Ptr is access all GyrometerReading;

   type GyrometerReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IGyrometerReadingChangedEventArgs : access Windows.Devices.Sensors.IGyrometerReadingChangedEventArgs;
      end record;
   type GyrometerReadingChangedEventArgs_Ptr is access all GyrometerReadingChangedEventArgs;

   type HingeAngleReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IHingeAngleReading : access Windows.Devices.Sensors.IHingeAngleReading;
      end record;
   type HingeAngleReading_Ptr is access all HingeAngleReading;

   type HingeAngleSensor is new Ada.Finalization.Limited_Controlled with
      record
         m_IHingeAngleSensor : access Windows.Devices.Sensors.IHingeAngleSensor;
      end record;
   type HingeAngleSensor_Ptr is access all HingeAngleSensor;

   type HingeAngleSensorReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IHingeAngleSensorReadingChangedEventArgs : access Windows.Devices.Sensors.IHingeAngleSensorReadingChangedEventArgs;
      end record;
   type HingeAngleSensorReadingChangedEventArgs_Ptr is access all HingeAngleSensorReadingChangedEventArgs;

   type Inclinometer is new Ada.Finalization.Limited_Controlled with
      record
         m_IInclinometer : access Windows.Devices.Sensors.IInclinometer;
      end record;
   type Inclinometer_Ptr is access all Inclinometer;

   type InclinometerDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_IInclinometerDataThreshold : access Windows.Devices.Sensors.IInclinometerDataThreshold;
      end record;
   type InclinometerDataThreshold_Ptr is access all InclinometerDataThreshold;

   type InclinometerReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IInclinometerReading : access Windows.Devices.Sensors.IInclinometerReading;
      end record;
   type InclinometerReading_Ptr is access all InclinometerReading;

   type InclinometerReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IInclinometerReadingChangedEventArgs : access Windows.Devices.Sensors.IInclinometerReadingChangedEventArgs;
      end record;
   type InclinometerReadingChangedEventArgs_Ptr is access all InclinometerReadingChangedEventArgs;

   type LightSensor is new Ada.Finalization.Limited_Controlled with
      record
         m_ILightSensor : access Windows.Devices.Sensors.ILightSensor;
      end record;
   type LightSensor_Ptr is access all LightSensor;

   type LightSensorDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_ILightSensorDataThreshold : access Windows.Devices.Sensors.ILightSensorDataThreshold;
      end record;
   type LightSensorDataThreshold_Ptr is access all LightSensorDataThreshold;

   type LightSensorReading is new Ada.Finalization.Limited_Controlled with
      record
         m_ILightSensorReading : access Windows.Devices.Sensors.ILightSensorReading;
      end record;
   type LightSensorReading_Ptr is access all LightSensorReading;

   type LightSensorReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ILightSensorReadingChangedEventArgs : access Windows.Devices.Sensors.ILightSensorReadingChangedEventArgs;
      end record;
   type LightSensorReadingChangedEventArgs_Ptr is access all LightSensorReadingChangedEventArgs;

   type Magnetometer is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagnetometer : access Windows.Devices.Sensors.IMagnetometer;
      end record;
   type Magnetometer_Ptr is access all Magnetometer;

   type MagnetometerDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagnetometerDataThreshold : access Windows.Devices.Sensors.IMagnetometerDataThreshold;
      end record;
   type MagnetometerDataThreshold_Ptr is access all MagnetometerDataThreshold;

   type MagnetometerReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagnetometerReading : access Windows.Devices.Sensors.IMagnetometerReading;
      end record;
   type MagnetometerReading_Ptr is access all MagnetometerReading;

   type MagnetometerReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMagnetometerReadingChangedEventArgs : access Windows.Devices.Sensors.IMagnetometerReadingChangedEventArgs;
      end record;
   type MagnetometerReadingChangedEventArgs_Ptr is access all MagnetometerReadingChangedEventArgs;

   type OrientationSensor is new Ada.Finalization.Limited_Controlled with
      record
         m_IOrientationSensor : access Windows.Devices.Sensors.IOrientationSensor;
      end record;
   type OrientationSensor_Ptr is access all OrientationSensor;

   type OrientationSensorReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IOrientationSensorReading : access Windows.Devices.Sensors.IOrientationSensorReading;
      end record;
   type OrientationSensorReading_Ptr is access all OrientationSensorReading;

   type OrientationSensorReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IOrientationSensorReadingChangedEventArgs : access Windows.Devices.Sensors.IOrientationSensorReadingChangedEventArgs;
      end record;
   type OrientationSensorReadingChangedEventArgs_Ptr is access all OrientationSensorReadingChangedEventArgs;

   type Pedometer is new Ada.Finalization.Limited_Controlled with
      record
         m_IPedometer : access Windows.Devices.Sensors.IPedometer;
      end record;
   type Pedometer_Ptr is access all Pedometer;

   type PedometerDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_ISensorDataThreshold : access Windows.Devices.Sensors.ISensorDataThreshold;
      end record;
   type PedometerDataThreshold_Ptr is access all PedometerDataThreshold;

   type PedometerReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IPedometerReading : access Windows.Devices.Sensors.IPedometerReading;
      end record;
   type PedometerReading_Ptr is access all PedometerReading;

   type PedometerReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IPedometerReadingChangedEventArgs : access Windows.Devices.Sensors.IPedometerReadingChangedEventArgs;
      end record;
   type PedometerReadingChangedEventArgs_Ptr is access all PedometerReadingChangedEventArgs;

   type ProximitySensor is new Ada.Finalization.Limited_Controlled with
      record
         m_IProximitySensor : access Windows.Devices.Sensors.IProximitySensor;
      end record;
   type ProximitySensor_Ptr is access all ProximitySensor;

   type ProximitySensorDataThreshold is new Ada.Finalization.Limited_Controlled with
      record
         m_ISensorDataThreshold : access Windows.Devices.Sensors.ISensorDataThreshold;
      end record;
   type ProximitySensorDataThreshold_Ptr is access all ProximitySensorDataThreshold;

   type ProximitySensorDisplayOnOffController is new Ada.Finalization.Limited_Controlled with
      record
         m_IClosable : access Windows.Foundation.IClosable;
      end record;
   type ProximitySensorDisplayOnOffController_Ptr is access all ProximitySensorDisplayOnOffController;

   type ProximitySensorReading is new Ada.Finalization.Limited_Controlled with
      record
         m_IProximitySensorReading : access Windows.Devices.Sensors.IProximitySensorReading;
      end record;
   type ProximitySensorReading_Ptr is access all ProximitySensorReading;

   type ProximitySensorReadingChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IProximitySensorReadingChangedEventArgs : access Windows.Devices.Sensors.IProximitySensorReadingChangedEventArgs;
      end record;
   type ProximitySensorReadingChangedEventArgs_Ptr is access all ProximitySensorReadingChangedEventArgs;

   type SensorDataThresholdTriggerDetails is new Ada.Finalization.Limited_Controlled with
      record
         m_ISensorDataThresholdTriggerDetails : access Windows.Devices.Sensors.ISensorDataThresholdTriggerDetails;
      end record;
   type SensorDataThresholdTriggerDetails_Ptr is access all SensorDataThresholdTriggerDetails;

   type SensorQuaternion is new Ada.Finalization.Limited_Controlled with
      record
         m_ISensorQuaternion : access Windows.Devices.Sensors.ISensorQuaternion;
      end record;
   type SensorQuaternion_Ptr is access all SensorQuaternion;

   type SensorRotationMatrix is new Ada.Finalization.Limited_Controlled with
      record
         m_ISensorRotationMatrix : access Windows.Devices.Sensors.ISensorRotationMatrix;
      end record;
   type SensorRotationMatrix_Ptr is access all SensorRotationMatrix;

   type SimpleOrientationSensor is new Ada.Finalization.Limited_Controlled with
      record
         m_ISimpleOrientationSensor : access Windows.Devices.Sensors.ISimpleOrientationSensor;
      end record;
   type SimpleOrientationSensor_Ptr is access all SimpleOrientationSensor;

   type SimpleOrientationSensorOrientationChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ISimpleOrientationSensorOrientationChangedEventArgs : access Windows.Devices.Sensors.ISimpleOrientationSensorOrientationChangedEventArgs;
      end record;
   type SimpleOrientationSensorOrientationChangedEventArgs_Ptr is access all SimpleOrientationSensorOrientationChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type AccelerometerReadingType is (
      Standard_e,
      Linear_e,
      Gravity_e
   );
   for AccelerometerReadingType use (
      Standard_e => 0,
      Linear_e => 1,
      Gravity_e => 2
   );
   type AccelerometerReadingType_Ptr is access all AccelerometerReadingType;

   type ActivitySensorReadingConfidence is (
      High_e,
      Low_e
   );
   for ActivitySensorReadingConfidence use (
      High_e => 0,
      Low_e => 1
   );
   type ActivitySensorReadingConfidence_Ptr is access all ActivitySensorReadingConfidence;

   type ActivityType is (
      Unknown_e,
      Idle_e,
      Stationary_e,
      Fidgeting_e,
      Walking_e,
      Running_e,
      InVehicle_e,
      Biking_e
   );
   for ActivityType use (
      Unknown_e => 0,
      Idle_e => 1,
      Stationary_e => 2,
      Fidgeting_e => 3,
      Walking_e => 4,
      Running_e => 5,
      InVehicle_e => 6,
      Biking_e => 7
   );
   type ActivityType_Ptr is access all ActivityType;

   type MagnetometerAccuracy is (
      Unknown_e,
      Unreliable_e,
      Approximate_e,
      High_e
   );
   for MagnetometerAccuracy use (
      Unknown_e => 0,
      Unreliable_e => 1,
      Approximate_e => 2,
      High_e => 3
   );
   type MagnetometerAccuracy_Ptr is access all MagnetometerAccuracy;

   type PedometerStepKind is (
      Unknown_e,
      Walking_e,
      Running_e
   );
   for PedometerStepKind use (
      Unknown_e => 0,
      Walking_e => 1,
      Running_e => 2
   );
   type PedometerStepKind_Ptr is access all PedometerStepKind;

   type SensorOptimizationGoal is (
      Precision_e,
      PowerEfficiency_e
   );
   for SensorOptimizationGoal use (
      Precision_e => 0,
      PowerEfficiency_e => 1
   );
   type SensorOptimizationGoal_Ptr is access all SensorOptimizationGoal;

   type SensorReadingType is (
      Absolute_e,
      Relative_e
   );
   for SensorReadingType use (
      Absolute_e => 0,
      Relative_e => 1
   );
   type SensorReadingType_Ptr is access all SensorReadingType;

   type SensorType is (
      Accelerometer_e,
      ActivitySensor_e,
      Barometer_e,
      Compass_e,
      CustomSensor_e,
      Gyroscope_e,
      ProximitySensor_e,
      Inclinometer_e,
      LightSensor_e,
      OrientationSensor_e,
      Pedometer_e,
      RelativeInclinometer_e,
      RelativeOrientationSensor_e,
      SimpleOrientationSensor_e
   );
   for SensorType use (
      Accelerometer_e => 0,
      ActivitySensor_e => 1,
      Barometer_e => 2,
      Compass_e => 3,
      CustomSensor_e => 4,
      Gyroscope_e => 5,
      ProximitySensor_e => 6,
      Inclinometer_e => 7,
      LightSensor_e => 8,
      OrientationSensor_e => 9,
      Pedometer_e => 10,
      RelativeInclinometer_e => 11,
      RelativeOrientationSensor_e => 12,
      SimpleOrientationSensor_e => 13
   );
   type SensorType_Ptr is access all SensorType;

   type SimpleOrientation is (
      NotRotated_e,
      Rotated90DegreesCounterclockwise_e,
      Rotated180DegreesCounterclockwise_e,
      Rotated270DegreesCounterclockwise_e,
      Faceup_e,
      Facedown_e
   );
   for SimpleOrientation use (
      NotRotated_e => 0,
      Rotated90DegreesCounterclockwise_e => 1,
      Rotated180DegreesCounterclockwise_e => 2,
      Rotated270DegreesCounterclockwise_e => 3,
      Faceup_e => 4,
      Facedown_e => 5
   );
   type SimpleOrientation_Ptr is access all SimpleOrientation;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IReference_TimeSpan is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.TimeSpan);
   IID_IReference_TimeSpan : aliased WinRt.IID := (284155799, 57035, 22120, (188, 165, 128, 48, 185, 47, 250, 144 ));
   function QInterface_IReference_TimeSpan is new Generic_QueryInterface (GenericObject_Interface, IReference_TimeSpan.Kind, IID_IReference_TimeSpan'Access);

   package IMapView_HString_IInspectable is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.IInspectable);
   IID_IMapView_HString_IInspectable : aliased WinRt.IID := (284155799, 57035, 22120, (188, 165, 128, 48, 185, 47, 250, 144 ));
   function QInterface_IMapView_HString_IInspectable is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_IInspectable.Kind, IID_IMapView_HString_IInspectable'Access);

   package IVector_ActivityType is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.Devices.Sensors.ActivityType);
   IID_IVector_ActivityType : aliased WinRt.IID := (2144698860, 58825, 23040, (174, 60, 116, 7, 173, 119, 117, 17 ));
   function QInterface_IVector_ActivityType is new Generic_QueryInterface (GenericObject_Interface, IVector_ActivityType.Kind, IID_IVector_ActivityType'Access);

   package IVectorView_ActivityType is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.Sensors.ActivityType);
   IID_IVectorView_ActivityType : aliased WinRt.IID := (2144698860, 58825, 23040, (174, 60, 116, 7, 173, 119, 117, 17 ));
   function QInterface_IVectorView_ActivityType is new Generic_QueryInterface (GenericObject_Interface, IVectorView_ActivityType.Kind, IID_IVectorView_ActivityType'Access);

   package IVectorView_IActivitySensorReadingChangeReport is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Devices.Sensors.IActivitySensorReadingChangeReport);
   IID_IVectorView_IActivitySensorReadingChangeReport : aliased WinRt.IID := (555656170, 62231, 20776, (135, 156, 118, 247, 196, 55, 31, 210 ));
   function QInterface_IVectorView_IActivitySensorReadingChangeReport is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IActivitySensorReadingChangeReport.Kind, IID_IVectorView_IActivitySensorReadingChangeReport'Access);

   package IReference_Double is new WinRt.Windows.Foundation.IReference (WinRt.Double);
   IID_IReference_Double : aliased WinRt.IID := (1264524133, 60523, 23129, (187, 37, 86, 94, 188, 248, 79, 248 ));
   function QInterface_IReference_Double is new Generic_QueryInterface (GenericObject_Interface, IReference_Double.Kind, IID_IReference_Double'Access);

   package IMapView_PedometerStepKind_IPedometerReading is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.Windows.Devices.Sensors.PedometerStepKind, WinRt.Windows.Devices.Sensors.IPedometerReading);
   IID_IMapView_PedometerStepKind_IPedometerReading : aliased WinRt.IID := (1756178821, 9073, 21028, (174, 0, 108, 118, 221, 236, 113, 108 ));
   function QInterface_IMapView_PedometerStepKind_IPedometerReading is new Generic_QueryInterface (GenericObject_Interface, IMapView_PedometerStepKind_IPedometerReading.Kind, IID_IMapView_PedometerStepKind_IPedometerReading'Access);

   package IReference_UInt32 is new WinRt.Windows.Foundation.IReference (WinRt.UInt32);
   IID_IReference_UInt32 : aliased WinRt.IID := (1500918935, 32070, 22400, (151, 41, 18, 234, 12, 152, 77, 217 ));
   function QInterface_IReference_UInt32 is new Generic_QueryInterface (GenericObject_Interface, IReference_UInt32.Kind, IID_IReference_UInt32'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IAccelerometer is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IAccelerometer_Interface;
         RetVal : access Windows.Devices.Sensors.IAccelerometerReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IAccelerometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IAccelerometer_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IAccelerometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IAccelerometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IAccelerometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_Shaken
      (
         this : access IAccelerometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Shaken
      (
         this : access IAccelerometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometer : aliased WinRt.IID := (3742909768, 10001, 19879, (128, 152, 75, 130, 32, 93, 60, 125 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometer2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access IAccelerometer2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access IAccelerometer2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometer2 : aliased WinRt.IID := (3908080366, 18788, 16410, (182, 2, 34, 13, 113, 83, 198, 10 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometer3 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IAccelerometer3_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IAccelerometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IAccelerometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometer3 : aliased WinRt.IID := (2279604778, 60800, 18923, (191, 138, 164, 234, 49, 229, 205, 132 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometer4 is interface and WinRt.IInspectable;

      function get_ReadingType
      (
         this : access IAccelerometer4_Interface;
         RetVal : access Windows.Devices.Sensors.AccelerometerReadingType
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometer4 : aliased WinRt.IID := (490159183, 17107, 17842, (129, 68, 171, 127, 182, 101, 235, 89 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometer5 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access IAccelerometer5_Interface;
         RetVal : access Windows.Devices.Sensors.IAccelerometerDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometer5 : aliased WinRt.IID := (2122215457, 57076, 21414, (175, 67, 128, 111, 213, 56, 237, 246 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerDataThreshold is interface and WinRt.IInspectable;

      function get_XAxisInGForce
      (
         this : access IAccelerometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_XAxisInGForce
      (
         this : access IAccelerometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_YAxisInGForce
      (
         this : access IAccelerometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_YAxisInGForce
      (
         this : access IAccelerometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_ZAxisInGForce
      (
         this : access IAccelerometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_ZAxisInGForce
      (
         this : access IAccelerometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerDataThreshold : aliased WinRt.IID := (4180417384, 25376, 21879, (135, 158, 153, 66, 98, 28, 61, 217 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IAccelerometerDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerDeviceId : aliased WinRt.IID := (2125227177, 38869, 17517, (171, 90, 145, 125, 249, 185, 106, 44 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IAccelerometerReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_AccelerationX
      (
         this : access IAccelerometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_AccelerationY
      (
         this : access IAccelerometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_AccelerationZ
      (
         this : access IAccelerometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerReading : aliased WinRt.IID := (3120462539, 54097, 16559, (139, 182, 122, 169, 174, 100, 31, 183 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IAccelerometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IAccelerometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerReading2 : aliased WinRt.IID := (176573090, 5550, 19008, (190, 85, 219, 88, 215, 222, 115, 137 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IAccelerometerReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IAccelerometerReading
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerReadingChangedEventArgs : aliased WinRt.IID := (9815643, 46764, 18266, (159, 68, 139, 50, 211, 90, 63, 37 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerShakenEventArgs is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IAccelerometerShakenEventArgs_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerShakenEventArgs : aliased WinRt.IID := (2516517329, 18984, 20277, (152, 232, 129, 120, 170, 228, 8, 74 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IAccelerometerStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IAccelerometer
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerStatics : aliased WinRt.IID := (2783087476, 23175, 18989, (190, 204, 15, 144, 110, 160, 97, 221 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerStatics2 is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IAccelerometerStatics2_Interface;
         readingType : Windows.Devices.Sensors.AccelerometerReadingType;
         RetVal : access Windows.Devices.Sensors.IAccelerometer
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerStatics2 : aliased WinRt.IID := (3301213231, 55403, 18053, (178, 215, 51, 150, 247, 152, 213, 123 ));

   -----------------------------------------------------------------------------
   -- type IAccelerometerStatics3 is interface and WinRt.IInspectable;

      function FromIdAsync
      (
         this : access IAccelerometerStatics3_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IAccelerometerStatics3_Interface;
         readingType : Windows.Devices.Sensors.AccelerometerReadingType;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IAccelerometerStatics3 : aliased WinRt.IID := (2648840399, 17757, 19699, (130, 0, 112, 225, 65, 3, 64, 248 ));

   -----------------------------------------------------------------------------
   -- type IActivitySensor is interface and WinRt.IInspectable;

      function GetCurrentReadingAsync
      (
         this : access IActivitySensor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_SubscribedActivities
      (
         this : access IActivitySensor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_PowerInMilliwatts
      (
         this : access IActivitySensor_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_DeviceId
      (
         this : access IActivitySensor_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SupportedActivities
      (
         this : access IActivitySensor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IActivitySensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IActivitySensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IActivitySensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IActivitySensor : aliased WinRt.IID := (3447350028, 64351, 18667, (176, 155, 162, 112, 141, 28, 97, 239 ));

   -----------------------------------------------------------------------------
   -- type IActivitySensorReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IActivitySensorReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_Activity
      (
         this : access IActivitySensorReading_Interface;
         RetVal : access Windows.Devices.Sensors.ActivityType
      )
      return WinRt.Hresult is abstract;

      function get_Confidence
      (
         this : access IActivitySensorReading_Interface;
         RetVal : access Windows.Devices.Sensors.ActivitySensorReadingConfidence
      )
      return WinRt.Hresult is abstract;

      IID_IActivitySensorReading : aliased WinRt.IID := (2232572566, 5234, 16546, (178, 174, 225, 239, 41, 34, 108, 120 ));

   -----------------------------------------------------------------------------
   -- type IActivitySensorReadingChangeReport is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IActivitySensorReadingChangeReport_Interface;
         RetVal : access Windows.Devices.Sensors.IActivitySensorReading
      )
      return WinRt.Hresult is abstract;

      IID_IActivitySensorReadingChangeReport : aliased WinRt.IID := (1329342741, 55611, 18365, (150, 10, 242, 15, 178, 243, 34, 185 ));

   -----------------------------------------------------------------------------
   -- type IActivitySensorReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IActivitySensorReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IActivitySensorReading
      )
      return WinRt.Hresult is abstract;

      IID_IActivitySensorReadingChangedEventArgs : aliased WinRt.IID := (3728238359, 44726, 20167, (148, 106, 217, 204, 25, 185, 81, 236 ));

   -----------------------------------------------------------------------------
   -- type IActivitySensorStatics is interface and WinRt.IInspectable;

      function GetDefaultAsync
      (
         this : access IActivitySensorStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IActivitySensorStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IActivitySensorStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetSystemHistoryAsync
      (
         this : access IActivitySensorStatics_Interface;
         fromTime : Windows.Foundation.DateTime;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetSystemHistoryAsync
      (
         this : access IActivitySensorStatics_Interface;
         fromTime : Windows.Foundation.DateTime;
         duration : Windows.Foundation.TimeSpan;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IActivitySensorStatics : aliased WinRt.IID := (2803764893, 61067, 17873, (178, 91, 8, 204, 13, 249, 42, 182 ));

   -----------------------------------------------------------------------------
   -- type IActivitySensorTriggerDetails is interface and WinRt.IInspectable;

      function ReadReports
      (
         this : access IActivitySensorTriggerDetails_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IActivitySensorTriggerDetails : aliased WinRt.IID := (748578322, 47562, 18039, (178, 99, 36, 50, 151, 247, 157, 58 ));

   -----------------------------------------------------------------------------
   -- type IAltimeter is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IAltimeter_Interface;
         RetVal : access Windows.Devices.Sensors.IAltimeterReading
      )
      return WinRt.Hresult is abstract;

      function get_DeviceId
      (
         this : access IAltimeter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IAltimeter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IAltimeter_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IAltimeter_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IAltimeter_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IAltimeter_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IAltimeter : aliased WinRt.IID := (1928353789, 36612, 18929, (180, 167, 244, 227, 99, 183, 1, 162 ));

   -----------------------------------------------------------------------------
   -- type IAltimeter2 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IAltimeter2_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IAltimeter2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IAltimeter2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IAltimeter2 : aliased WinRt.IID := (3376880633, 10973, 18677, (159, 8, 61, 12, 118, 96, 217, 56 ));

   -----------------------------------------------------------------------------
   -- type IAltimeterReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IAltimeterReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_AltitudeChangeInMeters
      (
         this : access IAltimeterReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IAltimeterReading : aliased WinRt.IID := (4226346867, 32606, 18632, (170, 26, 241, 243, 190, 252, 17, 68 ));

   -----------------------------------------------------------------------------
   -- type IAltimeterReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IAltimeterReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IAltimeterReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IAltimeterReading2 : aliased WinRt.IID := (1413094361, 27915, 17074, (189, 105, 188, 143, 174, 15, 120, 44 ));

   -----------------------------------------------------------------------------
   -- type IAltimeterReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IAltimeterReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IAltimeterReading
      )
      return WinRt.Hresult is abstract;

      IID_IAltimeterReadingChangedEventArgs : aliased WinRt.IID := (1885982839, 17517, 18423, (153, 140, 235, 194, 59, 69, 228, 162 ));

   -----------------------------------------------------------------------------
   -- type IAltimeterStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IAltimeterStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IAltimeter
      )
      return WinRt.Hresult is abstract;

      IID_IAltimeterStatics : aliased WinRt.IID := (2662651843, 58796, 18382, (142, 239, 211, 113, 129, 104, 192, 31 ));

   -----------------------------------------------------------------------------
   -- type IBarometer is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IBarometer_Interface;
         RetVal : access Windows.Devices.Sensors.IBarometerReading
      )
      return WinRt.Hresult is abstract;

      function get_DeviceId
      (
         this : access IBarometer_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IBarometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IBarometer_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IBarometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IBarometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IBarometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IBarometer : aliased WinRt.IID := (2470737320, 30911, 17711, (176, 23, 240, 32, 156, 230, 218, 180 ));

   -----------------------------------------------------------------------------
   -- type IBarometer2 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IBarometer2_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IBarometer2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IBarometer2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IBarometer2 : aliased WinRt.IID := (851231768, 16107, 19716, (149, 116, 118, 51, 168, 120, 31, 159 ));

   -----------------------------------------------------------------------------
   -- type IBarometer3 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access IBarometer3_Interface;
         RetVal : access Windows.Devices.Sensors.IBarometerDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IBarometer3 : aliased WinRt.IID := (238416106, 693, 23044, (176, 61, 130, 32, 132, 134, 58, 84 ));

   -----------------------------------------------------------------------------
   -- type IBarometerDataThreshold is interface and WinRt.IInspectable;

      function get_Hectopascals
      (
         this : access IBarometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Hectopascals
      (
         this : access IBarometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IBarometerDataThreshold : aliased WinRt.IID := (124491052, 52066, 23184, (160, 209, 248, 94, 74, 147, 99, 148 ));

   -----------------------------------------------------------------------------
   -- type IBarometerReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IBarometerReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_StationPressureInHectopascals
      (
         this : access IBarometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IBarometerReading : aliased WinRt.IID := (4122596070, 7670, 18970, (167, 173, 50, 29, 79, 93, 178, 71 ));

   -----------------------------------------------------------------------------
   -- type IBarometerReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IBarometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IBarometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IBarometerReading2 : aliased WinRt.IID := (2242004203, 37061, 18549, (137, 28, 56, 101, 180, 195, 87, 231 ));

   -----------------------------------------------------------------------------
   -- type IBarometerReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IBarometerReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IBarometerReading
      )
      return WinRt.Hresult is abstract;

      IID_IBarometerReadingChangedEventArgs : aliased WinRt.IID := (1032098911, 891, 16463, (155, 187, 98, 50, 214, 149, 67, 195 ));

   -----------------------------------------------------------------------------
   -- type IBarometerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IBarometerStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IBarometer
      )
      return WinRt.Hresult is abstract;

      IID_IBarometerStatics : aliased WinRt.IID := (678110986, 739, 20358, (132, 252, 253, 216, 146, 181, 148, 15 ));

   -----------------------------------------------------------------------------
   -- type IBarometerStatics2 is interface and WinRt.IInspectable;

      function FromIdAsync
      (
         this : access IBarometerStatics2_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IBarometerStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IBarometerStatics2 : aliased WinRt.IID := (2412163559, 38399, 17580, (135, 142, 214, 92, 131, 8, 195, 76 ));

   -----------------------------------------------------------------------------
   -- type ICompass is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access ICompass_Interface;
         RetVal : access Windows.Devices.Sensors.ICompassReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access ICompass_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access ICompass_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access ICompass_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access ICompass_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access ICompass_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICompass : aliased WinRt.IID := (691010196, 6981, 16444, (186, 6, 177, 6, 219, 166, 154, 100 ));

   -----------------------------------------------------------------------------
   -- type ICompass2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access ICompass2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access ICompass2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      IID_ICompass2 : aliased WinRt.IID := (921857289, 51159, 17231, (180, 97, 151, 157, 223, 194, 50, 47 ));

   -----------------------------------------------------------------------------
   -- type ICompass3 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access ICompass3_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access ICompass3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access ICompass3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_ICompass3 : aliased WinRt.IID := (2753855515, 50666, 19781, (160, 236, 75, 121, 31, 4, 26, 137 ));

   -----------------------------------------------------------------------------
   -- type ICompass4 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access ICompass4_Interface;
         RetVal : access Windows.Devices.Sensors.ICompassDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_ICompass4 : aliased WinRt.IID := (689864465, 60466, 24012, (191, 203, 11, 179, 158, 186, 87, 116 ));

   -----------------------------------------------------------------------------
   -- type ICompassDataThreshold is interface and WinRt.IInspectable;

      function get_Degrees
      (
         this : access ICompassDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Degrees
      (
         this : access ICompassDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_ICompassDataThreshold : aliased WinRt.IID := (3512423091, 54173, 24264, (178, 228, 241, 147, 230, 171, 52, 237 ));

   -----------------------------------------------------------------------------
   -- type ICompassDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access ICompassDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICompassDeviceId : aliased WinRt.IID := (3514944041, 45189, 19229, (135, 10, 79, 245, 123, 167, 79, 212 ));

   -----------------------------------------------------------------------------
   -- type ICompassReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access ICompassReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_HeadingMagneticNorth
      (
         this : access ICompassReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_HeadingTrueNorth
      (
         this : access ICompassReading_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICompassReading : aliased WinRt.IID := (2190545192, 20797, 19913, (183, 129, 94, 237, 251, 240, 45, 12 ));

   -----------------------------------------------------------------------------
   -- type ICompassReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access ICompassReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access ICompassReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICompassReading2 : aliased WinRt.IID := (2973394462, 20923, 18962, (190, 221, 173, 71, 255, 135, 210, 232 ));

   -----------------------------------------------------------------------------
   -- type ICompassReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access ICompassReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.ICompassReading
      )
      return WinRt.Hresult is abstract;

      IID_ICompassReadingChangedEventArgs : aliased WinRt.IID := (2400537008, 59580, 19582, (176, 9, 78, 65, 223, 19, 112, 114 ));

   -----------------------------------------------------------------------------
   -- type ICompassReadingHeadingAccuracy is interface and WinRt.IInspectable;

      function get_HeadingAccuracy
      (
         this : access ICompassReadingHeadingAccuracy_Interface;
         RetVal : access Windows.Devices.Sensors.MagnetometerAccuracy
      )
      return WinRt.Hresult is abstract;

      IID_ICompassReadingHeadingAccuracy : aliased WinRt.IID := (3881907534, 35089, 16631, (158, 22, 110, 204, 125, 174, 197, 222 ));

   -----------------------------------------------------------------------------
   -- type ICompassStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access ICompassStatics_Interface;
         RetVal : access Windows.Devices.Sensors.ICompass
      )
      return WinRt.Hresult is abstract;

      IID_ICompassStatics : aliased WinRt.IID := (2596050911, 22252, 19493, (181, 77, 64, 166, 139, 181, 178, 105 ));

   -----------------------------------------------------------------------------
   -- type ICompassStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access ICompassStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access ICompassStatics2_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICompassStatics2 : aliased WinRt.IID := (181276333, 15274, 18832, (156, 228, 190, 9, 19, 117, 78, 210 ));

   -----------------------------------------------------------------------------
   -- type IGyrometer is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IGyrometer_Interface;
         RetVal : access Windows.Devices.Sensors.IGyrometerReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IGyrometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IGyrometer_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IGyrometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IGyrometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IGyrometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometer : aliased WinRt.IID := (4256803268, 33969, 19618, (151, 99, 155, 88, 149, 6, 199, 12 ));

   -----------------------------------------------------------------------------
   -- type IGyrometer2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access IGyrometer2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access IGyrometer2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometer2 : aliased WinRt.IID := (1675568195, 36072, 16835, (172, 68, 134, 152, 129, 11, 85, 127 ));

   -----------------------------------------------------------------------------
   -- type IGyrometer3 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IGyrometer3_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IGyrometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IGyrometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometer3 : aliased WinRt.IID := (1567590613, 36796, 17540, (145, 75, 82, 138, 223, 217, 71, 177 ));

   -----------------------------------------------------------------------------
   -- type IGyrometer4 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access IGyrometer4_Interface;
         RetVal : access Windows.Devices.Sensors.IGyrometerDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometer4 : aliased WinRt.IID := (103327244, 19531, 20630, (148, 230, 195, 86, 223, 104, 190, 247 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerDataThreshold is interface and WinRt.IInspectable;

      function get_XAxisInDegreesPerSecond
      (
         this : access IGyrometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_XAxisInDegreesPerSecond
      (
         this : access IGyrometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_YAxisInDegreesPerSecond
      (
         this : access IGyrometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_YAxisInDegreesPerSecond
      (
         this : access IGyrometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_ZAxisInDegreesPerSecond
      (
         this : access IGyrometerDataThreshold_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_ZAxisInDegreesPerSecond
      (
         this : access IGyrometerDataThreshold_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerDataThreshold : aliased WinRt.IID := (2252911390, 28242, 21081, (187, 173, 36, 42, 105, 220, 56, 200 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IGyrometerDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerDeviceId : aliased WinRt.IID := (518383992, 35234, 17013, (158, 149, 113, 38, 244, 112, 135, 96 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IGyrometerReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_AngularVelocityX
      (
         this : access IGyrometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_AngularVelocityY
      (
         this : access IGyrometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_AngularVelocityZ
      (
         this : access IGyrometerReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerReading : aliased WinRt.IID := (3017203292, 7908, 17775, (157, 231, 226, 73, 59, 92, 142, 3 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IGyrometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IGyrometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerReading2 : aliased WinRt.IID := (380625212, 11145, 17595, (130, 43, 209, 225, 85, 111, 240, 155 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IGyrometerReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IGyrometerReading
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerReadingChangedEventArgs : aliased WinRt.IID := (266279061, 28574, 17102, (141, 88, 56, 140, 10, 184, 53, 109 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IGyrometerStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IGyrometer
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerStatics : aliased WinRt.IID := (2209802185, 58525, 19257, (134, 230, 205, 85, 75, 228, 197, 193 ));

   -----------------------------------------------------------------------------
   -- type IGyrometerStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IGyrometerStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IGyrometerStatics2_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IGyrometerStatics2 : aliased WinRt.IID := (4018403233, 55040, 16900, (150, 19, 121, 198, 177, 97, 223, 78 ));

   -----------------------------------------------------------------------------
   -- type IHingeAngleReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IHingeAngleReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_AngleInDegrees
      (
         this : access IHingeAngleReading_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IHingeAngleReading_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IHingeAngleReading : aliased WinRt.IID := (2748138937, 7153, 20325, (167, 4, 226, 218, 4, 241, 130, 192 ));

   -----------------------------------------------------------------------------
   -- type IHingeAngleSensor is interface and WinRt.IInspectable;

      function GetCurrentReadingAsync
      (
         this : access IHingeAngleSensor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_DeviceId
      (
         this : access IHingeAngleSensor_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MinReportThresholdInDegrees
      (
         this : access IHingeAngleSensor_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_ReportThresholdInDegrees
      (
         this : access IHingeAngleSensor_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_ReportThresholdInDegrees
      (
         this : access IHingeAngleSensor_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IHingeAngleSensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IHingeAngleSensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IHingeAngleSensor : aliased WinRt.IID := (3922968066, 49119, 17279, (140, 41, 136, 199, 115, 147, 211, 9 ));

   -----------------------------------------------------------------------------
   -- type IHingeAngleSensorReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IHingeAngleSensorReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IHingeAngleReading
      )
      return WinRt.Hresult is abstract;

      IID_IHingeAngleSensorReadingChangedEventArgs : aliased WinRt.IID := (618222987, 64208, 17080, (168, 84, 120, 146, 48, 73, 161, 186 ));

   -----------------------------------------------------------------------------
   -- type IHingeAngleSensorStatics is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IHingeAngleSensorStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetDefaultAsync
      (
         this : access IHingeAngleSensorStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetRelatedToAdjacentPanelsAsync
      (
         this : access IHingeAngleSensorStatics_Interface;
         firstPanelId : WinRt.HString;
         secondPanelId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IHingeAngleSensorStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IHingeAngleSensorStatics : aliased WinRt.IID := (3082172688, 64433, 16675, (137, 206, 78, 163, 78, 176, 223, 202 ));

   -----------------------------------------------------------------------------
   -- type IInclinometer is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IInclinometer_Interface;
         RetVal : access Windows.Devices.Sensors.IInclinometerReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IInclinometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IInclinometer_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IInclinometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IInclinometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IInclinometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometer : aliased WinRt.IID := (642304623, 8838, 16495, (145, 97, 240, 196, 189, 128, 110, 191 ));

   -----------------------------------------------------------------------------
   -- type IInclinometer2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access IInclinometer2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access IInclinometer2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingType
      (
         this : access IInclinometer2_Interface;
         RetVal : access Windows.Devices.Sensors.SensorReadingType
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometer2 : aliased WinRt.IID := (43987859, 10418, 17912, (187, 22, 97, 232, 106, 127, 174, 110 ));

   -----------------------------------------------------------------------------
   -- type IInclinometer3 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IInclinometer3_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IInclinometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IInclinometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometer3 : aliased WinRt.IID := (973688836, 55141, 17284, (163, 215, 2, 131, 243, 171, 230, 174 ));

   -----------------------------------------------------------------------------
   -- type IInclinometer4 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access IInclinometer4_Interface;
         RetVal : access Windows.Devices.Sensors.IInclinometerDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometer4 : aliased WinRt.IID := (1132799512, 36810, 21646, (187, 245, 92, 80, 65, 43, 106, 164 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerDataThreshold is interface and WinRt.IInspectable;

      function get_PitchInDegrees
      (
         this : access IInclinometerDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_PitchInDegrees
      (
         this : access IInclinometerDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RollInDegrees
      (
         this : access IInclinometerDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RollInDegrees
      (
         this : access IInclinometerDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_YawInDegrees
      (
         this : access IInclinometerDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_YawInDegrees
      (
         this : access IInclinometerDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerDataThreshold : aliased WinRt.IID := (4161423235, 31742, 21598, (187, 96, 160, 235, 196, 123, 210, 251 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IInclinometerDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerDeviceId : aliased WinRt.IID := (32053634, 16895, 17414, (174, 131, 98, 33, 15, 241, 111, 227 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IInclinometerReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_PitchDegrees
      (
         this : access IInclinometerReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RollDegrees
      (
         this : access IInclinometerReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_YawDegrees
      (
         this : access IInclinometerReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerReading : aliased WinRt.IID := (2672095317, 46838, 18815, (177, 39, 26, 119, 94, 80, 20, 88 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IInclinometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IInclinometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerReading2 : aliased WinRt.IID := (1326860161, 59659, 18008, (137, 21, 1, 3, 224, 138, 128, 90 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IInclinometerReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IInclinometerReading
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerReadingChangedEventArgs : aliased WinRt.IID := (1256791489, 59371, 18744, (133, 17, 174, 13, 107, 68, 4, 56 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerReadingYawAccuracy is interface and WinRt.IInspectable;

      function get_YawAccuracy
      (
         this : access IInclinometerReadingYawAccuracy_Interface;
         RetVal : access Windows.Devices.Sensors.MagnetometerAccuracy
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerReadingYawAccuracy : aliased WinRt.IID := (3025397888, 8163, 18822, (162, 87, 230, 236, 226, 114, 57, 73 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IInclinometerStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IInclinometer
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerStatics : aliased WinRt.IID := (4063151441, 39984, 17722, (139, 73, 60, 62, 235, 51, 203, 97 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerStatics2 is interface and WinRt.IInspectable;

      function GetDefaultForRelativeReadings
      (
         this : access IInclinometerStatics2_Interface;
         RetVal : access Windows.Devices.Sensors.IInclinometer
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerStatics2 : aliased WinRt.IID := (71276405, 27166, 18844, (134, 224, 99, 140, 26, 134, 75, 0 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerStatics3 is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IInclinometerStatics3_Interface;
         sensorReadingtype : Windows.Devices.Sensors.SensorReadingType;
         RetVal : access Windows.Devices.Sensors.IInclinometer
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerStatics3 : aliased WinRt.IID := (3181003392, 47386, 18473, (147, 146, 171, 192, 182, 189, 242, 180 ));

   -----------------------------------------------------------------------------
   -- type IInclinometerStatics4 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IInclinometerStatics4_Interface;
         readingType : Windows.Devices.Sensors.SensorReadingType;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IInclinometerStatics4_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IInclinometerStatics4 : aliased WinRt.IID := (3904542457, 28293, 19075, (174, 208, 215, 205, 204, 152, 86, 200 ));

   -----------------------------------------------------------------------------
   -- type ILightSensor is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access ILightSensor_Interface;
         RetVal : access Windows.Devices.Sensors.ILightSensorReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access ILightSensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access ILightSensor_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access ILightSensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access ILightSensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access ILightSensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensor : aliased WinRt.IID := (4165732120, 3156, 18350, (146, 46, 120, 159, 87, 251, 3, 160 ));

   -----------------------------------------------------------------------------
   -- type ILightSensor2 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access ILightSensor2_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access ILightSensor2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access ILightSensor2_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensor2 : aliased WinRt.IID := (1214981352, 43340, 16528, (143, 72, 9, 247, 130, 169, 247, 213 ));

   -----------------------------------------------------------------------------
   -- type ILightSensor3 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access ILightSensor3_Interface;
         RetVal : access Windows.Devices.Sensors.ILightSensorDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensor3 : aliased WinRt.IID := (1215746303, 40780, 24434, (173, 189, 163, 71, 27, 6, 60, 0 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorDataThreshold is interface and WinRt.IInspectable;

      function get_LuxPercentage
      (
         this : access ILightSensorDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_LuxPercentage
      (
         this : access ILightSensorDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_AbsoluteLux
      (
         this : access ILightSensorDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_AbsoluteLux
      (
         this : access ILightSensorDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorDataThreshold : aliased WinRt.IID := (2975903697, 34703, 21650, (159, 44, 51, 220, 58, 229, 132, 163 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access ILightSensorDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorDeviceId : aliased WinRt.IID := (2146322936, 2811, 20305, (135, 240, 108, 38, 55, 92, 233, 79 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access ILightSensorReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_IlluminanceInLux
      (
         this : access ILightSensorReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorReading : aliased WinRt.IID := (4292829952, 8828, 19755, (179, 2, 252, 1, 66, 72, 92, 104 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access ILightSensorReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access ILightSensorReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorReading2 : aliased WinRt.IID := (3075547525, 17571, 17609, (129, 144, 158, 246, 222, 10, 138, 116 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access ILightSensorReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.ILightSensorReading
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorReadingChangedEventArgs : aliased WinRt.IID := (2745365711, 9611, 16908, (184, 171, 142, 221, 96, 30, 207, 80 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access ILightSensorStatics_Interface;
         RetVal : access Windows.Devices.Sensors.ILightSensor
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorStatics : aliased WinRt.IID := (1172016260, 50088, 18206, (154, 83, 100, 87, 250, 216, 124, 14 ));

   -----------------------------------------------------------------------------
   -- type ILightSensorStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access ILightSensorStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access ILightSensorStatics2_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ILightSensorStatics2 : aliased WinRt.IID := (247506512, 56774, 16555, (172, 227, 236, 51, 89, 212, 44, 81 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometer is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IMagnetometer_Interface;
         RetVal : access Windows.Devices.Sensors.IMagnetometerReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IMagnetometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IMagnetometer_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IMagnetometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IMagnetometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IMagnetometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometer : aliased WinRt.IID := (1213162094, 54217, 16657, (179, 246, 44, 241, 250, 164, 24, 213 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometer2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access IMagnetometer2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access IMagnetometer2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometer2 : aliased WinRt.IID := (3026545797, 9974, 17483, (169, 226, 162, 63, 150, 108, 211, 104 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometer3 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IMagnetometer3_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IMagnetometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IMagnetometer3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometer3 : aliased WinRt.IID := (3197361020, 42533, 18671, (172, 247, 250, 193, 4, 131, 38, 113 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometer4 is interface and WinRt.IInspectable;

      function get_ReportThreshold
      (
         this : access IMagnetometer4_Interface;
         RetVal : access Windows.Devices.Sensors.IMagnetometerDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometer4 : aliased WinRt.IID := (3752950017, 15887, 20623, (178, 75, 242, 187, 117, 1, 95, 64 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerDataThreshold is interface and WinRt.IInspectable;

      function get_XAxisMicroteslas
      (
         this : access IMagnetometerDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_XAxisMicroteslas
      (
         this : access IMagnetometerDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_YAxisMicroteslas
      (
         this : access IMagnetometerDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_YAxisMicroteslas
      (
         this : access IMagnetometerDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_ZAxisMicroteslas
      (
         this : access IMagnetometerDataThreshold_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_ZAxisMicroteslas
      (
         this : access IMagnetometerDataThreshold_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerDataThreshold : aliased WinRt.IID := (3514288897, 36963, 24485, (181, 150, 180, 69, 233, 220, 52, 1 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IMagnetometerDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerDeviceId : aliased WinRt.IID := (1488230594, 32331, 16460, (159, 197, 93, 232, 180, 14, 186, 227 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IMagnetometerReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_MagneticFieldX
      (
         this : access IMagnetometerReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MagneticFieldY
      (
         this : access IMagnetometerReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MagneticFieldZ
      (
         this : access IMagnetometerReading_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_DirectionalAccuracy
      (
         this : access IMagnetometerReading_Interface;
         RetVal : access Windows.Devices.Sensors.MagnetometerAccuracy
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerReading : aliased WinRt.IID := (204260365, 60413, 20060, (187, 17, 175, 194, 155, 60, 174, 97 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IMagnetometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IMagnetometerReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerReading2 : aliased WinRt.IID := (3569966177, 25049, 16459, (163, 40, 6, 111, 23, 122, 20, 9 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IMagnetometerReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IMagnetometerReading
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerReadingChangedEventArgs : aliased WinRt.IID := (401270898, 11961, 20199, (138, 208, 49, 39, 83, 125, 148, 155 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IMagnetometerStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IMagnetometer
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerStatics : aliased WinRt.IID := (2235327692, 1688, 19930, (166, 223, 156, 185, 204, 74, 180, 10 ));

   -----------------------------------------------------------------------------
   -- type IMagnetometerStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IMagnetometerStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IMagnetometerStatics2_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMagnetometerStatics2 : aliased WinRt.IID := (738728432, 65478, 20361, (160, 111, 24, 250, 16, 121, 41, 51 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensor is interface and WinRt.IInspectable;

      function GetCurrentReading
      (
         this : access IOrientationSensor_Interface;
         RetVal : access Windows.Devices.Sensors.IOrientationSensorReading
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IOrientationSensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IOrientationSensor_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IOrientationSensor_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IOrientationSensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IOrientationSensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensor : aliased WinRt.IID := (1580549685, 53099, 19555, (171, 216, 16, 37, 43, 11, 246, 236 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensor2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access IOrientationSensor2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access IOrientationSensor2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingType
      (
         this : access IOrientationSensor2_Interface;
         RetVal : access Windows.Devices.Sensors.SensorReadingType
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensor2 : aliased WinRt.IID := (227691769, 12063, 18889, (128, 66, 74, 24, 19, 214, 119, 96 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensor3 is interface and WinRt.IInspectable;

      function put_ReportLatency
      (
         this : access IOrientationSensor3_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportLatency
      (
         this : access IOrientationSensor3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_MaxBatchSize
      (
         this : access IOrientationSensor3_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensor3 : aliased WinRt.IID := (751720333, 25707, 18629, (183, 238, 68, 253, 196, 198, 170, 253 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IOrientationSensorDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorDeviceId : aliased WinRt.IID := (1516877384, 19497, 18924, (178, 143, 234, 29, 17, 123, 102, 240 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IOrientationSensorReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_RotationMatrix
      (
         this : access IOrientationSensorReading_Interface;
         RetVal : access Windows.Devices.Sensors.ISensorRotationMatrix
      )
      return WinRt.Hresult is abstract;

      function get_Quaternion
      (
         this : access IOrientationSensorReading_Interface;
         RetVal : access Windows.Devices.Sensors.ISensorQuaternion
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorReading : aliased WinRt.IID := (1196870035, 26005, 18583, (188, 198, 213, 55, 238, 117, 117, 100 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorReading2 is interface and WinRt.IInspectable;

      function get_PerformanceCount
      (
         this : access IOrientationSensorReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access IOrientationSensorReading2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorReading2 : aliased WinRt.IID := (5729887, 18936, 19461, (158, 7, 36, 250, 199, 148, 8, 195 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IOrientationSensorReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IOrientationSensorReading
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorReadingChangedEventArgs : aliased WinRt.IID := (19665286, 50106, 18108, (174, 101, 122, 152, 153, 108, 191, 184 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorReadingYawAccuracy is interface and WinRt.IInspectable;

      function get_YawAccuracy
      (
         this : access IOrientationSensorReadingYawAccuracy_Interface;
         RetVal : access Windows.Devices.Sensors.MagnetometerAccuracy
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorReadingYawAccuracy : aliased WinRt.IID := (3517749284, 16218, 18850, (188, 123, 17, 128, 188, 56, 205, 43 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IOrientationSensorStatics_Interface;
         RetVal : access Windows.Devices.Sensors.IOrientationSensor
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorStatics : aliased WinRt.IID := (284133138, 64332, 17034, (137, 139, 39, 101, 228, 9, 230, 105 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorStatics2 is interface and WinRt.IInspectable;

      function GetDefaultForRelativeReadings
      (
         this : access IOrientationSensorStatics2_Interface;
         RetVal : access Windows.Devices.Sensors.IOrientationSensor
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorStatics2 : aliased WinRt.IID := (1507462411, 54282, 19569, (146, 118, 138, 39, 42, 10, 102, 25 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorStatics3 is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access IOrientationSensorStatics3_Interface;
         sensorReadingtype : Windows.Devices.Sensors.SensorReadingType;
         RetVal : access Windows.Devices.Sensors.IOrientationSensor
      )
      return WinRt.Hresult is abstract;

      function GetDefault
      (
         this : access IOrientationSensorStatics3_Interface;
         sensorReadingType : Windows.Devices.Sensors.SensorReadingType;
         optimizationGoal : Windows.Devices.Sensors.SensorOptimizationGoal;
         RetVal : access Windows.Devices.Sensors.IOrientationSensor
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorStatics3 : aliased WinRt.IID := (3626821920, 10103, 16639, (159, 89, 214, 84, 176, 133, 241, 47 ));

   -----------------------------------------------------------------------------
   -- type IOrientationSensorStatics4 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IOrientationSensorStatics4_Interface;
         readingType : Windows.Devices.Sensors.SensorReadingType;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IOrientationSensorStatics4_Interface;
         readingType : Windows.Devices.Sensors.SensorReadingType;
         optimizationGoal : Windows.Devices.Sensors.SensorOptimizationGoal;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access IOrientationSensorStatics4_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IOrientationSensorStatics4 : aliased WinRt.IID := (2793401173, 11397, 19240, (160, 254, 88, 196, 178, 4, 149, 245 ));

   -----------------------------------------------------------------------------
   -- type IPedometer is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IPedometer_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PowerInMilliwatts
      (
         this : access IPedometer_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_MinimumReportInterval
      (
         this : access IPedometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_ReportInterval
      (
         this : access IPedometer_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ReportInterval
      (
         this : access IPedometer_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IPedometer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IPedometer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IPedometer : aliased WinRt.IID := (2585657661, 15768, 17912, (137, 32, 142, 78, 202, 202, 95, 151 ));

   -----------------------------------------------------------------------------
   -- type IPedometer2 is interface and WinRt.IInspectable;

      function GetCurrentReadings
      (
         this : access IPedometer2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPedometer2 : aliased WinRt.IID := (3852732127, 11137, 19165, (178, 255, 119, 171, 108, 152, 186, 25 ));

   -----------------------------------------------------------------------------
   -- type IPedometerDataThresholdFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IPedometerDataThresholdFactory_Interface;
         sensor : Windows.Devices.Sensors.IPedometer;
         stepGoal : WinRt.Int32;
         RetVal : access Windows.Devices.Sensors.ISensorDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IPedometerDataThresholdFactory : aliased WinRt.IID := (3417149264, 31316, 18027, (144, 16, 119, 161, 98, 252, 165, 215 ));

   -----------------------------------------------------------------------------
   -- type IPedometerReading is interface and WinRt.IInspectable;

      function get_StepKind
      (
         this : access IPedometerReading_Interface;
         RetVal : access Windows.Devices.Sensors.PedometerStepKind
      )
      return WinRt.Hresult is abstract;

      function get_CumulativeSteps
      (
         this : access IPedometerReading_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Timestamp
      (
         this : access IPedometerReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_CumulativeStepsDuration
      (
         this : access IPedometerReading_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_IPedometerReading : aliased WinRt.IID := (575003892, 43233, 17199, (137, 106, 190, 13, 217, 176, 45, 36 ));

   -----------------------------------------------------------------------------
   -- type IPedometerReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IPedometerReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IPedometerReading
      )
      return WinRt.Hresult is abstract;

      IID_IPedometerReadingChangedEventArgs : aliased WinRt.IID := (4166378622, 43964, 17494, (134, 168, 37, 207, 43, 51, 55, 66 ));

   -----------------------------------------------------------------------------
   -- type IPedometerStatics is interface and WinRt.IInspectable;

      function FromIdAsync
      (
         this : access IPedometerStatics_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDefaultAsync
      (
         this : access IPedometerStatics_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetDeviceSelector
      (
         this : access IPedometerStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetSystemHistoryAsync
      (
         this : access IPedometerStatics_Interface;
         fromTime : Windows.Foundation.DateTime;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetSystemHistoryAsync
      (
         this : access IPedometerStatics_Interface;
         fromTime : Windows.Foundation.DateTime;
         duration : Windows.Foundation.TimeSpan;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPedometerStatics : aliased WinRt.IID := (2191002159, 16515, 19963, (180, 17, 147, 142, 160, 244, 185, 70 ));

   -----------------------------------------------------------------------------
   -- type IPedometerStatics2 is interface and WinRt.IInspectable;

      function GetReadingsFromTriggerDetails
      (
         this : access IPedometerStatics2_Interface;
         triggerDetails : Windows.Devices.Sensors.ISensorDataThresholdTriggerDetails;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IPedometerStatics2 : aliased WinRt.IID := (2046150331, 52750, 16691, (180, 126, 134, 39, 234, 114, 246, 119 ));

   -----------------------------------------------------------------------------
   -- type IProximitySensor is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access IProximitySensor_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MaxDistanceInMillimeters
      (
         this : access IProximitySensor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_MinDistanceInMillimeters
      (
         this : access IProximitySensor_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetCurrentReading
      (
         this : access IProximitySensor_Interface;
         RetVal : access Windows.Devices.Sensors.IProximitySensorReading
      )
      return WinRt.Hresult is abstract;

      function add_ReadingChanged
      (
         this : access IProximitySensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ReadingChanged
      (
         this : access IProximitySensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function CreateDisplayOnOffController
      (
         this : access IProximitySensor_Interface;
         RetVal : access Windows.Foundation.IClosable
      )
      return WinRt.Hresult is abstract;

      IID_IProximitySensor : aliased WinRt.IID := (1421899448, 60667, 18756, (185, 40, 116, 252, 80, 77, 71, 238 ));

   -----------------------------------------------------------------------------
   -- type IProximitySensorDataThresholdFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access IProximitySensorDataThresholdFactory_Interface;
         sensor : Windows.Devices.Sensors.IProximitySensor;
         RetVal : access Windows.Devices.Sensors.ISensorDataThreshold
      )
      return WinRt.Hresult is abstract;

      IID_IProximitySensorDataThresholdFactory : aliased WinRt.IID := (2421866785, 27943, 19155, (157, 181, 100, 103, 242, 165, 173, 157 ));

   -----------------------------------------------------------------------------
   -- type IProximitySensorReading is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IProximitySensorReading_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_IsDetected
      (
         this : access IProximitySensorReading_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_DistanceInMillimeters
      (
         this : access IProximitySensorReading_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IProximitySensorReading : aliased WinRt.IID := (1898089817, 4909, 19807, (143, 249, 47, 13, 184, 117, 28, 237 ));

   -----------------------------------------------------------------------------
   -- type IProximitySensorReadingChangedEventArgs is interface and WinRt.IInspectable;

      function get_Reading
      (
         this : access IProximitySensorReadingChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.IProximitySensorReading
      )
      return WinRt.Hresult is abstract;

      IID_IProximitySensorReadingChangedEventArgs : aliased WinRt.IID := (3485660006, 50152, 16637, (140, 195, 103, 226, 137, 0, 73, 56 ));

   -----------------------------------------------------------------------------
   -- type IProximitySensorStatics is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access IProximitySensorStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromId
      (
         this : access IProximitySensorStatics_Interface;
         sensorId : WinRt.HString;
         RetVal : access Windows.Devices.Sensors.IProximitySensor
      )
      return WinRt.Hresult is abstract;

      IID_IProximitySensorStatics : aliased WinRt.IID := (689464905, 25193, 20055, (165, 173, 130, 190, 128, 129, 51, 146 ));

   -----------------------------------------------------------------------------
   -- type IProximitySensorStatics2 is interface and WinRt.IInspectable;

      function GetReadingsFromTriggerDetails
      (
         this : access IProximitySensorStatics2_Interface;
         triggerDetails : Windows.Devices.Sensors.ISensorDataThresholdTriggerDetails;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IProximitySensorStatics2 : aliased WinRt.IID := (3421795246, 59850, 16943, (173, 103, 76, 61, 37, 223, 53, 12 ));

   -----------------------------------------------------------------------------
   -- type ISensorDataThreshold is interface and WinRt.IInspectable;

      IID_ISensorDataThreshold : aliased WinRt.IID := (1423633505, 65099, 19975, (178, 96, 58, 76, 223, 190, 57, 110 ));

   -----------------------------------------------------------------------------
   -- type ISensorDataThresholdTriggerDetails is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access ISensorDataThresholdTriggerDetails_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SensorType
      (
         this : access ISensorDataThresholdTriggerDetails_Interface;
         RetVal : access Windows.Devices.Sensors.SensorType
      )
      return WinRt.Hresult is abstract;

      IID_ISensorDataThresholdTriggerDetails : aliased WinRt.IID := (2433151415, 59533, 18609, (188, 144, 97, 156, 123, 52, 147, 145 ));

   -----------------------------------------------------------------------------
   -- type ISensorQuaternion is interface and WinRt.IInspectable;

      function get_W
      (
         this : access ISensorQuaternion_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_X
      (
         this : access ISensorQuaternion_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Y
      (
         this : access ISensorQuaternion_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Z
      (
         this : access ISensorQuaternion_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ISensorQuaternion : aliased WinRt.IID := (3385182247, 50972, 18151, (157, 163, 54, 161, 147, 178, 50, 188 ));

   -----------------------------------------------------------------------------
   -- type ISensorRotationMatrix is interface and WinRt.IInspectable;

      function get_M11
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M12
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M13
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M21
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M22
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M23
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M31
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M32
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_M33
      (
         this : access ISensorRotationMatrix_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ISensorRotationMatrix : aliased WinRt.IID := (171792999, 8948, 17298, (149, 56, 101, 208, 189, 6, 74, 166 ));

   -----------------------------------------------------------------------------
   -- type ISimpleOrientationSensor is interface and WinRt.IInspectable;

      function GetCurrentOrientation
      (
         this : access ISimpleOrientationSensor_Interface;
         RetVal : access Windows.Devices.Sensors.SimpleOrientation
      )
      return WinRt.Hresult is abstract;

      function add_OrientationChanged
      (
         this : access ISimpleOrientationSensor_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_OrientationChanged
      (
         this : access ISimpleOrientationSensor_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ISimpleOrientationSensor : aliased WinRt.IID := (1609906262, 8522, 19950, (163, 249, 97, 111, 26, 176, 111, 253 ));

   -----------------------------------------------------------------------------
   -- type ISimpleOrientationSensor2 is interface and WinRt.IInspectable;

      function put_ReadingTransform
      (
         this : access ISimpleOrientationSensor2_Interface;
         value : Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      function get_ReadingTransform
      (
         this : access ISimpleOrientationSensor2_Interface;
         RetVal : access Windows.Graphics.Display.DisplayOrientations
      )
      return WinRt.Hresult is abstract;

      IID_ISimpleOrientationSensor2 : aliased WinRt.IID := (2725750680, 34928, 17726, (139, 214, 184, 245, 216, 215, 148, 27 ));

   -----------------------------------------------------------------------------
   -- type ISimpleOrientationSensorDeviceId is interface and WinRt.IInspectable;

      function get_DeviceId
      (
         this : access ISimpleOrientationSensorDeviceId_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ISimpleOrientationSensorDeviceId : aliased WinRt.IID := (4223666891, 15222, 16886, (128, 145, 48, 239, 230, 70, 211, 207 ));

   -----------------------------------------------------------------------------
   -- type ISimpleOrientationSensorOrientationChangedEventArgs is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access ISimpleOrientationSensorOrientationChangedEventArgs_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_Orientation
      (
         this : access ISimpleOrientationSensorOrientationChangedEventArgs_Interface;
         RetVal : access Windows.Devices.Sensors.SimpleOrientation
      )
      return WinRt.Hresult is abstract;

      IID_ISimpleOrientationSensorOrientationChangedEventArgs : aliased WinRt.IID := (3168126560, 9172, 19276, (162, 46, 186, 129, 173, 224, 198, 1 ));

   -----------------------------------------------------------------------------
   -- type ISimpleOrientationSensorStatics is interface and WinRt.IInspectable;

      function GetDefault
      (
         this : access ISimpleOrientationSensorStatics_Interface;
         RetVal : access Windows.Devices.Sensors.ISimpleOrientationSensor
      )
      return WinRt.Hresult is abstract;

      IID_ISimpleOrientationSensorStatics : aliased WinRt.IID := (1928136303, 28842, 16582, (155, 27, 52, 51, 247, 69, 155, 78 ));

   -----------------------------------------------------------------------------
   -- type ISimpleOrientationSensorStatics2 is interface and WinRt.IInspectable;

      function GetDeviceSelector
      (
         this : access ISimpleOrientationSensorStatics2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function FromIdAsync
      (
         this : access ISimpleOrientationSensorStatics2_Interface;
         deviceId : WinRt.HString;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ISimpleOrientationSensorStatics2 : aliased WinRt.IID := (2224004223, 45368, 19985, (137, 16, 162, 162, 163, 181, 109, 131 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Accelerometer

   overriding procedure Initialize (this : in out Accelerometer);
   overriding procedure Finalize (this : in out Accelerometer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Accelerometer

   function GetDefault
   (
      readingType : Windows.Devices.Sensors.AccelerometerReadingType
   )
   return WinRt.Windows.Devices.Sensors.Accelerometer;

   function FromIdAsync
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Accelerometer;

   function GetDeviceSelector
   (
      readingType : Windows.Devices.Sensors.AccelerometerReadingType
   )
   return WinRt.WString;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Accelerometer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Accelerometer

   function GetCurrentReading
   (
      this : in out Accelerometer
   )
   return WinRt.Windows.Devices.Sensors.AccelerometerReading'Class;

   function get_MinimumReportInterval
   (
      this : in out Accelerometer
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Accelerometer;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Accelerometer
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Accelerometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Accelerometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_Shaken
   (
      this : in out Accelerometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Shaken
   (
      this : in out Accelerometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out Accelerometer
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out Accelerometer;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out Accelerometer
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   procedure put_ReportLatency
   (
      this : in out Accelerometer;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Accelerometer
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Accelerometer
   )
   return WinRt.UInt32;

   function get_ReadingType
   (
      this : in out Accelerometer
   )
   return WinRt.Windows.Devices.Sensors.AccelerometerReadingType;

   function get_ReportThreshold
   (
      this : in out Accelerometer
   )
   return WinRt.Windows.Devices.Sensors.AccelerometerDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AccelerometerDataThreshold

   overriding procedure Initialize (this : in out AccelerometerDataThreshold);
   overriding procedure Finalize (this : in out AccelerometerDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AccelerometerDataThreshold

   function get_XAxisInGForce
   (
      this : in out AccelerometerDataThreshold
   )
   return WinRt.Double;

   procedure put_XAxisInGForce
   (
      this : in out AccelerometerDataThreshold;
      value : WinRt.Double
   );

   function get_YAxisInGForce
   (
      this : in out AccelerometerDataThreshold
   )
   return WinRt.Double;

   procedure put_YAxisInGForce
   (
      this : in out AccelerometerDataThreshold;
      value : WinRt.Double
   );

   function get_ZAxisInGForce
   (
      this : in out AccelerometerDataThreshold
   )
   return WinRt.Double;

   procedure put_ZAxisInGForce
   (
      this : in out AccelerometerDataThreshold;
      value : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AccelerometerReading

   overriding procedure Initialize (this : in out AccelerometerReading);
   overriding procedure Finalize (this : in out AccelerometerReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AccelerometerReading

   function get_Timestamp
   (
      this : in out AccelerometerReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_AccelerationX
   (
      this : in out AccelerometerReading
   )
   return WinRt.Double;

   function get_AccelerationY
   (
      this : in out AccelerometerReading
   )
   return WinRt.Double;

   function get_AccelerationZ
   (
      this : in out AccelerometerReading
   )
   return WinRt.Double;

   function get_PerformanceCount
   (
      this : in out AccelerometerReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out AccelerometerReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AccelerometerReadingChangedEventArgs

   overriding procedure Initialize (this : in out AccelerometerReadingChangedEventArgs);
   overriding procedure Finalize (this : in out AccelerometerReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AccelerometerReadingChangedEventArgs

   function get_Reading
   (
      this : in out AccelerometerReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.AccelerometerReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AccelerometerShakenEventArgs

   overriding procedure Initialize (this : in out AccelerometerShakenEventArgs);
   overriding procedure Finalize (this : in out AccelerometerShakenEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AccelerometerShakenEventArgs

   function get_Timestamp
   (
      this : in out AccelerometerShakenEventArgs
   )
   return WinRt.Windows.Foundation.DateTime;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ActivitySensor

   overriding procedure Initialize (this : in out ActivitySensor);
   overriding procedure Finalize (this : in out ActivitySensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for ActivitySensor

   function GetDefaultAsync
   return WinRt.Windows.Devices.Sensors.ActivitySensor;

   function GetDeviceSelector
   return WinRt.WString;

   function FromIdAsync_ActivitySensor
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.ActivitySensor;

   function GetSystemHistoryAsync
   (
      fromTime : Windows.Foundation.DateTime
   )
   return WinRt.GenericObject;

   function GetSystemHistoryAsync
   (
      fromTime : Windows.Foundation.DateTime;
      duration : Windows.Foundation.TimeSpan
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ActivitySensor

   function GetCurrentReadingAsync
   (
      this : in out ActivitySensor
   )
   return WinRt.Windows.Devices.Sensors.ActivitySensorReading'Class;

   function get_SubscribedActivities
   (
      this : in out ActivitySensor
   )
   return IVector_ActivityType.Kind;

   function get_PowerInMilliwatts
   (
      this : in out ActivitySensor
   )
   return WinRt.Double;

   function get_DeviceId
   (
      this : in out ActivitySensor
   )
   return WinRt.WString;

   function get_SupportedActivities
   (
      this : in out ActivitySensor
   )
   return IVectorView_ActivityType.Kind;

   function get_MinimumReportInterval
   (
      this : in out ActivitySensor
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out ActivitySensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out ActivitySensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ActivitySensorReading

   overriding procedure Initialize (this : in out ActivitySensorReading);
   overriding procedure Finalize (this : in out ActivitySensorReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ActivitySensorReading

   function get_Timestamp
   (
      this : in out ActivitySensorReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_Activity
   (
      this : in out ActivitySensorReading
   )
   return WinRt.Windows.Devices.Sensors.ActivityType;

   function get_Confidence
   (
      this : in out ActivitySensorReading
   )
   return WinRt.Windows.Devices.Sensors.ActivitySensorReadingConfidence;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ActivitySensorReadingChangeReport

   overriding procedure Initialize (this : in out ActivitySensorReadingChangeReport);
   overriding procedure Finalize (this : in out ActivitySensorReadingChangeReport);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ActivitySensorReadingChangeReport

   function get_Reading
   (
      this : in out ActivitySensorReadingChangeReport
   )
   return WinRt.Windows.Devices.Sensors.ActivitySensorReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ActivitySensorReadingChangedEventArgs

   overriding procedure Initialize (this : in out ActivitySensorReadingChangedEventArgs);
   overriding procedure Finalize (this : in out ActivitySensorReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ActivitySensorReadingChangedEventArgs

   function get_Reading
   (
      this : in out ActivitySensorReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.ActivitySensorReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ActivitySensorTriggerDetails

   overriding procedure Initialize (this : in out ActivitySensorTriggerDetails);
   overriding procedure Finalize (this : in out ActivitySensorTriggerDetails);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ActivitySensorTriggerDetails

   function ReadReports
   (
      this : in out ActivitySensorTriggerDetails
   )
   return IVectorView_IActivitySensorReadingChangeReport.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Altimeter

   overriding procedure Initialize (this : in out Altimeter);
   overriding procedure Finalize (this : in out Altimeter);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Altimeter

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Altimeter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Altimeter

   function GetCurrentReading
   (
      this : in out Altimeter
   )
   return WinRt.Windows.Devices.Sensors.AltimeterReading'Class;

   function get_DeviceId
   (
      this : in out Altimeter
   )
   return WinRt.WString;

   function get_MinimumReportInterval
   (
      this : in out Altimeter
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Altimeter;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Altimeter
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Altimeter;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Altimeter;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure put_ReportLatency
   (
      this : in out Altimeter;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Altimeter
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Altimeter
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AltimeterReading

   overriding procedure Initialize (this : in out AltimeterReading);
   overriding procedure Finalize (this : in out AltimeterReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AltimeterReading

   function get_Timestamp
   (
      this : in out AltimeterReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_AltitudeChangeInMeters
   (
      this : in out AltimeterReading
   )
   return WinRt.Double;

   function get_PerformanceCount
   (
      this : in out AltimeterReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out AltimeterReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AltimeterReadingChangedEventArgs

   overriding procedure Initialize (this : in out AltimeterReadingChangedEventArgs);
   overriding procedure Finalize (this : in out AltimeterReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AltimeterReadingChangedEventArgs

   function get_Reading
   (
      this : in out AltimeterReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.AltimeterReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Barometer

   overriding procedure Initialize (this : in out Barometer);
   overriding procedure Finalize (this : in out Barometer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Barometer

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Barometer;

   function FromIdAsync_Barometer
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Barometer;

   function GetDeviceSelector_Barometer
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Barometer

   function GetCurrentReading
   (
      this : in out Barometer
   )
   return WinRt.Windows.Devices.Sensors.BarometerReading'Class;

   function get_DeviceId
   (
      this : in out Barometer
   )
   return WinRt.WString;

   function get_MinimumReportInterval
   (
      this : in out Barometer
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Barometer;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Barometer
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Barometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Barometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure put_ReportLatency
   (
      this : in out Barometer;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Barometer
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Barometer
   )
   return WinRt.UInt32;

   function get_ReportThreshold
   (
      this : in out Barometer
   )
   return WinRt.Windows.Devices.Sensors.BarometerDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarometerDataThreshold

   overriding procedure Initialize (this : in out BarometerDataThreshold);
   overriding procedure Finalize (this : in out BarometerDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarometerDataThreshold

   function get_Hectopascals
   (
      this : in out BarometerDataThreshold
   )
   return WinRt.Double;

   procedure put_Hectopascals
   (
      this : in out BarometerDataThreshold;
      value : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarometerReading

   overriding procedure Initialize (this : in out BarometerReading);
   overriding procedure Finalize (this : in out BarometerReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarometerReading

   function get_Timestamp
   (
      this : in out BarometerReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_StationPressureInHectopascals
   (
      this : in out BarometerReading
   )
   return WinRt.Double;

   function get_PerformanceCount
   (
      this : in out BarometerReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out BarometerReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BarometerReadingChangedEventArgs

   overriding procedure Initialize (this : in out BarometerReadingChangedEventArgs);
   overriding procedure Finalize (this : in out BarometerReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BarometerReadingChangedEventArgs

   function get_Reading
   (
      this : in out BarometerReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.BarometerReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Compass

   overriding procedure Initialize (this : in out Compass);
   overriding procedure Finalize (this : in out Compass);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Compass

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Compass;

   function GetDeviceSelector_Compass
   return WinRt.WString;

   function FromIdAsync_Compass
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Compass;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Compass

   function GetCurrentReading
   (
      this : in out Compass
   )
   return WinRt.Windows.Devices.Sensors.CompassReading'Class;

   function get_MinimumReportInterval
   (
      this : in out Compass
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Compass;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Compass
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Compass;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Compass;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out Compass
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out Compass;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out Compass
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   procedure put_ReportLatency
   (
      this : in out Compass;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Compass
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Compass
   )
   return WinRt.UInt32;

   function get_ReportThreshold
   (
      this : in out Compass
   )
   return WinRt.Windows.Devices.Sensors.CompassDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompassDataThreshold

   overriding procedure Initialize (this : in out CompassDataThreshold);
   overriding procedure Finalize (this : in out CompassDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompassDataThreshold

   function get_Degrees
   (
      this : in out CompassDataThreshold
   )
   return WinRt.Double;

   procedure put_Degrees
   (
      this : in out CompassDataThreshold;
      value : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompassReading

   overriding procedure Initialize (this : in out CompassReading);
   overriding procedure Finalize (this : in out CompassReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompassReading

   function get_Timestamp
   (
      this : in out CompassReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_HeadingMagneticNorth
   (
      this : in out CompassReading
   )
   return WinRt.Double;

   function get_HeadingTrueNorth
   (
      this : in out CompassReading
   )
   return IReference_Double.Kind;

   function get_HeadingAccuracy
   (
      this : in out CompassReading
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerAccuracy;

   function get_PerformanceCount
   (
      this : in out CompassReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out CompassReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompassReadingChangedEventArgs

   overriding procedure Initialize (this : in out CompassReadingChangedEventArgs);
   overriding procedure Finalize (this : in out CompassReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompassReadingChangedEventArgs

   function get_Reading
   (
      this : in out CompassReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.CompassReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Gyrometer

   overriding procedure Initialize (this : in out Gyrometer);
   overriding procedure Finalize (this : in out Gyrometer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Gyrometer

   function GetDeviceSelector_Gyrometer
   return WinRt.WString;

   function FromIdAsync_Gyrometer
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Gyrometer;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Gyrometer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Gyrometer

   function GetCurrentReading
   (
      this : in out Gyrometer
   )
   return WinRt.Windows.Devices.Sensors.GyrometerReading'Class;

   function get_MinimumReportInterval
   (
      this : in out Gyrometer
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Gyrometer;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Gyrometer
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Gyrometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Gyrometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out Gyrometer
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out Gyrometer;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out Gyrometer
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   procedure put_ReportLatency
   (
      this : in out Gyrometer;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Gyrometer
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Gyrometer
   )
   return WinRt.UInt32;

   function get_ReportThreshold
   (
      this : in out Gyrometer
   )
   return WinRt.Windows.Devices.Sensors.GyrometerDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GyrometerDataThreshold

   overriding procedure Initialize (this : in out GyrometerDataThreshold);
   overriding procedure Finalize (this : in out GyrometerDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GyrometerDataThreshold

   function get_XAxisInDegreesPerSecond
   (
      this : in out GyrometerDataThreshold
   )
   return WinRt.Double;

   procedure put_XAxisInDegreesPerSecond
   (
      this : in out GyrometerDataThreshold;
      value : WinRt.Double
   );

   function get_YAxisInDegreesPerSecond
   (
      this : in out GyrometerDataThreshold
   )
   return WinRt.Double;

   procedure put_YAxisInDegreesPerSecond
   (
      this : in out GyrometerDataThreshold;
      value : WinRt.Double
   );

   function get_ZAxisInDegreesPerSecond
   (
      this : in out GyrometerDataThreshold
   )
   return WinRt.Double;

   procedure put_ZAxisInDegreesPerSecond
   (
      this : in out GyrometerDataThreshold;
      value : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GyrometerReading

   overriding procedure Initialize (this : in out GyrometerReading);
   overriding procedure Finalize (this : in out GyrometerReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GyrometerReading

   function get_Timestamp
   (
      this : in out GyrometerReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_AngularVelocityX
   (
      this : in out GyrometerReading
   )
   return WinRt.Double;

   function get_AngularVelocityY
   (
      this : in out GyrometerReading
   )
   return WinRt.Double;

   function get_AngularVelocityZ
   (
      this : in out GyrometerReading
   )
   return WinRt.Double;

   function get_PerformanceCount
   (
      this : in out GyrometerReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out GyrometerReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for GyrometerReadingChangedEventArgs

   overriding procedure Initialize (this : in out GyrometerReadingChangedEventArgs);
   overriding procedure Finalize (this : in out GyrometerReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for GyrometerReadingChangedEventArgs

   function get_Reading
   (
      this : in out GyrometerReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.GyrometerReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HingeAngleReading

   overriding procedure Initialize (this : in out HingeAngleReading);
   overriding procedure Finalize (this : in out HingeAngleReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HingeAngleReading

   function get_Timestamp
   (
      this : in out HingeAngleReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_AngleInDegrees
   (
      this : in out HingeAngleReading
   )
   return WinRt.Double;

   function get_Properties
   (
      this : in out HingeAngleReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HingeAngleSensor

   overriding procedure Initialize (this : in out HingeAngleSensor);
   overriding procedure Finalize (this : in out HingeAngleSensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for HingeAngleSensor

   function GetDeviceSelector_HingeAngleSensor
   return WinRt.WString;

   function GetDefaultAsync_HingeAngleSensor
   return WinRt.Windows.Devices.Sensors.HingeAngleSensor;

   function GetRelatedToAdjacentPanelsAsync
   (
      firstPanelId : WinRt.WString;
      secondPanelId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.HingeAngleSensor;

   function FromIdAsync_HingeAngleSensor
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.HingeAngleSensor;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HingeAngleSensor

   function GetCurrentReadingAsync
   (
      this : in out HingeAngleSensor
   )
   return WinRt.Windows.Devices.Sensors.HingeAngleReading'Class;

   function get_DeviceId
   (
      this : in out HingeAngleSensor
   )
   return WinRt.WString;

   function get_MinReportThresholdInDegrees
   (
      this : in out HingeAngleSensor
   )
   return WinRt.Double;

   function get_ReportThresholdInDegrees
   (
      this : in out HingeAngleSensor
   )
   return WinRt.Double;

   procedure put_ReportThresholdInDegrees
   (
      this : in out HingeAngleSensor;
      value : WinRt.Double
   );

   function add_ReadingChanged
   (
      this : in out HingeAngleSensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out HingeAngleSensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HingeAngleSensorReadingChangedEventArgs

   overriding procedure Initialize (this : in out HingeAngleSensorReadingChangedEventArgs);
   overriding procedure Finalize (this : in out HingeAngleSensorReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HingeAngleSensorReadingChangedEventArgs

   function get_Reading
   (
      this : in out HingeAngleSensorReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.HingeAngleReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Inclinometer

   overriding procedure Initialize (this : in out Inclinometer);
   overriding procedure Finalize (this : in out Inclinometer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Inclinometer

   function GetDefault
   (
      sensorReadingtype : Windows.Devices.Sensors.SensorReadingType
   )
   return WinRt.Windows.Devices.Sensors.Inclinometer;

   function GetDefaultForRelativeReadings
   return WinRt.Windows.Devices.Sensors.Inclinometer;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Inclinometer;

   function GetDeviceSelector
   (
      readingType : Windows.Devices.Sensors.SensorReadingType
   )
   return WinRt.WString;

   function FromIdAsync_Inclinometer
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Inclinometer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Inclinometer

   function GetCurrentReading
   (
      this : in out Inclinometer
   )
   return WinRt.Windows.Devices.Sensors.InclinometerReading'Class;

   function get_MinimumReportInterval
   (
      this : in out Inclinometer
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Inclinometer;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Inclinometer
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Inclinometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Inclinometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out Inclinometer
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out Inclinometer;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out Inclinometer
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   function get_ReadingType
   (
      this : in out Inclinometer
   )
   return WinRt.Windows.Devices.Sensors.SensorReadingType;

   procedure put_ReportLatency
   (
      this : in out Inclinometer;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Inclinometer
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Inclinometer
   )
   return WinRt.UInt32;

   function get_ReportThreshold
   (
      this : in out Inclinometer
   )
   return WinRt.Windows.Devices.Sensors.InclinometerDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for InclinometerDataThreshold

   overriding procedure Initialize (this : in out InclinometerDataThreshold);
   overriding procedure Finalize (this : in out InclinometerDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for InclinometerDataThreshold

   function get_PitchInDegrees
   (
      this : in out InclinometerDataThreshold
   )
   return WinRt.Single;

   procedure put_PitchInDegrees
   (
      this : in out InclinometerDataThreshold;
      value : WinRt.Single
   );

   function get_RollInDegrees
   (
      this : in out InclinometerDataThreshold
   )
   return WinRt.Single;

   procedure put_RollInDegrees
   (
      this : in out InclinometerDataThreshold;
      value : WinRt.Single
   );

   function get_YawInDegrees
   (
      this : in out InclinometerDataThreshold
   )
   return WinRt.Single;

   procedure put_YawInDegrees
   (
      this : in out InclinometerDataThreshold;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for InclinometerReading

   overriding procedure Initialize (this : in out InclinometerReading);
   overriding procedure Finalize (this : in out InclinometerReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for InclinometerReading

   function get_Timestamp
   (
      this : in out InclinometerReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_PitchDegrees
   (
      this : in out InclinometerReading
   )
   return WinRt.Single;

   function get_RollDegrees
   (
      this : in out InclinometerReading
   )
   return WinRt.Single;

   function get_YawDegrees
   (
      this : in out InclinometerReading
   )
   return WinRt.Single;

   function get_YawAccuracy
   (
      this : in out InclinometerReading
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerAccuracy;

   function get_PerformanceCount
   (
      this : in out InclinometerReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out InclinometerReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for InclinometerReadingChangedEventArgs

   overriding procedure Initialize (this : in out InclinometerReadingChangedEventArgs);
   overriding procedure Finalize (this : in out InclinometerReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for InclinometerReadingChangedEventArgs

   function get_Reading
   (
      this : in out InclinometerReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.InclinometerReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LightSensor

   overriding procedure Initialize (this : in out LightSensor);
   overriding procedure Finalize (this : in out LightSensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for LightSensor

   function GetDeviceSelector_LightSensor
   return WinRt.WString;

   function FromIdAsync_LightSensor
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.LightSensor;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.LightSensor;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LightSensor

   function GetCurrentReading
   (
      this : in out LightSensor
   )
   return WinRt.Windows.Devices.Sensors.LightSensorReading'Class;

   function get_MinimumReportInterval
   (
      this : in out LightSensor
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out LightSensor;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out LightSensor
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out LightSensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out LightSensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out LightSensor
   )
   return WinRt.WString;

   procedure put_ReportLatency
   (
      this : in out LightSensor;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out LightSensor
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out LightSensor
   )
   return WinRt.UInt32;

   function get_ReportThreshold
   (
      this : in out LightSensor
   )
   return WinRt.Windows.Devices.Sensors.LightSensorDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LightSensorDataThreshold

   overriding procedure Initialize (this : in out LightSensorDataThreshold);
   overriding procedure Finalize (this : in out LightSensorDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LightSensorDataThreshold

   function get_LuxPercentage
   (
      this : in out LightSensorDataThreshold
   )
   return WinRt.Single;

   procedure put_LuxPercentage
   (
      this : in out LightSensorDataThreshold;
      value : WinRt.Single
   );

   function get_AbsoluteLux
   (
      this : in out LightSensorDataThreshold
   )
   return WinRt.Single;

   procedure put_AbsoluteLux
   (
      this : in out LightSensorDataThreshold;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LightSensorReading

   overriding procedure Initialize (this : in out LightSensorReading);
   overriding procedure Finalize (this : in out LightSensorReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LightSensorReading

   function get_Timestamp
   (
      this : in out LightSensorReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_IlluminanceInLux
   (
      this : in out LightSensorReading
   )
   return WinRt.Single;

   function get_PerformanceCount
   (
      this : in out LightSensorReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out LightSensorReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LightSensorReadingChangedEventArgs

   overriding procedure Initialize (this : in out LightSensorReadingChangedEventArgs);
   overriding procedure Finalize (this : in out LightSensorReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LightSensorReadingChangedEventArgs

   function get_Reading
   (
      this : in out LightSensorReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.LightSensorReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Magnetometer

   overriding procedure Initialize (this : in out Magnetometer);
   overriding procedure Finalize (this : in out Magnetometer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Magnetometer

   function GetDeviceSelector_Magnetometer
   return WinRt.WString;

   function FromIdAsync_Magnetometer
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Magnetometer;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.Magnetometer;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Magnetometer

   function GetCurrentReading
   (
      this : in out Magnetometer
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerReading'Class;

   function get_MinimumReportInterval
   (
      this : in out Magnetometer
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Magnetometer;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Magnetometer
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Magnetometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Magnetometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out Magnetometer
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out Magnetometer;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out Magnetometer
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   procedure put_ReportLatency
   (
      this : in out Magnetometer;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out Magnetometer
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out Magnetometer
   )
   return WinRt.UInt32;

   function get_ReportThreshold
   (
      this : in out Magnetometer
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerDataThreshold'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagnetometerDataThreshold

   overriding procedure Initialize (this : in out MagnetometerDataThreshold);
   overriding procedure Finalize (this : in out MagnetometerDataThreshold);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagnetometerDataThreshold

   function get_XAxisMicroteslas
   (
      this : in out MagnetometerDataThreshold
   )
   return WinRt.Single;

   procedure put_XAxisMicroteslas
   (
      this : in out MagnetometerDataThreshold;
      value : WinRt.Single
   );

   function get_YAxisMicroteslas
   (
      this : in out MagnetometerDataThreshold
   )
   return WinRt.Single;

   procedure put_YAxisMicroteslas
   (
      this : in out MagnetometerDataThreshold;
      value : WinRt.Single
   );

   function get_ZAxisMicroteslas
   (
      this : in out MagnetometerDataThreshold
   )
   return WinRt.Single;

   procedure put_ZAxisMicroteslas
   (
      this : in out MagnetometerDataThreshold;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagnetometerReading

   overriding procedure Initialize (this : in out MagnetometerReading);
   overriding procedure Finalize (this : in out MagnetometerReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagnetometerReading

   function get_Timestamp
   (
      this : in out MagnetometerReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_MagneticFieldX
   (
      this : in out MagnetometerReading
   )
   return WinRt.Single;

   function get_MagneticFieldY
   (
      this : in out MagnetometerReading
   )
   return WinRt.Single;

   function get_MagneticFieldZ
   (
      this : in out MagnetometerReading
   )
   return WinRt.Single;

   function get_DirectionalAccuracy
   (
      this : in out MagnetometerReading
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerAccuracy;

   function get_PerformanceCount
   (
      this : in out MagnetometerReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out MagnetometerReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MagnetometerReadingChangedEventArgs

   overriding procedure Initialize (this : in out MagnetometerReadingChangedEventArgs);
   overriding procedure Finalize (this : in out MagnetometerReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MagnetometerReadingChangedEventArgs

   function get_Reading
   (
      this : in out MagnetometerReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OrientationSensor

   overriding procedure Initialize (this : in out OrientationSensor);
   overriding procedure Finalize (this : in out OrientationSensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for OrientationSensor

   function GetDefault
   (
      sensorReadingtype : Windows.Devices.Sensors.SensorReadingType
   )
   return WinRt.Windows.Devices.Sensors.OrientationSensor;

   function GetDefault
   (
      sensorReadingType : Windows.Devices.Sensors.SensorReadingType;
      optimizationGoal : Windows.Devices.Sensors.SensorOptimizationGoal
   )
   return WinRt.Windows.Devices.Sensors.OrientationSensor;

   function GetDefaultForRelativeReadings
   return WinRt.Windows.Devices.Sensors.OrientationSensor;

   function GetDeviceSelector_OrientationSensor
   (
      readingType : Windows.Devices.Sensors.SensorReadingType
   )
   return WinRt.WString;

   function GetDeviceSelector
   (
      readingType : Windows.Devices.Sensors.SensorReadingType;
      optimizationGoal : Windows.Devices.Sensors.SensorOptimizationGoal
   )
   return WinRt.WString;

   function FromIdAsync_OrientationSensor
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.OrientationSensor;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.OrientationSensor;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OrientationSensor

   function GetCurrentReading
   (
      this : in out OrientationSensor
   )
   return WinRt.Windows.Devices.Sensors.OrientationSensorReading'Class;

   function get_MinimumReportInterval
   (
      this : in out OrientationSensor
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out OrientationSensor;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out OrientationSensor
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out OrientationSensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out OrientationSensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out OrientationSensor
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out OrientationSensor;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out OrientationSensor
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   function get_ReadingType
   (
      this : in out OrientationSensor
   )
   return WinRt.Windows.Devices.Sensors.SensorReadingType;

   procedure put_ReportLatency
   (
      this : in out OrientationSensor;
      value : WinRt.UInt32
   );

   function get_ReportLatency
   (
      this : in out OrientationSensor
   )
   return WinRt.UInt32;

   function get_MaxBatchSize
   (
      this : in out OrientationSensor
   )
   return WinRt.UInt32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OrientationSensorReading

   overriding procedure Initialize (this : in out OrientationSensorReading);
   overriding procedure Finalize (this : in out OrientationSensorReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OrientationSensorReading

   function get_Timestamp
   (
      this : in out OrientationSensorReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_RotationMatrix
   (
      this : in out OrientationSensorReading
   )
   return WinRt.Windows.Devices.Sensors.SensorRotationMatrix'Class;

   function get_Quaternion
   (
      this : in out OrientationSensorReading
   )
   return WinRt.Windows.Devices.Sensors.SensorQuaternion'Class;

   function get_YawAccuracy
   (
      this : in out OrientationSensorReading
   )
   return WinRt.Windows.Devices.Sensors.MagnetometerAccuracy;

   function get_PerformanceCount
   (
      this : in out OrientationSensorReading
   )
   return IReference_TimeSpan.Kind;

   function get_Properties
   (
      this : in out OrientationSensorReading
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for OrientationSensorReadingChangedEventArgs

   overriding procedure Initialize (this : in out OrientationSensorReadingChangedEventArgs);
   overriding procedure Finalize (this : in out OrientationSensorReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for OrientationSensorReadingChangedEventArgs

   function get_Reading
   (
      this : in out OrientationSensorReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.OrientationSensorReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Pedometer

   overriding procedure Initialize (this : in out Pedometer);
   overriding procedure Finalize (this : in out Pedometer);

   -----------------------------------------------------------------------------
   -- Static Interfaces for Pedometer

   function GetReadingsFromTriggerDetails
   (
      triggerDetails : Windows.Devices.Sensors.SensorDataThresholdTriggerDetails'Class
   )
   return WinRt.GenericObject;

   function FromIdAsync_Pedometer
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.Pedometer;

   function GetDefaultAsync_Pedometer
   return WinRt.Windows.Devices.Sensors.Pedometer;

   function GetDeviceSelector_Pedometer
   return WinRt.WString;

   function GetSystemHistoryAsync_Pedometer
   (
      fromTime : Windows.Foundation.DateTime
   )
   return WinRt.GenericObject;

   function GetSystemHistoryAsync_Pedometer
   (
      fromTime : Windows.Foundation.DateTime;
      duration : Windows.Foundation.TimeSpan
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Pedometer

   function get_DeviceId
   (
      this : in out Pedometer
   )
   return WinRt.WString;

   function get_PowerInMilliwatts
   (
      this : in out Pedometer
   )
   return WinRt.Double;

   function get_MinimumReportInterval
   (
      this : in out Pedometer
   )
   return WinRt.UInt32;

   procedure put_ReportInterval
   (
      this : in out Pedometer;
      value : WinRt.UInt32
   );

   function get_ReportInterval
   (
      this : in out Pedometer
   )
   return WinRt.UInt32;

   function add_ReadingChanged
   (
      this : in out Pedometer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out Pedometer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function GetCurrentReadings
   (
      this : in out Pedometer
   )
   return IMapView_PedometerStepKind_IPedometerReading.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PedometerDataThreshold

   overriding procedure Initialize (this : in out PedometerDataThreshold);
   overriding procedure Finalize (this : in out PedometerDataThreshold);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for PedometerDataThreshold

   function Constructor
   (
      sensor : Windows.Devices.Sensors.Pedometer'Class;
      stepGoal : WinRt.Int32
   )
   return PedometerDataThreshold;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PedometerDataThreshold

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PedometerReading

   overriding procedure Initialize (this : in out PedometerReading);
   overriding procedure Finalize (this : in out PedometerReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PedometerReading

   function get_StepKind
   (
      this : in out PedometerReading
   )
   return WinRt.Windows.Devices.Sensors.PedometerStepKind;

   function get_CumulativeSteps
   (
      this : in out PedometerReading
   )
   return WinRt.Int32;

   function get_Timestamp
   (
      this : in out PedometerReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_CumulativeStepsDuration
   (
      this : in out PedometerReading
   )
   return WinRt.Windows.Foundation.TimeSpan;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PedometerReadingChangedEventArgs

   overriding procedure Initialize (this : in out PedometerReadingChangedEventArgs);
   overriding procedure Finalize (this : in out PedometerReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PedometerReadingChangedEventArgs

   function get_Reading
   (
      this : in out PedometerReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.PedometerReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProximitySensor

   overriding procedure Initialize (this : in out ProximitySensor);
   overriding procedure Finalize (this : in out ProximitySensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for ProximitySensor

   function GetDeviceSelector_ProximitySensor
   return WinRt.WString;

   function FromId
   (
      sensorId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.ProximitySensor;

   function GetReadingsFromTriggerDetails_ProximitySensor
   (
      triggerDetails : Windows.Devices.Sensors.SensorDataThresholdTriggerDetails'Class
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProximitySensor

   function get_DeviceId
   (
      this : in out ProximitySensor
   )
   return WinRt.WString;

   function get_MaxDistanceInMillimeters
   (
      this : in out ProximitySensor
   )
   return IReference_UInt32.Kind;

   function get_MinDistanceInMillimeters
   (
      this : in out ProximitySensor
   )
   return IReference_UInt32.Kind;

   function GetCurrentReading
   (
      this : in out ProximitySensor
   )
   return WinRt.Windows.Devices.Sensors.ProximitySensorReading'Class;

   function add_ReadingChanged
   (
      this : in out ProximitySensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ReadingChanged
   (
      this : in out ProximitySensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   function CreateDisplayOnOffController
   (
      this : in out ProximitySensor
   )
   return WinRt.Windows.Devices.Sensors.ProximitySensorDisplayOnOffController'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProximitySensorDataThreshold

   overriding procedure Initialize (this : in out ProximitySensorDataThreshold);
   overriding procedure Finalize (this : in out ProximitySensorDataThreshold);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ProximitySensorDataThreshold

   function Constructor
   (
      sensor : Windows.Devices.Sensors.ProximitySensor'Class
   )
   return ProximitySensorDataThreshold;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProximitySensorDataThreshold

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProximitySensorDisplayOnOffController

   overriding procedure Initialize (this : in out ProximitySensorDisplayOnOffController);
   overriding procedure Finalize (this : in out ProximitySensorDisplayOnOffController);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProximitySensorDisplayOnOffController

   procedure Close
   (
      this : in out ProximitySensorDisplayOnOffController
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProximitySensorReading

   overriding procedure Initialize (this : in out ProximitySensorReading);
   overriding procedure Finalize (this : in out ProximitySensorReading);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProximitySensorReading

   function get_Timestamp
   (
      this : in out ProximitySensorReading
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_IsDetected
   (
      this : in out ProximitySensorReading
   )
   return WinRt.Boolean;

   function get_DistanceInMillimeters
   (
      this : in out ProximitySensorReading
   )
   return IReference_UInt32.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ProximitySensorReadingChangedEventArgs

   overriding procedure Initialize (this : in out ProximitySensorReadingChangedEventArgs);
   overriding procedure Finalize (this : in out ProximitySensorReadingChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ProximitySensorReadingChangedEventArgs

   function get_Reading
   (
      this : in out ProximitySensorReadingChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.ProximitySensorReading'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SensorDataThresholdTriggerDetails

   overriding procedure Initialize (this : in out SensorDataThresholdTriggerDetails);
   overriding procedure Finalize (this : in out SensorDataThresholdTriggerDetails);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SensorDataThresholdTriggerDetails

   function get_DeviceId
   (
      this : in out SensorDataThresholdTriggerDetails
   )
   return WinRt.WString;

   function get_SensorType
   (
      this : in out SensorDataThresholdTriggerDetails
   )
   return WinRt.Windows.Devices.Sensors.SensorType;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SensorQuaternion

   overriding procedure Initialize (this : in out SensorQuaternion);
   overriding procedure Finalize (this : in out SensorQuaternion);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SensorQuaternion

   function get_W
   (
      this : in out SensorQuaternion
   )
   return WinRt.Single;

   function get_X
   (
      this : in out SensorQuaternion
   )
   return WinRt.Single;

   function get_Y
   (
      this : in out SensorQuaternion
   )
   return WinRt.Single;

   function get_Z
   (
      this : in out SensorQuaternion
   )
   return WinRt.Single;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SensorRotationMatrix

   overriding procedure Initialize (this : in out SensorRotationMatrix);
   overriding procedure Finalize (this : in out SensorRotationMatrix);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SensorRotationMatrix

   function get_M11
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M12
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M13
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M21
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M22
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M23
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M31
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M32
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   function get_M33
   (
      this : in out SensorRotationMatrix
   )
   return WinRt.Single;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SimpleOrientationSensor

   overriding procedure Initialize (this : in out SimpleOrientationSensor);
   overriding procedure Finalize (this : in out SimpleOrientationSensor);

   -----------------------------------------------------------------------------
   -- Static Interfaces for SimpleOrientationSensor

   function GetDeviceSelector_SimpleOrientationSensor
   return WinRt.WString;

   function FromIdAsync_SimpleOrientationSensor
   (
      deviceId : WinRt.WString
   )
   return WinRt.Windows.Devices.Sensors.SimpleOrientationSensor;

   function GetDefault
   return WinRt.Windows.Devices.Sensors.SimpleOrientationSensor;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SimpleOrientationSensor

   function GetCurrentOrientation
   (
      this : in out SimpleOrientationSensor
   )
   return WinRt.Windows.Devices.Sensors.SimpleOrientation;

   function add_OrientationChanged
   (
      this : in out SimpleOrientationSensor;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_OrientationChanged
   (
      this : in out SimpleOrientationSensor;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DeviceId
   (
      this : in out SimpleOrientationSensor
   )
   return WinRt.WString;

   procedure put_ReadingTransform
   (
      this : in out SimpleOrientationSensor;
      value : Windows.Graphics.Display.DisplayOrientations
   );

   function get_ReadingTransform
   (
      this : in out SimpleOrientationSensor
   )
   return WinRt.Windows.Graphics.Display.DisplayOrientations;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SimpleOrientationSensorOrientationChangedEventArgs

   overriding procedure Initialize (this : in out SimpleOrientationSensorOrientationChangedEventArgs);
   overriding procedure Finalize (this : in out SimpleOrientationSensorOrientationChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SimpleOrientationSensorOrientationChangedEventArgs

   function get_Timestamp
   (
      this : in out SimpleOrientationSensorOrientationChangedEventArgs
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_Orientation
   (
      this : in out SimpleOrientationSensorOrientationChangedEventArgs
   )
   return WinRt.Windows.Devices.Sensors.SimpleOrientation;

end;
