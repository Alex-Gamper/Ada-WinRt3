--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with WinRt.Windows.Foundation.Numerics;
limited with WinRt.Windows.Graphics;
limited with WinRt.Windows.Graphics.DirectX;
limited with WinRt.Windows.Graphics.Effects;
limited with WinRt.Windows.System;
limited with WinRt.Windows.UI.Core;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Composition is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IAmbientLight_Interface is interface and WinRt.IInspectable_Interface;
   type IAmbientLight is access IAmbientLight_Interface'Class;
   type IAmbientLight_Ptr is access all IAmbientLight;

   type IAmbientLight2_Interface is interface and WinRt.IInspectable_Interface;
   type IAmbientLight2 is access IAmbientLight2_Interface'Class;

   type IAnimationController_Interface is interface and WinRt.IInspectable_Interface;
   type IAnimationController is access IAnimationController_Interface'Class;
   type IAnimationController_Ptr is access all IAnimationController;

   type IAnimationControllerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAnimationControllerStatics is access IAnimationControllerStatics_Interface'Class;

   type IAnimationObject_Interface is interface and WinRt.IInspectable_Interface;
   type IAnimationObject is access IAnimationObject_Interface'Class;

   type IAnimationPropertyInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IAnimationPropertyInfo is access IAnimationPropertyInfo_Interface'Class;
   type IAnimationPropertyInfo_Ptr is access all IAnimationPropertyInfo;

   type IBooleanKeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IBooleanKeyFrameAnimation is access IBooleanKeyFrameAnimation_Interface'Class;
   type IBooleanKeyFrameAnimation_Ptr is access all IBooleanKeyFrameAnimation;

   type IBounceScalarNaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IBounceScalarNaturalMotionAnimation is access IBounceScalarNaturalMotionAnimation_Interface'Class;
   type IBounceScalarNaturalMotionAnimation_Ptr is access all IBounceScalarNaturalMotionAnimation;

   type IBounceVector2NaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IBounceVector2NaturalMotionAnimation is access IBounceVector2NaturalMotionAnimation_Interface'Class;
   type IBounceVector2NaturalMotionAnimation_Ptr is access all IBounceVector2NaturalMotionAnimation;

   type IBounceVector3NaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IBounceVector3NaturalMotionAnimation is access IBounceVector3NaturalMotionAnimation_Interface'Class;
   type IBounceVector3NaturalMotionAnimation_Ptr is access all IBounceVector3NaturalMotionAnimation;

   type IColorKeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IColorKeyFrameAnimation is access IColorKeyFrameAnimation_Interface'Class;
   type IColorKeyFrameAnimation_Ptr is access all IColorKeyFrameAnimation;

   type ICompositionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimation is access ICompositionAnimation_Interface'Class;
   type ICompositionAnimation_Ptr is access all ICompositionAnimation;

   type ICompositionAnimation2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimation2 is access ICompositionAnimation2_Interface'Class;

   type ICompositionAnimation3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimation3 is access ICompositionAnimation3_Interface'Class;

   type ICompositionAnimation4_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimation4 is access ICompositionAnimation4_Interface'Class;

   type ICompositionAnimationBase_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimationBase is access ICompositionAnimationBase_Interface'Class;

   type ICompositionAnimationFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimationFactory is access ICompositionAnimationFactory_Interface'Class;

   type ICompositionAnimationGroup_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionAnimationGroup is access ICompositionAnimationGroup_Interface'Class;
   type ICompositionAnimationGroup_Ptr is access all ICompositionAnimationGroup;

   type ICompositionBackdropBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionBackdropBrush is access ICompositionBackdropBrush_Interface'Class;
   type ICompositionBackdropBrush_Ptr is access all ICompositionBackdropBrush;

   type ICompositionBatchCompletedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionBatchCompletedEventArgs is access ICompositionBatchCompletedEventArgs_Interface'Class;
   type ICompositionBatchCompletedEventArgs_Ptr is access all ICompositionBatchCompletedEventArgs;

   type ICompositionBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionBrush is access ICompositionBrush_Interface'Class;
   type ICompositionBrush_Ptr is access all ICompositionBrush;

   type ICompositionBrushFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionBrushFactory is access ICompositionBrushFactory_Interface'Class;

   type ICompositionCapabilities_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionCapabilities is access ICompositionCapabilities_Interface'Class;
   type ICompositionCapabilities_Ptr is access all ICompositionCapabilities;

   type ICompositionCapabilitiesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionCapabilitiesStatics is access ICompositionCapabilitiesStatics_Interface'Class;

   type ICompositionClip_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionClip is access ICompositionClip_Interface'Class;
   type ICompositionClip_Ptr is access all ICompositionClip;

   type ICompositionClip2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionClip2 is access ICompositionClip2_Interface'Class;

   type ICompositionClipFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionClipFactory is access ICompositionClipFactory_Interface'Class;

   type ICompositionColorBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionColorBrush is access ICompositionColorBrush_Interface'Class;
   type ICompositionColorBrush_Ptr is access all ICompositionColorBrush;

   type ICompositionColorGradientStop_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionColorGradientStop is access ICompositionColorGradientStop_Interface'Class;
   type ICompositionColorGradientStop_Ptr is access all ICompositionColorGradientStop;
   type ICompositionColorGradientStop_Array is array (Natural range <>) of ICompositionColorGradientStop;

   type ICompositionColorGradientStopCollection_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionColorGradientStopCollection is access ICompositionColorGradientStopCollection_Interface'Class;
   type ICompositionColorGradientStopCollection_Ptr is access all ICompositionColorGradientStopCollection;

   type ICompositionCommitBatch_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionCommitBatch is access ICompositionCommitBatch_Interface'Class;
   type ICompositionCommitBatch_Ptr is access all ICompositionCommitBatch;

   type ICompositionContainerShape_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionContainerShape is access ICompositionContainerShape_Interface'Class;
   type ICompositionContainerShape_Ptr is access all ICompositionContainerShape;

   type ICompositionDrawingSurface_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionDrawingSurface is access ICompositionDrawingSurface_Interface'Class;
   type ICompositionDrawingSurface_Ptr is access all ICompositionDrawingSurface;

   type ICompositionDrawingSurface2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionDrawingSurface2 is access ICompositionDrawingSurface2_Interface'Class;

   type ICompositionDrawingSurfaceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionDrawingSurfaceFactory is access ICompositionDrawingSurfaceFactory_Interface'Class;

   type ICompositionEasingFunction_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEasingFunction is access ICompositionEasingFunction_Interface'Class;
   type ICompositionEasingFunction_Ptr is access all ICompositionEasingFunction;

   type ICompositionEasingFunctionFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEasingFunctionFactory is access ICompositionEasingFunctionFactory_Interface'Class;

   type ICompositionEffectBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEffectBrush is access ICompositionEffectBrush_Interface'Class;
   type ICompositionEffectBrush_Ptr is access all ICompositionEffectBrush;

   type ICompositionEffectFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEffectFactory is access ICompositionEffectFactory_Interface'Class;
   type ICompositionEffectFactory_Ptr is access all ICompositionEffectFactory;

   type ICompositionEffectSourceParameter_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEffectSourceParameter is access ICompositionEffectSourceParameter_Interface'Class;
   type ICompositionEffectSourceParameter_Ptr is access all ICompositionEffectSourceParameter;

   type ICompositionEffectSourceParameterFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEffectSourceParameterFactory is access ICompositionEffectSourceParameterFactory_Interface'Class;

   type ICompositionEllipseGeometry_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionEllipseGeometry is access ICompositionEllipseGeometry_Interface'Class;
   type ICompositionEllipseGeometry_Ptr is access all ICompositionEllipseGeometry;

   type ICompositionGeometricClip_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGeometricClip is access ICompositionGeometricClip_Interface'Class;
   type ICompositionGeometricClip_Ptr is access all ICompositionGeometricClip;

   type ICompositionGeometry_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGeometry is access ICompositionGeometry_Interface'Class;
   type ICompositionGeometry_Ptr is access all ICompositionGeometry;

   type ICompositionGeometryFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGeometryFactory is access ICompositionGeometryFactory_Interface'Class;

   type ICompositionGradientBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGradientBrush is access ICompositionGradientBrush_Interface'Class;
   type ICompositionGradientBrush_Ptr is access all ICompositionGradientBrush;

   type ICompositionGradientBrush2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGradientBrush2 is access ICompositionGradientBrush2_Interface'Class;

   type ICompositionGradientBrushFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGradientBrushFactory is access ICompositionGradientBrushFactory_Interface'Class;

   type ICompositionGraphicsDevice_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGraphicsDevice is access ICompositionGraphicsDevice_Interface'Class;
   type ICompositionGraphicsDevice_Ptr is access all ICompositionGraphicsDevice;

   type ICompositionGraphicsDevice2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGraphicsDevice2 is access ICompositionGraphicsDevice2_Interface'Class;

   type ICompositionGraphicsDevice3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionGraphicsDevice3 is access ICompositionGraphicsDevice3_Interface'Class;

   type ICompositionLight_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionLight is access ICompositionLight_Interface'Class;
   type ICompositionLight_Ptr is access all ICompositionLight;

   type ICompositionLight2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionLight2 is access ICompositionLight2_Interface'Class;

   type ICompositionLight3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionLight3 is access ICompositionLight3_Interface'Class;

   type ICompositionLightFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionLightFactory is access ICompositionLightFactory_Interface'Class;

   type ICompositionLineGeometry_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionLineGeometry is access ICompositionLineGeometry_Interface'Class;
   type ICompositionLineGeometry_Ptr is access all ICompositionLineGeometry;

   type ICompositionLinearGradientBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionLinearGradientBrush is access ICompositionLinearGradientBrush_Interface'Class;
   type ICompositionLinearGradientBrush_Ptr is access all ICompositionLinearGradientBrush;

   type ICompositionMaskBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionMaskBrush is access ICompositionMaskBrush_Interface'Class;
   type ICompositionMaskBrush_Ptr is access all ICompositionMaskBrush;

   type ICompositionMipmapSurface_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionMipmapSurface is access ICompositionMipmapSurface_Interface'Class;
   type ICompositionMipmapSurface_Ptr is access all ICompositionMipmapSurface;

   type ICompositionNineGridBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionNineGridBrush is access ICompositionNineGridBrush_Interface'Class;
   type ICompositionNineGridBrush_Ptr is access all ICompositionNineGridBrush;

   type ICompositionObject_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionObject is access ICompositionObject_Interface'Class;
   type ICompositionObject_Ptr is access all ICompositionObject;

   type ICompositionObject2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionObject2 is access ICompositionObject2_Interface'Class;

   type ICompositionObject3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionObject3 is access ICompositionObject3_Interface'Class;

   type ICompositionObject4_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionObject4 is access ICompositionObject4_Interface'Class;

   type ICompositionObjectFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionObjectFactory is access ICompositionObjectFactory_Interface'Class;

   type ICompositionObjectStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionObjectStatics is access ICompositionObjectStatics_Interface'Class;

   type ICompositionPath_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionPath is access ICompositionPath_Interface'Class;
   type ICompositionPath_Ptr is access all ICompositionPath;

   type ICompositionPathFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionPathFactory is access ICompositionPathFactory_Interface'Class;

   type ICompositionPathGeometry_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionPathGeometry is access ICompositionPathGeometry_Interface'Class;
   type ICompositionPathGeometry_Ptr is access all ICompositionPathGeometry;

   type ICompositionProjectedShadow_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionProjectedShadow is access ICompositionProjectedShadow_Interface'Class;
   type ICompositionProjectedShadow_Ptr is access all ICompositionProjectedShadow;

   type ICompositionProjectedShadowCaster_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionProjectedShadowCaster is access ICompositionProjectedShadowCaster_Interface'Class;
   type ICompositionProjectedShadowCaster_Ptr is access all ICompositionProjectedShadowCaster;

   type ICompositionProjectedShadowCasterCollection_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionProjectedShadowCasterCollection is access ICompositionProjectedShadowCasterCollection_Interface'Class;
   type ICompositionProjectedShadowCasterCollection_Ptr is access all ICompositionProjectedShadowCasterCollection;

   type ICompositionProjectedShadowCasterCollectionStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionProjectedShadowCasterCollectionStatics is access ICompositionProjectedShadowCasterCollectionStatics_Interface'Class;

   type ICompositionProjectedShadowReceiver_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionProjectedShadowReceiver is access ICompositionProjectedShadowReceiver_Interface'Class;
   type ICompositionProjectedShadowReceiver_Ptr is access all ICompositionProjectedShadowReceiver;

   type ICompositionProjectedShadowReceiverUnorderedCollection_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionProjectedShadowReceiverUnorderedCollection is access ICompositionProjectedShadowReceiverUnorderedCollection_Interface'Class;
   type ICompositionProjectedShadowReceiverUnorderedCollection_Ptr is access all ICompositionProjectedShadowReceiverUnorderedCollection;

   type ICompositionPropertySet_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionPropertySet is access ICompositionPropertySet_Interface'Class;
   type ICompositionPropertySet_Ptr is access all ICompositionPropertySet;

   type ICompositionPropertySet2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionPropertySet2 is access ICompositionPropertySet2_Interface'Class;

   type ICompositionRadialGradientBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionRadialGradientBrush is access ICompositionRadialGradientBrush_Interface'Class;
   type ICompositionRadialGradientBrush_Ptr is access all ICompositionRadialGradientBrush;

   type ICompositionRectangleGeometry_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionRectangleGeometry is access ICompositionRectangleGeometry_Interface'Class;
   type ICompositionRectangleGeometry_Ptr is access all ICompositionRectangleGeometry;

   type ICompositionRoundedRectangleGeometry_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionRoundedRectangleGeometry is access ICompositionRoundedRectangleGeometry_Interface'Class;
   type ICompositionRoundedRectangleGeometry_Ptr is access all ICompositionRoundedRectangleGeometry;

   type ICompositionScopedBatch_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionScopedBatch is access ICompositionScopedBatch_Interface'Class;
   type ICompositionScopedBatch_Ptr is access all ICompositionScopedBatch;

   type ICompositionShadow_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionShadow is access ICompositionShadow_Interface'Class;
   type ICompositionShadow_Ptr is access all ICompositionShadow;

   type ICompositionShadowFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionShadowFactory is access ICompositionShadowFactory_Interface'Class;

   type ICompositionShape_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionShape is access ICompositionShape_Interface'Class;
   type ICompositionShape_Ptr is access all ICompositionShape;
   type ICompositionShape_Array is array (Natural range <>) of ICompositionShape;

   type ICompositionShapeFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionShapeFactory is access ICompositionShapeFactory_Interface'Class;

   type ICompositionSpriteShape_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionSpriteShape is access ICompositionSpriteShape_Interface'Class;
   type ICompositionSpriteShape_Ptr is access all ICompositionSpriteShape;

   type ICompositionSurface_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionSurface is access ICompositionSurface_Interface'Class;

   type ICompositionSurfaceBrush_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionSurfaceBrush is access ICompositionSurfaceBrush_Interface'Class;
   type ICompositionSurfaceBrush_Ptr is access all ICompositionSurfaceBrush;

   type ICompositionSurfaceBrush2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionSurfaceBrush2 is access ICompositionSurfaceBrush2_Interface'Class;

   type ICompositionSurfaceBrush3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionSurfaceBrush3 is access ICompositionSurfaceBrush3_Interface'Class;

   type ICompositionTarget_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionTarget is access ICompositionTarget_Interface'Class;
   type ICompositionTarget_Ptr is access all ICompositionTarget;

   type ICompositionTargetFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionTargetFactory is access ICompositionTargetFactory_Interface'Class;

   type ICompositionTransform_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionTransform is access ICompositionTransform_Interface'Class;
   type ICompositionTransform_Ptr is access all ICompositionTransform;

   type ICompositionTransformFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionTransformFactory is access ICompositionTransformFactory_Interface'Class;

   type ICompositionViewBox_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionViewBox is access ICompositionViewBox_Interface'Class;
   type ICompositionViewBox_Ptr is access all ICompositionViewBox;

   type ICompositionVirtualDrawingSurface_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionVirtualDrawingSurface is access ICompositionVirtualDrawingSurface_Interface'Class;
   type ICompositionVirtualDrawingSurface_Ptr is access all ICompositionVirtualDrawingSurface;

   type ICompositionVirtualDrawingSurfaceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionVirtualDrawingSurfaceFactory is access ICompositionVirtualDrawingSurfaceFactory_Interface'Class;

   type ICompositionVisualSurface_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositionVisualSurface is access ICompositionVisualSurface_Interface'Class;
   type ICompositionVisualSurface_Ptr is access all ICompositionVisualSurface;

   type ICompositor_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositor is access ICompositor_Interface'Class;
   type ICompositor_Ptr is access all ICompositor;

   type ICompositor2_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositor2 is access ICompositor2_Interface'Class;

   type ICompositor3_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositor3 is access ICompositor3_Interface'Class;

   type ICompositor4_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositor4 is access ICompositor4_Interface'Class;

   type ICompositor5_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositor5 is access ICompositor5_Interface'Class;

   type ICompositor6_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositor6 is access ICompositor6_Interface'Class;

   type ICompositorStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositorStatics is access ICompositorStatics_Interface'Class;

   type ICompositorWithProjectedShadow_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositorWithProjectedShadow is access ICompositorWithProjectedShadow_Interface'Class;

   type ICompositorWithRadialGradient_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositorWithRadialGradient is access ICompositorWithRadialGradient_Interface'Class;

   type ICompositorWithVisualSurface_Interface is interface and WinRt.IInspectable_Interface;
   type ICompositorWithVisualSurface is access ICompositorWithVisualSurface_Interface'Class;

   type IContainerVisual_Interface is interface and WinRt.IInspectable_Interface;
   type IContainerVisual is access IContainerVisual_Interface'Class;
   type IContainerVisual_Ptr is access all IContainerVisual;

   type IContainerVisualFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IContainerVisualFactory is access IContainerVisualFactory_Interface'Class;

   type ICubicBezierEasingFunction_Interface is interface and WinRt.IInspectable_Interface;
   type ICubicBezierEasingFunction is access ICubicBezierEasingFunction_Interface'Class;
   type ICubicBezierEasingFunction_Ptr is access all ICubicBezierEasingFunction;

   type IDistantLight_Interface is interface and WinRt.IInspectable_Interface;
   type IDistantLight is access IDistantLight_Interface'Class;
   type IDistantLight_Ptr is access all IDistantLight;

   type IDistantLight2_Interface is interface and WinRt.IInspectable_Interface;
   type IDistantLight2 is access IDistantLight2_Interface'Class;

   type IDropShadow_Interface is interface and WinRt.IInspectable_Interface;
   type IDropShadow is access IDropShadow_Interface'Class;
   type IDropShadow_Ptr is access all IDropShadow;

   type IDropShadow2_Interface is interface and WinRt.IInspectable_Interface;
   type IDropShadow2 is access IDropShadow2_Interface'Class;

   type IExpressionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IExpressionAnimation is access IExpressionAnimation_Interface'Class;
   type IExpressionAnimation_Ptr is access all IExpressionAnimation;

   type IImplicitAnimationCollection_Interface is interface and WinRt.IInspectable_Interface;
   type IImplicitAnimationCollection is access IImplicitAnimationCollection_Interface'Class;
   type IImplicitAnimationCollection_Ptr is access all IImplicitAnimationCollection;

   type IInsetClip_Interface is interface and WinRt.IInspectable_Interface;
   type IInsetClip is access IInsetClip_Interface'Class;
   type IInsetClip_Ptr is access all IInsetClip;

   type IKeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyFrameAnimation is access IKeyFrameAnimation_Interface'Class;
   type IKeyFrameAnimation_Ptr is access all IKeyFrameAnimation;

   type IKeyFrameAnimation2_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyFrameAnimation2 is access IKeyFrameAnimation2_Interface'Class;

   type IKeyFrameAnimation3_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyFrameAnimation3 is access IKeyFrameAnimation3_Interface'Class;

   type IKeyFrameAnimationFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IKeyFrameAnimationFactory is access IKeyFrameAnimationFactory_Interface'Class;

   type ILayerVisual_Interface is interface and WinRt.IInspectable_Interface;
   type ILayerVisual is access ILayerVisual_Interface'Class;
   type ILayerVisual_Ptr is access all ILayerVisual;

   type ILayerVisual2_Interface is interface and WinRt.IInspectable_Interface;
   type ILayerVisual2 is access ILayerVisual2_Interface'Class;

   type ILinearEasingFunction_Interface is interface and WinRt.IInspectable_Interface;
   type ILinearEasingFunction is access ILinearEasingFunction_Interface'Class;
   type ILinearEasingFunction_Ptr is access all ILinearEasingFunction;

   type INaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type INaturalMotionAnimation is access INaturalMotionAnimation_Interface'Class;
   type INaturalMotionAnimation_Ptr is access all INaturalMotionAnimation;

   type INaturalMotionAnimationFactory_Interface is interface and WinRt.IInspectable_Interface;
   type INaturalMotionAnimationFactory is access INaturalMotionAnimationFactory_Interface'Class;

   type IPathKeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IPathKeyFrameAnimation is access IPathKeyFrameAnimation_Interface'Class;
   type IPathKeyFrameAnimation_Ptr is access all IPathKeyFrameAnimation;

   type IPointLight_Interface is interface and WinRt.IInspectable_Interface;
   type IPointLight is access IPointLight_Interface'Class;
   type IPointLight_Ptr is access all IPointLight;

   type IPointLight2_Interface is interface and WinRt.IInspectable_Interface;
   type IPointLight2 is access IPointLight2_Interface'Class;

   type IPointLight3_Interface is interface and WinRt.IInspectable_Interface;
   type IPointLight3 is access IPointLight3_Interface'Class;

   type IQuaternionKeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IQuaternionKeyFrameAnimation is access IQuaternionKeyFrameAnimation_Interface'Class;
   type IQuaternionKeyFrameAnimation_Ptr is access all IQuaternionKeyFrameAnimation;

   type IRedirectVisual_Interface is interface and WinRt.IInspectable_Interface;
   type IRedirectVisual is access IRedirectVisual_Interface'Class;
   type IRedirectVisual_Ptr is access all IRedirectVisual;

   type IRenderingDeviceReplacedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IRenderingDeviceReplacedEventArgs is access IRenderingDeviceReplacedEventArgs_Interface'Class;
   type IRenderingDeviceReplacedEventArgs_Ptr is access all IRenderingDeviceReplacedEventArgs;

   type IScalarKeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IScalarKeyFrameAnimation is access IScalarKeyFrameAnimation_Interface'Class;
   type IScalarKeyFrameAnimation_Ptr is access all IScalarKeyFrameAnimation;

   type IScalarNaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IScalarNaturalMotionAnimation is access IScalarNaturalMotionAnimation_Interface'Class;
   type IScalarNaturalMotionAnimation_Ptr is access all IScalarNaturalMotionAnimation;

   type IScalarNaturalMotionAnimationFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IScalarNaturalMotionAnimationFactory is access IScalarNaturalMotionAnimationFactory_Interface'Class;

   type IShapeVisual_Interface is interface and WinRt.IInspectable_Interface;
   type IShapeVisual is access IShapeVisual_Interface'Class;
   type IShapeVisual_Ptr is access all IShapeVisual;

   type ISpotLight_Interface is interface and WinRt.IInspectable_Interface;
   type ISpotLight is access ISpotLight_Interface'Class;
   type ISpotLight_Ptr is access all ISpotLight;

   type ISpotLight2_Interface is interface and WinRt.IInspectable_Interface;
   type ISpotLight2 is access ISpotLight2_Interface'Class;

   type ISpotLight3_Interface is interface and WinRt.IInspectable_Interface;
   type ISpotLight3 is access ISpotLight3_Interface'Class;

   type ISpringScalarNaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type ISpringScalarNaturalMotionAnimation is access ISpringScalarNaturalMotionAnimation_Interface'Class;
   type ISpringScalarNaturalMotionAnimation_Ptr is access all ISpringScalarNaturalMotionAnimation;

   type ISpringVector2NaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type ISpringVector2NaturalMotionAnimation is access ISpringVector2NaturalMotionAnimation_Interface'Class;
   type ISpringVector2NaturalMotionAnimation_Ptr is access all ISpringVector2NaturalMotionAnimation;

   type ISpringVector3NaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type ISpringVector3NaturalMotionAnimation is access ISpringVector3NaturalMotionAnimation_Interface'Class;
   type ISpringVector3NaturalMotionAnimation_Ptr is access all ISpringVector3NaturalMotionAnimation;

   type ISpriteVisual_Interface is interface and WinRt.IInspectable_Interface;
   type ISpriteVisual is access ISpriteVisual_Interface'Class;
   type ISpriteVisual_Ptr is access all ISpriteVisual;

   type ISpriteVisual2_Interface is interface and WinRt.IInspectable_Interface;
   type ISpriteVisual2 is access ISpriteVisual2_Interface'Class;

   type IStepEasingFunction_Interface is interface and WinRt.IInspectable_Interface;
   type IStepEasingFunction is access IStepEasingFunction_Interface'Class;
   type IStepEasingFunction_Ptr is access all IStepEasingFunction;

   type IVector2KeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IVector2KeyFrameAnimation is access IVector2KeyFrameAnimation_Interface'Class;
   type IVector2KeyFrameAnimation_Ptr is access all IVector2KeyFrameAnimation;

   type IVector2NaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IVector2NaturalMotionAnimation is access IVector2NaturalMotionAnimation_Interface'Class;
   type IVector2NaturalMotionAnimation_Ptr is access all IVector2NaturalMotionAnimation;

   type IVector2NaturalMotionAnimationFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IVector2NaturalMotionAnimationFactory is access IVector2NaturalMotionAnimationFactory_Interface'Class;

   type IVector3KeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IVector3KeyFrameAnimation is access IVector3KeyFrameAnimation_Interface'Class;
   type IVector3KeyFrameAnimation_Ptr is access all IVector3KeyFrameAnimation;

   type IVector3NaturalMotionAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IVector3NaturalMotionAnimation is access IVector3NaturalMotionAnimation_Interface'Class;
   type IVector3NaturalMotionAnimation_Ptr is access all IVector3NaturalMotionAnimation;

   type IVector3NaturalMotionAnimationFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IVector3NaturalMotionAnimationFactory is access IVector3NaturalMotionAnimationFactory_Interface'Class;

   type IVector4KeyFrameAnimation_Interface is interface and WinRt.IInspectable_Interface;
   type IVector4KeyFrameAnimation is access IVector4KeyFrameAnimation_Interface'Class;
   type IVector4KeyFrameAnimation_Ptr is access all IVector4KeyFrameAnimation;

   type IVisual_Interface is interface and WinRt.IInspectable_Interface;
   type IVisual is access IVisual_Interface'Class;
   type IVisual_Ptr is access all IVisual;

   type IVisual2_Interface is interface and WinRt.IInspectable_Interface;
   type IVisual2 is access IVisual2_Interface'Class;

   type IVisual3_Interface is interface and WinRt.IInspectable_Interface;
   type IVisual3 is access IVisual3_Interface'Class;

   type IVisualCollection_Interface is interface and WinRt.IInspectable_Interface;
   type IVisualCollection is access IVisualCollection_Interface'Class;
   type IVisualCollection_Ptr is access all IVisualCollection;

   type IVisualElement_Interface is interface and WinRt.IInspectable_Interface;
   type IVisualElement is access IVisualElement_Interface'Class;

   type IVisualFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IVisualFactory is access IVisualFactory_Interface'Class;

   type IVisualUnorderedCollection_Interface is interface and WinRt.IInspectable_Interface;
   type IVisualUnorderedCollection is access IVisualUnorderedCollection_Interface'Class;
   type IVisualUnorderedCollection_Ptr is access all IVisualUnorderedCollection;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type CompositionObject is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionObject : access Windows.UI.Composition.ICompositionObject;
      end record;
   type CompositionObject_Ptr is access all CompositionObject;

   type CompositionLight is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionLight : access Windows.UI.Composition.ICompositionLight;
      end record;
   type CompositionLight_Ptr is access all CompositionLight;

   type AmbientLight is new Ada.Finalization.Limited_Controlled with
      record
         m_IAmbientLight : access Windows.UI.Composition.IAmbientLight;
      end record;
   type AmbientLight_Ptr is access all AmbientLight;

   type AnimationController is new Ada.Finalization.Limited_Controlled with
      record
         m_IAnimationController : access Windows.UI.Composition.IAnimationController;
      end record;
   type AnimationController_Ptr is access all AnimationController;

   type AnimationPropertyInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IAnimationPropertyInfo : access Windows.UI.Composition.IAnimationPropertyInfo;
      end record;
   type AnimationPropertyInfo_Ptr is access all AnimationPropertyInfo;

   type CompositionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionAnimation : access Windows.UI.Composition.ICompositionAnimation;
      end record;
   type CompositionAnimation_Ptr is access all CompositionAnimation;

   type KeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IKeyFrameAnimation : access Windows.UI.Composition.IKeyFrameAnimation;
      end record;
   type KeyFrameAnimation_Ptr is access all KeyFrameAnimation;

   type BooleanKeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IBooleanKeyFrameAnimation : access Windows.UI.Composition.IBooleanKeyFrameAnimation;
      end record;
   type BooleanKeyFrameAnimation_Ptr is access all BooleanKeyFrameAnimation;

   type NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_INaturalMotionAnimation : access Windows.UI.Composition.INaturalMotionAnimation;
      end record;
   type NaturalMotionAnimation_Ptr is access all NaturalMotionAnimation;

   type ScalarNaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IScalarNaturalMotionAnimation : access Windows.UI.Composition.IScalarNaturalMotionAnimation;
      end record;
   type ScalarNaturalMotionAnimation_Ptr is access all ScalarNaturalMotionAnimation;

   type BounceScalarNaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IBounceScalarNaturalMotionAnimation : access Windows.UI.Composition.IBounceScalarNaturalMotionAnimation;
      end record;
   type BounceScalarNaturalMotionAnimation_Ptr is access all BounceScalarNaturalMotionAnimation;

   type Vector2NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IVector2NaturalMotionAnimation : access Windows.UI.Composition.IVector2NaturalMotionAnimation;
      end record;
   type Vector2NaturalMotionAnimation_Ptr is access all Vector2NaturalMotionAnimation;

   type BounceVector2NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IBounceVector2NaturalMotionAnimation : access Windows.UI.Composition.IBounceVector2NaturalMotionAnimation;
      end record;
   type BounceVector2NaturalMotionAnimation_Ptr is access all BounceVector2NaturalMotionAnimation;

   type Vector3NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IVector3NaturalMotionAnimation : access Windows.UI.Composition.IVector3NaturalMotionAnimation;
      end record;
   type Vector3NaturalMotionAnimation_Ptr is access all Vector3NaturalMotionAnimation;

   type BounceVector3NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IBounceVector3NaturalMotionAnimation : access Windows.UI.Composition.IBounceVector3NaturalMotionAnimation;
      end record;
   type BounceVector3NaturalMotionAnimation_Ptr is access all BounceVector3NaturalMotionAnimation;

   type ColorKeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IColorKeyFrameAnimation : access Windows.UI.Composition.IColorKeyFrameAnimation;
      end record;
   type ColorKeyFrameAnimation_Ptr is access all ColorKeyFrameAnimation;

   type CompositionAnimationGroup is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionAnimationGroup : access Windows.UI.Composition.ICompositionAnimationGroup;
      end record;
   type CompositionAnimationGroup_Ptr is access all CompositionAnimationGroup;

   type CompositionBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionBrush : access Windows.UI.Composition.ICompositionBrush;
      end record;
   type CompositionBrush_Ptr is access all CompositionBrush;

   type CompositionBackdropBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionBackdropBrush : access Windows.UI.Composition.ICompositionBackdropBrush;
      end record;
   type CompositionBackdropBrush_Ptr is access all CompositionBackdropBrush;

   type CompositionBatchCompletedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionBatchCompletedEventArgs : access Windows.UI.Composition.ICompositionBatchCompletedEventArgs;
      end record;
   type CompositionBatchCompletedEventArgs_Ptr is access all CompositionBatchCompletedEventArgs;

   type CompositionCapabilities is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionCapabilities : access Windows.UI.Composition.ICompositionCapabilities;
      end record;
   type CompositionCapabilities_Ptr is access all CompositionCapabilities;

   type CompositionClip is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionClip : access Windows.UI.Composition.ICompositionClip;
      end record;
   type CompositionClip_Ptr is access all CompositionClip;

   type CompositionColorBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionColorBrush : access Windows.UI.Composition.ICompositionColorBrush;
      end record;
   type CompositionColorBrush_Ptr is access all CompositionColorBrush;

   type CompositionColorGradientStop is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionColorGradientStop : access Windows.UI.Composition.ICompositionColorGradientStop;
      end record;
   type CompositionColorGradientStop_Ptr is access all CompositionColorGradientStop;

   type CompositionColorGradientStopCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionColorGradientStopCollection : access Windows.UI.Composition.ICompositionColorGradientStopCollection;
      end record;
   type CompositionColorGradientStopCollection_Ptr is access all CompositionColorGradientStopCollection;

   type CompositionCommitBatch is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionCommitBatch : access Windows.UI.Composition.ICompositionCommitBatch;
      end record;
   type CompositionCommitBatch_Ptr is access all CompositionCommitBatch;

   type CompositionShape is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionShape : access Windows.UI.Composition.ICompositionShape;
      end record;
   type CompositionShape_Ptr is access all CompositionShape;

   type CompositionContainerShape is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionContainerShape : access Windows.UI.Composition.ICompositionContainerShape;
      end record;
   type CompositionContainerShape_Ptr is access all CompositionContainerShape;

   type CompositionDrawingSurface is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionDrawingSurface : access Windows.UI.Composition.ICompositionDrawingSurface;
      end record;
   type CompositionDrawingSurface_Ptr is access all CompositionDrawingSurface;

   type CompositionEasingFunction is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionEasingFunction : access Windows.UI.Composition.ICompositionEasingFunction;
      end record;
   type CompositionEasingFunction_Ptr is access all CompositionEasingFunction;

   type CompositionEffectBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionEffectBrush : access Windows.UI.Composition.ICompositionEffectBrush;
      end record;
   type CompositionEffectBrush_Ptr is access all CompositionEffectBrush;

   type CompositionEffectFactory is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionEffectFactory : access Windows.UI.Composition.ICompositionEffectFactory;
      end record;
   type CompositionEffectFactory_Ptr is access all CompositionEffectFactory;

   type CompositionEffectSourceParameter is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionEffectSourceParameter : access Windows.UI.Composition.ICompositionEffectSourceParameter;
      end record;
   type CompositionEffectSourceParameter_Ptr is access all CompositionEffectSourceParameter;

   type CompositionGeometry is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionGeometry : access Windows.UI.Composition.ICompositionGeometry;
      end record;
   type CompositionGeometry_Ptr is access all CompositionGeometry;

   type CompositionEllipseGeometry is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionEllipseGeometry : access Windows.UI.Composition.ICompositionEllipseGeometry;
      end record;
   type CompositionEllipseGeometry_Ptr is access all CompositionEllipseGeometry;

   type CompositionGeometricClip is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionGeometricClip : access Windows.UI.Composition.ICompositionGeometricClip;
      end record;
   type CompositionGeometricClip_Ptr is access all CompositionGeometricClip;

   type CompositionGradientBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionGradientBrush : access Windows.UI.Composition.ICompositionGradientBrush;
      end record;
   type CompositionGradientBrush_Ptr is access all CompositionGradientBrush;

   type CompositionGraphicsDevice is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionGraphicsDevice : access Windows.UI.Composition.ICompositionGraphicsDevice;
      end record;
   type CompositionGraphicsDevice_Ptr is access all CompositionGraphicsDevice;

   type CompositionLineGeometry is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionLineGeometry : access Windows.UI.Composition.ICompositionLineGeometry;
      end record;
   type CompositionLineGeometry_Ptr is access all CompositionLineGeometry;

   type CompositionLinearGradientBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionLinearGradientBrush : access Windows.UI.Composition.ICompositionLinearGradientBrush;
      end record;
   type CompositionLinearGradientBrush_Ptr is access all CompositionLinearGradientBrush;

   type CompositionMaskBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionMaskBrush : access Windows.UI.Composition.ICompositionMaskBrush;
      end record;
   type CompositionMaskBrush_Ptr is access all CompositionMaskBrush;

   type CompositionMipmapSurface is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionMipmapSurface : access Windows.UI.Composition.ICompositionMipmapSurface;
      end record;
   type CompositionMipmapSurface_Ptr is access all CompositionMipmapSurface;

   type CompositionNineGridBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionNineGridBrush : access Windows.UI.Composition.ICompositionNineGridBrush;
      end record;
   type CompositionNineGridBrush_Ptr is access all CompositionNineGridBrush;

   type CompositionPath is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionPath : access Windows.UI.Composition.ICompositionPath;
      end record;
   type CompositionPath_Ptr is access all CompositionPath;

   type CompositionPathGeometry is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionPathGeometry : access Windows.UI.Composition.ICompositionPathGeometry;
      end record;
   type CompositionPathGeometry_Ptr is access all CompositionPathGeometry;

   type CompositionProjectedShadow is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionProjectedShadow : access Windows.UI.Composition.ICompositionProjectedShadow;
      end record;
   type CompositionProjectedShadow_Ptr is access all CompositionProjectedShadow;

   type CompositionProjectedShadowCaster is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionProjectedShadowCaster : access Windows.UI.Composition.ICompositionProjectedShadowCaster;
      end record;
   type CompositionProjectedShadowCaster_Ptr is access all CompositionProjectedShadowCaster;

   type CompositionProjectedShadowCasterCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionProjectedShadowCasterCollection : access Windows.UI.Composition.ICompositionProjectedShadowCasterCollection;
      end record;
   type CompositionProjectedShadowCasterCollection_Ptr is access all CompositionProjectedShadowCasterCollection;

   type CompositionProjectedShadowReceiver is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionProjectedShadowReceiver : access Windows.UI.Composition.ICompositionProjectedShadowReceiver;
      end record;
   type CompositionProjectedShadowReceiver_Ptr is access all CompositionProjectedShadowReceiver;

   type CompositionProjectedShadowReceiverUnorderedCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionProjectedShadowReceiverUnorderedCollection : access Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection;
      end record;
   type CompositionProjectedShadowReceiverUnorderedCollection_Ptr is access all CompositionProjectedShadowReceiverUnorderedCollection;

   type CompositionPropertySet is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionPropertySet : access Windows.UI.Composition.ICompositionPropertySet;
      end record;
   type CompositionPropertySet_Ptr is access all CompositionPropertySet;

   type CompositionRadialGradientBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionRadialGradientBrush : access Windows.UI.Composition.ICompositionRadialGradientBrush;
      end record;
   type CompositionRadialGradientBrush_Ptr is access all CompositionRadialGradientBrush;

   type CompositionRectangleGeometry is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionRectangleGeometry : access Windows.UI.Composition.ICompositionRectangleGeometry;
      end record;
   type CompositionRectangleGeometry_Ptr is access all CompositionRectangleGeometry;

   type CompositionRoundedRectangleGeometry is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionRoundedRectangleGeometry : access Windows.UI.Composition.ICompositionRoundedRectangleGeometry;
      end record;
   type CompositionRoundedRectangleGeometry_Ptr is access all CompositionRoundedRectangleGeometry;

   type CompositionScopedBatch is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionScopedBatch : access Windows.UI.Composition.ICompositionScopedBatch;
      end record;
   type CompositionScopedBatch_Ptr is access all CompositionScopedBatch;

   type CompositionShadow is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionShadow : access Windows.UI.Composition.ICompositionShadow;
      end record;
   type CompositionShadow_Ptr is access all CompositionShadow;

   type CompositionShapeCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_GenericObject : access GenericObject;
      end record;
   type CompositionShapeCollection_Ptr is access all CompositionShapeCollection;

   type CompositionSpriteShape is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionSpriteShape : access Windows.UI.Composition.ICompositionSpriteShape;
      end record;
   type CompositionSpriteShape_Ptr is access all CompositionSpriteShape;

   type CompositionStrokeDashArray is new Ada.Finalization.Limited_Controlled with
      record
         m_GenericObject : access GenericObject;
      end record;
   type CompositionStrokeDashArray_Ptr is access all CompositionStrokeDashArray;

   type CompositionSurfaceBrush is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionSurfaceBrush : access Windows.UI.Composition.ICompositionSurfaceBrush;
      end record;
   type CompositionSurfaceBrush_Ptr is access all CompositionSurfaceBrush;

   type CompositionTarget is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionTarget : access Windows.UI.Composition.ICompositionTarget;
      end record;
   type CompositionTarget_Ptr is access all CompositionTarget;

   type CompositionTransform is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionTransform : access Windows.UI.Composition.ICompositionTransform;
      end record;
   type CompositionTransform_Ptr is access all CompositionTransform;

   type CompositionViewBox is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionViewBox : access Windows.UI.Composition.ICompositionViewBox;
      end record;
   type CompositionViewBox_Ptr is access all CompositionViewBox;

   type CompositionVirtualDrawingSurface is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionVirtualDrawingSurface : access Windows.UI.Composition.ICompositionVirtualDrawingSurface;
      end record;
   type CompositionVirtualDrawingSurface_Ptr is access all CompositionVirtualDrawingSurface;

   type CompositionVisualSurface is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositionVisualSurface : access Windows.UI.Composition.ICompositionVisualSurface;
      end record;
   type CompositionVisualSurface_Ptr is access all CompositionVisualSurface;

   type Compositor is new Ada.Finalization.Limited_Controlled with
      record
         m_ICompositor : access Windows.UI.Composition.ICompositor;
      end record;
   type Compositor_Ptr is access all Compositor;

   type Visual is new Ada.Finalization.Limited_Controlled with
      record
         m_IVisual : access Windows.UI.Composition.IVisual;
      end record;
   type Visual_Ptr is access all Visual;

   type ContainerVisual is new Ada.Finalization.Limited_Controlled with
      record
         m_IContainerVisual : access Windows.UI.Composition.IContainerVisual;
      end record;
   type ContainerVisual_Ptr is access all ContainerVisual;

   type CubicBezierEasingFunction is new Ada.Finalization.Limited_Controlled with
      record
         m_ICubicBezierEasingFunction : access Windows.UI.Composition.ICubicBezierEasingFunction;
      end record;
   type CubicBezierEasingFunction_Ptr is access all CubicBezierEasingFunction;

   type DistantLight is new Ada.Finalization.Limited_Controlled with
      record
         m_IDistantLight : access Windows.UI.Composition.IDistantLight;
      end record;
   type DistantLight_Ptr is access all DistantLight;

   type DropShadow is new Ada.Finalization.Limited_Controlled with
      record
         m_IDropShadow : access Windows.UI.Composition.IDropShadow;
      end record;
   type DropShadow_Ptr is access all DropShadow;

   type ExpressionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IExpressionAnimation : access Windows.UI.Composition.IExpressionAnimation;
      end record;
   type ExpressionAnimation_Ptr is access all ExpressionAnimation;

   type ImplicitAnimationCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_IImplicitAnimationCollection : access Windows.UI.Composition.IImplicitAnimationCollection;
      end record;
   type ImplicitAnimationCollection_Ptr is access all ImplicitAnimationCollection;

   type InitialValueExpressionCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_GenericObject : access GenericObject;
      end record;
   type InitialValueExpressionCollection_Ptr is access all InitialValueExpressionCollection;

   type InsetClip is new Ada.Finalization.Limited_Controlled with
      record
         m_IInsetClip : access Windows.UI.Composition.IInsetClip;
      end record;
   type InsetClip_Ptr is access all InsetClip;

   type LayerVisual is new Ada.Finalization.Limited_Controlled with
      record
         m_ILayerVisual : access Windows.UI.Composition.ILayerVisual;
      end record;
   type LayerVisual_Ptr is access all LayerVisual;

   type LinearEasingFunction is new Ada.Finalization.Limited_Controlled with
      record
         m_ILinearEasingFunction : access Windows.UI.Composition.ILinearEasingFunction;
      end record;
   type LinearEasingFunction_Ptr is access all LinearEasingFunction;

   type PathKeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IPathKeyFrameAnimation : access Windows.UI.Composition.IPathKeyFrameAnimation;
      end record;
   type PathKeyFrameAnimation_Ptr is access all PathKeyFrameAnimation;

   type PointLight is new Ada.Finalization.Limited_Controlled with
      record
         m_IPointLight : access Windows.UI.Composition.IPointLight;
      end record;
   type PointLight_Ptr is access all PointLight;

   type QuaternionKeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IQuaternionKeyFrameAnimation : access Windows.UI.Composition.IQuaternionKeyFrameAnimation;
      end record;
   type QuaternionKeyFrameAnimation_Ptr is access all QuaternionKeyFrameAnimation;

   type RedirectVisual is new Ada.Finalization.Limited_Controlled with
      record
         m_IRedirectVisual : access Windows.UI.Composition.IRedirectVisual;
      end record;
   type RedirectVisual_Ptr is access all RedirectVisual;

   type RenderingDeviceReplacedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IRenderingDeviceReplacedEventArgs : access Windows.UI.Composition.IRenderingDeviceReplacedEventArgs;
      end record;
   type RenderingDeviceReplacedEventArgs_Ptr is access all RenderingDeviceReplacedEventArgs;

   type ScalarKeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IScalarKeyFrameAnimation : access Windows.UI.Composition.IScalarKeyFrameAnimation;
      end record;
   type ScalarKeyFrameAnimation_Ptr is access all ScalarKeyFrameAnimation;

   type ShapeVisual is new Ada.Finalization.Limited_Controlled with
      record
         m_IShapeVisual : access Windows.UI.Composition.IShapeVisual;
      end record;
   type ShapeVisual_Ptr is access all ShapeVisual;

   type SpotLight is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpotLight : access Windows.UI.Composition.ISpotLight;
      end record;
   type SpotLight_Ptr is access all SpotLight;

   type SpringScalarNaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpringScalarNaturalMotionAnimation : access Windows.UI.Composition.ISpringScalarNaturalMotionAnimation;
      end record;
   type SpringScalarNaturalMotionAnimation_Ptr is access all SpringScalarNaturalMotionAnimation;

   type SpringVector2NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpringVector2NaturalMotionAnimation : access Windows.UI.Composition.ISpringVector2NaturalMotionAnimation;
      end record;
   type SpringVector2NaturalMotionAnimation_Ptr is access all SpringVector2NaturalMotionAnimation;

   type SpringVector3NaturalMotionAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpringVector3NaturalMotionAnimation : access Windows.UI.Composition.ISpringVector3NaturalMotionAnimation;
      end record;
   type SpringVector3NaturalMotionAnimation_Ptr is access all SpringVector3NaturalMotionAnimation;

   type SpriteVisual is new Ada.Finalization.Limited_Controlled with
      record
         m_ISpriteVisual : access Windows.UI.Composition.ISpriteVisual;
      end record;
   type SpriteVisual_Ptr is access all SpriteVisual;

   type StepEasingFunction is new Ada.Finalization.Limited_Controlled with
      record
         m_IStepEasingFunction : access Windows.UI.Composition.IStepEasingFunction;
      end record;
   type StepEasingFunction_Ptr is access all StepEasingFunction;

   type Vector2KeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IVector2KeyFrameAnimation : access Windows.UI.Composition.IVector2KeyFrameAnimation;
      end record;
   type Vector2KeyFrameAnimation_Ptr is access all Vector2KeyFrameAnimation;

   type Vector3KeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IVector3KeyFrameAnimation : access Windows.UI.Composition.IVector3KeyFrameAnimation;
      end record;
   type Vector3KeyFrameAnimation_Ptr is access all Vector3KeyFrameAnimation;

   type Vector4KeyFrameAnimation is new Ada.Finalization.Limited_Controlled with
      record
         m_IVector4KeyFrameAnimation : access Windows.UI.Composition.IVector4KeyFrameAnimation;
      end record;
   type Vector4KeyFrameAnimation_Ptr is access all Vector4KeyFrameAnimation;

   type VisualCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_IVisualCollection : access Windows.UI.Composition.IVisualCollection;
      end record;
   type VisualCollection_Ptr is access all VisualCollection;

   type VisualUnorderedCollection is new Ada.Finalization.Limited_Controlled with
      record
         m_IVisualUnorderedCollection : access Windows.UI.Composition.IVisualUnorderedCollection;
      end record;
   type VisualUnorderedCollection_Ptr is access all VisualUnorderedCollection;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type AnimationControllerProgressBehavior is (
      Default_e,
      IncludesDelayTime_e
   );
   for AnimationControllerProgressBehavior use (
      Default_e => 0,
      IncludesDelayTime_e => 1
   );
   type AnimationControllerProgressBehavior_Ptr is access all AnimationControllerProgressBehavior;

   type AnimationDelayBehavior is (
      SetInitialValueAfterDelay_e,
      SetInitialValueBeforeDelay_e
   );
   for AnimationDelayBehavior use (
      SetInitialValueAfterDelay_e => 0,
      SetInitialValueBeforeDelay_e => 1
   );
   type AnimationDelayBehavior_Ptr is access all AnimationDelayBehavior;

   type AnimationDirection is (
      Normal_e,
      Reverse_e,
      Alternate_e,
      AlternateReverse_e
   );
   for AnimationDirection use (
      Normal_e => 0,
      Reverse_e => 1,
      Alternate_e => 2,
      AlternateReverse_e => 3
   );
   type AnimationDirection_Ptr is access all AnimationDirection;

   type AnimationIterationBehavior is (
      Count_e,
      Forever_e
   );
   for AnimationIterationBehavior use (
      Count_e => 0,
      Forever_e => 1
   );
   type AnimationIterationBehavior_Ptr is access all AnimationIterationBehavior;

   type AnimationPropertyAccessMode is (
      None_e,
      ReadOnly_e,
      WriteOnly_e,
      ReadWrite_e
   );
   for AnimationPropertyAccessMode use (
      None_e => 0,
      ReadOnly_e => 1,
      WriteOnly_e => 2,
      ReadWrite_e => 3
   );
   type AnimationPropertyAccessMode_Ptr is access all AnimationPropertyAccessMode;

   type AnimationStopBehavior is (
      LeaveCurrentValue_e,
      SetToInitialValue_e,
      SetToFinalValue_e
   );
   for AnimationStopBehavior use (
      LeaveCurrentValue_e => 0,
      SetToInitialValue_e => 1,
      SetToFinalValue_e => 2
   );
   type AnimationStopBehavior_Ptr is access all AnimationStopBehavior;

   type CompositionBackfaceVisibility is (
      Inherit_e,
      Visible_e,
      Hidden_e
   );
   for CompositionBackfaceVisibility use (
      Inherit_e => 0,
      Visible_e => 1,
      Hidden_e => 2
   );
   type CompositionBackfaceVisibility_Ptr is access all CompositionBackfaceVisibility;

   type CompositionBatchTypes is (
      None_e,
      Animation_e,
      Effect_e,
      InfiniteAnimation_e,
      AllAnimations_e
   );
   for CompositionBatchTypes use (
      None_e => 0,
      Animation_e => 1,
      Effect_e => 2,
      InfiniteAnimation_e => 4,
      AllAnimations_e => 5
   );
   type CompositionBatchTypes_Ptr is access all CompositionBatchTypes;

   type CompositionBitmapInterpolationMode is (
      NearestNeighbor_e,
      Linear_e,
      MagLinearMinLinearMipLinear_e,
      MagLinearMinLinearMipNearest_e,
      MagLinearMinNearestMipLinear_e,
      MagLinearMinNearestMipNearest_e,
      MagNearestMinLinearMipLinear_e,
      MagNearestMinLinearMipNearest_e,
      MagNearestMinNearestMipLinear_e,
      MagNearestMinNearestMipNearest_e
   );
   for CompositionBitmapInterpolationMode use (
      NearestNeighbor_e => 0,
      Linear_e => 1,
      MagLinearMinLinearMipLinear_e => 2,
      MagLinearMinLinearMipNearest_e => 3,
      MagLinearMinNearestMipLinear_e => 4,
      MagLinearMinNearestMipNearest_e => 5,
      MagNearestMinLinearMipLinear_e => 6,
      MagNearestMinLinearMipNearest_e => 7,
      MagNearestMinNearestMipLinear_e => 8,
      MagNearestMinNearestMipNearest_e => 9
   );
   type CompositionBitmapInterpolationMode_Ptr is access all CompositionBitmapInterpolationMode;

   type CompositionBorderMode is (
      Inherit_e,
      Soft_e,
      Hard_e
   );
   for CompositionBorderMode use (
      Inherit_e => 0,
      Soft_e => 1,
      Hard_e => 2
   );
   type CompositionBorderMode_Ptr is access all CompositionBorderMode;

   type CompositionColorSpace is (
      Auto_e,
      Hsl_e,
      Rgb_e,
      HslLinear_e,
      RgbLinear_e
   );
   for CompositionColorSpace use (
      Auto_e => 0,
      Hsl_e => 1,
      Rgb_e => 2,
      HslLinear_e => 3,
      RgbLinear_e => 4
   );
   type CompositionColorSpace_Ptr is access all CompositionColorSpace;

   type CompositionCompositeMode is (
      Inherit_e,
      SourceOver_e,
      DestinationInvert_e,
      MinBlend_e
   );
   for CompositionCompositeMode use (
      Inherit_e => 0,
      SourceOver_e => 1,
      DestinationInvert_e => 2,
      MinBlend_e => 3
   );
   type CompositionCompositeMode_Ptr is access all CompositionCompositeMode;

   type CompositionDropShadowSourcePolicy is (
      Default_e,
      InheritFromVisualContent_e
   );
   for CompositionDropShadowSourcePolicy use (
      Default_e => 0,
      InheritFromVisualContent_e => 1
   );
   type CompositionDropShadowSourcePolicy_Ptr is access all CompositionDropShadowSourcePolicy;

   type CompositionEffectFactoryLoadStatus is (
      Other_e,
      Success_e,
      EffectTooComplex_e,
      Pending_e
   );
   for CompositionEffectFactoryLoadStatus use (
      Other_e => -1,
      Success_e => 0,
      EffectTooComplex_e => 1,
      Pending_e => 2
   );
   type CompositionEffectFactoryLoadStatus_Ptr is access all CompositionEffectFactoryLoadStatus;

   type CompositionGetValueStatus is (
      Succeeded_e,
      TypeMismatch_e,
      NotFound_e
   );
   for CompositionGetValueStatus use (
      Succeeded_e => 0,
      TypeMismatch_e => 1,
      NotFound_e => 2
   );
   type CompositionGetValueStatus_Ptr is access all CompositionGetValueStatus;

   type CompositionGradientExtendMode is (
      Clamp_e,
      Wrap_e,
      Mirror_e
   );
   for CompositionGradientExtendMode use (
      Clamp_e => 0,
      Wrap_e => 1,
      Mirror_e => 2
   );
   type CompositionGradientExtendMode_Ptr is access all CompositionGradientExtendMode;

   type CompositionMappingMode is (
      Absolute_e,
      Relative_e
   );
   for CompositionMappingMode use (
      Absolute_e => 0,
      Relative_e => 1
   );
   type CompositionMappingMode_Ptr is access all CompositionMappingMode;

   type CompositionStretch is (
      None_e,
      Fill_e,
      Uniform_e,
      UniformToFill_e
   );
   for CompositionStretch use (
      None_e => 0,
      Fill_e => 1,
      Uniform_e => 2,
      UniformToFill_e => 3
   );
   type CompositionStretch_Ptr is access all CompositionStretch;

   type CompositionStrokeCap is (
      Flat_e,
      Square_e,
      Round_e,
      Triangle_e
   );
   for CompositionStrokeCap use (
      Flat_e => 0,
      Square_e => 1,
      Round_e => 2,
      Triangle_e => 3
   );
   type CompositionStrokeCap_Ptr is access all CompositionStrokeCap;

   type CompositionStrokeLineJoin is (
      Miter_e,
      Bevel_e,
      Round_e,
      MiterOrBevel_e
   );
   for CompositionStrokeLineJoin use (
      Miter_e => 0,
      Bevel_e => 1,
      Round_e => 2,
      MiterOrBevel_e => 3
   );
   type CompositionStrokeLineJoin_Ptr is access all CompositionStrokeLineJoin;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IReference_Single is new WinRt.Windows.Foundation.IReference (WinRt.Single);
   IID_IReference_Single : aliased WinRt.IID := (3939873844, 6135, 21177, (186, 243, 134, 122, 106, 63, 224, 78 ));
   function QInterface_IReference_Single is new Generic_QueryInterface (GenericObject_Interface, IReference_Single.Kind, IID_IReference_Single'Access);

   package IReference_Vector2 is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.Numerics.Vector2);
   IID_IReference_Vector2 : aliased WinRt.IID := (1736061885, 29176, 24201, (144, 179, 45, 139, 146, 87, 68, 193 ));
   function QInterface_IReference_Vector2 is new Generic_QueryInterface (GenericObject_Interface, IReference_Vector2.Kind, IID_IReference_Vector2'Access);

   package IReference_Vector3 is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.Numerics.Vector3);
   IID_IReference_Vector3 : aliased WinRt.IID := (2922094771, 29313, 22834, (139, 52, 153, 65, 123, 197, 138, 89 ));
   function QInterface_IReference_Vector3 is new Generic_QueryInterface (GenericObject_Interface, IReference_Vector3.Kind, IID_IReference_Vector3'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IAmbientLight is interface and WinRt.IInspectable;

      function get_Color
      (
         this : access IAmbientLight_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_Color
      (
         this : access IAmbientLight_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      IID_IAmbientLight : aliased WinRt.IID := (2759930017, 47044, 18167, (185, 191, 218, 244, 58, 68, 230, 238 ));

   -----------------------------------------------------------------------------
   -- type IAmbientLight2 is interface and WinRt.IInspectable;

      function get_Intensity
      (
         this : access IAmbientLight2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Intensity
      (
         this : access IAmbientLight2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IAmbientLight2 : aliased WinRt.IID := (996452031, 24471, 19604, (134, 229, 4, 45, 211, 134, 178, 125 ));

   -----------------------------------------------------------------------------
   -- type IAnimationController is interface and WinRt.IInspectable;

      function get_PlaybackRate
      (
         this : access IAnimationController_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_PlaybackRate
      (
         this : access IAnimationController_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Progress
      (
         this : access IAnimationController_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Progress
      (
         this : access IAnimationController_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_ProgressBehavior
      (
         this : access IAnimationController_Interface;
         RetVal : access Windows.UI.Composition.AnimationControllerProgressBehavior
      )
      return WinRt.Hresult is abstract;

      function put_ProgressBehavior
      (
         this : access IAnimationController_Interface;
         value : Windows.UI.Composition.AnimationControllerProgressBehavior
      )
      return WinRt.Hresult is abstract;

      function Pause
      (
         this : access IAnimationController_Interface
      )
      return WinRt.Hresult is abstract;

      function Resume
      (
         this : access IAnimationController_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IAnimationController : aliased WinRt.IID := (3375689682, 1826, 20319, (164, 226, 149, 16, 243, 212, 59, 247 ));

   -----------------------------------------------------------------------------
   -- type IAnimationControllerStatics is interface and WinRt.IInspectable;

      function get_MaxPlaybackRate
      (
         this : access IAnimationControllerStatics_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MinPlaybackRate
      (
         this : access IAnimationControllerStatics_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IAnimationControllerStatics : aliased WinRt.IID := (3876676831, 25883, 18432, (185, 229, 106, 59, 207, 237, 51, 101 ));

   -----------------------------------------------------------------------------
   -- type IAnimationObject is interface and WinRt.IInspectable;

      function PopulatePropertyInfo
      (
         this : access IAnimationObject_Interface;
         propertyName : WinRt.HString;
         propertyInfo : Windows.UI.Composition.IAnimationPropertyInfo
      )
      return WinRt.Hresult is abstract;

      IID_IAnimationObject : aliased WinRt.IID := (3876855306, 1208, 20421, (164, 220, 25, 83, 146, 229, 120, 7 ));

   -----------------------------------------------------------------------------
   -- type IAnimationPropertyInfo is interface and WinRt.IInspectable;

      function get_AccessMode
      (
         this : access IAnimationPropertyInfo_Interface;
         RetVal : access Windows.UI.Composition.AnimationPropertyAccessMode
      )
      return WinRt.Hresult is abstract;

      function put_AccessMode
      (
         this : access IAnimationPropertyInfo_Interface;
         value : Windows.UI.Composition.AnimationPropertyAccessMode
      )
      return WinRt.Hresult is abstract;

      IID_IAnimationPropertyInfo : aliased WinRt.IID := (4101074693, 60791, 20028, (179, 40, 92, 57, 133, 179, 115, 143 ));

   -----------------------------------------------------------------------------
   -- type IBooleanKeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IBooleanKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IBooleanKeyFrameAnimation : aliased WinRt.IID := (2514631176, 53748, 18802, (151, 112, 62, 254, 104, 216, 46, 20 ));

   -----------------------------------------------------------------------------
   -- type IBounceScalarNaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_Acceleration
      (
         this : access IBounceScalarNaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Acceleration
      (
         this : access IBounceScalarNaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Restitution
      (
         this : access IBounceScalarNaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Restitution
      (
         this : access IBounceScalarNaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IBounceScalarNaturalMotionAnimation : aliased WinRt.IID := (3131248076, 42547, 17944, (155, 6, 127, 124, 114, 200, 124, 255 ));

   -----------------------------------------------------------------------------
   -- type IBounceVector2NaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_Acceleration
      (
         this : access IBounceVector2NaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Acceleration
      (
         this : access IBounceVector2NaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Restitution
      (
         this : access IBounceVector2NaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Restitution
      (
         this : access IBounceVector2NaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IBounceVector2NaturalMotionAnimation : aliased WinRt.IID := (3660857750, 8532, 19260, (136, 170, 71, 54, 18, 4, 236, 205 ));

   -----------------------------------------------------------------------------
   -- type IBounceVector3NaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_Acceleration
      (
         this : access IBounceVector3NaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Acceleration
      (
         this : access IBounceVector3NaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Restitution
      (
         this : access IBounceVector3NaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Restitution
      (
         this : access IBounceVector3NaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IBounceVector3NaturalMotionAnimation : aliased WinRt.IID := (1205517361, 4307, 17688, (134, 241, 9, 202, 247, 66, 209, 19 ));

   -----------------------------------------------------------------------------
   -- type IColorKeyFrameAnimation is interface and WinRt.IInspectable;

      function get_InterpolationColorSpace
      (
         this : access IColorKeyFrameAnimation_Interface;
         RetVal : access Windows.UI.Composition.CompositionColorSpace
      )
      return WinRt.Hresult is abstract;

      function put_InterpolationColorSpace
      (
         this : access IColorKeyFrameAnimation_Interface;
         value : Windows.UI.Composition.CompositionColorSpace
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IColorKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IColorKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.UI.Color;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IColorKeyFrameAnimation : aliased WinRt.IID := (2477635049, 36357, 17811, (132, 163, 220, 161, 82, 120, 30, 86 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimation is interface and WinRt.IInspectable;

      function ClearAllParameters
      (
         this : access ICompositionAnimation_Interface
      )
      return WinRt.Hresult is abstract;

      function ClearParameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function SetColorParameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function SetMatrix3x2Parameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      function SetMatrix4x4Parameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.Foundation.Numerics.Matrix4x4
      )
      return WinRt.Hresult is abstract;

      function SetQuaternionParameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function SetReferenceParameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         compositionObject_p : Windows.UI.Composition.ICompositionObject
      )
      return WinRt.Hresult is abstract;

      function SetScalarParameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function SetVector2Parameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function SetVector3Parameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function SetVector4Parameter
      (
         this : access ICompositionAnimation_Interface;
         key : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector4
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionAnimation : aliased WinRt.IID := (1179405356, 7338, 16481, (155, 64, 225, 63, 222, 21, 3, 202 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimation2 is interface and WinRt.IInspectable;

      function SetBooleanParameter
      (
         this : access ICompositionAnimation2_Interface;
         key : WinRt.HString;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Target
      (
         this : access ICompositionAnimation2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Target
      (
         this : access ICompositionAnimation2_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionAnimation2 : aliased WinRt.IID := (916152382, 43023, 18760, (147, 227, 237, 35, 251, 56, 198, 203 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimation3 is interface and WinRt.IInspectable;

      function get_InitialValueExpressions
      (
         this : access ICompositionAnimation3_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionAnimation3 : aliased WinRt.IID := (3575513869, 32164, 19415, (188, 45, 244, 81, 117, 41, 244, 58 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimation4 is interface and WinRt.IInspectable;

      function SetExpressionReferenceParameter
      (
         this : access ICompositionAnimation4_Interface;
         parameterName : WinRt.HString;
         source : Windows.UI.Composition.IAnimationObject
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionAnimation4 : aliased WinRt.IID := (1996568510, 30396, 20003, (191, 237, 254, 156, 194, 15, 110, 201 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimationBase is interface and WinRt.IInspectable;

      IID_ICompositionAnimationBase : aliased WinRt.IID := (472656281, 59416, 18643, (166, 221, 215, 140, 130, 248, 172, 233 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimationFactory is interface and WinRt.IInspectable;

      IID_ICompositionAnimationFactory : aliased WinRt.IID := (284607739, 28241, 19493, (187, 211, 88, 106, 155, 236, 62, 244 ));

   -----------------------------------------------------------------------------
   -- type ICompositionAnimationGroup is interface and WinRt.IInspectable;

      function get_Count
      (
         this : access ICompositionAnimationGroup_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function Add
      (
         this : access ICompositionAnimationGroup_Interface;
         value : Windows.UI.Composition.ICompositionAnimation
      )
      return WinRt.Hresult is abstract;

      function Remove
      (
         this : access ICompositionAnimationGroup_Interface;
         value : Windows.UI.Composition.ICompositionAnimation
      )
      return WinRt.Hresult is abstract;

      function RemoveAll
      (
         this : access ICompositionAnimationGroup_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionAnimationGroup : aliased WinRt.IID := (1585236236, 52500, 19975, (138, 85, 199, 37, 39, 170, 189, 172 ));

   -----------------------------------------------------------------------------
   -- type ICompositionBackdropBrush is interface and WinRt.IInspectable;

      IID_ICompositionBackdropBrush : aliased WinRt.IID := (3316428376, 14488, 18846, (141, 127, 34, 78, 145, 40, 106, 93 ));

   -----------------------------------------------------------------------------
   -- type ICompositionBatchCompletedEventArgs is interface and WinRt.IInspectable;

      IID_ICompositionBatchCompletedEventArgs : aliased WinRt.IID := (218159824, 37988, 17674, (165, 98, 46, 38, 152, 176, 168, 18 ));

   -----------------------------------------------------------------------------
   -- type ICompositionBrush is interface and WinRt.IInspectable;

      IID_ICompositionBrush : aliased WinRt.IID := (2869786120, 12480, 16617, (181, 104, 182, 10, 107, 209, 251, 70 ));

   -----------------------------------------------------------------------------
   -- type ICompositionBrushFactory is interface and WinRt.IInspectable;

      IID_ICompositionBrushFactory : aliased WinRt.IID := (3662936908, 18000, 18372, (173, 118, 118, 83, 121, 96, 126, 214 ));

   -----------------------------------------------------------------------------
   -- type ICompositionCapabilities is interface and WinRt.IInspectable;

      function AreEffectsSupported
      (
         this : access ICompositionCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function AreEffectsFast
      (
         this : access ICompositionCapabilities_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function add_Changed
      (
         this : access ICompositionCapabilities_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Changed
      (
         this : access ICompositionCapabilities_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionCapabilities : aliased WinRt.IID := (2186491198, 46359, 18620, (177, 232, 75, 53, 97, 162, 225, 129 ));

   -----------------------------------------------------------------------------
   -- type ICompositionCapabilitiesStatics is interface and WinRt.IInspectable;

      function GetForCurrentView
      (
         this : access ICompositionCapabilitiesStatics_Interface;
         RetVal : access Windows.UI.Composition.ICompositionCapabilities
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionCapabilitiesStatics : aliased WinRt.IID := (4156008558, 25622, 18917, (141, 223, 175, 233, 73, 226, 5, 98 ));

   -----------------------------------------------------------------------------
   -- type ICompositionClip is interface and WinRt.IInspectable;

      IID_ICompositionClip : aliased WinRt.IID := (483207762, 53191, 19150, (153, 131, 20, 107, 184, 235, 106, 60 ));

   -----------------------------------------------------------------------------
   -- type ICompositionClip2 is interface and WinRt.IInspectable;

      function get_AnchorPoint
      (
         this : access ICompositionClip2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_AnchorPoint
      (
         this : access ICompositionClip2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_CenterPoint
      (
         this : access ICompositionClip2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_CenterPoint
      (
         this : access ICompositionClip2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionClip2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionClip2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngle
      (
         this : access ICompositionClip2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngle
      (
         this : access ICompositionClip2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngleInDegrees
      (
         this : access ICompositionClip2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngleInDegrees
      (
         this : access ICompositionClip2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access ICompositionClip2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access ICompositionClip2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_TransformMatrix
      (
         this : access ICompositionClip2_Interface;
         RetVal : access Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      function put_TransformMatrix
      (
         this : access ICompositionClip2_Interface;
         value : Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionClip2 : aliased WinRt.IID := (1486086249, 13590, 16609, (137, 224, 91, 169, 36, 146, 114, 53 ));

   -----------------------------------------------------------------------------
   -- type ICompositionClipFactory is interface and WinRt.IInspectable;

      IID_ICompositionClipFactory : aliased WinRt.IID := (3108523183, 8391, 19181, (172, 74, 156, 120, 186, 19, 2, 207 ));

   -----------------------------------------------------------------------------
   -- type ICompositionColorBrush is interface and WinRt.IInspectable;

      function get_Color
      (
         this : access ICompositionColorBrush_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_Color
      (
         this : access ICompositionColorBrush_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionColorBrush : aliased WinRt.IID := (723930206, 48949, 18481, (134, 66, 207, 112, 194, 15, 255, 47 ));

   -----------------------------------------------------------------------------
   -- type ICompositionColorGradientStop is interface and WinRt.IInspectable;

      function get_Color
      (
         this : access ICompositionColorGradientStop_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_Color
      (
         this : access ICompositionColorGradientStop_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionColorGradientStop_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionColorGradientStop_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionColorGradientStop : aliased WinRt.IID := (1862322834, 51201, 20033, (154, 143, 165, 62, 32, 245, 119, 120 ));

   -----------------------------------------------------------------------------
   -- type ICompositionColorGradientStopCollection is interface and WinRt.IInspectable;

      IID_ICompositionColorGradientStopCollection : aliased WinRt.IID := (2669486316, 31492, 19229, (144, 188, 159, 163, 44, 12, 253, 38 ));

   -----------------------------------------------------------------------------
   -- type ICompositionCommitBatch is interface and WinRt.IInspectable;

      function get_IsActive
      (
         this : access ICompositionCommitBatch_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsEnded
      (
         this : access ICompositionCommitBatch_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function add_Completed
      (
         this : access ICompositionCommitBatch_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Completed
      (
         this : access ICompositionCommitBatch_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionCommitBatch : aliased WinRt.IID := (218159824, 51719, 17408, (140, 142, 203, 93, 176, 133, 89, 204 ));

   -----------------------------------------------------------------------------
   -- type ICompositionContainerShape is interface and WinRt.IInspectable;

      function get_Shapes
      (
         this : access ICompositionContainerShape_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionContainerShape : aliased WinRt.IID := (1331594651, 11867, 17576, (152, 44, 170, 15, 105, 193, 96, 89 ));

   -----------------------------------------------------------------------------
   -- type ICompositionDrawingSurface is interface and WinRt.IInspectable;

      function get_AlphaMode
      (
         this : access ICompositionDrawingSurface_Interface;
         RetVal : access Windows.Graphics.DirectX.DirectXAlphaMode
      )
      return WinRt.Hresult is abstract;

      function get_PixelFormat
      (
         this : access ICompositionDrawingSurface_Interface;
         RetVal : access Windows.Graphics.DirectX.DirectXPixelFormat
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access ICompositionDrawingSurface_Interface;
         RetVal : access Windows.Foundation.Size
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionDrawingSurface : aliased WinRt.IID := (2707866368, 64208, 19729, (158, 103, 228, 51, 22, 47, 244, 158 ));

   -----------------------------------------------------------------------------
   -- type ICompositionDrawingSurface2 is interface and WinRt.IInspectable;

      function get_SizeInt32
      (
         this : access ICompositionDrawingSurface2_Interface;
         RetVal : access Windows.Graphics.SizeInt32
      )
      return WinRt.Hresult is abstract;

      function Resize
      (
         this : access ICompositionDrawingSurface2_Interface;
         sizePixels : Windows.Graphics.SizeInt32
      )
      return WinRt.Hresult is abstract;

      function Scroll
      (
         this : access ICompositionDrawingSurface2_Interface;
         offset : Windows.Graphics.PointInt32
      )
      return WinRt.Hresult is abstract;

      function Scroll
      (
         this : access ICompositionDrawingSurface2_Interface;
         offset : Windows.Graphics.PointInt32;
         scrollRect : Windows.Graphics.RectInt32
      )
      return WinRt.Hresult is abstract;

      function ScrollWithClip
      (
         this : access ICompositionDrawingSurface2_Interface;
         offset : Windows.Graphics.PointInt32;
         clipRect : Windows.Graphics.RectInt32
      )
      return WinRt.Hresult is abstract;

      function ScrollWithClip
      (
         this : access ICompositionDrawingSurface2_Interface;
         offset : Windows.Graphics.PointInt32;
         clipRect : Windows.Graphics.RectInt32;
         scrollRect : Windows.Graphics.RectInt32
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionDrawingSurface2 : aliased WinRt.IID := (4207995019, 58196, 17640, (142, 61, 196, 136, 13, 90, 33, 63 ));

   -----------------------------------------------------------------------------
   -- type ICompositionDrawingSurfaceFactory is interface and WinRt.IInspectable;

      IID_ICompositionDrawingSurfaceFactory : aliased WinRt.IID := (2492968970, 12589, 18105, (157, 179, 65, 47, 215, 148, 100, 200 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEasingFunction is interface and WinRt.IInspectable;

      IID_ICompositionEasingFunction : aliased WinRt.IID := (1363534678, 49017, 20136, (140, 194, 107, 91, 71, 46, 108, 154 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEasingFunctionFactory is interface and WinRt.IInspectable;

      IID_ICompositionEasingFunctionFactory : aliased WinRt.IID := (1619265396, 15776, 18761, (130, 0, 114, 6, 192, 1, 144, 160 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEffectBrush is interface and WinRt.IInspectable;

      function GetSourceParameter
      (
         this : access ICompositionEffectBrush_Interface;
         name : WinRt.HString;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function SetSourceParameter
      (
         this : access ICompositionEffectBrush_Interface;
         name : WinRt.HString;
         source : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionEffectBrush : aliased WinRt.IID := (3212802398, 33740, 17599, (164, 71, 62, 60, 7, 23, 137, 236 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEffectFactory is interface and WinRt.IInspectable;

      function CreateBrush
      (
         this : access ICompositionEffectFactory_Interface;
         RetVal : access Windows.UI.Composition.ICompositionEffectBrush
      )
      return WinRt.Hresult is abstract;

      function get_ExtendedError
      (
         this : access ICompositionEffectFactory_Interface;
         RetVal : access Windows.Foundation.HResult
      )
      return WinRt.Hresult is abstract;

      function get_LoadStatus
      (
         this : access ICompositionEffectFactory_Interface;
         RetVal : access Windows.UI.Composition.CompositionEffectFactoryLoadStatus
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionEffectFactory : aliased WinRt.IID := (3193316527, 47742, 17680, (152, 80, 65, 192, 180, 255, 116, 223 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEffectSourceParameter is interface and WinRt.IInspectable;

      function get_Name
      (
         this : access ICompositionEffectSourceParameter_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionEffectSourceParameter : aliased WinRt.IID := (2240459066, 12946, 20046, (179, 187, 43, 108, 101, 68, 166, 238 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEffectSourceParameterFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access ICompositionEffectSourceParameterFactory_Interface;
         name : WinRt.HString;
         RetVal : access Windows.UI.Composition.ICompositionEffectSourceParameter
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionEffectSourceParameterFactory : aliased WinRt.IID := (3017405046, 43939, 18212, (172, 243, 208, 57, 116, 100, 219, 28 ));

   -----------------------------------------------------------------------------
   -- type ICompositionEllipseGeometry is interface and WinRt.IInspectable;

      function get_Center
      (
         this : access ICompositionEllipseGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Center
      (
         this : access ICompositionEllipseGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Radius
      (
         this : access ICompositionEllipseGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Radius
      (
         this : access ICompositionEllipseGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionEllipseGeometry : aliased WinRt.IID := (1208088708, 63149, 19347, (175, 169, 137, 123, 100, 229, 123, 31 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGeometricClip is interface and WinRt.IInspectable;

      function get_Geometry
      (
         this : access ICompositionGeometricClip_Interface;
         RetVal : access Windows.UI.Composition.ICompositionGeometry
      )
      return WinRt.Hresult is abstract;

      function put_Geometry
      (
         this : access ICompositionGeometricClip_Interface;
         value : Windows.UI.Composition.ICompositionGeometry
      )
      return WinRt.Hresult is abstract;

      function get_ViewBox
      (
         this : access ICompositionGeometricClip_Interface;
         RetVal : access Windows.UI.Composition.ICompositionViewBox
      )
      return WinRt.Hresult is abstract;

      function put_ViewBox
      (
         this : access ICompositionGeometricClip_Interface;
         value : Windows.UI.Composition.ICompositionViewBox
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGeometricClip : aliased WinRt.IID := (3359683969, 33225, 17476, (162, 193, 204, 174, 206, 58, 80, 229 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGeometry is interface and WinRt.IInspectable;

      function get_TrimEnd
      (
         this : access ICompositionGeometry_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_TrimEnd
      (
         this : access ICompositionGeometry_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_TrimOffset
      (
         this : access ICompositionGeometry_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_TrimOffset
      (
         this : access ICompositionGeometry_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_TrimStart
      (
         this : access ICompositionGeometry_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_TrimStart
      (
         this : access ICompositionGeometry_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGeometry : aliased WinRt.IID := (3917816188, 27159, 16903, (171, 216, 95, 211, 221, 97, 42, 157 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGeometryFactory is interface and WinRt.IInspectable;

      IID_ICompositionGeometryFactory : aliased WinRt.IID := (3221143521, 35877, 18443, (159, 86, 254, 214, 178, 136, 5, 93 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGradientBrush is interface and WinRt.IInspectable;

      function get_AnchorPoint
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_AnchorPoint
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_CenterPoint
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_CenterPoint
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_ColorStops
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.UI.Composition.ICompositionColorGradientStopCollection
      )
      return WinRt.Hresult is abstract;

      function get_ExtendMode
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.UI.Composition.CompositionGradientExtendMode
      )
      return WinRt.Hresult is abstract;

      function put_ExtendMode
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.UI.Composition.CompositionGradientExtendMode
      )
      return WinRt.Hresult is abstract;

      function get_InterpolationSpace
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.UI.Composition.CompositionColorSpace
      )
      return WinRt.Hresult is abstract;

      function put_InterpolationSpace
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.UI.Composition.CompositionColorSpace
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngle
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngle
      (
         this : access ICompositionGradientBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngleInDegrees
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngleInDegrees
      (
         this : access ICompositionGradientBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_TransformMatrix
      (
         this : access ICompositionGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      function put_TransformMatrix
      (
         this : access ICompositionGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGradientBrush : aliased WinRt.IID := (496437728, 65478, 19470, (169, 171, 52, 20, 77, 76, 144, 152 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGradientBrush2 is interface and WinRt.IInspectable;

      function get_MappingMode
      (
         this : access ICompositionGradientBrush2_Interface;
         RetVal : access Windows.UI.Composition.CompositionMappingMode
      )
      return WinRt.Hresult is abstract;

      function put_MappingMode
      (
         this : access ICompositionGradientBrush2_Interface;
         value : Windows.UI.Composition.CompositionMappingMode
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGradientBrush2 : aliased WinRt.IID := (2308822433, 46279, 19251, (161, 182, 38, 74, 221, 194, 109, 16 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGradientBrushFactory is interface and WinRt.IInspectable;

      IID_ICompositionGradientBrushFactory : aliased WinRt.IID := (1456956887, 61833, 18633, (156, 141, 148, 218, 241, 190, 192, 16 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGraphicsDevice is interface and WinRt.IInspectable;

      function CreateDrawingSurface
      (
         this : access ICompositionGraphicsDevice_Interface;
         sizePixels : Windows.Foundation.Size;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode;
         RetVal : access Windows.UI.Composition.ICompositionDrawingSurface
      )
      return WinRt.Hresult is abstract;

      function add_RenderingDeviceReplaced
      (
         this : access ICompositionGraphicsDevice_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_RenderingDeviceReplaced
      (
         this : access ICompositionGraphicsDevice_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGraphicsDevice : aliased WinRt.IID := (4213360353, 32930, 18023, (153, 54, 219, 234, 246, 238, 254, 149 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGraphicsDevice2 is interface and WinRt.IInspectable;

      function CreateDrawingSurface2
      (
         this : access ICompositionGraphicsDevice2_Interface;
         sizePixels : Windows.Graphics.SizeInt32;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode;
         RetVal : access Windows.UI.Composition.ICompositionDrawingSurface
      )
      return WinRt.Hresult is abstract;

      function CreateVirtualDrawingSurface
      (
         this : access ICompositionGraphicsDevice2_Interface;
         sizePixels : Windows.Graphics.SizeInt32;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode;
         RetVal : access Windows.UI.Composition.ICompositionVirtualDrawingSurface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGraphicsDevice2 : aliased WinRt.IID := (263765494, 49392, 19404, (159, 184, 8, 73, 130, 73, 13, 125 ));

   -----------------------------------------------------------------------------
   -- type ICompositionGraphicsDevice3 is interface and WinRt.IInspectable;

      function CreateMipmapSurface
      (
         this : access ICompositionGraphicsDevice3_Interface;
         sizePixels : Windows.Graphics.SizeInt32;
         pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
         alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode;
         RetVal : access Windows.UI.Composition.ICompositionMipmapSurface
      )
      return WinRt.Hresult is abstract;

      function Trim
      (
         this : access ICompositionGraphicsDevice3_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionGraphicsDevice3 : aliased WinRt.IID := (938898708, 54255, 18897, (182, 157, 13, 142, 171, 235, 54, 38 ));

   -----------------------------------------------------------------------------
   -- type ICompositionLight is interface and WinRt.IInspectable;

      function get_Targets
      (
         this : access ICompositionLight_Interface;
         RetVal : access Windows.UI.Composition.IVisualUnorderedCollection
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionLight : aliased WinRt.IID := (1101453250, 11869, 19393, (176, 158, 143, 10, 3, 227, 216, 211 ));

   -----------------------------------------------------------------------------
   -- type ICompositionLight2 is interface and WinRt.IInspectable;

      function get_ExclusionsFromTargets
      (
         this : access ICompositionLight2_Interface;
         RetVal : access Windows.UI.Composition.IVisualUnorderedCollection
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionLight2 : aliased WinRt.IID := (2814171762, 62301, 16989, (155, 152, 35, 244, 32, 95, 102, 105 ));

   -----------------------------------------------------------------------------
   -- type ICompositionLight3 is interface and WinRt.IInspectable;

      function get_IsEnabled
      (
         this : access ICompositionLight3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsEnabled
      (
         this : access ICompositionLight3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionLight3 : aliased WinRt.IID := (1259012324, 57095, 18777, (183, 164, 79, 126, 66, 51, 248, 56 ));

   -----------------------------------------------------------------------------
   -- type ICompositionLightFactory is interface and WinRt.IInspectable;

      IID_ICompositionLightFactory : aliased WinRt.IID := (110949126, 55868, 19268, (131, 138, 94, 3, 213, 26, 206, 85 ));

   -----------------------------------------------------------------------------
   -- type ICompositionLineGeometry is interface and WinRt.IInspectable;

      function get_Start
      (
         this : access ICompositionLineGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Start
      (
         this : access ICompositionLineGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_End
      (
         this : access ICompositionLineGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_End
      (
         this : access ICompositionLineGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionLineGeometry : aliased WinRt.IID := (3715503524, 3226, 19303, (141, 206, 68, 10, 91, 249, 205, 236 ));

   -----------------------------------------------------------------------------
   -- type ICompositionLinearGradientBrush is interface and WinRt.IInspectable;

      function get_EndPoint
      (
         this : access ICompositionLinearGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_EndPoint
      (
         this : access ICompositionLinearGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_StartPoint
      (
         this : access ICompositionLinearGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_StartPoint
      (
         this : access ICompositionLinearGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionLinearGradientBrush : aliased WinRt.IID := (2554053913, 43483, 16700, (162, 216, 42, 144, 86, 252, 82, 94 ));

   -----------------------------------------------------------------------------
   -- type ICompositionMaskBrush is interface and WinRt.IInspectable;

      function get_Mask
      (
         this : access ICompositionMaskBrush_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_Mask
      (
         this : access ICompositionMaskBrush_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function get_Source
      (
         this : access ICompositionMaskBrush_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_Source
      (
         this : access ICompositionMaskBrush_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionMaskBrush : aliased WinRt.IID := (1378676894, 48747, 20289, (190, 73, 249, 34, 109, 71, 27, 74 ));

   -----------------------------------------------------------------------------
   -- type ICompositionMipmapSurface is interface and WinRt.IInspectable;

      function get_LevelCount
      (
         this : access ICompositionMipmapSurface_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_AlphaMode
      (
         this : access ICompositionMipmapSurface_Interface;
         RetVal : access Windows.Graphics.DirectX.DirectXAlphaMode
      )
      return WinRt.Hresult is abstract;

      function get_PixelFormat
      (
         this : access ICompositionMipmapSurface_Interface;
         RetVal : access Windows.Graphics.DirectX.DirectXPixelFormat
      )
      return WinRt.Hresult is abstract;

      function get_SizeInt32
      (
         this : access ICompositionMipmapSurface_Interface;
         RetVal : access Windows.Graphics.SizeInt32
      )
      return WinRt.Hresult is abstract;

      function GetDrawingSurfaceForLevel
      (
         this : access ICompositionMipmapSurface_Interface;
         level : WinRt.UInt32;
         RetVal : access Windows.UI.Composition.ICompositionDrawingSurface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionMipmapSurface : aliased WinRt.IID := (1214474076, 53066, 19228, (158, 206, 197, 236, 12, 43, 47, 230 ));

   -----------------------------------------------------------------------------
   -- type ICompositionNineGridBrush is interface and WinRt.IInspectable;

      function get_BottomInset
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_BottomInset
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_BottomInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_BottomInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_IsCenterHollow
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsCenterHollow
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_LeftInset
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_LeftInset
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_LeftInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_LeftInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RightInset
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RightInset
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RightInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RightInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Source
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_Source
      (
         this : access ICompositionNineGridBrush_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function get_TopInset
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_TopInset
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_TopInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_TopInsetScale
      (
         this : access ICompositionNineGridBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function SetInsets
      (
         this : access ICompositionNineGridBrush_Interface;
         inset : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function SetInsets
      (
         this : access ICompositionNineGridBrush_Interface;
         left : WinRt.Single;
         top : WinRt.Single;
         right : WinRt.Single;
         bottom : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function SetInsetScales
      (
         this : access ICompositionNineGridBrush_Interface;
         scale : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function SetInsetScales
      (
         this : access ICompositionNineGridBrush_Interface;
         left : WinRt.Single;
         top : WinRt.Single;
         right : WinRt.Single;
         bottom : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionNineGridBrush : aliased WinRt.IID := (4065416420, 48268, 19431, (184, 15, 134, 133, 184, 60, 1, 134 ));

   -----------------------------------------------------------------------------
   -- type ICompositionObject is interface and WinRt.IInspectable;

      function get_Compositor
      (
         this : access ICompositionObject_Interface;
         RetVal : access Windows.UI.Composition.ICompositor
      )
      return WinRt.Hresult is abstract;

      function get_Dispatcher
      (
         this : access ICompositionObject_Interface;
         RetVal : access Windows.UI.Core.ICoreDispatcher
      )
      return WinRt.Hresult is abstract;

      function get_Properties
      (
         this : access ICompositionObject_Interface;
         RetVal : access Windows.UI.Composition.ICompositionPropertySet
      )
      return WinRt.Hresult is abstract;

      function StartAnimation
      (
         this : access ICompositionObject_Interface;
         propertyName : WinRt.HString;
         animation : Windows.UI.Composition.ICompositionAnimation
      )
      return WinRt.Hresult is abstract;

      function StopAnimation
      (
         this : access ICompositionObject_Interface;
         propertyName : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionObject : aliased WinRt.IID := (3165957445, 30217, 17744, (147, 79, 22, 0, 42, 104, 253, 237 ));

   -----------------------------------------------------------------------------
   -- type ICompositionObject2 is interface and WinRt.IInspectable;

      function get_Comment
      (
         this : access ICompositionObject2_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Comment
      (
         this : access ICompositionObject2_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ImplicitAnimations
      (
         this : access ICompositionObject2_Interface;
         RetVal : access Windows.UI.Composition.IImplicitAnimationCollection
      )
      return WinRt.Hresult is abstract;

      function put_ImplicitAnimations
      (
         this : access ICompositionObject2_Interface;
         value : Windows.UI.Composition.IImplicitAnimationCollection
      )
      return WinRt.Hresult is abstract;

      function StartAnimationGroup
      (
         this : access ICompositionObject2_Interface;
         value : Windows.UI.Composition.ICompositionAnimationBase
      )
      return WinRt.Hresult is abstract;

      function StopAnimationGroup
      (
         this : access ICompositionObject2_Interface;
         value : Windows.UI.Composition.ICompositionAnimationBase
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionObject2 : aliased WinRt.IID := (4018622113, 23807, 19304, (158, 48, 161, 81, 157, 8, 186, 3 ));

   -----------------------------------------------------------------------------
   -- type ICompositionObject3 is interface and WinRt.IInspectable;

      function get_DispatcherQueue
      (
         this : access ICompositionObject3_Interface;
         RetVal : access Windows.System.IDispatcherQueue
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionObject3 : aliased WinRt.IID := (1271036197, 56013, 19698, (152, 177, 152, 107, 118, 231, 235, 230 ));

   -----------------------------------------------------------------------------
   -- type ICompositionObject4 is interface and WinRt.IInspectable;

      function TryGetAnimationController
      (
         this : access ICompositionObject4_Interface;
         propertyName : WinRt.HString;
         RetVal : access Windows.UI.Composition.IAnimationController
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionObject4 : aliased WinRt.IID := (196311116, 13419, 19068, (150, 107, 115, 16, 150, 101, 83, 213 ));

   -----------------------------------------------------------------------------
   -- type ICompositionObjectFactory is interface and WinRt.IInspectable;

      IID_ICompositionObjectFactory : aliased WinRt.IID := (1361075294, 21898, 20266, (141, 57, 55, 191, 225, 226, 13, 221 ));

   -----------------------------------------------------------------------------
   -- type ICompositionObjectStatics is interface and WinRt.IInspectable;

      function StartAnimationWithIAnimationObject
      (
         this : access ICompositionObjectStatics_Interface;
         target : Windows.UI.Composition.IAnimationObject;
         propertyName : WinRt.HString;
         animation : Windows.UI.Composition.ICompositionAnimation
      )
      return WinRt.Hresult is abstract;

      function StartAnimationGroupWithIAnimationObject
      (
         this : access ICompositionObjectStatics_Interface;
         target : Windows.UI.Composition.IAnimationObject;
         animation : Windows.UI.Composition.ICompositionAnimationBase
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionObjectStatics : aliased WinRt.IID := (3253536047, 7074, 17594, (169, 4, 106, 136, 42, 10, 90, 219 ));

   -----------------------------------------------------------------------------
   -- type ICompositionPath is interface and WinRt.IInspectable;

      IID_ICompositionPath : aliased WinRt.IID := (1725570399, 11792, 20258, (138, 6, 10, 129, 81, 145, 158, 96 ));

   -----------------------------------------------------------------------------
   -- type ICompositionPathFactory is interface and WinRt.IInspectable;

      function Create
      (
         this : access ICompositionPathFactory_Interface;
         source : Windows.Graphics.IGeometrySource2D;
         RetVal : access Windows.UI.Composition.ICompositionPath
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionPathFactory : aliased WinRt.IID := (2619247722, 3891, 18257, (148, 55, 235, 63, 185, 211, 171, 7 ));

   -----------------------------------------------------------------------------
   -- type ICompositionPathGeometry is interface and WinRt.IInspectable;

      function get_Path
      (
         this : access ICompositionPathGeometry_Interface;
         RetVal : access Windows.UI.Composition.ICompositionPath
      )
      return WinRt.Hresult is abstract;

      function put_Path
      (
         this : access ICompositionPathGeometry_Interface;
         value : Windows.UI.Composition.ICompositionPath
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionPathGeometry : aliased WinRt.IID := (191512958, 11383, 19491, (175, 94, 99, 4, 193, 71, 187, 97 ));

   -----------------------------------------------------------------------------
   -- type ICompositionProjectedShadow is interface and WinRt.IInspectable;

      function get_BlurRadiusMultiplier
      (
         this : access ICompositionProjectedShadow_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_BlurRadiusMultiplier
      (
         this : access ICompositionProjectedShadow_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Casters
      (
         this : access ICompositionProjectedShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionProjectedShadowCasterCollection
      )
      return WinRt.Hresult is abstract;

      function get_LightSource
      (
         this : access ICompositionProjectedShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionLight
      )
      return WinRt.Hresult is abstract;

      function put_LightSource
      (
         this : access ICompositionProjectedShadow_Interface;
         value : Windows.UI.Composition.ICompositionLight
      )
      return WinRt.Hresult is abstract;

      function get_MaxBlurRadius
      (
         this : access ICompositionProjectedShadow_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MaxBlurRadius
      (
         this : access ICompositionProjectedShadow_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MinBlurRadius
      (
         this : access ICompositionProjectedShadow_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MinBlurRadius
      (
         this : access ICompositionProjectedShadow_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Receivers
      (
         this : access ICompositionProjectedShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionProjectedShadow : aliased WinRt.IID := (677088882, 17192, 21055, (188, 242, 85, 87, 197, 44, 59, 37 ));

   -----------------------------------------------------------------------------
   -- type ICompositionProjectedShadowCaster is interface and WinRt.IInspectable;

      function get_Brush
      (
         this : access ICompositionProjectedShadowCaster_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_Brush
      (
         this : access ICompositionProjectedShadowCaster_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function get_CastingVisual
      (
         this : access ICompositionProjectedShadowCaster_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_CastingVisual
      (
         this : access ICompositionProjectedShadowCaster_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionProjectedShadowCaster : aliased WinRt.IID := (2983711782, 7734, 23138, (190, 86, 161, 97, 18, 253, 209, 72 ));

   -----------------------------------------------------------------------------
   -- type ICompositionProjectedShadowCasterCollection is interface and WinRt.IInspectable;

      function get_Count
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function InsertAbove
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface;
         newCaster : Windows.UI.Composition.ICompositionProjectedShadowCaster;
         reference : Windows.UI.Composition.ICompositionProjectedShadowCaster
      )
      return WinRt.Hresult is abstract;

      function InsertAtBottom
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface;
         newCaster : Windows.UI.Composition.ICompositionProjectedShadowCaster
      )
      return WinRt.Hresult is abstract;

      function InsertAtTop
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface;
         newCaster : Windows.UI.Composition.ICompositionProjectedShadowCaster
      )
      return WinRt.Hresult is abstract;

      function InsertBelow
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface;
         newCaster : Windows.UI.Composition.ICompositionProjectedShadowCaster;
         reference : Windows.UI.Composition.ICompositionProjectedShadowCaster
      )
      return WinRt.Hresult is abstract;

      function Remove
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface;
         caster : Windows.UI.Composition.ICompositionProjectedShadowCaster
      )
      return WinRt.Hresult is abstract;

      function RemoveAll
      (
         this : access ICompositionProjectedShadowCasterCollection_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionProjectedShadowCasterCollection : aliased WinRt.IID := (3528612876, 57471, 22691, (172, 145, 55, 247, 62, 233, 23, 64 ));

   -----------------------------------------------------------------------------
   -- type ICompositionProjectedShadowCasterCollectionStatics is interface and WinRt.IInspectable;

      function get_MaxRespectedCasters
      (
         this : access ICompositionProjectedShadowCasterCollectionStatics_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionProjectedShadowCasterCollectionStatics : aliased WinRt.IID := (1459335478, 59727, 21145, (171, 91, 110, 21, 227, 139, 216, 153 ));

   -----------------------------------------------------------------------------
   -- type ICompositionProjectedShadowReceiver is interface and WinRt.IInspectable;

      function get_ReceivingVisual
      (
         this : access ICompositionProjectedShadowReceiver_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_ReceivingVisual
      (
         this : access ICompositionProjectedShadowReceiver_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionProjectedShadowReceiver : aliased WinRt.IID := (326604890, 27209, 21354, (155, 228, 169, 106, 142, 82, 152, 169 ));

   -----------------------------------------------------------------------------
   -- type ICompositionProjectedShadowReceiverUnorderedCollection is interface and WinRt.IInspectable;

      function Add
      (
         this : access ICompositionProjectedShadowReceiverUnorderedCollection_Interface;
         value : Windows.UI.Composition.ICompositionProjectedShadowReceiver
      )
      return WinRt.Hresult is abstract;

      function get_Count
      (
         this : access ICompositionProjectedShadowReceiverUnorderedCollection_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function Remove
      (
         this : access ICompositionProjectedShadowReceiverUnorderedCollection_Interface;
         value : Windows.UI.Composition.ICompositionProjectedShadowReceiver
      )
      return WinRt.Hresult is abstract;

      function RemoveAll
      (
         this : access ICompositionProjectedShadowReceiverUnorderedCollection_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionProjectedShadowReceiverUnorderedCollection : aliased WinRt.IID := (45343671, 10194, 22943, (172, 75, 171, 120, 124, 221, 230, 253 ));

   -----------------------------------------------------------------------------
   -- type ICompositionPropertySet is interface and WinRt.IInspectable;

      function InsertColor
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function InsertMatrix3x2
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      function InsertMatrix4x4
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Matrix4x4
      )
      return WinRt.Hresult is abstract;

      function InsertQuaternion
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function InsertScalar
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function InsertVector2
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function InsertVector3
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function InsertVector4
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector4
      )
      return WinRt.Hresult is abstract;

      function TryGetColor
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.UI.Color_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetMatrix3x2
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Matrix3x2_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetMatrix4x4
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Matrix4x4_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetQuaternion
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Quaternion_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetScalar
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : WinRt.Single_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetVector2
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector2_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetVector3
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector3_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      function TryGetVector4
      (
         this : access ICompositionPropertySet_Interface;
         propertyName : WinRt.HString;
         value : Windows.Foundation.Numerics.Vector4_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionPropertySet : aliased WinRt.IID := (3386298882, 24423, 17491, (145, 23, 158, 173, 212, 48, 211, 194 ));

   -----------------------------------------------------------------------------
   -- type ICompositionPropertySet2 is interface and WinRt.IInspectable;

      function InsertBoolean
      (
         this : access ICompositionPropertySet2_Interface;
         propertyName : WinRt.HString;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function TryGetBoolean
      (
         this : access ICompositionPropertySet2_Interface;
         propertyName : WinRt.HString;
         value : WinRt.Boolean_Ptr;
         RetVal : access Windows.UI.Composition.CompositionGetValueStatus
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionPropertySet2 : aliased WinRt.IID := (3732960030, 41489, 17493, (136, 128, 125, 15, 63, 106, 68, 253 ));

   -----------------------------------------------------------------------------
   -- type ICompositionRadialGradientBrush is interface and WinRt.IInspectable;

      function get_EllipseCenter
      (
         this : access ICompositionRadialGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_EllipseCenter
      (
         this : access ICompositionRadialGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_EllipseRadius
      (
         this : access ICompositionRadialGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_EllipseRadius
      (
         this : access ICompositionRadialGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_GradientOriginOffset
      (
         this : access ICompositionRadialGradientBrush_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_GradientOriginOffset
      (
         this : access ICompositionRadialGradientBrush_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionRadialGradientBrush : aliased WinRt.IID := (1027297477, 58362, 19682, (185, 252, 62, 225, 37, 97, 120, 143 ));

   -----------------------------------------------------------------------------
   -- type ICompositionRectangleGeometry is interface and WinRt.IInspectable;

      function get_Offset
      (
         this : access ICompositionRectangleGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionRectangleGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access ICompositionRectangleGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Size
      (
         this : access ICompositionRectangleGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionRectangleGeometry : aliased WinRt.IID := (215290920, 21334, 16966, (174, 207, 122, 11, 118, 151, 84, 0 ));

   -----------------------------------------------------------------------------
   -- type ICompositionRoundedRectangleGeometry is interface and WinRt.IInspectable;

      function get_CornerRadius
      (
         this : access ICompositionRoundedRectangleGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_CornerRadius
      (
         this : access ICompositionRoundedRectangleGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionRoundedRectangleGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionRoundedRectangleGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access ICompositionRoundedRectangleGeometry_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Size
      (
         this : access ICompositionRoundedRectangleGeometry_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionRoundedRectangleGeometry : aliased WinRt.IID := (2272315426, 7504, 19339, (176, 19, 124, 154, 14, 70, 147, 95 ));

   -----------------------------------------------------------------------------
   -- type ICompositionScopedBatch is interface and WinRt.IInspectable;

      function get_IsActive
      (
         this : access ICompositionScopedBatch_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsEnded
      (
         this : access ICompositionScopedBatch_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function End_x
      (
         this : access ICompositionScopedBatch_Interface
      )
      return WinRt.Hresult is abstract;

      function Resume
      (
         this : access ICompositionScopedBatch_Interface
      )
      return WinRt.Hresult is abstract;

      function Suspend
      (
         this : access ICompositionScopedBatch_Interface
      )
      return WinRt.Hresult is abstract;

      function add_Completed
      (
         this : access ICompositionScopedBatch_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Completed
      (
         this : access ICompositionScopedBatch_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionScopedBatch : aliased WinRt.IID := (218159824, 64263, 18173, (140, 114, 98, 128, 209, 163, 209, 221 ));

   -----------------------------------------------------------------------------
   -- type ICompositionShadow is interface and WinRt.IInspectable;

      IID_ICompositionShadow : aliased WinRt.IID := (849236706, 17205, 18892, (177, 74, 55, 120, 45, 16, 240, 196 ));

   -----------------------------------------------------------------------------
   -- type ICompositionShadowFactory is interface and WinRt.IInspectable;

      IID_ICompositionShadowFactory : aliased WinRt.IID := (572475695, 56506, 19345, (153, 158, 29, 194, 23, 160, 21, 48 ));

   -----------------------------------------------------------------------------
   -- type ICompositionShape is interface and WinRt.IInspectable;

      function get_CenterPoint
      (
         this : access ICompositionShape_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_CenterPoint
      (
         this : access ICompositionShape_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionShape_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionShape_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngle
      (
         this : access ICompositionShape_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngle
      (
         this : access ICompositionShape_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngleInDegrees
      (
         this : access ICompositionShape_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngleInDegrees
      (
         this : access ICompositionShape_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access ICompositionShape_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access ICompositionShape_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_TransformMatrix
      (
         this : access ICompositionShape_Interface;
         RetVal : access Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      function put_TransformMatrix
      (
         this : access ICompositionShape_Interface;
         value : Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionShape : aliased WinRt.IID := (3028083447, 39560, 17092, (158, 135, 46, 80, 12, 168, 104, 140 ));

   -----------------------------------------------------------------------------
   -- type ICompositionShapeFactory is interface and WinRt.IInspectable;

      IID_ICompositionShapeFactory : aliased WinRt.IID := (503068368, 45146, 17647, (130, 176, 18, 17, 139, 205, 76, 208 ));

   -----------------------------------------------------------------------------
   -- type ICompositionSpriteShape is interface and WinRt.IInspectable;

      function get_FillBrush
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_FillBrush
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function get_Geometry
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.ICompositionGeometry
      )
      return WinRt.Hresult is abstract;

      function put_Geometry
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.ICompositionGeometry
      )
      return WinRt.Hresult is abstract;

      function get_IsStrokeNonScaling
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsStrokeNonScaling
      (
         this : access ICompositionSpriteShape_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StrokeBrush
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_StrokeBrush
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashArray
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashCap
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.CompositionStrokeCap
      )
      return WinRt.Hresult is abstract;

      function put_StrokeDashCap
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.CompositionStrokeCap
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashOffset
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_StrokeDashOffset
      (
         this : access ICompositionSpriteShape_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_StrokeEndCap
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.CompositionStrokeCap
      )
      return WinRt.Hresult is abstract;

      function put_StrokeEndCap
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.CompositionStrokeCap
      )
      return WinRt.Hresult is abstract;

      function get_StrokeLineJoin
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.CompositionStrokeLineJoin
      )
      return WinRt.Hresult is abstract;

      function put_StrokeLineJoin
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.CompositionStrokeLineJoin
      )
      return WinRt.Hresult is abstract;

      function get_StrokeMiterLimit
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_StrokeMiterLimit
      (
         this : access ICompositionSpriteShape_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_StrokeStartCap
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access Windows.UI.Composition.CompositionStrokeCap
      )
      return WinRt.Hresult is abstract;

      function put_StrokeStartCap
      (
         this : access ICompositionSpriteShape_Interface;
         value : Windows.UI.Composition.CompositionStrokeCap
      )
      return WinRt.Hresult is abstract;

      function get_StrokeThickness
      (
         this : access ICompositionSpriteShape_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_StrokeThickness
      (
         this : access ICompositionSpriteShape_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionSpriteShape : aliased WinRt.IID := (1075536315, 7, 17251, (177, 243, 107, 204, 0, 63, 184, 62 ));

   -----------------------------------------------------------------------------
   -- type ICompositionSurface is interface and WinRt.IInspectable;

      IID_ICompositionSurface : aliased WinRt.IID := (354898957, 17095, 18342, (164, 8, 102, 143, 121, 169, 13, 251 ));

   -----------------------------------------------------------------------------
   -- type ICompositionSurfaceBrush is interface and WinRt.IInspectable;

      function get_BitmapInterpolationMode
      (
         this : access ICompositionSurfaceBrush_Interface;
         RetVal : access Windows.UI.Composition.CompositionBitmapInterpolationMode
      )
      return WinRt.Hresult is abstract;

      function put_BitmapInterpolationMode
      (
         this : access ICompositionSurfaceBrush_Interface;
         value : Windows.UI.Composition.CompositionBitmapInterpolationMode
      )
      return WinRt.Hresult is abstract;

      function get_HorizontalAlignmentRatio
      (
         this : access ICompositionSurfaceBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_HorizontalAlignmentRatio
      (
         this : access ICompositionSurfaceBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Stretch
      (
         this : access ICompositionSurfaceBrush_Interface;
         RetVal : access Windows.UI.Composition.CompositionStretch
      )
      return WinRt.Hresult is abstract;

      function put_Stretch
      (
         this : access ICompositionSurfaceBrush_Interface;
         value : Windows.UI.Composition.CompositionStretch
      )
      return WinRt.Hresult is abstract;

      function get_Surface
      (
         this : access ICompositionSurfaceBrush_Interface;
         RetVal : access Windows.UI.Composition.ICompositionSurface
      )
      return WinRt.Hresult is abstract;

      function put_Surface
      (
         this : access ICompositionSurfaceBrush_Interface;
         value : Windows.UI.Composition.ICompositionSurface
      )
      return WinRt.Hresult is abstract;

      function get_VerticalAlignmentRatio
      (
         this : access ICompositionSurfaceBrush_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_VerticalAlignmentRatio
      (
         this : access ICompositionSurfaceBrush_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionSurfaceBrush : aliased WinRt.IID := (2902551929, 7756, 19469, (156, 41, 131, 51, 140, 135, 193, 98 ));

   -----------------------------------------------------------------------------
   -- type ICompositionSurfaceBrush2 is interface and WinRt.IInspectable;

      function get_AnchorPoint
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_AnchorPoint
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_CenterPoint
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_CenterPoint
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngle
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngle
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngleInDegrees
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngleInDegrees
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_TransformMatrix
      (
         this : access ICompositionSurfaceBrush2_Interface;
         RetVal : access Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      function put_TransformMatrix
      (
         this : access ICompositionSurfaceBrush2_Interface;
         value : Windows.Foundation.Numerics.Matrix3x2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionSurfaceBrush2 : aliased WinRt.IID := (3530650837, 25845, 18066, (157, 199, 113, 182, 29, 126, 88, 128 ));

   -----------------------------------------------------------------------------
   -- type ICompositionSurfaceBrush3 is interface and WinRt.IInspectable;

      function get_SnapToPixels
      (
         this : access ICompositionSurfaceBrush3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_SnapToPixels
      (
         this : access ICompositionSurfaceBrush3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionSurfaceBrush3 : aliased WinRt.IID := (1426829961, 8160, 17125, (129, 149, 30, 239, 168, 127, 240, 142 ));

   -----------------------------------------------------------------------------
   -- type ICompositionTarget is interface and WinRt.IInspectable;

      function get_Root
      (
         this : access ICompositionTarget_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_Root
      (
         this : access ICompositionTarget_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionTarget : aliased WinRt.IID := (2713626810, 55078, 18019, (129, 41, 107, 94, 121, 39, 255, 166 ));

   -----------------------------------------------------------------------------
   -- type ICompositionTargetFactory is interface and WinRt.IInspectable;

      IID_ICompositionTargetFactory : aliased WinRt.IID := (2479725867, 34070, 19220, (168, 206, 244, 158, 33, 25, 236, 66 ));

   -----------------------------------------------------------------------------
   -- type ICompositionTransform is interface and WinRt.IInspectable;

      IID_ICompositionTransform : aliased WinRt.IID := (2094351657, 64493, 16658, (171, 197, 24, 89, 6, 221, 146, 124 ));

   -----------------------------------------------------------------------------
   -- type ICompositionTransformFactory is interface and WinRt.IInspectable;

      IID_ICompositionTransformFactory : aliased WinRt.IID := (2863581734, 49481, 20858, (143, 114, 107, 255, 122, 101, 206, 8 ));

   -----------------------------------------------------------------------------
   -- type ICompositionViewBox is interface and WinRt.IInspectable;

      function get_HorizontalAlignmentRatio
      (
         this : access ICompositionViewBox_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_HorizontalAlignmentRatio
      (
         this : access ICompositionViewBox_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ICompositionViewBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ICompositionViewBox_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access ICompositionViewBox_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Size
      (
         this : access ICompositionViewBox_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_Stretch
      (
         this : access ICompositionViewBox_Interface;
         RetVal : access Windows.UI.Composition.CompositionStretch
      )
      return WinRt.Hresult is abstract;

      function put_Stretch
      (
         this : access ICompositionViewBox_Interface;
         value : Windows.UI.Composition.CompositionStretch
      )
      return WinRt.Hresult is abstract;

      function get_VerticalAlignmentRatio
      (
         this : access ICompositionViewBox_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_VerticalAlignmentRatio
      (
         this : access ICompositionViewBox_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionViewBox : aliased WinRt.IID := (3024142087, 1679, 17719, (132, 198, 78, 203, 224, 25, 225, 244 ));

   -----------------------------------------------------------------------------
   -- type ICompositionVirtualDrawingSurface is interface and WinRt.IInspectable;

      function Trim
      (
         this : access ICompositionVirtualDrawingSurface_Interface;
         rectsSize : WinRt.UInt32;
         rects : Windows.Graphics.RectInt32_Ptr
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionVirtualDrawingSurface : aliased WinRt.IID := (2848163035, 34624, 20372, (139, 157, 182, 133, 33, 231, 134, 61 ));

   -----------------------------------------------------------------------------
   -- type ICompositionVirtualDrawingSurfaceFactory is interface and WinRt.IInspectable;

      IID_ICompositionVirtualDrawingSurfaceFactory : aliased WinRt.IID := (1734742124, 54635, 19017, (177, 223, 80, 118, 160, 98, 7, 104 ));

   -----------------------------------------------------------------------------
   -- type ICompositionVisualSurface is interface and WinRt.IInspectable;

      function get_SourceVisual
      (
         this : access ICompositionVisualSurface_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_SourceVisual
      (
         this : access ICompositionVisualSurface_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function get_SourceOffset
      (
         this : access ICompositionVisualSurface_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_SourceOffset
      (
         this : access ICompositionVisualSurface_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_SourceSize
      (
         this : access ICompositionVisualSurface_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_SourceSize
      (
         this : access ICompositionVisualSurface_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICompositionVisualSurface : aliased WinRt.IID := (2988759043, 20334, 19007, (140, 174, 61, 193, 205, 167, 79, 198 ));

   -----------------------------------------------------------------------------
   -- type ICompositor is interface and WinRt.IInspectable;

      function CreateColorKeyFrameAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IColorKeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateColorBrush
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.ICompositionColorBrush
      )
      return WinRt.Hresult is abstract;

      function CreateColorBrush
      (
         this : access ICompositor_Interface;
         color : Windows.UI.Color;
         RetVal : access Windows.UI.Composition.ICompositionColorBrush
      )
      return WinRt.Hresult is abstract;

      function CreateContainerVisual
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IContainerVisual
      )
      return WinRt.Hresult is abstract;

      function CreateCubicBezierEasingFunction
      (
         this : access ICompositor_Interface;
         controlPoint1 : Windows.Foundation.Numerics.Vector2;
         controlPoint2 : Windows.Foundation.Numerics.Vector2;
         RetVal : access Windows.UI.Composition.ICubicBezierEasingFunction
      )
      return WinRt.Hresult is abstract;

      function CreateEffectFactory
      (
         this : access ICompositor_Interface;
         graphicsEffect : Windows.Graphics.Effects.IGraphicsEffect;
         RetVal : access Windows.UI.Composition.ICompositionEffectFactory
      )
      return WinRt.Hresult is abstract;

      function CreateEffectFactory
      (
         this : access ICompositor_Interface;
         graphicsEffect : Windows.Graphics.Effects.IGraphicsEffect;
         animatableProperties : GenericObject;
         RetVal : access Windows.UI.Composition.ICompositionEffectFactory
      )
      return WinRt.Hresult is abstract;

      function CreateExpressionAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IExpressionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateExpressionAnimation
      (
         this : access ICompositor_Interface;
         expression : WinRt.HString;
         RetVal : access Windows.UI.Composition.IExpressionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateInsetClip
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IInsetClip
      )
      return WinRt.Hresult is abstract;

      function CreateInsetClip
      (
         this : access ICompositor_Interface;
         leftInset : WinRt.Single;
         topInset : WinRt.Single;
         rightInset : WinRt.Single;
         bottomInset : WinRt.Single;
         RetVal : access Windows.UI.Composition.IInsetClip
      )
      return WinRt.Hresult is abstract;

      function CreateLinearEasingFunction
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.ILinearEasingFunction
      )
      return WinRt.Hresult is abstract;

      function CreatePropertySet
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.ICompositionPropertySet
      )
      return WinRt.Hresult is abstract;

      function CreateQuaternionKeyFrameAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IQuaternionKeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateScalarKeyFrameAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IScalarKeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateScopedBatch
      (
         this : access ICompositor_Interface;
         batchType : Windows.UI.Composition.CompositionBatchTypes;
         RetVal : access Windows.UI.Composition.ICompositionScopedBatch
      )
      return WinRt.Hresult is abstract;

      function CreateSpriteVisual
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.ISpriteVisual
      )
      return WinRt.Hresult is abstract;

      function CreateSurfaceBrush
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.ICompositionSurfaceBrush
      )
      return WinRt.Hresult is abstract;

      function CreateSurfaceBrush
      (
         this : access ICompositor_Interface;
         surface : Windows.UI.Composition.ICompositionSurface;
         RetVal : access Windows.UI.Composition.ICompositionSurfaceBrush
      )
      return WinRt.Hresult is abstract;

      function CreateTargetForCurrentView
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.ICompositionTarget
      )
      return WinRt.Hresult is abstract;

      function CreateVector2KeyFrameAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IVector2KeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateVector3KeyFrameAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IVector3KeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateVector4KeyFrameAnimation
      (
         this : access ICompositor_Interface;
         RetVal : access Windows.UI.Composition.IVector4KeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function GetCommitBatch
      (
         this : access ICompositor_Interface;
         batchType : Windows.UI.Composition.CompositionBatchTypes;
         RetVal : access Windows.UI.Composition.ICompositionCommitBatch
      )
      return WinRt.Hresult is abstract;

      IID_ICompositor : aliased WinRt.IID := (3020147280, 32652, 20099, (152, 95, 204, 69, 6, 0, 54, 216 ));

   -----------------------------------------------------------------------------
   -- type ICompositor2 is interface and WinRt.IInspectable;

      function CreateAmbientLight
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.IAmbientLight
      )
      return WinRt.Hresult is abstract;

      function CreateAnimationGroup
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.ICompositionAnimationGroup
      )
      return WinRt.Hresult is abstract;

      function CreateBackdropBrush
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBackdropBrush
      )
      return WinRt.Hresult is abstract;

      function CreateDistantLight
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.IDistantLight
      )
      return WinRt.Hresult is abstract;

      function CreateDropShadow
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.IDropShadow
      )
      return WinRt.Hresult is abstract;

      function CreateImplicitAnimationCollection
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.IImplicitAnimationCollection
      )
      return WinRt.Hresult is abstract;

      function CreateLayerVisual
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.ILayerVisual
      )
      return WinRt.Hresult is abstract;

      function CreateMaskBrush
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.ICompositionMaskBrush
      )
      return WinRt.Hresult is abstract;

      function CreateNineGridBrush
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.ICompositionNineGridBrush
      )
      return WinRt.Hresult is abstract;

      function CreatePointLight
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.IPointLight
      )
      return WinRt.Hresult is abstract;

      function CreateSpotLight
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.ISpotLight
      )
      return WinRt.Hresult is abstract;

      function CreateStepEasingFunction
      (
         this : access ICompositor2_Interface;
         RetVal : access Windows.UI.Composition.IStepEasingFunction
      )
      return WinRt.Hresult is abstract;

      function CreateStepEasingFunction
      (
         this : access ICompositor2_Interface;
         stepCount : WinRt.Int32;
         RetVal : access Windows.UI.Composition.IStepEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_ICompositor2 : aliased WinRt.IID := (1934655964, 24100, 17882, (163, 143, 227, 44, 195, 73, 169, 160 ));

   -----------------------------------------------------------------------------
   -- type ICompositor3 is interface and WinRt.IInspectable;

      function CreateHostBackdropBrush
      (
         this : access ICompositor3_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBackdropBrush
      )
      return WinRt.Hresult is abstract;

      IID_ICompositor3 : aliased WinRt.IID := (3386740464, 28337, 20028, (166, 88, 103, 93, 156, 100, 212, 171 ));

   -----------------------------------------------------------------------------
   -- type ICompositor4 is interface and WinRt.IInspectable;

      function CreateColorGradientStop
      (
         this : access ICompositor4_Interface;
         RetVal : access Windows.UI.Composition.ICompositionColorGradientStop
      )
      return WinRt.Hresult is abstract;

      function CreateColorGradientStop
      (
         this : access ICompositor4_Interface;
         offset : WinRt.Single;
         color : Windows.UI.Color;
         RetVal : access Windows.UI.Composition.ICompositionColorGradientStop
      )
      return WinRt.Hresult is abstract;

      function CreateLinearGradientBrush
      (
         this : access ICompositor4_Interface;
         RetVal : access Windows.UI.Composition.ICompositionLinearGradientBrush
      )
      return WinRt.Hresult is abstract;

      function CreateSpringScalarAnimation
      (
         this : access ICompositor4_Interface;
         RetVal : access Windows.UI.Composition.ISpringScalarNaturalMotionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateSpringVector2Animation
      (
         this : access ICompositor4_Interface;
         RetVal : access Windows.UI.Composition.ISpringVector2NaturalMotionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateSpringVector3Animation
      (
         this : access ICompositor4_Interface;
         RetVal : access Windows.UI.Composition.ISpringVector3NaturalMotionAnimation
      )
      return WinRt.Hresult is abstract;

      IID_ICompositor4 : aliased WinRt.IID := (2923947914, 30992, 17445, (164, 130, 160, 91, 117, 138, 220, 233 ));

   -----------------------------------------------------------------------------
   -- type ICompositor5 is interface and WinRt.IInspectable;

      function get_Comment
      (
         this : access ICompositor5_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Comment
      (
         this : access ICompositor5_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GlobalPlaybackRate
      (
         this : access ICompositor5_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_GlobalPlaybackRate
      (
         this : access ICompositor5_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function CreateBounceScalarAnimation
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.IBounceScalarNaturalMotionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateBounceVector2Animation
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.IBounceVector2NaturalMotionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateBounceVector3Animation
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.IBounceVector3NaturalMotionAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateContainerShape
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionContainerShape
      )
      return WinRt.Hresult is abstract;

      function CreateEllipseGeometry
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionEllipseGeometry
      )
      return WinRt.Hresult is abstract;

      function CreateLineGeometry
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionLineGeometry
      )
      return WinRt.Hresult is abstract;

      function CreatePathGeometry
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionPathGeometry
      )
      return WinRt.Hresult is abstract;

      function CreatePathGeometry
      (
         this : access ICompositor5_Interface;
         path : Windows.UI.Composition.ICompositionPath;
         RetVal : access Windows.UI.Composition.ICompositionPathGeometry
      )
      return WinRt.Hresult is abstract;

      function CreatePathKeyFrameAnimation
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.IPathKeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      function CreateRectangleGeometry
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionRectangleGeometry
      )
      return WinRt.Hresult is abstract;

      function CreateRoundedRectangleGeometry
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionRoundedRectangleGeometry
      )
      return WinRt.Hresult is abstract;

      function CreateShapeVisual
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.IShapeVisual
      )
      return WinRt.Hresult is abstract;

      function CreateSpriteShape
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionSpriteShape
      )
      return WinRt.Hresult is abstract;

      function CreateSpriteShape
      (
         this : access ICompositor5_Interface;
         geometry : Windows.UI.Composition.ICompositionGeometry;
         RetVal : access Windows.UI.Composition.ICompositionSpriteShape
      )
      return WinRt.Hresult is abstract;

      function CreateViewBox
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.UI.Composition.ICompositionViewBox
      )
      return WinRt.Hresult is abstract;

      function RequestCommitAsync
      (
         this : access ICompositor5_Interface;
         RetVal : access Windows.Foundation.IAsyncAction
      )
      return WinRt.Hresult is abstract;

      IID_ICompositor5 : aliased WinRt.IID := (1223307693, 32717, 16502, (167, 156, 144, 204, 75, 133, 44, 155 ));

   -----------------------------------------------------------------------------
   -- type ICompositor6 is interface and WinRt.IInspectable;

      function CreateGeometricClip
      (
         this : access ICompositor6_Interface;
         RetVal : access Windows.UI.Composition.ICompositionGeometricClip
      )
      return WinRt.Hresult is abstract;

      function CreateGeometricClip
      (
         this : access ICompositor6_Interface;
         geometry : Windows.UI.Composition.ICompositionGeometry;
         RetVal : access Windows.UI.Composition.ICompositionGeometricClip
      )
      return WinRt.Hresult is abstract;

      function CreateRedirectVisual
      (
         this : access ICompositor6_Interface;
         RetVal : access Windows.UI.Composition.IRedirectVisual
      )
      return WinRt.Hresult is abstract;

      function CreateRedirectVisual
      (
         this : access ICompositor6_Interface;
         source : Windows.UI.Composition.IVisual;
         RetVal : access Windows.UI.Composition.IRedirectVisual
      )
      return WinRt.Hresult is abstract;

      function CreateBooleanKeyFrameAnimation
      (
         this : access ICompositor6_Interface;
         RetVal : access Windows.UI.Composition.IBooleanKeyFrameAnimation
      )
      return WinRt.Hresult is abstract;

      IID_ICompositor6 : aliased WinRt.IID := (2050536125, 52936, 20203, (131, 15, 216, 208, 122, 237, 235, 195 ));

   -----------------------------------------------------------------------------
   -- type ICompositorStatics is interface and WinRt.IInspectable;

      function get_MaxGlobalPlaybackRate
      (
         this : access ICompositorStatics_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MinGlobalPlaybackRate
      (
         this : access ICompositorStatics_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ICompositorStatics : aliased WinRt.IID := (135117118, 4638, 19863, (139, 116, 29, 252, 249, 25, 135, 234 ));

   -----------------------------------------------------------------------------
   -- type ICompositorWithProjectedShadow is interface and WinRt.IInspectable;

      function CreateProjectedShadowCaster
      (
         this : access ICompositorWithProjectedShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionProjectedShadowCaster
      )
      return WinRt.Hresult is abstract;

      function CreateProjectedShadow
      (
         this : access ICompositorWithProjectedShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionProjectedShadow
      )
      return WinRt.Hresult is abstract;

      function CreateProjectedShadowReceiver
      (
         this : access ICompositorWithProjectedShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionProjectedShadowReceiver
      )
      return WinRt.Hresult is abstract;

      IID_ICompositorWithProjectedShadow : aliased WinRt.IID := (2732995342, 35424, 23096, (187, 133, 180, 78, 169, 1, 103, 124 ));

   -----------------------------------------------------------------------------
   -- type ICompositorWithRadialGradient is interface and WinRt.IInspectable;

      function CreateRadialGradientBrush
      (
         this : access ICompositorWithRadialGradient_Interface;
         RetVal : access Windows.UI.Composition.ICompositionRadialGradientBrush
      )
      return WinRt.Hresult is abstract;

      IID_ICompositorWithRadialGradient : aliased WinRt.IID := (2562310567, 36465, 19283, (180, 168, 105, 186, 93, 25, 220, 91 ));

   -----------------------------------------------------------------------------
   -- type ICompositorWithVisualSurface is interface and WinRt.IInspectable;

      function CreateVisualSurface
      (
         this : access ICompositorWithVisualSurface_Interface;
         RetVal : access Windows.UI.Composition.ICompositionVisualSurface
      )
      return WinRt.Hresult is abstract;

      IID_ICompositorWithVisualSurface : aliased WinRt.IID := (3483461003, 291, 17745, (136, 145, 137, 189, 204, 64, 50, 43 ));

   -----------------------------------------------------------------------------
   -- type IContainerVisual is interface and WinRt.IInspectable;

      function get_Children
      (
         this : access IContainerVisual_Interface;
         RetVal : access Windows.UI.Composition.IVisualCollection
      )
      return WinRt.Hresult is abstract;

      IID_IContainerVisual : aliased WinRt.IID := (49724532, 60704, 18291, (175, 230, 212, 155, 74, 147, 219, 50 ));

   -----------------------------------------------------------------------------
   -- type IContainerVisualFactory is interface and WinRt.IInspectable;

      IID_IContainerVisualFactory : aliased WinRt.IID := (56862299, 51162, 19866, (149, 244, 105, 181, 200, 223, 103, 11 ));

   -----------------------------------------------------------------------------
   -- type ICubicBezierEasingFunction is interface and WinRt.IInspectable;

      function get_ControlPoint1
      (
         this : access ICubicBezierEasingFunction_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_ControlPoint2
      (
         this : access ICubicBezierEasingFunction_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_ICubicBezierEasingFunction : aliased WinRt.IID := (842335846, 49640, 17657, (150, 184, 201, 138, 207, 10, 230, 152 ));

   -----------------------------------------------------------------------------
   -- type IDistantLight is interface and WinRt.IInspectable;

      function get_Color
      (
         this : access IDistantLight_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_Color
      (
         this : access IDistantLight_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_CoordinateSpace
      (
         this : access IDistantLight_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_CoordinateSpace
      (
         this : access IDistantLight_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function get_Direction
      (
         this : access IDistantLight_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Direction
      (
         this : access IDistantLight_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      IID_IDistantLight : aliased WinRt.IID := (831322876, 23779, 19285, (171, 93, 7, 160, 3, 83, 172, 153 ));

   -----------------------------------------------------------------------------
   -- type IDistantLight2 is interface and WinRt.IInspectable;

      function get_Intensity
      (
         this : access IDistantLight2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Intensity
      (
         this : access IDistantLight2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IDistantLight2 : aliased WinRt.IID := (3687688732, 10571, 18647, (182, 14, 118, 223, 100, 170, 57, 43 ));

   -----------------------------------------------------------------------------
   -- type IDropShadow is interface and WinRt.IInspectable;

      function get_BlurRadius
      (
         this : access IDropShadow_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_BlurRadius
      (
         this : access IDropShadow_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Color
      (
         this : access IDropShadow_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_Color
      (
         this : access IDropShadow_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_Mask
      (
         this : access IDropShadow_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_Mask
      (
         this : access IDropShadow_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access IDropShadow_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access IDropShadow_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Opacity
      (
         this : access IDropShadow_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Opacity
      (
         this : access IDropShadow_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IDropShadow : aliased WinRt.IID := (3415702535, 41300, 18513, (133, 231, 168, 146, 76, 132, 250, 216 ));

   -----------------------------------------------------------------------------
   -- type IDropShadow2 is interface and WinRt.IInspectable;

      function get_SourcePolicy
      (
         this : access IDropShadow2_Interface;
         RetVal : access Windows.UI.Composition.CompositionDropShadowSourcePolicy
      )
      return WinRt.Hresult is abstract;

      function put_SourcePolicy
      (
         this : access IDropShadow2_Interface;
         value : Windows.UI.Composition.CompositionDropShadowSourcePolicy
      )
      return WinRt.Hresult is abstract;

      IID_IDropShadow2 : aliased WinRt.IID := (1816271036, 5561, 19501, (141, 74, 7, 103, 223, 17, 151, 122 ));

   -----------------------------------------------------------------------------
   -- type IExpressionAnimation is interface and WinRt.IInspectable;

      function get_Expression
      (
         this : access IExpressionAnimation_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Expression
      (
         this : access IExpressionAnimation_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IExpressionAnimation : aliased WinRt.IID := (1791775793, 32061, 19443, (171, 182, 244, 75, 220, 72, 136, 193 ));

   -----------------------------------------------------------------------------
   -- type IImplicitAnimationCollection is interface and WinRt.IInspectable;

      IID_IImplicitAnimationCollection : aliased WinRt.IID := (93889535, 2706, 19613, (164, 39, 178, 85, 25, 37, 13, 191 ));

   -----------------------------------------------------------------------------
   -- type IInsetClip is interface and WinRt.IInspectable;

      function get_BottomInset
      (
         this : access IInsetClip_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_BottomInset
      (
         this : access IInsetClip_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_LeftInset
      (
         this : access IInsetClip_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_LeftInset
      (
         this : access IInsetClip_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RightInset
      (
         this : access IInsetClip_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RightInset
      (
         this : access IInsetClip_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_TopInset
      (
         this : access IInsetClip_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_TopInset
      (
         this : access IInsetClip_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IInsetClip : aliased WinRt.IID := (510912071, 33991, 18298, (180, 116, 88, 128, 224, 68, 46, 21 ));

   -----------------------------------------------------------------------------
   -- type IKeyFrameAnimation is interface and WinRt.IInspectable;

      function get_DelayTime
      (
         this : access IKeyFrameAnimation_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_DelayTime
      (
         this : access IKeyFrameAnimation_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_Duration
      (
         this : access IKeyFrameAnimation_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_Duration
      (
         this : access IKeyFrameAnimation_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_IterationBehavior
      (
         this : access IKeyFrameAnimation_Interface;
         RetVal : access Windows.UI.Composition.AnimationIterationBehavior
      )
      return WinRt.Hresult is abstract;

      function put_IterationBehavior
      (
         this : access IKeyFrameAnimation_Interface;
         value : Windows.UI.Composition.AnimationIterationBehavior
      )
      return WinRt.Hresult is abstract;

      function get_IterationCount
      (
         this : access IKeyFrameAnimation_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_IterationCount
      (
         this : access IKeyFrameAnimation_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_KeyFrameCount
      (
         this : access IKeyFrameAnimation_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_StopBehavior
      (
         this : access IKeyFrameAnimation_Interface;
         RetVal : access Windows.UI.Composition.AnimationStopBehavior
      )
      return WinRt.Hresult is abstract;

      function put_StopBehavior
      (
         this : access IKeyFrameAnimation_Interface;
         value : Windows.UI.Composition.AnimationStopBehavior
      )
      return WinRt.Hresult is abstract;

      function InsertExpressionKeyFrame
      (
         this : access IKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function InsertExpressionKeyFrame
      (
         this : access IKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : WinRt.HString;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IKeyFrameAnimation : aliased WinRt.IID := (309231394, 15081, 17728, (154, 138, 222, 174, 138, 74, 74, 132 ));

   -----------------------------------------------------------------------------
   -- type IKeyFrameAnimation2 is interface and WinRt.IInspectable;

      function get_Direction
      (
         this : access IKeyFrameAnimation2_Interface;
         RetVal : access Windows.UI.Composition.AnimationDirection
      )
      return WinRt.Hresult is abstract;

      function put_Direction
      (
         this : access IKeyFrameAnimation2_Interface;
         value : Windows.UI.Composition.AnimationDirection
      )
      return WinRt.Hresult is abstract;

      IID_IKeyFrameAnimation2 : aliased WinRt.IID := (4105472187, 10560, 20160, (164, 26, 235, 109, 128, 26, 47, 24 ));

   -----------------------------------------------------------------------------
   -- type IKeyFrameAnimation3 is interface and WinRt.IInspectable;

      function get_DelayBehavior
      (
         this : access IKeyFrameAnimation3_Interface;
         RetVal : access Windows.UI.Composition.AnimationDelayBehavior
      )
      return WinRt.Hresult is abstract;

      function put_DelayBehavior
      (
         this : access IKeyFrameAnimation3_Interface;
         value : Windows.UI.Composition.AnimationDelayBehavior
      )
      return WinRt.Hresult is abstract;

      IID_IKeyFrameAnimation3 : aliased WinRt.IID := (2220617908, 55518, 17967, (135, 83, 200, 13, 67, 198, 255, 90 ));

   -----------------------------------------------------------------------------
   -- type IKeyFrameAnimationFactory is interface and WinRt.IInspectable;

      IID_IKeyFrameAnimationFactory : aliased WinRt.IID := (3204973560, 28970, 20417, (140, 135, 151, 8, 89, 237, 141, 46 ));

   -----------------------------------------------------------------------------
   -- type ILayerVisual is interface and WinRt.IInspectable;

      function get_Effect
      (
         this : access ILayerVisual_Interface;
         RetVal : access Windows.UI.Composition.ICompositionEffectBrush
      )
      return WinRt.Hresult is abstract;

      function put_Effect
      (
         this : access ILayerVisual_Interface;
         value : Windows.UI.Composition.ICompositionEffectBrush
      )
      return WinRt.Hresult is abstract;

      IID_ILayerVisual : aliased WinRt.IID := (2944678277, 1092, 18567, (142, 131, 180, 11, 37, 63, 130, 44 ));

   -----------------------------------------------------------------------------
   -- type ILayerVisual2 is interface and WinRt.IInspectable;

      function get_Shadow
      (
         this : access ILayerVisual2_Interface;
         RetVal : access Windows.UI.Composition.ICompositionShadow
      )
      return WinRt.Hresult is abstract;

      function put_Shadow
      (
         this : access ILayerVisual2_Interface;
         value : Windows.UI.Composition.ICompositionShadow
      )
      return WinRt.Hresult is abstract;

      IID_ILayerVisual2 : aliased WinRt.IID := (2566500075, 28451, 18929, (144, 177, 31, 89, 161, 79, 188, 227 ));

   -----------------------------------------------------------------------------
   -- type ILinearEasingFunction is interface and WinRt.IInspectable;

      IID_ILinearEasingFunction : aliased WinRt.IID := (2483066714, 51110, 18099, (172, 247, 26, 38, 138, 10, 17, 125 ));

   -----------------------------------------------------------------------------
   -- type INaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_DelayBehavior
      (
         this : access INaturalMotionAnimation_Interface;
         RetVal : access Windows.UI.Composition.AnimationDelayBehavior
      )
      return WinRt.Hresult is abstract;

      function put_DelayBehavior
      (
         this : access INaturalMotionAnimation_Interface;
         value : Windows.UI.Composition.AnimationDelayBehavior
      )
      return WinRt.Hresult is abstract;

      function get_DelayTime
      (
         this : access INaturalMotionAnimation_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_DelayTime
      (
         this : access INaturalMotionAnimation_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function get_StopBehavior
      (
         this : access INaturalMotionAnimation_Interface;
         RetVal : access Windows.UI.Composition.AnimationStopBehavior
      )
      return WinRt.Hresult is abstract;

      function put_StopBehavior
      (
         this : access INaturalMotionAnimation_Interface;
         value : Windows.UI.Composition.AnimationStopBehavior
      )
      return WinRt.Hresult is abstract;

      IID_INaturalMotionAnimation : aliased WinRt.IID := (1133371693, 30363, 18465, (169, 73, 40, 74, 101, 71, 232, 115 ));

   -----------------------------------------------------------------------------
   -- type INaturalMotionAnimationFactory is interface and WinRt.IInspectable;

      IID_INaturalMotionAnimationFactory : aliased WinRt.IID := (4114270982, 53098, 17287, (163, 254, 82, 33, 243, 231, 224, 224 ));

   -----------------------------------------------------------------------------
   -- type IPathKeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IPathKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         path : Windows.UI.Composition.ICompositionPath
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IPathKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         path : Windows.UI.Composition.ICompositionPath;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IPathKeyFrameAnimation : aliased WinRt.IID := (2634881225, 5494, 19263, (190, 96, 29, 80, 49, 245, 231, 27 ));

   -----------------------------------------------------------------------------
   -- type IPointLight is interface and WinRt.IInspectable;

      function get_Color
      (
         this : access IPointLight_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_Color
      (
         this : access IPointLight_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_ConstantAttenuation
      (
         this : access IPointLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_ConstantAttenuation
      (
         this : access IPointLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_CoordinateSpace
      (
         this : access IPointLight_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_CoordinateSpace
      (
         this : access IPointLight_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function get_LinearAttenuation
      (
         this : access IPointLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_LinearAttenuation
      (
         this : access IPointLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access IPointLight_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access IPointLight_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_QuadraticAttenuation
      (
         this : access IPointLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_QuadraticAttenuation
      (
         this : access IPointLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IPointLight : aliased WinRt.IID := (2978301363, 3162, 19120, (190, 220, 79, 53, 70, 148, 130, 114 ));

   -----------------------------------------------------------------------------
   -- type IPointLight2 is interface and WinRt.IInspectable;

      function get_Intensity
      (
         this : access IPointLight2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Intensity
      (
         this : access IPointLight2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IPointLight2 : aliased WinRt.IID := (4025061164, 1656, 20329, (177, 100, 168, 16, 217, 149, 188, 183 ));

   -----------------------------------------------------------------------------
   -- type IPointLight3 is interface and WinRt.IInspectable;

      function get_MinAttenuationCutoff
      (
         this : access IPointLight3_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MinAttenuationCutoff
      (
         this : access IPointLight3_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MaxAttenuationCutoff
      (
         this : access IPointLight3_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MaxAttenuationCutoff
      (
         this : access IPointLight3_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IPointLight3 : aliased WinRt.IID := (1275757415, 54505, 18058, (135, 174, 123, 164, 58, 178, 148, 133 ));

   -----------------------------------------------------------------------------
   -- type IQuaternionKeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IQuaternionKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IQuaternionKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Quaternion;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IQuaternionKeyFrameAnimation : aliased WinRt.IID := (1078876213, 60662, 16960, (133, 32, 103, 18, 121, 207, 54, 188 ));

   -----------------------------------------------------------------------------
   -- type IRedirectVisual is interface and WinRt.IInspectable;

      function get_Source
      (
         this : access IRedirectVisual_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_Source
      (
         this : access IRedirectVisual_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      IID_IRedirectVisual : aliased WinRt.IID := (2361844544, 35701, 21538, (176, 111, 9, 255, 233, 248, 97, 126 ));

   -----------------------------------------------------------------------------
   -- type IRenderingDeviceReplacedEventArgs is interface and WinRt.IInspectable;

      function get_GraphicsDevice
      (
         this : access IRenderingDeviceReplacedEventArgs_Interface;
         RetVal : access Windows.UI.Composition.ICompositionGraphicsDevice
      )
      return WinRt.Hresult is abstract;

      IID_IRenderingDeviceReplacedEventArgs : aliased WinRt.IID := (976333949, 10431, 20090, (133, 36, 113, 103, 157, 72, 15, 56 ));

   -----------------------------------------------------------------------------
   -- type IScalarKeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IScalarKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IScalarKeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : WinRt.Single;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IScalarKeyFrameAnimation : aliased WinRt.IID := (2921893801, 9516, 19349, (167, 37, 191, 133, 227, 128, 0, 161 ));

   -----------------------------------------------------------------------------
   -- type IScalarNaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_FinalValue
      (
         this : access IScalarNaturalMotionAnimation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_FinalValue
      (
         this : access IScalarNaturalMotionAnimation_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_InitialValue
      (
         this : access IScalarNaturalMotionAnimation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_InitialValue
      (
         this : access IScalarNaturalMotionAnimation_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_InitialVelocity
      (
         this : access IScalarNaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_InitialVelocity
      (
         this : access IScalarNaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_IScalarNaturalMotionAnimation : aliased WinRt.IID := (2494121345, 49042, 18779, (181, 189, 210, 198, 89, 67, 7, 55 ));

   -----------------------------------------------------------------------------
   -- type IScalarNaturalMotionAnimationFactory is interface and WinRt.IInspectable;

      IID_IScalarNaturalMotionAnimationFactory : aliased WinRt.IID := (2203755772, 26396, 16861, (175, 72, 174, 141, 239, 139, 21, 41 ));

   -----------------------------------------------------------------------------
   -- type IShapeVisual is interface and WinRt.IInspectable;

      function get_Shapes
      (
         this : access IShapeVisual_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ViewBox
      (
         this : access IShapeVisual_Interface;
         RetVal : access Windows.UI.Composition.ICompositionViewBox
      )
      return WinRt.Hresult is abstract;

      function put_ViewBox
      (
         this : access IShapeVisual_Interface;
         value : Windows.UI.Composition.ICompositionViewBox
      )
      return WinRt.Hresult is abstract;

      IID_IShapeVisual : aliased WinRt.IID := (4072477635, 47742, 19215, (145, 38, 255, 183, 83, 107, 129, 118 ));

   -----------------------------------------------------------------------------
   -- type ISpotLight is interface and WinRt.IInspectable;

      function get_ConstantAttenuation
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_ConstantAttenuation
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_CoordinateSpace
      (
         this : access ISpotLight_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_CoordinateSpace
      (
         this : access ISpotLight_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function get_Direction
      (
         this : access ISpotLight_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Direction
      (
         this : access ISpotLight_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_InnerConeAngle
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_InnerConeAngle
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_InnerConeAngleInDegrees
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_InnerConeAngleInDegrees
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_InnerConeColor
      (
         this : access ISpotLight_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_InnerConeColor
      (
         this : access ISpotLight_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_LinearAttenuation
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_LinearAttenuation
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access ISpotLight_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access ISpotLight_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_OuterConeAngle
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_OuterConeAngle
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_OuterConeAngleInDegrees
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_OuterConeAngleInDegrees
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_OuterConeColor
      (
         this : access ISpotLight_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_OuterConeColor
      (
         this : access ISpotLight_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_QuadraticAttenuation
      (
         this : access ISpotLight_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_QuadraticAttenuation
      (
         this : access ISpotLight_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ISpotLight : aliased WinRt.IID := (1520427635, 17569, 20373, (164, 34, 143, 165, 17, 107, 219, 68 ));

   -----------------------------------------------------------------------------
   -- type ISpotLight2 is interface and WinRt.IInspectable;

      function get_InnerConeIntensity
      (
         this : access ISpotLight2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_InnerConeIntensity
      (
         this : access ISpotLight2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_OuterConeIntensity
      (
         this : access ISpotLight2_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_OuterConeIntensity
      (
         this : access ISpotLight2_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ISpotLight2 : aliased WinRt.IID := (1693344094, 1670, 19946, (169, 232, 188, 58, 140, 112, 20, 89 ));

   -----------------------------------------------------------------------------
   -- type ISpotLight3 is interface and WinRt.IInspectable;

      function get_MinAttenuationCutoff
      (
         this : access ISpotLight3_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MinAttenuationCutoff
      (
         this : access ISpotLight3_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_MaxAttenuationCutoff
      (
         this : access ISpotLight3_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_MaxAttenuationCutoff
      (
         this : access ISpotLight3_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ISpotLight3 : aliased WinRt.IID := (3838852842, 4895, 18446, (133, 158, 184, 39, 5, 183, 67, 96 ));

   -----------------------------------------------------------------------------
   -- type ISpringScalarNaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_DampingRatio
      (
         this : access ISpringScalarNaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_DampingRatio
      (
         this : access ISpringScalarNaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Period
      (
         this : access ISpringScalarNaturalMotionAnimation_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_Period
      (
         this : access ISpringScalarNaturalMotionAnimation_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_ISpringScalarNaturalMotionAnimation : aliased WinRt.IID := (91400543, 14329, 20414, (184, 123, 92, 208, 58, 137, 80, 28 ));

   -----------------------------------------------------------------------------
   -- type ISpringVector2NaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_DampingRatio
      (
         this : access ISpringVector2NaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_DampingRatio
      (
         this : access ISpringVector2NaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Period
      (
         this : access ISpringVector2NaturalMotionAnimation_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_Period
      (
         this : access ISpringVector2NaturalMotionAnimation_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_ISpringVector2NaturalMotionAnimation : aliased WinRt.IID := (603231413, 61043, 20239, (164, 35, 64, 43, 148, 109, 244, 179 ));

   -----------------------------------------------------------------------------
   -- type ISpringVector3NaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_DampingRatio
      (
         this : access ISpringVector3NaturalMotionAnimation_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_DampingRatio
      (
         this : access ISpringVector3NaturalMotionAnimation_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Period
      (
         this : access ISpringVector3NaturalMotionAnimation_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_Period
      (
         this : access ISpringVector3NaturalMotionAnimation_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_ISpringVector3NaturalMotionAnimation : aliased WinRt.IID := (1820805599, 54651, 18324, (142, 45, 206, 203, 17, 225, 148, 229 ));

   -----------------------------------------------------------------------------
   -- type ISpriteVisual is interface and WinRt.IInspectable;

      function get_Brush
      (
         this : access ISpriteVisual_Interface;
         RetVal : access Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      function put_Brush
      (
         this : access ISpriteVisual_Interface;
         value : Windows.UI.Composition.ICompositionBrush
      )
      return WinRt.Hresult is abstract;

      IID_ISpriteVisual : aliased WinRt.IID := (148919681, 6865, 20375, (151, 87, 64, 45, 118, 228, 35, 59 ));

   -----------------------------------------------------------------------------
   -- type ISpriteVisual2 is interface and WinRt.IInspectable;

      function get_Shadow
      (
         this : access ISpriteVisual2_Interface;
         RetVal : access Windows.UI.Composition.ICompositionShadow
      )
      return WinRt.Hresult is abstract;

      function put_Shadow
      (
         this : access ISpriteVisual2_Interface;
         value : Windows.UI.Composition.ICompositionShadow
      )
      return WinRt.Hresult is abstract;

      IID_ISpriteVisual2 : aliased WinRt.IID := (1485608548, 39290, 18512, (145, 254, 83, 203, 88, 248, 28, 233 ));

   -----------------------------------------------------------------------------
   -- type IStepEasingFunction is interface and WinRt.IInspectable;

      function get_FinalStep
      (
         this : access IStepEasingFunction_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_FinalStep
      (
         this : access IStepEasingFunction_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_InitialStep
      (
         this : access IStepEasingFunction_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_InitialStep
      (
         this : access IStepEasingFunction_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_IsFinalStepSingleFrame
      (
         this : access IStepEasingFunction_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsFinalStepSingleFrame
      (
         this : access IStepEasingFunction_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsInitialStepSingleFrame
      (
         this : access IStepEasingFunction_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsInitialStepSingleFrame
      (
         this : access IStepEasingFunction_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StepCount
      (
         this : access IStepEasingFunction_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_StepCount
      (
         this : access IStepEasingFunction_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IStepEasingFunction : aliased WinRt.IID := (3502942027, 22028, 18955, (165, 246, 32, 108, 168, 195, 236, 214 ));

   -----------------------------------------------------------------------------
   -- type IVector2KeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IVector2KeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IVector2KeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Vector2;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IVector2KeyFrameAnimation : aliased WinRt.IID := (3745596693, 20009, 20241, (181, 94, 191, 42, 110, 179, 98, 148 ));

   -----------------------------------------------------------------------------
   -- type IVector2NaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_FinalValue
      (
         this : access IVector2NaturalMotionAnimation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_FinalValue
      (
         this : access IVector2NaturalMotionAnimation_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_InitialValue
      (
         this : access IVector2NaturalMotionAnimation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_InitialValue
      (
         this : access IVector2NaturalMotionAnimation_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_InitialVelocity
      (
         this : access IVector2NaturalMotionAnimation_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_InitialVelocity
      (
         this : access IVector2NaturalMotionAnimation_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_IVector2NaturalMotionAnimation : aliased WinRt.IID := (255724413, 58642, 18333, (160, 12, 119, 201, 58, 48, 163, 149 ));

   -----------------------------------------------------------------------------
   -- type IVector2NaturalMotionAnimationFactory is interface and WinRt.IInspectable;

      IID_IVector2NaturalMotionAnimationFactory : aliased WinRt.IID := (2356477793, 1889, 18594, (189, 219, 106, 252, 197, 43, 137, 216 ));

   -----------------------------------------------------------------------------
   -- type IVector3KeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IVector3KeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IVector3KeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Vector3;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IVector3KeyFrameAnimation : aliased WinRt.IID := (3355680170, 41601, 17346, (167, 61, 182, 142, 60, 83, 60, 64 ));

   -----------------------------------------------------------------------------
   -- type IVector3NaturalMotionAnimation is interface and WinRt.IInspectable;

      function get_FinalValue
      (
         this : access IVector3NaturalMotionAnimation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_FinalValue
      (
         this : access IVector3NaturalMotionAnimation_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_InitialValue
      (
         this : access IVector3NaturalMotionAnimation_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_InitialValue
      (
         this : access IVector3NaturalMotionAnimation_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_InitialVelocity
      (
         this : access IVector3NaturalMotionAnimation_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_InitialVelocity
      (
         this : access IVector3NaturalMotionAnimation_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      IID_IVector3NaturalMotionAnimation : aliased WinRt.IID := (2618754092, 58058, 17837, (150, 158, 78, 120, 183, 185, 173, 65 ));

   -----------------------------------------------------------------------------
   -- type IVector3NaturalMotionAnimationFactory is interface and WinRt.IInspectable;

      IID_IVector3NaturalMotionAnimationFactory : aliased WinRt.IID := (564665647, 2176, 17787, (172, 135, 182, 9, 1, 140, 135, 109 ));

   -----------------------------------------------------------------------------
   -- type IVector4KeyFrameAnimation is interface and WinRt.IInspectable;

      function InsertKeyFrame
      (
         this : access IVector4KeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Vector4
      )
      return WinRt.Hresult is abstract;

      function InsertKeyFrame
      (
         this : access IVector4KeyFrameAnimation_Interface;
         normalizedProgressKey : WinRt.Single;
         value : Windows.Foundation.Numerics.Vector4;
         easingFunction : Windows.UI.Composition.ICompositionEasingFunction
      )
      return WinRt.Hresult is abstract;

      IID_IVector4KeyFrameAnimation : aliased WinRt.IID := (609719387, 44509, 17285, (150, 6, 182, 163, 213, 228, 225, 185 ));

   -----------------------------------------------------------------------------
   -- type IVisual is interface and WinRt.IInspectable;

      function get_AnchorPoint
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_AnchorPoint
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_BackfaceVisibility
      (
         this : access IVisual_Interface;
         RetVal : access Windows.UI.Composition.CompositionBackfaceVisibility
      )
      return WinRt.Hresult is abstract;

      function put_BackfaceVisibility
      (
         this : access IVisual_Interface;
         value : Windows.UI.Composition.CompositionBackfaceVisibility
      )
      return WinRt.Hresult is abstract;

      function get_BorderMode
      (
         this : access IVisual_Interface;
         RetVal : access Windows.UI.Composition.CompositionBorderMode
      )
      return WinRt.Hresult is abstract;

      function put_BorderMode
      (
         this : access IVisual_Interface;
         value : Windows.UI.Composition.CompositionBorderMode
      )
      return WinRt.Hresult is abstract;

      function get_CenterPoint
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_CenterPoint
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Clip
      (
         this : access IVisual_Interface;
         RetVal : access Windows.UI.Composition.ICompositionClip
      )
      return WinRt.Hresult is abstract;

      function put_Clip
      (
         this : access IVisual_Interface;
         value : Windows.UI.Composition.ICompositionClip
      )
      return WinRt.Hresult is abstract;

      function get_CompositeMode
      (
         this : access IVisual_Interface;
         RetVal : access Windows.UI.Composition.CompositionCompositeMode
      )
      return WinRt.Hresult is abstract;

      function put_CompositeMode
      (
         this : access IVisual_Interface;
         value : Windows.UI.Composition.CompositionCompositeMode
      )
      return WinRt.Hresult is abstract;

      function get_IsVisible
      (
         this : access IVisual_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsVisible
      (
         this : access IVisual_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Offset
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Offset
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Opacity
      (
         this : access IVisual_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Opacity
      (
         this : access IVisual_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Orientation
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function put_Orientation
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Quaternion
      )
      return WinRt.Hresult is abstract;

      function get_Parent
      (
         this : access IVisual_Interface;
         RetVal : access Windows.UI.Composition.IContainerVisual
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngle
      (
         this : access IVisual_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngle
      (
         this : access IVisual_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAngleInDegrees
      (
         this : access IVisual_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RotationAngleInDegrees
      (
         this : access IVisual_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RotationAxis
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_RotationAxis
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_Size
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function get_TransformMatrix
      (
         this : access IVisual_Interface;
         RetVal : access Windows.Foundation.Numerics.Matrix4x4
      )
      return WinRt.Hresult is abstract;

      function put_TransformMatrix
      (
         this : access IVisual_Interface;
         value : Windows.Foundation.Numerics.Matrix4x4
      )
      return WinRt.Hresult is abstract;

      IID_IVisual : aliased WinRt.IID := (293478445, 43097, 19593, (135, 59, 194, 170, 86, 103, 136, 227 ));

   -----------------------------------------------------------------------------
   -- type IVisual2 is interface and WinRt.IInspectable;

      function get_ParentForTransform
      (
         this : access IVisual2_Interface;
         RetVal : access Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function put_ParentForTransform
      (
         this : access IVisual2_Interface;
         value : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function get_RelativeOffsetAdjustment
      (
         this : access IVisual2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_RelativeOffsetAdjustment
      (
         this : access IVisual2_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function get_RelativeSizeAdjustment
      (
         this : access IVisual2_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      function put_RelativeSizeAdjustment
      (
         this : access IVisual2_Interface;
         value : Windows.Foundation.Numerics.Vector2
      )
      return WinRt.Hresult is abstract;

      IID_IVisual2 : aliased WinRt.IID := (810726929, 22211, 19518, (139, 243, 246, 225, 173, 71, 63, 6 ));

   -----------------------------------------------------------------------------
   -- type IVisual3 is interface and WinRt.IInspectable;

      function get_IsHitTestVisible
      (
         this : access IVisual3_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsHitTestVisible
      (
         this : access IVisual3_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IVisual3 : aliased WinRt.IID := (817780749, 62646, 19127, (128, 221, 55, 56, 203, 172, 159, 44 ));

   -----------------------------------------------------------------------------
   -- type IVisualCollection is interface and WinRt.IInspectable;

      function get_Count
      (
         this : access IVisualCollection_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function InsertAbove
      (
         this : access IVisualCollection_Interface;
         newChild : Windows.UI.Composition.IVisual;
         sibling : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function InsertAtBottom
      (
         this : access IVisualCollection_Interface;
         newChild : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function InsertAtTop
      (
         this : access IVisualCollection_Interface;
         newChild : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function InsertBelow
      (
         this : access IVisualCollection_Interface;
         newChild : Windows.UI.Composition.IVisual;
         sibling : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function Remove
      (
         this : access IVisualCollection_Interface;
         child : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function RemoveAll
      (
         this : access IVisualCollection_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IVisualCollection : aliased WinRt.IID := (2339656965, 64830, 19096, (132, 168, 233, 73, 70, 140, 107, 203 ));

   -----------------------------------------------------------------------------
   -- type IVisualElement is interface and WinRt.IInspectable;

      IID_IVisualElement : aliased WinRt.IID := (31868434, 7554, 17140, (142, 63, 167, 34, 222, 211, 63, 199 ));

   -----------------------------------------------------------------------------
   -- type IVisualFactory is interface and WinRt.IInspectable;

      IID_IVisualFactory : aliased WinRt.IID := (2903505214, 46338, 20149, (135, 180, 154, 56, 167, 29, 1, 55 ));

   -----------------------------------------------------------------------------
   -- type IVisualUnorderedCollection is interface and WinRt.IInspectable;

      function get_Count
      (
         this : access IVisualUnorderedCollection_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function Add
      (
         this : access IVisualUnorderedCollection_Interface;
         newVisual : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function Remove
      (
         this : access IVisualUnorderedCollection_Interface;
         visual_p : Windows.UI.Composition.IVisual
      )
      return WinRt.Hresult is abstract;

      function RemoveAll
      (
         this : access IVisualUnorderedCollection_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IVisualUnorderedCollection : aliased WinRt.IID := (865053296, 21704, 16551, (128, 41, 201, 206, 235, 10, 162, 80 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionObject

   overriding procedure Initialize (this : in out CompositionObject);
   overriding procedure Finalize (this : in out CompositionObject);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionObject

   -----------------------------------------------------------------------------
   -- Static Interfaces for CompositionObject

   procedure StartAnimationWithIAnimationObject
   (
      target : Windows.UI.Composition.IAnimationObject;
      propertyName : WinRt.WString;
      animation : Windows.UI.Composition.CompositionAnimation'Class
   );

   procedure StartAnimationGroupWithIAnimationObject
   (
      target : Windows.UI.Composition.IAnimationObject;
      animation : Windows.UI.Composition.ICompositionAnimationBase
   );

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionObject

   function get_Compositor
   (
      this : in out CompositionObject
   )
   return WinRt.Windows.UI.Composition.Compositor'Class;

   function get_Dispatcher
   (
      this : in out CompositionObject
   )
   return WinRt.Windows.UI.Core.CoreDispatcher'Class;

   function get_Properties
   (
      this : in out CompositionObject
   )
   return WinRt.Windows.UI.Composition.CompositionPropertySet'Class;

   procedure StartAnimation
   (
      this : in out CompositionObject;
      propertyName : WinRt.WString;
      animation : Windows.UI.Composition.CompositionAnimation'Class
   );

   procedure StopAnimation
   (
      this : in out CompositionObject;
      propertyName : WinRt.WString
   );

   function get_Comment
   (
      this : in out CompositionObject
   )
   return WinRt.WString;

   procedure put_Comment
   (
      this : in out CompositionObject;
      value : WinRt.WString
   );

   function get_ImplicitAnimations
   (
      this : in out CompositionObject
   )
   return WinRt.Windows.UI.Composition.ImplicitAnimationCollection'Class;

   procedure put_ImplicitAnimations
   (
      this : in out CompositionObject;
      value : Windows.UI.Composition.ImplicitAnimationCollection'Class
   );

   procedure StartAnimationGroup
   (
      this : in out CompositionObject;
      value : Windows.UI.Composition.ICompositionAnimationBase
   );

   procedure StopAnimationGroup
   (
      this : in out CompositionObject;
      value : Windows.UI.Composition.ICompositionAnimationBase
   );

   function get_DispatcherQueue
   (
      this : in out CompositionObject
   )
   return WinRt.Windows.System.DispatcherQueue'Class;

   function TryGetAnimationController
   (
      this : in out CompositionObject;
      propertyName : WinRt.WString
   )
   return WinRt.Windows.UI.Composition.AnimationController'Class;

   procedure Close
   (
      this : in out CompositionObject
   );

   procedure PopulatePropertyInfo
   (
      this : in out CompositionObject;
      propertyName : WinRt.WString;
      propertyInfo : Windows.UI.Composition.AnimationPropertyInfo'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionLight

   overriding procedure Initialize (this : in out CompositionLight);
   overriding procedure Finalize (this : in out CompositionLight);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionLight

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionLight

   function get_Targets
   (
      this : in out CompositionLight
   )
   return WinRt.Windows.UI.Composition.VisualUnorderedCollection'Class;

   function get_ExclusionsFromTargets
   (
      this : in out CompositionLight
   )
   return WinRt.Windows.UI.Composition.VisualUnorderedCollection'Class;

   function get_IsEnabled
   (
      this : in out CompositionLight
   )
   return WinRt.Boolean;

   procedure put_IsEnabled
   (
      this : in out CompositionLight;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AmbientLight

   overriding procedure Initialize (this : in out AmbientLight);
   overriding procedure Finalize (this : in out AmbientLight);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AmbientLight

   function get_Color
   (
      this : in out AmbientLight
   )
   return WinRt.Windows.UI.Color;

   procedure put_Color
   (
      this : in out AmbientLight;
      value : Windows.UI.Color
   );

   function get_Intensity
   (
      this : in out AmbientLight
   )
   return WinRt.Single;

   procedure put_Intensity
   (
      this : in out AmbientLight;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AnimationController

   overriding procedure Initialize (this : in out AnimationController);
   overriding procedure Finalize (this : in out AnimationController);

   -----------------------------------------------------------------------------
   -- Static Interfaces for AnimationController

   function get_MaxPlaybackRate
   return WinRt.Single;

   function get_MinPlaybackRate
   return WinRt.Single;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AnimationController

   function get_PlaybackRate
   (
      this : in out AnimationController
   )
   return WinRt.Single;

   procedure put_PlaybackRate
   (
      this : in out AnimationController;
      value : WinRt.Single
   );

   function get_Progress
   (
      this : in out AnimationController
   )
   return WinRt.Single;

   procedure put_Progress
   (
      this : in out AnimationController;
      value : WinRt.Single
   );

   function get_ProgressBehavior
   (
      this : in out AnimationController
   )
   return WinRt.Windows.UI.Composition.AnimationControllerProgressBehavior;

   procedure put_ProgressBehavior
   (
      this : in out AnimationController;
      value : Windows.UI.Composition.AnimationControllerProgressBehavior
   );

   procedure Pause
   (
      this : in out AnimationController
   );

   procedure Resume
   (
      this : in out AnimationController
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AnimationPropertyInfo

   overriding procedure Initialize (this : in out AnimationPropertyInfo);
   overriding procedure Finalize (this : in out AnimationPropertyInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AnimationPropertyInfo

   function get_AccessMode
   (
      this : in out AnimationPropertyInfo
   )
   return WinRt.Windows.UI.Composition.AnimationPropertyAccessMode;

   procedure put_AccessMode
   (
      this : in out AnimationPropertyInfo;
      value : Windows.UI.Composition.AnimationPropertyAccessMode
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionAnimation

   overriding procedure Initialize (this : in out CompositionAnimation);
   overriding procedure Finalize (this : in out CompositionAnimation);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionAnimation

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionAnimation

   procedure ClearAllParameters
   (
      this : in out CompositionAnimation
   );

   procedure ClearParameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString
   );

   procedure SetColorParameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.UI.Color
   );

   procedure SetMatrix3x2Parameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.Foundation.Numerics.Matrix3x2
   );

   procedure SetMatrix4x4Parameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.Foundation.Numerics.Matrix4x4
   );

   procedure SetQuaternionParameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.Foundation.Numerics.Quaternion
   );

   procedure SetReferenceParameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      compositionObject_p : Windows.UI.Composition.CompositionObject'Class
   );

   procedure SetScalarParameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : WinRt.Single
   );

   procedure SetVector2Parameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector2
   );

   procedure SetVector3Parameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector3
   );

   procedure SetVector4Parameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector4
   );

   procedure SetBooleanParameter
   (
      this : in out CompositionAnimation;
      key : WinRt.WString;
      value : WinRt.Boolean
   );

   function get_Target
   (
      this : in out CompositionAnimation
   )
   return WinRt.WString;

   procedure put_Target
   (
      this : in out CompositionAnimation;
      value : WinRt.WString
   );

   function get_InitialValueExpressions
   (
      this : in out CompositionAnimation
   )
   return WinRt.Windows.UI.Composition.InitialValueExpressionCollection'Class;

   procedure SetExpressionReferenceParameter
   (
      this : in out CompositionAnimation;
      parameterName : WinRt.WString;
      source : Windows.UI.Composition.IAnimationObject
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for KeyFrameAnimation

   overriding procedure Initialize (this : in out KeyFrameAnimation);
   overriding procedure Finalize (this : in out KeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for KeyFrameAnimation

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for KeyFrameAnimation

   function get_DelayTime
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_DelayTime
   (
      this : in out KeyFrameAnimation;
      value : Windows.Foundation.TimeSpan
   );

   function get_Duration
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_Duration
   (
      this : in out KeyFrameAnimation;
      value : Windows.Foundation.TimeSpan
   );

   function get_IterationBehavior
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Windows.UI.Composition.AnimationIterationBehavior;

   procedure put_IterationBehavior
   (
      this : in out KeyFrameAnimation;
      value : Windows.UI.Composition.AnimationIterationBehavior
   );

   function get_IterationCount
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Int32;

   procedure put_IterationCount
   (
      this : in out KeyFrameAnimation;
      value : WinRt.Int32
   );

   function get_KeyFrameCount
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Int32;

   function get_StopBehavior
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Windows.UI.Composition.AnimationStopBehavior;

   procedure put_StopBehavior
   (
      this : in out KeyFrameAnimation;
      value : Windows.UI.Composition.AnimationStopBehavior
   );

   procedure InsertExpressionKeyFrame
   (
      this : in out KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : WinRt.WString
   );

   procedure InsertExpressionKeyFrame
   (
      this : in out KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : WinRt.WString;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   function get_Direction
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Windows.UI.Composition.AnimationDirection;

   procedure put_Direction
   (
      this : in out KeyFrameAnimation;
      value : Windows.UI.Composition.AnimationDirection
   );

   function get_DelayBehavior
   (
      this : in out KeyFrameAnimation
   )
   return WinRt.Windows.UI.Composition.AnimationDelayBehavior;

   procedure put_DelayBehavior
   (
      this : in out KeyFrameAnimation;
      value : Windows.UI.Composition.AnimationDelayBehavior
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BooleanKeyFrameAnimation

   overriding procedure Initialize (this : in out BooleanKeyFrameAnimation);
   overriding procedure Finalize (this : in out BooleanKeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BooleanKeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out BooleanKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for NaturalMotionAnimation

   overriding procedure Initialize (this : in out NaturalMotionAnimation);
   overriding procedure Finalize (this : in out NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for NaturalMotionAnimation

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for NaturalMotionAnimation

   function get_DelayBehavior
   (
      this : in out NaturalMotionAnimation
   )
   return WinRt.Windows.UI.Composition.AnimationDelayBehavior;

   procedure put_DelayBehavior
   (
      this : in out NaturalMotionAnimation;
      value : Windows.UI.Composition.AnimationDelayBehavior
   );

   function get_DelayTime
   (
      this : in out NaturalMotionAnimation
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_DelayTime
   (
      this : in out NaturalMotionAnimation;
      value : Windows.Foundation.TimeSpan
   );

   function get_StopBehavior
   (
      this : in out NaturalMotionAnimation
   )
   return WinRt.Windows.UI.Composition.AnimationStopBehavior;

   procedure put_StopBehavior
   (
      this : in out NaturalMotionAnimation;
      value : Windows.UI.Composition.AnimationStopBehavior
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ScalarNaturalMotionAnimation

   overriding procedure Initialize (this : in out ScalarNaturalMotionAnimation);
   overriding procedure Finalize (this : in out ScalarNaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ScalarNaturalMotionAnimation

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ScalarNaturalMotionAnimation

   function get_FinalValue
   (
      this : in out ScalarNaturalMotionAnimation
   )
   return IReference_Single.Kind;

   procedure put_FinalValue
   (
      this : in out ScalarNaturalMotionAnimation;
      value : GenericObject
   );

   function get_InitialValue
   (
      this : in out ScalarNaturalMotionAnimation
   )
   return IReference_Single.Kind;

   procedure put_InitialValue
   (
      this : in out ScalarNaturalMotionAnimation;
      value : GenericObject
   );

   function get_InitialVelocity
   (
      this : in out ScalarNaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_InitialVelocity
   (
      this : in out ScalarNaturalMotionAnimation;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BounceScalarNaturalMotionAnimation

   overriding procedure Initialize (this : in out BounceScalarNaturalMotionAnimation);
   overriding procedure Finalize (this : in out BounceScalarNaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BounceScalarNaturalMotionAnimation

   function get_Acceleration
   (
      this : in out BounceScalarNaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_Acceleration
   (
      this : in out BounceScalarNaturalMotionAnimation;
      value : WinRt.Single
   );

   function get_Restitution
   (
      this : in out BounceScalarNaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_Restitution
   (
      this : in out BounceScalarNaturalMotionAnimation;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Vector2NaturalMotionAnimation

   overriding procedure Initialize (this : in out Vector2NaturalMotionAnimation);
   overriding procedure Finalize (this : in out Vector2NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Vector2NaturalMotionAnimation

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Vector2NaturalMotionAnimation

   function get_FinalValue
   (
      this : in out Vector2NaturalMotionAnimation
   )
   return IReference_Vector2.Kind;

   procedure put_FinalValue
   (
      this : in out Vector2NaturalMotionAnimation;
      value : GenericObject
   );

   function get_InitialValue
   (
      this : in out Vector2NaturalMotionAnimation
   )
   return IReference_Vector2.Kind;

   procedure put_InitialValue
   (
      this : in out Vector2NaturalMotionAnimation;
      value : GenericObject
   );

   function get_InitialVelocity
   (
      this : in out Vector2NaturalMotionAnimation
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_InitialVelocity
   (
      this : in out Vector2NaturalMotionAnimation;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BounceVector2NaturalMotionAnimation

   overriding procedure Initialize (this : in out BounceVector2NaturalMotionAnimation);
   overriding procedure Finalize (this : in out BounceVector2NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BounceVector2NaturalMotionAnimation

   function get_Acceleration
   (
      this : in out BounceVector2NaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_Acceleration
   (
      this : in out BounceVector2NaturalMotionAnimation;
      value : WinRt.Single
   );

   function get_Restitution
   (
      this : in out BounceVector2NaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_Restitution
   (
      this : in out BounceVector2NaturalMotionAnimation;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Vector3NaturalMotionAnimation

   overriding procedure Initialize (this : in out Vector3NaturalMotionAnimation);
   overriding procedure Finalize (this : in out Vector3NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Vector3NaturalMotionAnimation

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Vector3NaturalMotionAnimation

   function get_FinalValue
   (
      this : in out Vector3NaturalMotionAnimation
   )
   return IReference_Vector3.Kind;

   procedure put_FinalValue
   (
      this : in out Vector3NaturalMotionAnimation;
      value : GenericObject
   );

   function get_InitialValue
   (
      this : in out Vector3NaturalMotionAnimation
   )
   return IReference_Vector3.Kind;

   procedure put_InitialValue
   (
      this : in out Vector3NaturalMotionAnimation;
      value : GenericObject
   );

   function get_InitialVelocity
   (
      this : in out Vector3NaturalMotionAnimation
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_InitialVelocity
   (
      this : in out Vector3NaturalMotionAnimation;
      value : Windows.Foundation.Numerics.Vector3
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for BounceVector3NaturalMotionAnimation

   overriding procedure Initialize (this : in out BounceVector3NaturalMotionAnimation);
   overriding procedure Finalize (this : in out BounceVector3NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for BounceVector3NaturalMotionAnimation

   function get_Acceleration
   (
      this : in out BounceVector3NaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_Acceleration
   (
      this : in out BounceVector3NaturalMotionAnimation;
      value : WinRt.Single
   );

   function get_Restitution
   (
      this : in out BounceVector3NaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_Restitution
   (
      this : in out BounceVector3NaturalMotionAnimation;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ColorKeyFrameAnimation

   overriding procedure Initialize (this : in out ColorKeyFrameAnimation);
   overriding procedure Finalize (this : in out ColorKeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ColorKeyFrameAnimation

   function get_InterpolationColorSpace
   (
      this : in out ColorKeyFrameAnimation
   )
   return WinRt.Windows.UI.Composition.CompositionColorSpace;

   procedure put_InterpolationColorSpace
   (
      this : in out ColorKeyFrameAnimation;
      value : Windows.UI.Composition.CompositionColorSpace
   );

   procedure InsertKeyFrame
   (
      this : in out ColorKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.UI.Color
   );

   procedure InsertKeyFrame
   (
      this : in out ColorKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.UI.Color;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionAnimationGroup

   overriding procedure Initialize (this : in out CompositionAnimationGroup);
   overriding procedure Finalize (this : in out CompositionAnimationGroup);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionAnimationGroup

   function get_Count
   (
      this : in out CompositionAnimationGroup
   )
   return WinRt.Int32;

   procedure Add
   (
      this : in out CompositionAnimationGroup;
      value : Windows.UI.Composition.CompositionAnimation'Class
   );

   procedure Remove
   (
      this : in out CompositionAnimationGroup;
      value : Windows.UI.Composition.CompositionAnimation'Class
   );

   procedure RemoveAll
   (
      this : in out CompositionAnimationGroup
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionAnimation>
   function First
   (
      this : in out CompositionAnimationGroup
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionBrush

   overriding procedure Initialize (this : in out CompositionBrush);
   overriding procedure Finalize (this : in out CompositionBrush);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionBrush

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionBrush

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionBackdropBrush

   overriding procedure Initialize (this : in out CompositionBackdropBrush);
   overriding procedure Finalize (this : in out CompositionBackdropBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionBackdropBrush

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionBatchCompletedEventArgs

   overriding procedure Initialize (this : in out CompositionBatchCompletedEventArgs);
   overriding procedure Finalize (this : in out CompositionBatchCompletedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionBatchCompletedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionCapabilities

   overriding procedure Initialize (this : in out CompositionCapabilities);
   overriding procedure Finalize (this : in out CompositionCapabilities);

   -----------------------------------------------------------------------------
   -- Static Interfaces for CompositionCapabilities

   function GetForCurrentView
   return WinRt.Windows.UI.Composition.CompositionCapabilities;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionCapabilities

   function AreEffectsSupported
   (
      this : in out CompositionCapabilities
   )
   return WinRt.Boolean;

   function AreEffectsFast
   (
      this : in out CompositionCapabilities
   )
   return WinRt.Boolean;

   function add_Changed
   (
      this : in out CompositionCapabilities;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Changed
   (
      this : in out CompositionCapabilities;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionClip

   overriding procedure Initialize (this : in out CompositionClip);
   overriding procedure Finalize (this : in out CompositionClip);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionClip

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionClip

   function get_AnchorPoint
   (
      this : in out CompositionClip
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_AnchorPoint
   (
      this : in out CompositionClip;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_CenterPoint
   (
      this : in out CompositionClip
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_CenterPoint
   (
      this : in out CompositionClip;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Offset
   (
      this : in out CompositionClip
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionClip;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_RotationAngle
   (
      this : in out CompositionClip
   )
   return WinRt.Single;

   procedure put_RotationAngle
   (
      this : in out CompositionClip;
      value : WinRt.Single
   );

   function get_RotationAngleInDegrees
   (
      this : in out CompositionClip
   )
   return WinRt.Single;

   procedure put_RotationAngleInDegrees
   (
      this : in out CompositionClip;
      value : WinRt.Single
   );

   function get_Scale
   (
      this : in out CompositionClip
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Scale
   (
      this : in out CompositionClip;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_TransformMatrix
   (
      this : in out CompositionClip
   )
   return WinRt.Windows.Foundation.Numerics.Matrix3x2;

   procedure put_TransformMatrix
   (
      this : in out CompositionClip;
      value : Windows.Foundation.Numerics.Matrix3x2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionColorBrush

   overriding procedure Initialize (this : in out CompositionColorBrush);
   overriding procedure Finalize (this : in out CompositionColorBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionColorBrush

   function get_Color
   (
      this : in out CompositionColorBrush
   )
   return WinRt.Windows.UI.Color;

   procedure put_Color
   (
      this : in out CompositionColorBrush;
      value : Windows.UI.Color
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionColorGradientStop

   overriding procedure Initialize (this : in out CompositionColorGradientStop);
   overriding procedure Finalize (this : in out CompositionColorGradientStop);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionColorGradientStop

   function get_Color
   (
      this : in out CompositionColorGradientStop
   )
   return WinRt.Windows.UI.Color;

   procedure put_Color
   (
      this : in out CompositionColorGradientStop;
      value : Windows.UI.Color
   );

   function get_Offset
   (
      this : in out CompositionColorGradientStop
   )
   return WinRt.Single;

   procedure put_Offset
   (
      this : in out CompositionColorGradientStop;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionColorGradientStopCollection

   overriding procedure Initialize (this : in out CompositionColorGradientStopCollection);
   overriding procedure Finalize (this : in out CompositionColorGradientStopCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionColorGradientStopCollection

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionColorGradientStop>
   function First
   (
      this : in out CompositionColorGradientStopCollection
   )
   return WinRt.GenericObject;

   -- Generic Interface Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionColorGradientStop>
   function GetAt
   (
      this : in out CompositionColorGradientStopCollection;
      index : WinRt.UInt32
   )
   return WinRt.Windows.UI.Composition.CompositionColorGradientStop'Class;

   function get_Size
   (
      this : in out CompositionColorGradientStopCollection
   )
   return WinRt.UInt32;

   function GetView
   (
      this : in out CompositionColorGradientStopCollection
   )
   return WinRt.GenericObject;

   function IndexOf
   (
      this : in out CompositionColorGradientStopCollection;
      value : Windows.UI.Composition.CompositionColorGradientStop'Class;
      index : WinRt.UInt32_Ptr
   )
   return WinRt.Boolean;

   procedure SetAt
   (
      this : in out CompositionColorGradientStopCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.CompositionColorGradientStop'Class
   );

   procedure InsertAt
   (
      this : in out CompositionColorGradientStopCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.CompositionColorGradientStop'Class
   );

   procedure RemoveAt
   (
      this : in out CompositionColorGradientStopCollection;
      index : WinRt.UInt32
   );

   procedure Append
   (
      this : in out CompositionColorGradientStopCollection;
      value : Windows.UI.Composition.CompositionColorGradientStop'Class
   );

   procedure RemoveAtEnd
   (
      this : in out CompositionColorGradientStopCollection
   );

   procedure Clear
   (
      this : in out CompositionColorGradientStopCollection
   );

   function GetMany
   (
      this : in out CompositionColorGradientStopCollection;
      startIndex : WinRt.UInt32;
      items : Windows.UI.Composition.ICompositionColorGradientStop_Array
   )
   return WinRt.UInt32;

   procedure ReplaceAll
   (
      this : in out CompositionColorGradientStopCollection;
      items : Windows.UI.Composition.ICompositionColorGradientStop_Array
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionCommitBatch

   overriding procedure Initialize (this : in out CompositionCommitBatch);
   overriding procedure Finalize (this : in out CompositionCommitBatch);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionCommitBatch

   function get_IsActive
   (
      this : in out CompositionCommitBatch
   )
   return WinRt.Boolean;

   function get_IsEnded
   (
      this : in out CompositionCommitBatch
   )
   return WinRt.Boolean;

   function add_Completed
   (
      this : in out CompositionCommitBatch;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Completed
   (
      this : in out CompositionCommitBatch;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionShape

   overriding procedure Initialize (this : in out CompositionShape);
   overriding procedure Finalize (this : in out CompositionShape);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionShape

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionShape

   function get_CenterPoint
   (
      this : in out CompositionShape
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_CenterPoint
   (
      this : in out CompositionShape;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Offset
   (
      this : in out CompositionShape
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionShape;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_RotationAngle
   (
      this : in out CompositionShape
   )
   return WinRt.Single;

   procedure put_RotationAngle
   (
      this : in out CompositionShape;
      value : WinRt.Single
   );

   function get_RotationAngleInDegrees
   (
      this : in out CompositionShape
   )
   return WinRt.Single;

   procedure put_RotationAngleInDegrees
   (
      this : in out CompositionShape;
      value : WinRt.Single
   );

   function get_Scale
   (
      this : in out CompositionShape
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Scale
   (
      this : in out CompositionShape;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_TransformMatrix
   (
      this : in out CompositionShape
   )
   return WinRt.Windows.Foundation.Numerics.Matrix3x2;

   procedure put_TransformMatrix
   (
      this : in out CompositionShape;
      value : Windows.Foundation.Numerics.Matrix3x2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionContainerShape

   overriding procedure Initialize (this : in out CompositionContainerShape);
   overriding procedure Finalize (this : in out CompositionContainerShape);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionContainerShape

   function get_Shapes
   (
      this : in out CompositionContainerShape
   )
   return WinRt.Windows.UI.Composition.CompositionShapeCollection'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionDrawingSurface

   overriding procedure Initialize (this : in out CompositionDrawingSurface);
   overriding procedure Finalize (this : in out CompositionDrawingSurface);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionDrawingSurface

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionDrawingSurface

   function get_AlphaMode
   (
      this : in out CompositionDrawingSurface
   )
   return WinRt.Windows.Graphics.DirectX.DirectXAlphaMode;

   function get_PixelFormat
   (
      this : in out CompositionDrawingSurface
   )
   return WinRt.Windows.Graphics.DirectX.DirectXPixelFormat;

   function get_Size
   (
      this : in out CompositionDrawingSurface
   )
   return WinRt.Windows.Foundation.Size;

   function get_SizeInt32
   (
      this : in out CompositionDrawingSurface
   )
   return WinRt.Windows.Graphics.SizeInt32;

   procedure Resize
   (
      this : in out CompositionDrawingSurface;
      sizePixels : Windows.Graphics.SizeInt32
   );

   procedure Scroll
   (
      this : in out CompositionDrawingSurface;
      offset : Windows.Graphics.PointInt32
   );

   procedure Scroll
   (
      this : in out CompositionDrawingSurface;
      offset : Windows.Graphics.PointInt32;
      scrollRect : Windows.Graphics.RectInt32
   );

   procedure ScrollWithClip
   (
      this : in out CompositionDrawingSurface;
      offset : Windows.Graphics.PointInt32;
      clipRect : Windows.Graphics.RectInt32
   );

   procedure ScrollWithClip
   (
      this : in out CompositionDrawingSurface;
      offset : Windows.Graphics.PointInt32;
      clipRect : Windows.Graphics.RectInt32;
      scrollRect : Windows.Graphics.RectInt32
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionEasingFunction

   overriding procedure Initialize (this : in out CompositionEasingFunction);
   overriding procedure Finalize (this : in out CompositionEasingFunction);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionEasingFunction

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionEasingFunction

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionEffectBrush

   overriding procedure Initialize (this : in out CompositionEffectBrush);
   overriding procedure Finalize (this : in out CompositionEffectBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionEffectBrush

   function GetSourceParameter
   (
      this : in out CompositionEffectBrush;
      name : WinRt.WString
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure SetSourceParameter
   (
      this : in out CompositionEffectBrush;
      name : WinRt.WString;
      source : Windows.UI.Composition.CompositionBrush'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionEffectFactory

   overriding procedure Initialize (this : in out CompositionEffectFactory);
   overriding procedure Finalize (this : in out CompositionEffectFactory);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionEffectFactory

   function CreateBrush
   (
      this : in out CompositionEffectFactory
   )
   return WinRt.Windows.UI.Composition.CompositionEffectBrush'Class;

   function get_ExtendedError
   (
      this : in out CompositionEffectFactory
   )
   return WinRt.Windows.Foundation.HResult;

   function get_LoadStatus
   (
      this : in out CompositionEffectFactory
   )
   return WinRt.Windows.UI.Composition.CompositionEffectFactoryLoadStatus;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionEffectSourceParameter

   overriding procedure Initialize (this : in out CompositionEffectSourceParameter);
   overriding procedure Finalize (this : in out CompositionEffectSourceParameter);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionEffectSourceParameter

   function Constructor
   (
      name : WinRt.WString
   )
   return CompositionEffectSourceParameter;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionEffectSourceParameter

   function get_Name
   (
      this : in out CompositionEffectSourceParameter
   )
   return WinRt.WString;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionGeometry

   overriding procedure Initialize (this : in out CompositionGeometry);
   overriding procedure Finalize (this : in out CompositionGeometry);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionGeometry

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionGeometry

   function get_TrimEnd
   (
      this : in out CompositionGeometry
   )
   return WinRt.Single;

   procedure put_TrimEnd
   (
      this : in out CompositionGeometry;
      value : WinRt.Single
   );

   function get_TrimOffset
   (
      this : in out CompositionGeometry
   )
   return WinRt.Single;

   procedure put_TrimOffset
   (
      this : in out CompositionGeometry;
      value : WinRt.Single
   );

   function get_TrimStart
   (
      this : in out CompositionGeometry
   )
   return WinRt.Single;

   procedure put_TrimStart
   (
      this : in out CompositionGeometry;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionEllipseGeometry

   overriding procedure Initialize (this : in out CompositionEllipseGeometry);
   overriding procedure Finalize (this : in out CompositionEllipseGeometry);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionEllipseGeometry

   function get_Center
   (
      this : in out CompositionEllipseGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Center
   (
      this : in out CompositionEllipseGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Radius
   (
      this : in out CompositionEllipseGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Radius
   (
      this : in out CompositionEllipseGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionGeometricClip

   overriding procedure Initialize (this : in out CompositionGeometricClip);
   overriding procedure Finalize (this : in out CompositionGeometricClip);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionGeometricClip

   function get_Geometry
   (
      this : in out CompositionGeometricClip
   )
   return WinRt.Windows.UI.Composition.CompositionGeometry'Class;

   procedure put_Geometry
   (
      this : in out CompositionGeometricClip;
      value : Windows.UI.Composition.CompositionGeometry'Class
   );

   function get_ViewBox
   (
      this : in out CompositionGeometricClip
   )
   return WinRt.Windows.UI.Composition.CompositionViewBox'Class;

   procedure put_ViewBox
   (
      this : in out CompositionGeometricClip;
      value : Windows.UI.Composition.CompositionViewBox'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionGradientBrush

   overriding procedure Initialize (this : in out CompositionGradientBrush);
   overriding procedure Finalize (this : in out CompositionGradientBrush);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionGradientBrush

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionGradientBrush

   function get_AnchorPoint
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_AnchorPoint
   (
      this : in out CompositionGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_CenterPoint
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_CenterPoint
   (
      this : in out CompositionGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_ColorStops
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.UI.Composition.CompositionColorGradientStopCollection'Class;

   function get_ExtendMode
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.UI.Composition.CompositionGradientExtendMode;

   procedure put_ExtendMode
   (
      this : in out CompositionGradientBrush;
      value : Windows.UI.Composition.CompositionGradientExtendMode
   );

   function get_InterpolationSpace
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.UI.Composition.CompositionColorSpace;

   procedure put_InterpolationSpace
   (
      this : in out CompositionGradientBrush;
      value : Windows.UI.Composition.CompositionColorSpace
   );

   function get_Offset
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_RotationAngle
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Single;

   procedure put_RotationAngle
   (
      this : in out CompositionGradientBrush;
      value : WinRt.Single
   );

   function get_RotationAngleInDegrees
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Single;

   procedure put_RotationAngleInDegrees
   (
      this : in out CompositionGradientBrush;
      value : WinRt.Single
   );

   function get_Scale
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Scale
   (
      this : in out CompositionGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_TransformMatrix
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Matrix3x2;

   procedure put_TransformMatrix
   (
      this : in out CompositionGradientBrush;
      value : Windows.Foundation.Numerics.Matrix3x2
   );

   function get_MappingMode
   (
      this : in out CompositionGradientBrush
   )
   return WinRt.Windows.UI.Composition.CompositionMappingMode;

   procedure put_MappingMode
   (
      this : in out CompositionGradientBrush;
      value : Windows.UI.Composition.CompositionMappingMode
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionGraphicsDevice

   overriding procedure Initialize (this : in out CompositionGraphicsDevice);
   overriding procedure Finalize (this : in out CompositionGraphicsDevice);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionGraphicsDevice

   function CreateDrawingSurface
   (
      this : in out CompositionGraphicsDevice;
      sizePixels : Windows.Foundation.Size;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode
   )
   return WinRt.Windows.UI.Composition.CompositionDrawingSurface'Class;

   function add_RenderingDeviceReplaced
   (
      this : in out CompositionGraphicsDevice;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_RenderingDeviceReplaced
   (
      this : in out CompositionGraphicsDevice;
      token : Windows.Foundation.EventRegistrationToken
   );

   function CreateDrawingSurface2
   (
      this : in out CompositionGraphicsDevice;
      sizePixels : Windows.Graphics.SizeInt32;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode
   )
   return WinRt.Windows.UI.Composition.CompositionDrawingSurface'Class;

   function CreateVirtualDrawingSurface
   (
      this : in out CompositionGraphicsDevice;
      sizePixels : Windows.Graphics.SizeInt32;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode
   )
   return WinRt.Windows.UI.Composition.CompositionVirtualDrawingSurface'Class;

   function CreateMipmapSurface
   (
      this : in out CompositionGraphicsDevice;
      sizePixels : Windows.Graphics.SizeInt32;
      pixelFormat : Windows.Graphics.DirectX.DirectXPixelFormat;
      alphaMode : Windows.Graphics.DirectX.DirectXAlphaMode
   )
   return WinRt.Windows.UI.Composition.CompositionMipmapSurface'Class;

   procedure Trim
   (
      this : in out CompositionGraphicsDevice
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionLineGeometry

   overriding procedure Initialize (this : in out CompositionLineGeometry);
   overriding procedure Finalize (this : in out CompositionLineGeometry);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionLineGeometry

   function get_Start
   (
      this : in out CompositionLineGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Start
   (
      this : in out CompositionLineGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_End
   (
      this : in out CompositionLineGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_End
   (
      this : in out CompositionLineGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionLinearGradientBrush

   overriding procedure Initialize (this : in out CompositionLinearGradientBrush);
   overriding procedure Finalize (this : in out CompositionLinearGradientBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionLinearGradientBrush

   function get_EndPoint
   (
      this : in out CompositionLinearGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_EndPoint
   (
      this : in out CompositionLinearGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_StartPoint
   (
      this : in out CompositionLinearGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_StartPoint
   (
      this : in out CompositionLinearGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionMaskBrush

   overriding procedure Initialize (this : in out CompositionMaskBrush);
   overriding procedure Finalize (this : in out CompositionMaskBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionMaskBrush

   function get_Mask
   (
      this : in out CompositionMaskBrush
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_Mask
   (
      this : in out CompositionMaskBrush;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_Source
   (
      this : in out CompositionMaskBrush
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_Source
   (
      this : in out CompositionMaskBrush;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionMipmapSurface

   overriding procedure Initialize (this : in out CompositionMipmapSurface);
   overriding procedure Finalize (this : in out CompositionMipmapSurface);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionMipmapSurface

   function get_LevelCount
   (
      this : in out CompositionMipmapSurface
   )
   return WinRt.UInt32;

   function get_AlphaMode
   (
      this : in out CompositionMipmapSurface
   )
   return WinRt.Windows.Graphics.DirectX.DirectXAlphaMode;

   function get_PixelFormat
   (
      this : in out CompositionMipmapSurface
   )
   return WinRt.Windows.Graphics.DirectX.DirectXPixelFormat;

   function get_SizeInt32
   (
      this : in out CompositionMipmapSurface
   )
   return WinRt.Windows.Graphics.SizeInt32;

   function GetDrawingSurfaceForLevel
   (
      this : in out CompositionMipmapSurface;
      level : WinRt.UInt32
   )
   return WinRt.Windows.UI.Composition.CompositionDrawingSurface'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionNineGridBrush

   overriding procedure Initialize (this : in out CompositionNineGridBrush);
   overriding procedure Finalize (this : in out CompositionNineGridBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionNineGridBrush

   function get_BottomInset
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_BottomInset
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_BottomInsetScale
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_BottomInsetScale
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_IsCenterHollow
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Boolean;

   procedure put_IsCenterHollow
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Boolean
   );

   function get_LeftInset
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_LeftInset
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_LeftInsetScale
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_LeftInsetScale
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_RightInset
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_RightInset
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_RightInsetScale
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_RightInsetScale
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_Source
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_Source
   (
      this : in out CompositionNineGridBrush;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_TopInset
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_TopInset
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   function get_TopInsetScale
   (
      this : in out CompositionNineGridBrush
   )
   return WinRt.Single;

   procedure put_TopInsetScale
   (
      this : in out CompositionNineGridBrush;
      value : WinRt.Single
   );

   procedure SetInsets
   (
      this : in out CompositionNineGridBrush;
      inset : WinRt.Single
   );

   procedure SetInsets
   (
      this : in out CompositionNineGridBrush;
      left : WinRt.Single;
      top : WinRt.Single;
      right : WinRt.Single;
      bottom : WinRt.Single
   );

   procedure SetInsetScales
   (
      this : in out CompositionNineGridBrush;
      scale : WinRt.Single
   );

   procedure SetInsetScales
   (
      this : in out CompositionNineGridBrush;
      left : WinRt.Single;
      top : WinRt.Single;
      right : WinRt.Single;
      bottom : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionPath

   overriding procedure Initialize (this : in out CompositionPath);
   overriding procedure Finalize (this : in out CompositionPath);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionPath

   function Constructor
   (
      source : Windows.Graphics.IGeometrySource2D
   )
   return CompositionPath;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionPath

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionPathGeometry

   overriding procedure Initialize (this : in out CompositionPathGeometry);
   overriding procedure Finalize (this : in out CompositionPathGeometry);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionPathGeometry

   function get_Path
   (
      this : in out CompositionPathGeometry
   )
   return WinRt.Windows.UI.Composition.CompositionPath'Class;

   procedure put_Path
   (
      this : in out CompositionPathGeometry;
      value : Windows.UI.Composition.CompositionPath'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionProjectedShadow

   overriding procedure Initialize (this : in out CompositionProjectedShadow);
   overriding procedure Finalize (this : in out CompositionProjectedShadow);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionProjectedShadow

   function get_BlurRadiusMultiplier
   (
      this : in out CompositionProjectedShadow
   )
   return WinRt.Single;

   procedure put_BlurRadiusMultiplier
   (
      this : in out CompositionProjectedShadow;
      value : WinRt.Single
   );

   function get_Casters
   (
      this : in out CompositionProjectedShadow
   )
   return WinRt.Windows.UI.Composition.CompositionProjectedShadowCasterCollection'Class;

   function get_LightSource
   (
      this : in out CompositionProjectedShadow
   )
   return WinRt.Windows.UI.Composition.CompositionLight'Class;

   procedure put_LightSource
   (
      this : in out CompositionProjectedShadow;
      value : Windows.UI.Composition.CompositionLight'Class
   );

   function get_MaxBlurRadius
   (
      this : in out CompositionProjectedShadow
   )
   return WinRt.Single;

   procedure put_MaxBlurRadius
   (
      this : in out CompositionProjectedShadow;
      value : WinRt.Single
   );

   function get_MinBlurRadius
   (
      this : in out CompositionProjectedShadow
   )
   return WinRt.Single;

   procedure put_MinBlurRadius
   (
      this : in out CompositionProjectedShadow;
      value : WinRt.Single
   );

   function get_Receivers
   (
      this : in out CompositionProjectedShadow
   )
   return WinRt.Windows.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionProjectedShadowCaster

   overriding procedure Initialize (this : in out CompositionProjectedShadowCaster);
   overriding procedure Finalize (this : in out CompositionProjectedShadowCaster);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionProjectedShadowCaster

   function get_Brush
   (
      this : in out CompositionProjectedShadowCaster
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_Brush
   (
      this : in out CompositionProjectedShadowCaster;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_CastingVisual
   (
      this : in out CompositionProjectedShadowCaster
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_CastingVisual
   (
      this : in out CompositionProjectedShadowCaster;
      value : Windows.UI.Composition.Visual'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionProjectedShadowCasterCollection

   overriding procedure Initialize (this : in out CompositionProjectedShadowCasterCollection);
   overriding procedure Finalize (this : in out CompositionProjectedShadowCasterCollection);

   -----------------------------------------------------------------------------
   -- Static Interfaces for CompositionProjectedShadowCasterCollection

   function get_MaxRespectedCasters
   return WinRt.Int32;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionProjectedShadowCasterCollection

   function get_Count
   (
      this : in out CompositionProjectedShadowCasterCollection
   )
   return WinRt.Int32;

   procedure InsertAbove
   (
      this : in out CompositionProjectedShadowCasterCollection;
      newCaster : Windows.UI.Composition.CompositionProjectedShadowCaster'Class;
      reference : Windows.UI.Composition.CompositionProjectedShadowCaster'Class
   );

   procedure InsertAtBottom
   (
      this : in out CompositionProjectedShadowCasterCollection;
      newCaster : Windows.UI.Composition.CompositionProjectedShadowCaster'Class
   );

   procedure InsertAtTop
   (
      this : in out CompositionProjectedShadowCasterCollection;
      newCaster : Windows.UI.Composition.CompositionProjectedShadowCaster'Class
   );

   procedure InsertBelow
   (
      this : in out CompositionProjectedShadowCasterCollection;
      newCaster : Windows.UI.Composition.CompositionProjectedShadowCaster'Class;
      reference : Windows.UI.Composition.CompositionProjectedShadowCaster'Class
   );

   procedure Remove
   (
      this : in out CompositionProjectedShadowCasterCollection;
      caster : Windows.UI.Composition.CompositionProjectedShadowCaster'Class
   );

   procedure RemoveAll
   (
      this : in out CompositionProjectedShadowCasterCollection
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowCaster>
   function First
   (
      this : in out CompositionProjectedShadowCasterCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionProjectedShadowReceiver

   overriding procedure Initialize (this : in out CompositionProjectedShadowReceiver);
   overriding procedure Finalize (this : in out CompositionProjectedShadowReceiver);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionProjectedShadowReceiver

   function get_ReceivingVisual
   (
      this : in out CompositionProjectedShadowReceiver
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_ReceivingVisual
   (
      this : in out CompositionProjectedShadowReceiver;
      value : Windows.UI.Composition.Visual'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionProjectedShadowReceiverUnorderedCollection

   overriding procedure Initialize (this : in out CompositionProjectedShadowReceiverUnorderedCollection);
   overriding procedure Finalize (this : in out CompositionProjectedShadowReceiverUnorderedCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionProjectedShadowReceiverUnorderedCollection

   procedure Add
   (
      this : in out CompositionProjectedShadowReceiverUnorderedCollection;
      value : Windows.UI.Composition.CompositionProjectedShadowReceiver'Class
   );

   function get_Count
   (
      this : in out CompositionProjectedShadowReceiverUnorderedCollection
   )
   return WinRt.Int32;

   procedure Remove
   (
      this : in out CompositionProjectedShadowReceiverUnorderedCollection;
      value : Windows.UI.Composition.CompositionProjectedShadowReceiver'Class
   );

   procedure RemoveAll
   (
      this : in out CompositionProjectedShadowReceiverUnorderedCollection
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionProjectedShadowReceiver>
   function First
   (
      this : in out CompositionProjectedShadowReceiverUnorderedCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionPropertySet

   overriding procedure Initialize (this : in out CompositionPropertySet);
   overriding procedure Finalize (this : in out CompositionPropertySet);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionPropertySet

   procedure InsertColor
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.UI.Color
   );

   procedure InsertMatrix3x2
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Matrix3x2
   );

   procedure InsertMatrix4x4
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Matrix4x4
   );

   procedure InsertQuaternion
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Quaternion
   );

   procedure InsertScalar
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : WinRt.Single
   );

   procedure InsertVector2
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector2
   );

   procedure InsertVector3
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector3
   );

   procedure InsertVector4
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector4
   );

   function TryGetColor
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.UI.Color_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetMatrix3x2
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Matrix3x2_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetMatrix4x4
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Matrix4x4_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetQuaternion
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Quaternion_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetScalar
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : WinRt.Single_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetVector2
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector2_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetVector3
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector3_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   function TryGetVector4
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : Windows.Foundation.Numerics.Vector4_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   procedure InsertBoolean
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : WinRt.Boolean
   );

   function TryGetBoolean
   (
      this : in out CompositionPropertySet;
      propertyName : WinRt.WString;
      value : WinRt.Boolean_Ptr
   )
   return WinRt.Windows.UI.Composition.CompositionGetValueStatus;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionRadialGradientBrush

   overriding procedure Initialize (this : in out CompositionRadialGradientBrush);
   overriding procedure Finalize (this : in out CompositionRadialGradientBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionRadialGradientBrush

   function get_EllipseCenter
   (
      this : in out CompositionRadialGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_EllipseCenter
   (
      this : in out CompositionRadialGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_EllipseRadius
   (
      this : in out CompositionRadialGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_EllipseRadius
   (
      this : in out CompositionRadialGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_GradientOriginOffset
   (
      this : in out CompositionRadialGradientBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_GradientOriginOffset
   (
      this : in out CompositionRadialGradientBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionRectangleGeometry

   overriding procedure Initialize (this : in out CompositionRectangleGeometry);
   overriding procedure Finalize (this : in out CompositionRectangleGeometry);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionRectangleGeometry

   function get_Offset
   (
      this : in out CompositionRectangleGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionRectangleGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Size
   (
      this : in out CompositionRectangleGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Size
   (
      this : in out CompositionRectangleGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionRoundedRectangleGeometry

   overriding procedure Initialize (this : in out CompositionRoundedRectangleGeometry);
   overriding procedure Finalize (this : in out CompositionRoundedRectangleGeometry);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionRoundedRectangleGeometry

   function get_CornerRadius
   (
      this : in out CompositionRoundedRectangleGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_CornerRadius
   (
      this : in out CompositionRoundedRectangleGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Offset
   (
      this : in out CompositionRoundedRectangleGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionRoundedRectangleGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Size
   (
      this : in out CompositionRoundedRectangleGeometry
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Size
   (
      this : in out CompositionRoundedRectangleGeometry;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionScopedBatch

   overriding procedure Initialize (this : in out CompositionScopedBatch);
   overriding procedure Finalize (this : in out CompositionScopedBatch);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionScopedBatch

   function get_IsActive
   (
      this : in out CompositionScopedBatch
   )
   return WinRt.Boolean;

   function get_IsEnded
   (
      this : in out CompositionScopedBatch
   )
   return WinRt.Boolean;

   procedure End_x
   (
      this : in out CompositionScopedBatch
   );

   procedure Resume
   (
      this : in out CompositionScopedBatch
   );

   procedure Suspend
   (
      this : in out CompositionScopedBatch
   );

   function add_Completed
   (
      this : in out CompositionScopedBatch;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Completed
   (
      this : in out CompositionScopedBatch;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionShadow

   overriding procedure Initialize (this : in out CompositionShadow);
   overriding procedure Finalize (this : in out CompositionShadow);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionShadow

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionShadow

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionShapeCollection

   overriding procedure Initialize (this : in out CompositionShapeCollection);
   overriding procedure Finalize (this : in out CompositionShapeCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionShapeCollection

   -- Generic Interface Windows.Foundation.Collections.IVector`1<Windows.UI.Composition.CompositionShape>
   function GetAt
   (
      this : in out CompositionShapeCollection;
      index : WinRt.UInt32
   )
   return WinRt.Windows.UI.Composition.CompositionShape'Class;

   function get_Size
   (
      this : in out CompositionShapeCollection
   )
   return WinRt.UInt32;

   function GetView
   (
      this : in out CompositionShapeCollection
   )
   return WinRt.GenericObject;

   function IndexOf
   (
      this : in out CompositionShapeCollection;
      value : Windows.UI.Composition.CompositionShape'Class;
      index : WinRt.UInt32_Ptr
   )
   return WinRt.Boolean;

   procedure SetAt
   (
      this : in out CompositionShapeCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.CompositionShape'Class
   );

   procedure InsertAt
   (
      this : in out CompositionShapeCollection;
      index : WinRt.UInt32;
      value : Windows.UI.Composition.CompositionShape'Class
   );

   procedure RemoveAt
   (
      this : in out CompositionShapeCollection;
      index : WinRt.UInt32
   );

   procedure Append
   (
      this : in out CompositionShapeCollection;
      value : Windows.UI.Composition.CompositionShape'Class
   );

   procedure RemoveAtEnd
   (
      this : in out CompositionShapeCollection
   );

   procedure Clear
   (
      this : in out CompositionShapeCollection
   );

   function GetMany
   (
      this : in out CompositionShapeCollection;
      startIndex : WinRt.UInt32;
      items : Windows.UI.Composition.ICompositionShape_Array
   )
   return WinRt.UInt32;

   procedure ReplaceAll
   (
      this : in out CompositionShapeCollection;
      items : Windows.UI.Composition.ICompositionShape_Array
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.CompositionShape>
   function First
   (
      this : in out CompositionShapeCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionSpriteShape

   overriding procedure Initialize (this : in out CompositionSpriteShape);
   overriding procedure Finalize (this : in out CompositionSpriteShape);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionSpriteShape

   function get_FillBrush
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_FillBrush
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_Geometry
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionGeometry'Class;

   procedure put_Geometry
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionGeometry'Class
   );

   function get_IsStrokeNonScaling
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Boolean;

   procedure put_IsStrokeNonScaling
   (
      this : in out CompositionSpriteShape;
      value : WinRt.Boolean
   );

   function get_StrokeBrush
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_StrokeBrush
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_StrokeDashArray
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionStrokeDashArray'Class;

   function get_StrokeDashCap
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionStrokeCap;

   procedure put_StrokeDashCap
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionStrokeCap
   );

   function get_StrokeDashOffset
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Single;

   procedure put_StrokeDashOffset
   (
      this : in out CompositionSpriteShape;
      value : WinRt.Single
   );

   function get_StrokeEndCap
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionStrokeCap;

   procedure put_StrokeEndCap
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionStrokeCap
   );

   function get_StrokeLineJoin
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionStrokeLineJoin;

   procedure put_StrokeLineJoin
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionStrokeLineJoin
   );

   function get_StrokeMiterLimit
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Single;

   procedure put_StrokeMiterLimit
   (
      this : in out CompositionSpriteShape;
      value : WinRt.Single
   );

   function get_StrokeStartCap
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Windows.UI.Composition.CompositionStrokeCap;

   procedure put_StrokeStartCap
   (
      this : in out CompositionSpriteShape;
      value : Windows.UI.Composition.CompositionStrokeCap
   );

   function get_StrokeThickness
   (
      this : in out CompositionSpriteShape
   )
   return WinRt.Single;

   procedure put_StrokeThickness
   (
      this : in out CompositionSpriteShape;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionStrokeDashArray

   overriding procedure Initialize (this : in out CompositionStrokeDashArray);
   overriding procedure Finalize (this : in out CompositionStrokeDashArray);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionStrokeDashArray

   -- Generic Interface Windows.Foundation.Collections.IVector`1<System.Single>
   function GetAt
   (
      this : in out CompositionStrokeDashArray;
      index : WinRt.UInt32
   )
   return WinRt.Single;

   function get_Size
   (
      this : in out CompositionStrokeDashArray
   )
   return WinRt.UInt32;

   function GetView
   (
      this : in out CompositionStrokeDashArray
   )
   return WinRt.GenericObject;

   function IndexOf
   (
      this : in out CompositionStrokeDashArray;
      value : WinRt.Single;
      index : WinRt.UInt32_Ptr
   )
   return WinRt.Boolean;

   procedure SetAt
   (
      this : in out CompositionStrokeDashArray;
      index : WinRt.UInt32;
      value : WinRt.Single
   );

   procedure InsertAt
   (
      this : in out CompositionStrokeDashArray;
      index : WinRt.UInt32;
      value : WinRt.Single
   );

   procedure RemoveAt
   (
      this : in out CompositionStrokeDashArray;
      index : WinRt.UInt32
   );

   procedure Append
   (
      this : in out CompositionStrokeDashArray;
      value : WinRt.Single
   );

   procedure RemoveAtEnd
   (
      this : in out CompositionStrokeDashArray
   );

   procedure Clear
   (
      this : in out CompositionStrokeDashArray
   );

   function GetMany
   (
      this : in out CompositionStrokeDashArray;
      startIndex : WinRt.UInt32;
      items : WinRt.Single_Array
   )
   return WinRt.UInt32;

   procedure ReplaceAll
   (
      this : in out CompositionStrokeDashArray;
      items : WinRt.Single_Array
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<System.Single>
   function First
   (
      this : in out CompositionStrokeDashArray
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionSurfaceBrush

   overriding procedure Initialize (this : in out CompositionSurfaceBrush);
   overriding procedure Finalize (this : in out CompositionSurfaceBrush);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionSurfaceBrush

   function get_BitmapInterpolationMode
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.UI.Composition.CompositionBitmapInterpolationMode;

   procedure put_BitmapInterpolationMode
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.UI.Composition.CompositionBitmapInterpolationMode
   );

   function get_HorizontalAlignmentRatio
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Single;

   procedure put_HorizontalAlignmentRatio
   (
      this : in out CompositionSurfaceBrush;
      value : WinRt.Single
   );

   function get_Stretch
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.UI.Composition.CompositionStretch;

   procedure put_Stretch
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.UI.Composition.CompositionStretch
   );

   function get_Surface
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.UI.Composition.ICompositionSurface;

   procedure put_Surface
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.UI.Composition.ICompositionSurface
   );

   function get_VerticalAlignmentRatio
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Single;

   procedure put_VerticalAlignmentRatio
   (
      this : in out CompositionSurfaceBrush;
      value : WinRt.Single
   );

   function get_AnchorPoint
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_AnchorPoint
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_CenterPoint
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_CenterPoint
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Offset
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_RotationAngle
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Single;

   procedure put_RotationAngle
   (
      this : in out CompositionSurfaceBrush;
      value : WinRt.Single
   );

   function get_RotationAngleInDegrees
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Single;

   procedure put_RotationAngleInDegrees
   (
      this : in out CompositionSurfaceBrush;
      value : WinRt.Single
   );

   function get_Scale
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Scale
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_TransformMatrix
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Windows.Foundation.Numerics.Matrix3x2;

   procedure put_TransformMatrix
   (
      this : in out CompositionSurfaceBrush;
      value : Windows.Foundation.Numerics.Matrix3x2
   );

   function get_SnapToPixels
   (
      this : in out CompositionSurfaceBrush
   )
   return WinRt.Boolean;

   procedure put_SnapToPixels
   (
      this : in out CompositionSurfaceBrush;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionTarget

   overriding procedure Initialize (this : in out CompositionTarget);
   overriding procedure Finalize (this : in out CompositionTarget);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionTarget

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionTarget

   function get_Root
   (
      this : in out CompositionTarget
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_Root
   (
      this : in out CompositionTarget;
      value : Windows.UI.Composition.Visual'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionTransform

   overriding procedure Initialize (this : in out CompositionTransform);
   overriding procedure Finalize (this : in out CompositionTransform);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionTransform

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionTransform

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionViewBox

   overriding procedure Initialize (this : in out CompositionViewBox);
   overriding procedure Finalize (this : in out CompositionViewBox);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionViewBox

   function get_HorizontalAlignmentRatio
   (
      this : in out CompositionViewBox
   )
   return WinRt.Single;

   procedure put_HorizontalAlignmentRatio
   (
      this : in out CompositionViewBox;
      value : WinRt.Single
   );

   function get_Offset
   (
      this : in out CompositionViewBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Offset
   (
      this : in out CompositionViewBox;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Size
   (
      this : in out CompositionViewBox
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Size
   (
      this : in out CompositionViewBox;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_Stretch
   (
      this : in out CompositionViewBox
   )
   return WinRt.Windows.UI.Composition.CompositionStretch;

   procedure put_Stretch
   (
      this : in out CompositionViewBox;
      value : Windows.UI.Composition.CompositionStretch
   );

   function get_VerticalAlignmentRatio
   (
      this : in out CompositionViewBox
   )
   return WinRt.Single;

   procedure put_VerticalAlignmentRatio
   (
      this : in out CompositionViewBox;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionVirtualDrawingSurface

   overriding procedure Initialize (this : in out CompositionVirtualDrawingSurface);
   overriding procedure Finalize (this : in out CompositionVirtualDrawingSurface);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CompositionVirtualDrawingSurface

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionVirtualDrawingSurface

   procedure Trim
   (
      this : in out CompositionVirtualDrawingSurface;
      rects : Windows.Graphics.RectInt32_Array
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CompositionVisualSurface

   overriding procedure Initialize (this : in out CompositionVisualSurface);
   overriding procedure Finalize (this : in out CompositionVisualSurface);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CompositionVisualSurface

   function get_SourceVisual
   (
      this : in out CompositionVisualSurface
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_SourceVisual
   (
      this : in out CompositionVisualSurface;
      value : Windows.UI.Composition.Visual'Class
   );

   function get_SourceOffset
   (
      this : in out CompositionVisualSurface
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_SourceOffset
   (
      this : in out CompositionVisualSurface;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_SourceSize
   (
      this : in out CompositionVisualSurface
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_SourceSize
   (
      this : in out CompositionVisualSurface;
      value : Windows.Foundation.Numerics.Vector2
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Compositor

   overriding procedure Initialize (this : in out Compositor);
   overriding procedure Finalize (this : in out Compositor);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Compositor

   function Constructor return Compositor;

   -----------------------------------------------------------------------------
   -- Static Interfaces for Compositor

   function get_MaxGlobalPlaybackRate
   return WinRt.Single;

   function get_MinGlobalPlaybackRate
   return WinRt.Single;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Compositor

   function CreateColorKeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.ColorKeyFrameAnimation'Class;

   function CreateColorBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionColorBrush'Class;

   function CreateColorBrush
   (
      this : in out Compositor;
      color : Windows.UI.Color
   )
   return WinRt.Windows.UI.Composition.CompositionColorBrush'Class;

   function CreateContainerVisual
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.ContainerVisual'Class;

   function CreateCubicBezierEasingFunction
   (
      this : in out Compositor;
      controlPoint1 : Windows.Foundation.Numerics.Vector2;
      controlPoint2 : Windows.Foundation.Numerics.Vector2
   )
   return WinRt.Windows.UI.Composition.CubicBezierEasingFunction'Class;

   function CreateEffectFactory
   (
      this : in out Compositor;
      graphicsEffect : Windows.Graphics.Effects.IGraphicsEffect
   )
   return WinRt.Windows.UI.Composition.CompositionEffectFactory'Class;

   function CreateEffectFactory
   (
      this : in out Compositor;
      graphicsEffect : Windows.Graphics.Effects.IGraphicsEffect;
      animatableProperties : GenericObject
   )
   return WinRt.Windows.UI.Composition.CompositionEffectFactory'Class;

   function CreateExpressionAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.ExpressionAnimation'Class;

   function CreateExpressionAnimation
   (
      this : in out Compositor;
      expression : WinRt.WString
   )
   return WinRt.Windows.UI.Composition.ExpressionAnimation'Class;

   function CreateInsetClip
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.InsetClip'Class;

   function CreateInsetClip
   (
      this : in out Compositor;
      leftInset : WinRt.Single;
      topInset : WinRt.Single;
      rightInset : WinRt.Single;
      bottomInset : WinRt.Single
   )
   return WinRt.Windows.UI.Composition.InsetClip'Class;

   function CreateLinearEasingFunction
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.LinearEasingFunction'Class;

   function CreatePropertySet
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionPropertySet'Class;

   function CreateQuaternionKeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.QuaternionKeyFrameAnimation'Class;

   function CreateScalarKeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.ScalarKeyFrameAnimation'Class;

   function CreateScopedBatch
   (
      this : in out Compositor;
      batchType : Windows.UI.Composition.CompositionBatchTypes
   )
   return WinRt.Windows.UI.Composition.CompositionScopedBatch'Class;

   function CreateSpriteVisual
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.SpriteVisual'Class;

   function CreateSurfaceBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionSurfaceBrush'Class;

   function CreateSurfaceBrush
   (
      this : in out Compositor;
      surface : Windows.UI.Composition.ICompositionSurface
   )
   return WinRt.Windows.UI.Composition.CompositionSurfaceBrush'Class;

   function CreateTargetForCurrentView
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionTarget'Class;

   function CreateVector2KeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.Vector2KeyFrameAnimation'Class;

   function CreateVector3KeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.Vector3KeyFrameAnimation'Class;

   function CreateVector4KeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.Vector4KeyFrameAnimation'Class;

   function GetCommitBatch
   (
      this : in out Compositor;
      batchType : Windows.UI.Composition.CompositionBatchTypes
   )
   return WinRt.Windows.UI.Composition.CompositionCommitBatch'Class;

   function CreateAmbientLight
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.AmbientLight'Class;

   function CreateAnimationGroup
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionAnimationGroup'Class;

   function CreateBackdropBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionBackdropBrush'Class;

   function CreateDistantLight
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.DistantLight'Class;

   function CreateDropShadow
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.DropShadow'Class;

   function CreateImplicitAnimationCollection
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.ImplicitAnimationCollection'Class;

   function CreateLayerVisual
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.LayerVisual'Class;

   function CreateMaskBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionMaskBrush'Class;

   function CreateNineGridBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionNineGridBrush'Class;

   function CreatePointLight
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.PointLight'Class;

   function CreateSpotLight
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.SpotLight'Class;

   function CreateStepEasingFunction
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.StepEasingFunction'Class;

   function CreateStepEasingFunction
   (
      this : in out Compositor;
      stepCount : WinRt.Int32
   )
   return WinRt.Windows.UI.Composition.StepEasingFunction'Class;

   function CreateHostBackdropBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionBackdropBrush'Class;

   function CreateColorGradientStop
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionColorGradientStop'Class;

   function CreateColorGradientStop
   (
      this : in out Compositor;
      offset : WinRt.Single;
      color : Windows.UI.Color
   )
   return WinRt.Windows.UI.Composition.CompositionColorGradientStop'Class;

   function CreateLinearGradientBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionLinearGradientBrush'Class;

   function CreateSpringScalarAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.SpringScalarNaturalMotionAnimation'Class;

   function CreateSpringVector2Animation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.SpringVector2NaturalMotionAnimation'Class;

   function CreateSpringVector3Animation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.SpringVector3NaturalMotionAnimation'Class;

   function get_Comment
   (
      this : in out Compositor
   )
   return WinRt.WString;

   procedure put_Comment
   (
      this : in out Compositor;
      value : WinRt.WString
   );

   function get_GlobalPlaybackRate
   (
      this : in out Compositor
   )
   return WinRt.Single;

   procedure put_GlobalPlaybackRate
   (
      this : in out Compositor;
      value : WinRt.Single
   );

   function CreateBounceScalarAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.BounceScalarNaturalMotionAnimation'Class;

   function CreateBounceVector2Animation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.BounceVector2NaturalMotionAnimation'Class;

   function CreateBounceVector3Animation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.BounceVector3NaturalMotionAnimation'Class;

   function CreateContainerShape
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionContainerShape'Class;

   function CreateEllipseGeometry
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionEllipseGeometry'Class;

   function CreateLineGeometry
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionLineGeometry'Class;

   function CreatePathGeometry
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionPathGeometry'Class;

   function CreatePathGeometry
   (
      this : in out Compositor;
      path : Windows.UI.Composition.CompositionPath'Class
   )
   return WinRt.Windows.UI.Composition.CompositionPathGeometry'Class;

   function CreatePathKeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.PathKeyFrameAnimation'Class;

   function CreateRectangleGeometry
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionRectangleGeometry'Class;

   function CreateRoundedRectangleGeometry
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionRoundedRectangleGeometry'Class;

   function CreateShapeVisual
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.ShapeVisual'Class;

   function CreateSpriteShape
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionSpriteShape'Class;

   function CreateSpriteShape
   (
      this : in out Compositor;
      geometry : Windows.UI.Composition.CompositionGeometry'Class
   )
   return WinRt.Windows.UI.Composition.CompositionSpriteShape'Class;

   function CreateViewBox
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionViewBox'Class;

   procedure RequestCommitAsync
   (
      this : in out Compositor
   );

   function CreateGeometricClip
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionGeometricClip'Class;

   function CreateGeometricClip
   (
      this : in out Compositor;
      geometry : Windows.UI.Composition.CompositionGeometry'Class
   )
   return WinRt.Windows.UI.Composition.CompositionGeometricClip'Class;

   function CreateRedirectVisual
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.RedirectVisual'Class;

   function CreateRedirectVisual
   (
      this : in out Compositor;
      source : Windows.UI.Composition.Visual'Class
   )
   return WinRt.Windows.UI.Composition.RedirectVisual'Class;

   function CreateBooleanKeyFrameAnimation
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.BooleanKeyFrameAnimation'Class;

   function CreateProjectedShadowCaster
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionProjectedShadowCaster'Class;

   function CreateProjectedShadow
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionProjectedShadow'Class;

   function CreateProjectedShadowReceiver
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionProjectedShadowReceiver'Class;

   function CreateRadialGradientBrush
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionRadialGradientBrush'Class;

   function CreateVisualSurface
   (
      this : in out Compositor
   )
   return WinRt.Windows.UI.Composition.CompositionVisualSurface'Class;

   procedure Close
   (
      this : in out Compositor
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Visual

   overriding procedure Initialize (this : in out Visual);
   overriding procedure Finalize (this : in out Visual);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for Visual

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Visual

   function get_AnchorPoint
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_AnchorPoint
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_BackfaceVisibility
   (
      this : in out Visual
   )
   return WinRt.Windows.UI.Composition.CompositionBackfaceVisibility;

   procedure put_BackfaceVisibility
   (
      this : in out Visual;
      value : Windows.UI.Composition.CompositionBackfaceVisibility
   );

   function get_BorderMode
   (
      this : in out Visual
   )
   return WinRt.Windows.UI.Composition.CompositionBorderMode;

   procedure put_BorderMode
   (
      this : in out Visual;
      value : Windows.UI.Composition.CompositionBorderMode
   );

   function get_CenterPoint
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_CenterPoint
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Clip
   (
      this : in out Visual
   )
   return WinRt.Windows.UI.Composition.CompositionClip'Class;

   procedure put_Clip
   (
      this : in out Visual;
      value : Windows.UI.Composition.CompositionClip'Class
   );

   function get_CompositeMode
   (
      this : in out Visual
   )
   return WinRt.Windows.UI.Composition.CompositionCompositeMode;

   procedure put_CompositeMode
   (
      this : in out Visual;
      value : Windows.UI.Composition.CompositionCompositeMode
   );

   function get_IsVisible
   (
      this : in out Visual
   )
   return WinRt.Boolean;

   procedure put_IsVisible
   (
      this : in out Visual;
      value : WinRt.Boolean
   );

   function get_Offset
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Offset
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Opacity
   (
      this : in out Visual
   )
   return WinRt.Single;

   procedure put_Opacity
   (
      this : in out Visual;
      value : WinRt.Single
   );

   function get_Orientation
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Quaternion;

   procedure put_Orientation
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Quaternion
   );

   function get_Parent
   (
      this : in out Visual
   )
   return WinRt.Windows.UI.Composition.ContainerVisual'Class;

   function get_RotationAngle
   (
      this : in out Visual
   )
   return WinRt.Single;

   procedure put_RotationAngle
   (
      this : in out Visual;
      value : WinRt.Single
   );

   function get_RotationAngleInDegrees
   (
      this : in out Visual
   )
   return WinRt.Single;

   procedure put_RotationAngleInDegrees
   (
      this : in out Visual;
      value : WinRt.Single
   );

   function get_RotationAxis
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_RotationAxis
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Scale
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Scale
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Size
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_Size
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_TransformMatrix
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Matrix4x4;

   procedure put_TransformMatrix
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Matrix4x4
   );

   function get_ParentForTransform
   (
      this : in out Visual
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_ParentForTransform
   (
      this : in out Visual;
      value : Windows.UI.Composition.Visual'Class
   );

   function get_RelativeOffsetAdjustment
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_RelativeOffsetAdjustment
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_RelativeSizeAdjustment
   (
      this : in out Visual
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   procedure put_RelativeSizeAdjustment
   (
      this : in out Visual;
      value : Windows.Foundation.Numerics.Vector2
   );

   function get_IsHitTestVisible
   (
      this : in out Visual
   )
   return WinRt.Boolean;

   procedure put_IsHitTestVisible
   (
      this : in out Visual;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ContainerVisual

   overriding procedure Initialize (this : in out ContainerVisual);
   overriding procedure Finalize (this : in out ContainerVisual);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ContainerVisual

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ContainerVisual

   function get_Children
   (
      this : in out ContainerVisual
   )
   return WinRt.Windows.UI.Composition.VisualCollection'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CubicBezierEasingFunction

   overriding procedure Initialize (this : in out CubicBezierEasingFunction);
   overriding procedure Finalize (this : in out CubicBezierEasingFunction);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CubicBezierEasingFunction

   function get_ControlPoint1
   (
      this : in out CubicBezierEasingFunction
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   function get_ControlPoint2
   (
      this : in out CubicBezierEasingFunction
   )
   return WinRt.Windows.Foundation.Numerics.Vector2;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DistantLight

   overriding procedure Initialize (this : in out DistantLight);
   overriding procedure Finalize (this : in out DistantLight);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DistantLight

   function get_Color
   (
      this : in out DistantLight
   )
   return WinRt.Windows.UI.Color;

   procedure put_Color
   (
      this : in out DistantLight;
      value : Windows.UI.Color
   );

   function get_CoordinateSpace
   (
      this : in out DistantLight
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_CoordinateSpace
   (
      this : in out DistantLight;
      value : Windows.UI.Composition.Visual'Class
   );

   function get_Direction
   (
      this : in out DistantLight
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Direction
   (
      this : in out DistantLight;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Intensity
   (
      this : in out DistantLight
   )
   return WinRt.Single;

   procedure put_Intensity
   (
      this : in out DistantLight;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for DropShadow

   overriding procedure Initialize (this : in out DropShadow);
   overriding procedure Finalize (this : in out DropShadow);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for DropShadow

   function get_BlurRadius
   (
      this : in out DropShadow
   )
   return WinRt.Single;

   procedure put_BlurRadius
   (
      this : in out DropShadow;
      value : WinRt.Single
   );

   function get_Color
   (
      this : in out DropShadow
   )
   return WinRt.Windows.UI.Color;

   procedure put_Color
   (
      this : in out DropShadow;
      value : Windows.UI.Color
   );

   function get_Mask
   (
      this : in out DropShadow
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_Mask
   (
      this : in out DropShadow;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_Offset
   (
      this : in out DropShadow
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Offset
   (
      this : in out DropShadow;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_Opacity
   (
      this : in out DropShadow
   )
   return WinRt.Single;

   procedure put_Opacity
   (
      this : in out DropShadow;
      value : WinRt.Single
   );

   function get_SourcePolicy
   (
      this : in out DropShadow
   )
   return WinRt.Windows.UI.Composition.CompositionDropShadowSourcePolicy;

   procedure put_SourcePolicy
   (
      this : in out DropShadow;
      value : Windows.UI.Composition.CompositionDropShadowSourcePolicy
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ExpressionAnimation

   overriding procedure Initialize (this : in out ExpressionAnimation);
   overriding procedure Finalize (this : in out ExpressionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ExpressionAnimation

   function get_Expression
   (
      this : in out ExpressionAnimation
   )
   return WinRt.WString;

   procedure put_Expression
   (
      this : in out ExpressionAnimation;
      value : WinRt.WString
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ImplicitAnimationCollection

   overriding procedure Initialize (this : in out ImplicitAnimationCollection);
   overriding procedure Finalize (this : in out ImplicitAnimationCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ImplicitAnimationCollection

   -- Generic Interface Windows.Foundation.Collections.IMap`2<System.String,Windows.UI.Composition.ICompositionAnimationBase>
   function Lookup
   (
      this : in out ImplicitAnimationCollection;
      key : WinRt.WString
   )
   return WinRt.Windows.UI.Composition.ICompositionAnimationBase;

   function get_Size
   (
      this : in out ImplicitAnimationCollection
   )
   return WinRt.UInt32;

   function HasKey
   (
      this : in out ImplicitAnimationCollection;
      key : WinRt.WString
   )
   return WinRt.Boolean;

   function GetView
   (
      this : in out ImplicitAnimationCollection
   )
   return WinRt.GenericObject;

   function Insert
   (
      this : in out ImplicitAnimationCollection;
      key : WinRt.WString;
      value : Windows.UI.Composition.ICompositionAnimationBase
   )
   return WinRt.Boolean;

   procedure Remove
   (
      this : in out ImplicitAnimationCollection;
      key : WinRt.WString
   );

   procedure Clear
   (
      this : in out ImplicitAnimationCollection
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for InitialValueExpressionCollection

   overriding procedure Initialize (this : in out InitialValueExpressionCollection);
   overriding procedure Finalize (this : in out InitialValueExpressionCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for InitialValueExpressionCollection

   -- Generic Interface Windows.Foundation.Collections.IMap`2<System.String,System.String>
   function Lookup
   (
      this : in out InitialValueExpressionCollection;
      key : WinRt.WString
   )
   return WinRt.WString;

   function get_Size
   (
      this : in out InitialValueExpressionCollection
   )
   return WinRt.UInt32;

   function HasKey
   (
      this : in out InitialValueExpressionCollection;
      key : WinRt.WString
   )
   return WinRt.Boolean;

   function GetView
   (
      this : in out InitialValueExpressionCollection
   )
   return WinRt.GenericObject;

   function Insert
   (
      this : in out InitialValueExpressionCollection;
      key : WinRt.WString;
      value : WinRt.WString
   )
   return WinRt.Boolean;

   procedure Remove
   (
      this : in out InitialValueExpressionCollection;
      key : WinRt.WString
   );

   procedure Clear
   (
      this : in out InitialValueExpressionCollection
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for InsetClip

   overriding procedure Initialize (this : in out InsetClip);
   overriding procedure Finalize (this : in out InsetClip);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for InsetClip

   function get_BottomInset
   (
      this : in out InsetClip
   )
   return WinRt.Single;

   procedure put_BottomInset
   (
      this : in out InsetClip;
      value : WinRt.Single
   );

   function get_LeftInset
   (
      this : in out InsetClip
   )
   return WinRt.Single;

   procedure put_LeftInset
   (
      this : in out InsetClip;
      value : WinRt.Single
   );

   function get_RightInset
   (
      this : in out InsetClip
   )
   return WinRt.Single;

   procedure put_RightInset
   (
      this : in out InsetClip;
      value : WinRt.Single
   );

   function get_TopInset
   (
      this : in out InsetClip
   )
   return WinRt.Single;

   procedure put_TopInset
   (
      this : in out InsetClip;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LayerVisual

   overriding procedure Initialize (this : in out LayerVisual);
   overriding procedure Finalize (this : in out LayerVisual);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LayerVisual

   function get_Effect
   (
      this : in out LayerVisual
   )
   return WinRt.Windows.UI.Composition.CompositionEffectBrush'Class;

   procedure put_Effect
   (
      this : in out LayerVisual;
      value : Windows.UI.Composition.CompositionEffectBrush'Class
   );

   function get_Shadow
   (
      this : in out LayerVisual
   )
   return WinRt.Windows.UI.Composition.CompositionShadow'Class;

   procedure put_Shadow
   (
      this : in out LayerVisual;
      value : Windows.UI.Composition.CompositionShadow'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LinearEasingFunction

   overriding procedure Initialize (this : in out LinearEasingFunction);
   overriding procedure Finalize (this : in out LinearEasingFunction);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LinearEasingFunction

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PathKeyFrameAnimation

   overriding procedure Initialize (this : in out PathKeyFrameAnimation);
   overriding procedure Finalize (this : in out PathKeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PathKeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out PathKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      path : Windows.UI.Composition.CompositionPath'Class
   );

   procedure InsertKeyFrame
   (
      this : in out PathKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      path : Windows.UI.Composition.CompositionPath'Class;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PointLight

   overriding procedure Initialize (this : in out PointLight);
   overriding procedure Finalize (this : in out PointLight);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PointLight

   function get_Color
   (
      this : in out PointLight
   )
   return WinRt.Windows.UI.Color;

   procedure put_Color
   (
      this : in out PointLight;
      value : Windows.UI.Color
   );

   function get_ConstantAttenuation
   (
      this : in out PointLight
   )
   return WinRt.Single;

   procedure put_ConstantAttenuation
   (
      this : in out PointLight;
      value : WinRt.Single
   );

   function get_CoordinateSpace
   (
      this : in out PointLight
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_CoordinateSpace
   (
      this : in out PointLight;
      value : Windows.UI.Composition.Visual'Class
   );

   function get_LinearAttenuation
   (
      this : in out PointLight
   )
   return WinRt.Single;

   procedure put_LinearAttenuation
   (
      this : in out PointLight;
      value : WinRt.Single
   );

   function get_Offset
   (
      this : in out PointLight
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Offset
   (
      this : in out PointLight;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_QuadraticAttenuation
   (
      this : in out PointLight
   )
   return WinRt.Single;

   procedure put_QuadraticAttenuation
   (
      this : in out PointLight;
      value : WinRt.Single
   );

   function get_Intensity
   (
      this : in out PointLight
   )
   return WinRt.Single;

   procedure put_Intensity
   (
      this : in out PointLight;
      value : WinRt.Single
   );

   function get_MinAttenuationCutoff
   (
      this : in out PointLight
   )
   return WinRt.Single;

   procedure put_MinAttenuationCutoff
   (
      this : in out PointLight;
      value : WinRt.Single
   );

   function get_MaxAttenuationCutoff
   (
      this : in out PointLight
   )
   return WinRt.Single;

   procedure put_MaxAttenuationCutoff
   (
      this : in out PointLight;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for QuaternionKeyFrameAnimation

   overriding procedure Initialize (this : in out QuaternionKeyFrameAnimation);
   overriding procedure Finalize (this : in out QuaternionKeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for QuaternionKeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out QuaternionKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Quaternion
   );

   procedure InsertKeyFrame
   (
      this : in out QuaternionKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Quaternion;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for RedirectVisual

   overriding procedure Initialize (this : in out RedirectVisual);
   overriding procedure Finalize (this : in out RedirectVisual);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for RedirectVisual

   function get_Source
   (
      this : in out RedirectVisual
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_Source
   (
      this : in out RedirectVisual;
      value : Windows.UI.Composition.Visual'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for RenderingDeviceReplacedEventArgs

   overriding procedure Initialize (this : in out RenderingDeviceReplacedEventArgs);
   overriding procedure Finalize (this : in out RenderingDeviceReplacedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for RenderingDeviceReplacedEventArgs

   function get_GraphicsDevice
   (
      this : in out RenderingDeviceReplacedEventArgs
   )
   return WinRt.Windows.UI.Composition.CompositionGraphicsDevice'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ScalarKeyFrameAnimation

   overriding procedure Initialize (this : in out ScalarKeyFrameAnimation);
   overriding procedure Finalize (this : in out ScalarKeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ScalarKeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out ScalarKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : WinRt.Single
   );

   procedure InsertKeyFrame
   (
      this : in out ScalarKeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : WinRt.Single;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ShapeVisual

   overriding procedure Initialize (this : in out ShapeVisual);
   overriding procedure Finalize (this : in out ShapeVisual);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ShapeVisual

   function get_Shapes
   (
      this : in out ShapeVisual
   )
   return WinRt.Windows.UI.Composition.CompositionShapeCollection'Class;

   function get_ViewBox
   (
      this : in out ShapeVisual
   )
   return WinRt.Windows.UI.Composition.CompositionViewBox'Class;

   procedure put_ViewBox
   (
      this : in out ShapeVisual;
      value : Windows.UI.Composition.CompositionViewBox'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpotLight

   overriding procedure Initialize (this : in out SpotLight);
   overriding procedure Finalize (this : in out SpotLight);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpotLight

   function get_ConstantAttenuation
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_ConstantAttenuation
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_CoordinateSpace
   (
      this : in out SpotLight
   )
   return WinRt.Windows.UI.Composition.Visual'Class;

   procedure put_CoordinateSpace
   (
      this : in out SpotLight;
      value : Windows.UI.Composition.Visual'Class
   );

   function get_Direction
   (
      this : in out SpotLight
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Direction
   (
      this : in out SpotLight;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_InnerConeAngle
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_InnerConeAngle
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_InnerConeAngleInDegrees
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_InnerConeAngleInDegrees
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_InnerConeColor
   (
      this : in out SpotLight
   )
   return WinRt.Windows.UI.Color;

   procedure put_InnerConeColor
   (
      this : in out SpotLight;
      value : Windows.UI.Color
   );

   function get_LinearAttenuation
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_LinearAttenuation
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_Offset
   (
      this : in out SpotLight
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Offset
   (
      this : in out SpotLight;
      value : Windows.Foundation.Numerics.Vector3
   );

   function get_OuterConeAngle
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_OuterConeAngle
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_OuterConeAngleInDegrees
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_OuterConeAngleInDegrees
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_OuterConeColor
   (
      this : in out SpotLight
   )
   return WinRt.Windows.UI.Color;

   procedure put_OuterConeColor
   (
      this : in out SpotLight;
      value : Windows.UI.Color
   );

   function get_QuadraticAttenuation
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_QuadraticAttenuation
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_InnerConeIntensity
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_InnerConeIntensity
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_OuterConeIntensity
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_OuterConeIntensity
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_MinAttenuationCutoff
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_MinAttenuationCutoff
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   function get_MaxAttenuationCutoff
   (
      this : in out SpotLight
   )
   return WinRt.Single;

   procedure put_MaxAttenuationCutoff
   (
      this : in out SpotLight;
      value : WinRt.Single
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpringScalarNaturalMotionAnimation

   overriding procedure Initialize (this : in out SpringScalarNaturalMotionAnimation);
   overriding procedure Finalize (this : in out SpringScalarNaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpringScalarNaturalMotionAnimation

   function get_DampingRatio
   (
      this : in out SpringScalarNaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_DampingRatio
   (
      this : in out SpringScalarNaturalMotionAnimation;
      value : WinRt.Single
   );

   function get_Period
   (
      this : in out SpringScalarNaturalMotionAnimation
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_Period
   (
      this : in out SpringScalarNaturalMotionAnimation;
      value : Windows.Foundation.TimeSpan
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpringVector2NaturalMotionAnimation

   overriding procedure Initialize (this : in out SpringVector2NaturalMotionAnimation);
   overriding procedure Finalize (this : in out SpringVector2NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpringVector2NaturalMotionAnimation

   function get_DampingRatio
   (
      this : in out SpringVector2NaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_DampingRatio
   (
      this : in out SpringVector2NaturalMotionAnimation;
      value : WinRt.Single
   );

   function get_Period
   (
      this : in out SpringVector2NaturalMotionAnimation
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_Period
   (
      this : in out SpringVector2NaturalMotionAnimation;
      value : Windows.Foundation.TimeSpan
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpringVector3NaturalMotionAnimation

   overriding procedure Initialize (this : in out SpringVector3NaturalMotionAnimation);
   overriding procedure Finalize (this : in out SpringVector3NaturalMotionAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpringVector3NaturalMotionAnimation

   function get_DampingRatio
   (
      this : in out SpringVector3NaturalMotionAnimation
   )
   return WinRt.Single;

   procedure put_DampingRatio
   (
      this : in out SpringVector3NaturalMotionAnimation;
      value : WinRt.Single
   );

   function get_Period
   (
      this : in out SpringVector3NaturalMotionAnimation
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_Period
   (
      this : in out SpringVector3NaturalMotionAnimation;
      value : Windows.Foundation.TimeSpan
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for SpriteVisual

   overriding procedure Initialize (this : in out SpriteVisual);
   overriding procedure Finalize (this : in out SpriteVisual);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for SpriteVisual

   function get_Brush
   (
      this : in out SpriteVisual
   )
   return WinRt.Windows.UI.Composition.CompositionBrush'Class;

   procedure put_Brush
   (
      this : in out SpriteVisual;
      value : Windows.UI.Composition.CompositionBrush'Class
   );

   function get_Shadow
   (
      this : in out SpriteVisual
   )
   return WinRt.Windows.UI.Composition.CompositionShadow'Class;

   procedure put_Shadow
   (
      this : in out SpriteVisual;
      value : Windows.UI.Composition.CompositionShadow'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StepEasingFunction

   overriding procedure Initialize (this : in out StepEasingFunction);
   overriding procedure Finalize (this : in out StepEasingFunction);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StepEasingFunction

   function get_FinalStep
   (
      this : in out StepEasingFunction
   )
   return WinRt.Int32;

   procedure put_FinalStep
   (
      this : in out StepEasingFunction;
      value : WinRt.Int32
   );

   function get_InitialStep
   (
      this : in out StepEasingFunction
   )
   return WinRt.Int32;

   procedure put_InitialStep
   (
      this : in out StepEasingFunction;
      value : WinRt.Int32
   );

   function get_IsFinalStepSingleFrame
   (
      this : in out StepEasingFunction
   )
   return WinRt.Boolean;

   procedure put_IsFinalStepSingleFrame
   (
      this : in out StepEasingFunction;
      value : WinRt.Boolean
   );

   function get_IsInitialStepSingleFrame
   (
      this : in out StepEasingFunction
   )
   return WinRt.Boolean;

   procedure put_IsInitialStepSingleFrame
   (
      this : in out StepEasingFunction;
      value : WinRt.Boolean
   );

   function get_StepCount
   (
      this : in out StepEasingFunction
   )
   return WinRt.Int32;

   procedure put_StepCount
   (
      this : in out StepEasingFunction;
      value : WinRt.Int32
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Vector2KeyFrameAnimation

   overriding procedure Initialize (this : in out Vector2KeyFrameAnimation);
   overriding procedure Finalize (this : in out Vector2KeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Vector2KeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out Vector2KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Vector2
   );

   procedure InsertKeyFrame
   (
      this : in out Vector2KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Vector2;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Vector3KeyFrameAnimation

   overriding procedure Initialize (this : in out Vector3KeyFrameAnimation);
   overriding procedure Finalize (this : in out Vector3KeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Vector3KeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out Vector3KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Vector3
   );

   procedure InsertKeyFrame
   (
      this : in out Vector3KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Vector3;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for Vector4KeyFrameAnimation

   overriding procedure Initialize (this : in out Vector4KeyFrameAnimation);
   overriding procedure Finalize (this : in out Vector4KeyFrameAnimation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for Vector4KeyFrameAnimation

   procedure InsertKeyFrame
   (
      this : in out Vector4KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Vector4
   );

   procedure InsertKeyFrame
   (
      this : in out Vector4KeyFrameAnimation;
      normalizedProgressKey : WinRt.Single;
      value : Windows.Foundation.Numerics.Vector4;
      easingFunction : Windows.UI.Composition.CompositionEasingFunction'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for VisualCollection

   overriding procedure Initialize (this : in out VisualCollection);
   overriding procedure Finalize (this : in out VisualCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for VisualCollection

   function get_Count
   (
      this : in out VisualCollection
   )
   return WinRt.Int32;

   procedure InsertAbove
   (
      this : in out VisualCollection;
      newChild : Windows.UI.Composition.Visual'Class;
      sibling : Windows.UI.Composition.Visual'Class
   );

   procedure InsertAtBottom
   (
      this : in out VisualCollection;
      newChild : Windows.UI.Composition.Visual'Class
   );

   procedure InsertAtTop
   (
      this : in out VisualCollection;
      newChild : Windows.UI.Composition.Visual'Class
   );

   procedure InsertBelow
   (
      this : in out VisualCollection;
      newChild : Windows.UI.Composition.Visual'Class;
      sibling : Windows.UI.Composition.Visual'Class
   );

   procedure Remove
   (
      this : in out VisualCollection;
      child : Windows.UI.Composition.Visual'Class
   );

   procedure RemoveAll
   (
      this : in out VisualCollection
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>
   function First
   (
      this : in out VisualCollection
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for VisualUnorderedCollection

   overriding procedure Initialize (this : in out VisualUnorderedCollection);
   overriding procedure Finalize (this : in out VisualUnorderedCollection);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for VisualUnorderedCollection

   function get_Count
   (
      this : in out VisualUnorderedCollection
   )
   return WinRt.Int32;

   procedure Add
   (
      this : in out VisualUnorderedCollection;
      newVisual : Windows.UI.Composition.Visual'Class
   );

   procedure Remove
   (
      this : in out VisualUnorderedCollection;
      visual_p : Windows.UI.Composition.Visual'Class
   );

   procedure RemoveAll
   (
      this : in out VisualUnorderedCollection
   );

   -- Generic Interface Windows.Foundation.Collections.IIterable`1<Windows.UI.Composition.Visual>
   function First
   (
      this : in out VisualUnorderedCollection
   )
   return WinRt.GenericObject;

end;
