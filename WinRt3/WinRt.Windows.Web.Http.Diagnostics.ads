--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.System.Diagnostics;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Web.Http.Diagnostics is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IHttpDiagnosticProvider_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticProvider is access IHttpDiagnosticProvider_Interface'Class;
   type IHttpDiagnosticProvider_Ptr is access all IHttpDiagnosticProvider;

   type IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticProviderRequestResponseCompletedEventArgs is access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface'Class;
   type IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Ptr is access all IHttpDiagnosticProviderRequestResponseCompletedEventArgs;

   type IHttpDiagnosticProviderRequestResponseTimestamps_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticProviderRequestResponseTimestamps is access IHttpDiagnosticProviderRequestResponseTimestamps_Interface'Class;
   type IHttpDiagnosticProviderRequestResponseTimestamps_Ptr is access all IHttpDiagnosticProviderRequestResponseTimestamps;

   type IHttpDiagnosticProviderRequestSentEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticProviderRequestSentEventArgs is access IHttpDiagnosticProviderRequestSentEventArgs_Interface'Class;
   type IHttpDiagnosticProviderRequestSentEventArgs_Ptr is access all IHttpDiagnosticProviderRequestSentEventArgs;

   type IHttpDiagnosticProviderResponseReceivedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticProviderResponseReceivedEventArgs is access IHttpDiagnosticProviderResponseReceivedEventArgs_Interface'Class;
   type IHttpDiagnosticProviderResponseReceivedEventArgs_Ptr is access all IHttpDiagnosticProviderResponseReceivedEventArgs;

   type IHttpDiagnosticProviderStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticProviderStatics is access IHttpDiagnosticProviderStatics_Interface'Class;

   type IHttpDiagnosticSourceLocation_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpDiagnosticSourceLocation is access IHttpDiagnosticSourceLocation_Interface'Class;
   type IHttpDiagnosticSourceLocation_Ptr is access all IHttpDiagnosticSourceLocation;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type HttpDiagnosticProvider is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpDiagnosticProvider : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider;
      end record;
   type HttpDiagnosticProvider_Ptr is access all HttpDiagnosticProvider;

   type HttpDiagnosticProviderRequestResponseCompletedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpDiagnosticProviderRequestResponseCompletedEventArgs : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs;
      end record;
   type HttpDiagnosticProviderRequestResponseCompletedEventArgs_Ptr is access all HttpDiagnosticProviderRequestResponseCompletedEventArgs;

   type HttpDiagnosticProviderRequestResponseTimestamps is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpDiagnosticProviderRequestResponseTimestamps : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps;
      end record;
   type HttpDiagnosticProviderRequestResponseTimestamps_Ptr is access all HttpDiagnosticProviderRequestResponseTimestamps;

   type HttpDiagnosticProviderRequestSentEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpDiagnosticProviderRequestSentEventArgs : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs;
      end record;
   type HttpDiagnosticProviderRequestSentEventArgs_Ptr is access all HttpDiagnosticProviderRequestSentEventArgs;

   type HttpDiagnosticProviderResponseReceivedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpDiagnosticProviderResponseReceivedEventArgs : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs;
      end record;
   type HttpDiagnosticProviderResponseReceivedEventArgs_Ptr is access all HttpDiagnosticProviderResponseReceivedEventArgs;

   type HttpDiagnosticSourceLocation is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpDiagnosticSourceLocation : access Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation;
      end record;
   type HttpDiagnosticSourceLocation_Ptr is access all HttpDiagnosticSourceLocation;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type HttpDiagnosticRequestInitiator is (
      ParsedElement_e,
      Script_e,
      Image_e,
      Link_e,
      Style_e,
      XmlHttpRequest_e,
      Media_e,
      HtmlDownload_e,
      Prefetch_e,
      Other_e,
      CrossOriginPreFlight_e,
      Fetch_e,
      Beacon_e
   );
   for HttpDiagnosticRequestInitiator use (
      ParsedElement_e => 0,
      Script_e => 1,
      Image_e => 2,
      Link_e => 3,
      Style_e => 4,
      XmlHttpRequest_e => 5,
      Media_e => 6,
      HtmlDownload_e => 7,
      Prefetch_e => 8,
      Other_e => 9,
      CrossOriginPreFlight_e => 10,
      Fetch_e => 11,
      Beacon_e => 12
   );
   type HttpDiagnosticRequestInitiator_Ptr is access all HttpDiagnosticRequestInitiator;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type HttpDiagnosticsContract is record
      null;
   end record with Convention => C_Pass_By_Copy;
   type HttpDiagnosticsContract_Ptr is access all HttpDiagnosticsContract;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IVectorView_IHttpDiagnosticSourceLocation is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation);
   IID_IVectorView_IHttpDiagnosticSourceLocation : aliased WinRt.IID := (2781702586, 33547, 22686, (176, 88, 78, 103, 28, 193, 124, 228 ));
   function QInterface_IVectorView_IHttpDiagnosticSourceLocation is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IHttpDiagnosticSourceLocation.Kind, IID_IVectorView_IHttpDiagnosticSourceLocation'Access);

   package IReference_DateTime is new WinRt.Windows.Foundation.IReference (WinRt.Windows.Foundation.DateTime);
   IID_IReference_DateTime : aliased WinRt.IID := (1522360427, 31643, 23588, (182, 115, 238, 149, 42, 75, 46, 2 ));
   function QInterface_IReference_DateTime is new Generic_QueryInterface (GenericObject_Interface, IReference_DateTime.Kind, IID_IReference_DateTime'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticProvider is interface and WinRt.IInspectable;

      function Start
      (
         this : access IHttpDiagnosticProvider_Interface
      )
      return WinRt.Hresult is abstract;

      function Stop
      (
         this : access IHttpDiagnosticProvider_Interface
      )
      return WinRt.Hresult is abstract;

      function add_RequestSent
      (
         this : access IHttpDiagnosticProvider_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_RequestSent
      (
         this : access IHttpDiagnosticProvider_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ResponseReceived
      (
         this : access IHttpDiagnosticProvider_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ResponseReceived
      (
         this : access IHttpDiagnosticProvider_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_RequestResponseCompleted
      (
         this : access IHttpDiagnosticProvider_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_RequestResponseCompleted
      (
         this : access IHttpDiagnosticProvider_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticProvider : aliased WinRt.IID := (3179353345, 41046, 19769, (177, 116, 131, 59, 123, 3, 176, 44 ));

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticProviderRequestResponseCompletedEventArgs is interface and WinRt.IInspectable;

      function get_ActivityId
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Timestamps
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps
      )
      return WinRt.Hresult is abstract;

      function get_RequestedUri
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_ProcessId
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ThreadId
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Initiator
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator
      )
      return WinRt.Hresult is abstract;

      function get_SourceLocations
      (
         this : access IHttpDiagnosticProviderRequestResponseCompletedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticProviderRequestResponseCompletedEventArgs : aliased WinRt.IID := (1935644910, 38134, 17714, (178, 110, 97, 225, 177, 228, 239, 212 ));

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticProviderRequestResponseTimestamps is interface and WinRt.IInspectable;

      function get_CacheCheckedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ConnectionInitiatedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_NameResolvedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_SslNegotiatedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ConnectionCompletedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_RequestSentTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_RequestCompletedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ResponseReceivedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ResponseCompletedTimestamp
      (
         this : access IHttpDiagnosticProviderRequestResponseTimestamps_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticProviderRequestResponseTimestamps : aliased WinRt.IID := (3769622032, 21967, 19457, (145, 212, 162, 5, 87, 216, 73, 240 ));

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticProviderRequestSentEventArgs is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_ActivityId
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Message
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access Windows.Web.Http.IHttpRequestMessage
      )
      return WinRt.Hresult is abstract;

      function get_ProcessId
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_ThreadId
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_Initiator
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator
      )
      return WinRt.Hresult is abstract;

      function get_SourceLocations
      (
         this : access IHttpDiagnosticProviderRequestSentEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticProviderRequestSentEventArgs : aliased WinRt.IID := (1062311632, 19487, 20158, (165, 122, 6, 147, 7, 113, 197, 13 ));

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticProviderResponseReceivedEventArgs is interface and WinRt.IInspectable;

      function get_Timestamp
      (
         this : access IHttpDiagnosticProviderResponseReceivedEventArgs_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_ActivityId
      (
         this : access IHttpDiagnosticProviderResponseReceivedEventArgs_Interface;
         RetVal : access WinRt.Guid
      )
      return WinRt.Hresult is abstract;

      function get_Message
      (
         this : access IHttpDiagnosticProviderResponseReceivedEventArgs_Interface;
         RetVal : access Windows.Web.Http.IHttpResponseMessage
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticProviderResponseReceivedEventArgs : aliased WinRt.IID := (2694993516, 43871, 19814, (187, 45, 8, 76, 244, 22, 53, 208 ));

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticProviderStatics is interface and WinRt.IInspectable;

      function CreateFromProcessDiagnosticInfo
      (
         this : access IHttpDiagnosticProviderStatics_Interface;
         processDiagnosticInfo : Windows.System.Diagnostics.IProcessDiagnosticInfo;
         RetVal : access Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticProviderStatics : aliased WinRt.IID := (1535266497, 27244, 18380, (175, 236, 30, 134, 188, 38, 5, 59 ));

   -----------------------------------------------------------------------------
   -- type IHttpDiagnosticSourceLocation is interface and WinRt.IInspectable;

      function get_SourceUri
      (
         this : access IHttpDiagnosticSourceLocation_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_LineNumber
      (
         this : access IHttpDiagnosticSourceLocation_Interface;
         RetVal : access WinRt.UInt64
      )
      return WinRt.Hresult is abstract;

      function get_ColumnNumber
      (
         this : access IHttpDiagnosticSourceLocation_Interface;
         RetVal : access WinRt.UInt64
      )
      return WinRt.Hresult is abstract;

      IID_IHttpDiagnosticSourceLocation : aliased WinRt.IID := (1420415584, 34912, 16959, (182, 250, 215, 119, 22, 246, 71, 167 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpDiagnosticProvider

   overriding procedure Initialize (this : in out HttpDiagnosticProvider);
   overriding procedure Finalize (this : in out HttpDiagnosticProvider);

   -----------------------------------------------------------------------------
   -- Static Interfaces for HttpDiagnosticProvider

   function CreateFromProcessDiagnosticInfo
   (
      processDiagnosticInfo : Windows.System.Diagnostics.ProcessDiagnosticInfo'Class
   )
   return WinRt.Windows.Web.Http.Diagnostics.HttpDiagnosticProvider;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpDiagnosticProvider

   procedure Start
   (
      this : in out HttpDiagnosticProvider
   );

   procedure Stop
   (
      this : in out HttpDiagnosticProvider
   );

   function add_RequestSent
   (
      this : in out HttpDiagnosticProvider;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_RequestSent
   (
      this : in out HttpDiagnosticProvider;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ResponseReceived
   (
      this : in out HttpDiagnosticProvider;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ResponseReceived
   (
      this : in out HttpDiagnosticProvider;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_RequestResponseCompleted
   (
      this : in out HttpDiagnosticProvider;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_RequestResponseCompleted
   (
      this : in out HttpDiagnosticProvider;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpDiagnosticProviderRequestResponseCompletedEventArgs

   overriding procedure Initialize (this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs);
   overriding procedure Finalize (this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpDiagnosticProviderRequestResponseCompletedEventArgs

   function get_ActivityId
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return WinRt.Guid;

   function get_Timestamps
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return WinRt.Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps'Class;

   function get_RequestedUri
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return WinRt.Windows.Foundation.Uri'Class;

   function get_ProcessId
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return WinRt.UInt32;

   function get_ThreadId
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return WinRt.UInt32;

   function get_Initiator
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return WinRt.Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator;

   function get_SourceLocations
   (
      this : in out HttpDiagnosticProviderRequestResponseCompletedEventArgs
   )
   return IVectorView_IHttpDiagnosticSourceLocation.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpDiagnosticProviderRequestResponseTimestamps

   overriding procedure Initialize (this : in out HttpDiagnosticProviderRequestResponseTimestamps);
   overriding procedure Finalize (this : in out HttpDiagnosticProviderRequestResponseTimestamps);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpDiagnosticProviderRequestResponseTimestamps

   function get_CacheCheckedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_ConnectionInitiatedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_NameResolvedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_SslNegotiatedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_ConnectionCompletedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_RequestSentTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_RequestCompletedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_ResponseReceivedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   function get_ResponseCompletedTimestamp
   (
      this : in out HttpDiagnosticProviderRequestResponseTimestamps
   )
   return IReference_DateTime.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpDiagnosticProviderRequestSentEventArgs

   overriding procedure Initialize (this : in out HttpDiagnosticProviderRequestSentEventArgs);
   overriding procedure Finalize (this : in out HttpDiagnosticProviderRequestSentEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpDiagnosticProviderRequestSentEventArgs

   function get_Timestamp
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_ActivityId
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return WinRt.Guid;

   function get_Message
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return WinRt.Windows.Web.Http.HttpRequestMessage'Class;

   function get_ProcessId
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return WinRt.UInt32;

   function get_ThreadId
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return WinRt.UInt32;

   function get_Initiator
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return WinRt.Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator;

   function get_SourceLocations
   (
      this : in out HttpDiagnosticProviderRequestSentEventArgs
   )
   return IVectorView_IHttpDiagnosticSourceLocation.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpDiagnosticProviderResponseReceivedEventArgs

   overriding procedure Initialize (this : in out HttpDiagnosticProviderResponseReceivedEventArgs);
   overriding procedure Finalize (this : in out HttpDiagnosticProviderResponseReceivedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpDiagnosticProviderResponseReceivedEventArgs

   function get_Timestamp
   (
      this : in out HttpDiagnosticProviderResponseReceivedEventArgs
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_ActivityId
   (
      this : in out HttpDiagnosticProviderResponseReceivedEventArgs
   )
   return WinRt.Guid;

   function get_Message
   (
      this : in out HttpDiagnosticProviderResponseReceivedEventArgs
   )
   return WinRt.Windows.Web.Http.HttpResponseMessage'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpDiagnosticSourceLocation

   overriding procedure Initialize (this : in out HttpDiagnosticSourceLocation);
   overriding procedure Finalize (this : in out HttpDiagnosticSourceLocation);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpDiagnosticSourceLocation

   function get_SourceUri
   (
      this : in out HttpDiagnosticSourceLocation
   )
   return WinRt.Windows.Foundation.Uri'Class;

   function get_LineNumber
   (
      this : in out HttpDiagnosticSourceLocation
   )
   return WinRt.UInt64;

   function get_ColumnNumber
   (
      this : in out HttpDiagnosticSourceLocation
   )
   return WinRt.UInt64;

end;
