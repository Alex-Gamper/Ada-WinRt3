--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Text is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IContentLinkInfo_Interface is interface and WinRt.IInspectable_Interface;
   type IContentLinkInfo is access IContentLinkInfo_Interface'Class;
   type IContentLinkInfo_Ptr is access all IContentLinkInfo;

   type IFontWeights_Interface is interface and WinRt.IInspectable_Interface;
   type IFontWeights is access IFontWeights_Interface'Class;
   type IFontWeights_Ptr is access all IFontWeights;

   type IFontWeightsStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IFontWeightsStatics is access IFontWeightsStatics_Interface'Class;

   type IRichEditTextRange_Interface is interface and WinRt.IInspectable_Interface;
   type IRichEditTextRange is access IRichEditTextRange_Interface'Class;

   type ITextCharacterFormat_Interface is interface and WinRt.IInspectable_Interface;
   type ITextCharacterFormat is access ITextCharacterFormat_Interface'Class;

   type ITextConstantsStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ITextConstantsStatics is access ITextConstantsStatics_Interface'Class;

   type ITextDocument_Interface is interface and WinRt.IInspectable_Interface;
   type ITextDocument is access ITextDocument_Interface'Class;
   type ITextDocument_Ptr is access all ITextDocument;

   type ITextDocument2_Interface is interface and WinRt.IInspectable_Interface;
   type ITextDocument2 is access ITextDocument2_Interface'Class;

   type ITextDocument3_Interface is interface and WinRt.IInspectable_Interface;
   type ITextDocument3 is access ITextDocument3_Interface'Class;

   type ITextDocument4_Interface is interface and WinRt.IInspectable_Interface;
   type ITextDocument4 is access ITextDocument4_Interface'Class;

   type ITextParagraphFormat_Interface is interface and WinRt.IInspectable_Interface;
   type ITextParagraphFormat is access ITextParagraphFormat_Interface'Class;

   type ITextRange_Interface is interface and WinRt.IInspectable_Interface;
   type ITextRange is access ITextRange_Interface'Class;
   type ITextRange_Ptr is access all ITextRange;

   type ITextSelection_Interface is interface and WinRt.IInspectable_Interface;
   type ITextSelection is access ITextSelection_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type ContentLinkInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_IContentLinkInfo : access Windows.UI.Text.IContentLinkInfo;
      end record;
   type ContentLinkInfo_Ptr is access all ContentLinkInfo;

   type FontWeights is new Ada.Finalization.Limited_Controlled with
      record
         m_IFontWeights : access Windows.UI.Text.IFontWeights;
      end record;
   type FontWeights_Ptr is access all FontWeights;

   type RichEditTextDocument is new Ada.Finalization.Limited_Controlled with
      record
         m_ITextDocument : access Windows.UI.Text.ITextDocument;
      end record;
   type RichEditTextDocument_Ptr is access all RichEditTextDocument;

   type RichEditTextRange is new Ada.Finalization.Limited_Controlled with
      record
         m_ITextRange : access Windows.UI.Text.ITextRange;
      end record;
   type RichEditTextRange_Ptr is access all RichEditTextRange;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type CaretType is (
      Normal_e,
      Null_e
   );
   for CaretType use (
      Normal_e => 0,
      Null_e => 1
   );
   type CaretType_Ptr is access CaretType;

   type FindOptions is (
      None_e,
      Word_e,
      Case_e
   );
   for FindOptions use (
      None_e => 0,
      Word_e => 2,
      Case_e => 4
   );
   type FindOptions_Ptr is access FindOptions;

   type FontStretch is (
      Undefined_e,
      UltraCondensed_e,
      ExtraCondensed_e,
      Condensed_e,
      SemiCondensed_e,
      Normal_e,
      SemiExpanded_e,
      Expanded_e,
      ExtraExpanded_e,
      UltraExpanded_e
   );
   for FontStretch use (
      Undefined_e => 0,
      UltraCondensed_e => 1,
      ExtraCondensed_e => 2,
      Condensed_e => 3,
      SemiCondensed_e => 4,
      Normal_e => 5,
      SemiExpanded_e => 6,
      Expanded_e => 7,
      ExtraExpanded_e => 8,
      UltraExpanded_e => 9
   );
   type FontStretch_Ptr is access FontStretch;

   type FontStyle is (
      Normal_e,
      Oblique_e,
      Italic_e
   );
   for FontStyle use (
      Normal_e => 0,
      Oblique_e => 1,
      Italic_e => 2
   );
   type FontStyle_Ptr is access FontStyle;

   type FormatEffect is (
      Off_e,
      On_e,
      Toggle_e,
      Undefined_e
   );
   for FormatEffect use (
      Off_e => 0,
      On_e => 1,
      Toggle_e => 2,
      Undefined_e => 3
   );
   type FormatEffect_Ptr is access FormatEffect;

   type HorizontalCharacterAlignment is (
      Left_e,
      Right_e,
      Center_e
   );
   for HorizontalCharacterAlignment use (
      Left_e => 0,
      Right_e => 1,
      Center_e => 2
   );
   type HorizontalCharacterAlignment_Ptr is access HorizontalCharacterAlignment;

   type LetterCase is (
      Lower_e,
      Upper_e
   );
   for LetterCase use (
      Lower_e => 0,
      Upper_e => 1
   );
   type LetterCase_Ptr is access LetterCase;

   type LineSpacingRule is (
      Undefined_e,
      Single_e,
      OneAndHalf_e,
      Double_e,
      AtLeast_e,
      Exactly_e,
      Multiple_e,
      Percent_e
   );
   for LineSpacingRule use (
      Undefined_e => 0,
      Single_e => 1,
      OneAndHalf_e => 2,
      Double_e => 3,
      AtLeast_e => 4,
      Exactly_e => 5,
      Multiple_e => 6,
      Percent_e => 7
   );
   type LineSpacingRule_Ptr is access LineSpacingRule;

   type LinkType is (
      Undefined_e,
      NotALink_e,
      ClientLink_e,
      FriendlyLinkName_e,
      FriendlyLinkAddress_e,
      AutoLink_e,
      AutoLinkEmail_e,
      AutoLinkPhone_e,
      AutoLinkPath_e
   );
   for LinkType use (
      Undefined_e => 0,
      NotALink_e => 1,
      ClientLink_e => 2,
      FriendlyLinkName_e => 3,
      FriendlyLinkAddress_e => 4,
      AutoLink_e => 5,
      AutoLinkEmail_e => 6,
      AutoLinkPhone_e => 7,
      AutoLinkPath_e => 8
   );
   type LinkType_Ptr is access LinkType;

   type MarkerAlignment is (
      Undefined_e,
      Left_e,
      Center_e,
      Right_e
   );
   for MarkerAlignment use (
      Undefined_e => 0,
      Left_e => 1,
      Center_e => 2,
      Right_e => 3
   );
   type MarkerAlignment_Ptr is access MarkerAlignment;

   type MarkerStyle is (
      Undefined_e,
      Parenthesis_e,
      Parentheses_e,
      Period_e,
      Plain_e,
      Minus_e,
      NoNumber_e
   );
   for MarkerStyle use (
      Undefined_e => 0,
      Parenthesis_e => 1,
      Parentheses_e => 2,
      Period_e => 3,
      Plain_e => 4,
      Minus_e => 5,
      NoNumber_e => 6
   );
   type MarkerStyle_Ptr is access MarkerStyle;

   type MarkerType is (
      Undefined_e,
      None_e,
      Bullet_e,
      Arabic_e,
      LowercaseEnglishLetter_e,
      UppercaseEnglishLetter_e,
      LowercaseRoman_e,
      UppercaseRoman_e,
      UnicodeSequence_e,
      CircledNumber_e,
      BlackCircleWingding_e,
      WhiteCircleWingding_e,
      ArabicWide_e,
      SimplifiedChinese_e,
      TraditionalChinese_e,
      JapanSimplifiedChinese_e,
      JapanKorea_e,
      ArabicDictionary_e,
      ArabicAbjad_e,
      Hebrew_e,
      ThaiAlphabetic_e,
      ThaiNumeric_e,
      DevanagariVowel_e,
      DevanagariConsonant_e,
      DevanagariNumeric_e
   );
   for MarkerType use (
      Undefined_e => 0,
      None_e => 1,
      Bullet_e => 2,
      Arabic_e => 3,
      LowercaseEnglishLetter_e => 4,
      UppercaseEnglishLetter_e => 5,
      LowercaseRoman_e => 6,
      UppercaseRoman_e => 7,
      UnicodeSequence_e => 8,
      CircledNumber_e => 9,
      BlackCircleWingding_e => 10,
      WhiteCircleWingding_e => 11,
      ArabicWide_e => 12,
      SimplifiedChinese_e => 13,
      TraditionalChinese_e => 14,
      JapanSimplifiedChinese_e => 15,
      JapanKorea_e => 16,
      ArabicDictionary_e => 17,
      ArabicAbjad_e => 18,
      Hebrew_e => 19,
      ThaiAlphabetic_e => 20,
      ThaiNumeric_e => 21,
      DevanagariVowel_e => 22,
      DevanagariConsonant_e => 23,
      DevanagariNumeric_e => 24
   );
   type MarkerType_Ptr is access MarkerType;

   type ParagraphAlignment is (
      Undefined_e,
      Left_e,
      Center_e,
      Right_e,
      Justify_e
   );
   for ParagraphAlignment use (
      Undefined_e => 0,
      Left_e => 1,
      Center_e => 2,
      Right_e => 3,
      Justify_e => 4
   );
   type ParagraphAlignment_Ptr is access ParagraphAlignment;

   type ParagraphStyle is (
      Undefined_e,
      None_e,
      Normal_e,
      Heading1_e,
      Heading2_e,
      Heading3_e,
      Heading4_e,
      Heading5_e,
      Heading6_e,
      Heading7_e,
      Heading8_e,
      Heading9_e
   );
   for ParagraphStyle use (
      Undefined_e => 0,
      None_e => 1,
      Normal_e => 2,
      Heading1_e => 3,
      Heading2_e => 4,
      Heading3_e => 5,
      Heading4_e => 6,
      Heading5_e => 7,
      Heading6_e => 8,
      Heading7_e => 9,
      Heading8_e => 10,
      Heading9_e => 11
   );
   type ParagraphStyle_Ptr is access ParagraphStyle;

   type PointOptions is (
      None_e,
      IncludeInset_e,
      Start_e,
      ClientCoordinates_e,
      AllowOffClient_e,
      Transform_e,
      NoHorizontalScroll_e,
      NoVerticalScroll_e
   );
   for PointOptions use (
      None_e => 0,
      IncludeInset_e => 1,
      Start_e => 32,
      ClientCoordinates_e => 256,
      AllowOffClient_e => 512,
      Transform_e => 1024,
      NoHorizontalScroll_e => 65536,
      NoVerticalScroll_e => 262144
   );
   type PointOptions_Ptr is access PointOptions;

   type RangeGravity is (
      UIBehavior_e,
      Backward_e,
      Forward_e,
      Inward_e,
      Outward_e
   );
   for RangeGravity use (
      UIBehavior_e => 0,
      Backward_e => 1,
      Forward_e => 2,
      Inward_e => 3,
      Outward_e => 4
   );
   type RangeGravity_Ptr is access RangeGravity;

   type RichEditMathMode is (
      NoMath_e,
      MathOnly_e
   );
   for RichEditMathMode use (
      NoMath_e => 0,
      MathOnly_e => 1
   );
   type RichEditMathMode_Ptr is access RichEditMathMode;

   type SelectionOptions is (
      StartActive_e,
      AtEndOfLine_e,
      Overtype_e,
      Active_e,
      Replace_e
   );
   for SelectionOptions use (
      StartActive_e => 1,
      AtEndOfLine_e => 2,
      Overtype_e => 4,
      Active_e => 8,
      Replace_e => 16
   );
   type SelectionOptions_Ptr is access SelectionOptions;

   type SelectionType is (
      None_e,
      InsertionPoint_e,
      Normal_e,
      InlineShape_e,
      Shape_e
   );
   for SelectionType use (
      None_e => 0,
      InsertionPoint_e => 1,
      Normal_e => 2,
      InlineShape_e => 7,
      Shape_e => 8
   );
   type SelectionType_Ptr is access SelectionType;

   type TabAlignment is (
      Left_e,
      Center_e,
      Right_e,
      Decimal_e,
      Bar_e
   );
   for TabAlignment use (
      Left_e => 0,
      Center_e => 1,
      Right_e => 2,
      Decimal_e => 3,
      Bar_e => 4
   );
   type TabAlignment_Ptr is access TabAlignment;

   type TabLeader is (
      Spaces_e,
      Dots_e,
      Dashes_e,
      Lines_e,
      ThickLines_e,
      Equals_e
   );
   for TabLeader use (
      Spaces_e => 0,
      Dots_e => 1,
      Dashes_e => 2,
      Lines_e => 3,
      ThickLines_e => 4,
      Equals_e => 5
   );
   type TabLeader_Ptr is access TabLeader;

   type TextDecorations is (
      None_e,
      Underline_e,
      Strikethrough_e
   );
   for TextDecorations use (
      None_e => 0,
      Underline_e => 1,
      Strikethrough_e => 2
   );
   type TextDecorations_Ptr is access TextDecorations;

   type TextGetOptions is (
      None_e,
      AdjustCrlf_e,
      UseCrlf_e,
      UseObjectText_e,
      AllowFinalEop_e,
      NoHidden_e,
      IncludeNumbering_e,
      FormatRtf_e,
      UseLf_e
   );
   for TextGetOptions use (
      None_e => 0,
      AdjustCrlf_e => 1,
      UseCrlf_e => 2,
      UseObjectText_e => 4,
      AllowFinalEop_e => 8,
      NoHidden_e => 32,
      IncludeNumbering_e => 64,
      FormatRtf_e => 8192,
      UseLf_e => 16777216
   );
   type TextGetOptions_Ptr is access TextGetOptions;

   type TextRangeUnit is (
      Character_e,
      Word_e,
      Sentence_e,
      Paragraph_e,
      Line_e,
      Story_e,
      Screen_e,
      Section_e,
      Window_e,
      CharacterFormat_e,
      ParagraphFormat_e,
      Object_e,
      HardParagraph_e,
      Cluster_e,
      Bold_e,
      Italic_e,
      Underline_e,
      Strikethrough_e,
      ProtectedText_e,
      Link_e,
      SmallCaps_e,
      AllCaps_e,
      Hidden_e,
      Outline_e,
      Shadow_e,
      Imprint_e,
      Disabled_e,
      Revised_e,
      Subscript_e,
      Superscript_e,
      FontBound_e,
      LinkProtected_e,
      ContentLink_e
   );
   for TextRangeUnit use (
      Character_e => 0,
      Word_e => 1,
      Sentence_e => 2,
      Paragraph_e => 3,
      Line_e => 4,
      Story_e => 5,
      Screen_e => 6,
      Section_e => 7,
      Window_e => 8,
      CharacterFormat_e => 9,
      ParagraphFormat_e => 10,
      Object_e => 11,
      HardParagraph_e => 12,
      Cluster_e => 13,
      Bold_e => 14,
      Italic_e => 15,
      Underline_e => 16,
      Strikethrough_e => 17,
      ProtectedText_e => 18,
      Link_e => 19,
      SmallCaps_e => 20,
      AllCaps_e => 21,
      Hidden_e => 22,
      Outline_e => 23,
      Shadow_e => 24,
      Imprint_e => 25,
      Disabled_e => 26,
      Revised_e => 27,
      Subscript_e => 28,
      Superscript_e => 29,
      FontBound_e => 30,
      LinkProtected_e => 31,
      ContentLink_e => 32
   );
   type TextRangeUnit_Ptr is access TextRangeUnit;

   type TextScript is (
      Undefined_e,
      Ansi_e,
      EastEurope_e,
      Cyrillic_e,
      Greek_e,
      Turkish_e,
      Hebrew_e,
      Arabic_e,
      Baltic_e,
      Vietnamese_e,
      Default_e,
      Symbol_e,
      Thai_e,
      ShiftJis_e,
      GB2312_e,
      Hangul_e,
      Big5_e,
      PC437_e,
      Oem_e,
      Mac_e,
      Armenian_e,
      Syriac_e,
      Thaana_e,
      Devanagari_e,
      Bengali_e,
      Gurmukhi_e,
      Gujarati_e,
      Oriya_e,
      Tamil_e,
      Telugu_e,
      Kannada_e,
      Malayalam_e,
      Sinhala_e,
      Lao_e,
      Tibetan_e,
      Myanmar_e,
      Georgian_e,
      Jamo_e,
      Ethiopic_e,
      Cherokee_e,
      Aboriginal_e,
      Ogham_e,
      Runic_e,
      Khmer_e,
      Mongolian_e,
      Braille_e,
      Yi_e,
      Limbu_e,
      TaiLe_e,
      NewTaiLue_e,
      SylotiNagri_e,
      Kharoshthi_e,
      Kayahli_e,
      UnicodeSymbol_e,
      Emoji_e,
      Glagolitic_e,
      Lisu_e,
      Vai_e,
      NKo_e,
      Osmanya_e,
      PhagsPa_e,
      Gothic_e,
      Deseret_e,
      Tifinagh_e
   );
   for TextScript use (
      Undefined_e => 0,
      Ansi_e => 1,
      EastEurope_e => 2,
      Cyrillic_e => 3,
      Greek_e => 4,
      Turkish_e => 5,
      Hebrew_e => 6,
      Arabic_e => 7,
      Baltic_e => 8,
      Vietnamese_e => 9,
      Default_e => 10,
      Symbol_e => 11,
      Thai_e => 12,
      ShiftJis_e => 13,
      GB2312_e => 14,
      Hangul_e => 15,
      Big5_e => 16,
      PC437_e => 17,
      Oem_e => 18,
      Mac_e => 19,
      Armenian_e => 20,
      Syriac_e => 21,
      Thaana_e => 22,
      Devanagari_e => 23,
      Bengali_e => 24,
      Gurmukhi_e => 25,
      Gujarati_e => 26,
      Oriya_e => 27,
      Tamil_e => 28,
      Telugu_e => 29,
      Kannada_e => 30,
      Malayalam_e => 31,
      Sinhala_e => 32,
      Lao_e => 33,
      Tibetan_e => 34,
      Myanmar_e => 35,
      Georgian_e => 36,
      Jamo_e => 37,
      Ethiopic_e => 38,
      Cherokee_e => 39,
      Aboriginal_e => 40,
      Ogham_e => 41,
      Runic_e => 42,
      Khmer_e => 43,
      Mongolian_e => 44,
      Braille_e => 45,
      Yi_e => 46,
      Limbu_e => 47,
      TaiLe_e => 48,
      NewTaiLue_e => 49,
      SylotiNagri_e => 50,
      Kharoshthi_e => 51,
      Kayahli_e => 52,
      UnicodeSymbol_e => 53,
      Emoji_e => 54,
      Glagolitic_e => 55,
      Lisu_e => 56,
      Vai_e => 57,
      NKo_e => 58,
      Osmanya_e => 59,
      PhagsPa_e => 60,
      Gothic_e => 61,
      Deseret_e => 62,
      Tifinagh_e => 63
   );
   type TextScript_Ptr is access TextScript;

   type TextSetOptions is (
      None_e,
      UnicodeBidi_e,
      Unlink_e,
      Unhide_e,
      CheckTextLimit_e,
      FormatRtf_e,
      ApplyRtfDocumentDefaults_e
   );
   for TextSetOptions use (
      None_e => 0,
      UnicodeBidi_e => 1,
      Unlink_e => 8,
      Unhide_e => 16,
      CheckTextLimit_e => 32,
      FormatRtf_e => 8192,
      ApplyRtfDocumentDefaults_e => 16384
   );
   type TextSetOptions_Ptr is access TextSetOptions;

   type UnderlineType is (
      Undefined_e,
      None_e,
      Single_e,
      Words_e,
      Double_e,
      Dotted_e,
      Dash_e,
      DashDot_e,
      DashDotDot_e,
      Wave_e,
      Thick_e,
      Thin_e,
      DoubleWave_e,
      HeavyWave_e,
      LongDash_e,
      ThickDash_e,
      ThickDashDot_e,
      ThickDashDotDot_e,
      ThickDotted_e,
      ThickLongDash_e
   );
   for UnderlineType use (
      Undefined_e => 0,
      None_e => 1,
      Single_e => 2,
      Words_e => 3,
      Double_e => 4,
      Dotted_e => 5,
      Dash_e => 6,
      DashDot_e => 7,
      DashDotDot_e => 8,
      Wave_e => 9,
      Thick_e => 10,
      Thin_e => 11,
      DoubleWave_e => 12,
      HeavyWave_e => 13,
      LongDash_e => 14,
      ThickDash_e => 15,
      ThickDashDot_e => 16,
      ThickDashDotDot_e => 17,
      ThickDotted_e => 18,
      ThickLongDash_e => 19
   );
   type UnderlineType_Ptr is access UnderlineType;

   type VerticalCharacterAlignment is (
      Top_e,
      Baseline_e,
      Bottom_e
   );
   for VerticalCharacterAlignment use (
      Top_e => 0,
      Baseline_e => 1,
      Bottom_e => 2
   );
   type VerticalCharacterAlignment_Ptr is access VerticalCharacterAlignment;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type FontWeight is record
      Weight : WinRt.UInt16;
   end record with Convention => C_Pass_By_Copy;
   type FontWeight_Ptr is access FontWeight;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IContentLinkInfo is interface and WinRt.IInspectable;

      function get_Id
      (
         this : access IContentLinkInfo_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_Id
      (
         this : access IContentLinkInfo_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function get_DisplayText
      (
         this : access IContentLinkInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_DisplayText
      (
         this : access IContentLinkInfo_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_SecondaryText
      (
         this : access IContentLinkInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_SecondaryText
      (
         this : access IContentLinkInfo_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Uri
      (
         this : access IContentLinkInfo_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function put_Uri
      (
         this : access IContentLinkInfo_Interface;
         value : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function get_LinkContentKind
      (
         this : access IContentLinkInfo_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_LinkContentKind
      (
         this : access IContentLinkInfo_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IContentLinkInfo : aliased WinRt.IID := (517285157, 7263, 18635, (179, 53, 120, 181, 10, 46, 230, 66 ));

   -----------------------------------------------------------------------------
   -- type IFontWeights is interface and WinRt.IInspectable;

      IID_IFontWeights : aliased WinRt.IID := (2021696580, 427, 18839, (133, 23, 223, 130, 42, 12, 69, 241 ));

   -----------------------------------------------------------------------------
   -- type IFontWeightsStatics is interface and WinRt.IInspectable;

      function get_Black
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_Bold
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_ExtraBlack
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_ExtraBold
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_ExtraLight
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_Light
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_Medium
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_Normal
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_SemiBold
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_SemiLight
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      function get_Thin
      (
         this : access IFontWeightsStatics_Interface;
         RetVal : access Windows.UI.Text.FontWeight
      )
      return WinRt.Hresult is abstract;

      IID_IFontWeightsStatics : aliased WinRt.IID := (3015014869, 7081, 18667, (157, 173, 192, 149, 232, 194, 59, 163 ));

   -----------------------------------------------------------------------------
   -- type IRichEditTextRange is interface and WinRt.IInspectable;

      function get_ContentLinkInfo
      (
         this : access IRichEditTextRange_Interface;
         RetVal : access Windows.UI.Text.IContentLinkInfo
      )
      return WinRt.Hresult is abstract;

      function put_ContentLinkInfo
      (
         this : access IRichEditTextRange_Interface;
         value : Windows.UI.Text.IContentLinkInfo
      )
      return WinRt.Hresult is abstract;

      IID_IRichEditTextRange : aliased WinRt.IID := (927872277, 47754, 19054, (140, 89, 13, 222, 61, 12, 245, 205 ));

   -----------------------------------------------------------------------------
   -- type ITextCharacterFormat is interface and WinRt.IInspectable;

      function get_AllCaps
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_AllCaps
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_BackgroundColor
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_BackgroundColor
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_Bold
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Bold
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_FontStretch
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FontStretch
      )
      return WinRt.Hresult is abstract;

      function put_FontStretch
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FontStretch
      )
      return WinRt.Hresult is abstract;

      function get_FontStyle
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FontStyle
      )
      return WinRt.Hresult is abstract;

      function put_FontStyle
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FontStyle
      )
      return WinRt.Hresult is abstract;

      function get_ForegroundColor
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_ForegroundColor
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_Hidden
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Hidden
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Italic
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Italic
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Kerning
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Kerning
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_LanguageTag
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_LanguageTag
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_LinkType
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.LinkType
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Name
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Outline
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Outline
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Position
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Position
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_ProtectedText
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_ProtectedText
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Size
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Size
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_SmallCaps
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_SmallCaps
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Spacing
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_Spacing
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Strikethrough
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Strikethrough
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Subscript
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Subscript
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Superscript
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_Superscript
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_TextScript
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.TextScript
      )
      return WinRt.Hresult is abstract;

      function put_TextScript
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.TextScript
      )
      return WinRt.Hresult is abstract;

      function get_Underline
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.UnderlineType
      )
      return WinRt.Hresult is abstract;

      function put_Underline
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.UnderlineType
      )
      return WinRt.Hresult is abstract;

      function get_Weight
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_Weight
      (
         this : access ITextCharacterFormat_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function SetClone
      (
         this : access ITextCharacterFormat_Interface;
         value : Windows.UI.Text.ITextCharacterFormat
      )
      return WinRt.Hresult is abstract;

      function GetClone
      (
         this : access ITextCharacterFormat_Interface;
         RetVal : access Windows.UI.Text.ITextCharacterFormat
      )
      return WinRt.Hresult is abstract;

      function IsEqual
      (
         this : access ITextCharacterFormat_Interface;
         format : Windows.UI.Text.ITextCharacterFormat;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ITextCharacterFormat : aliased WinRt.IID := (1524560859, 1531, 17453, (128, 101, 100, 42, 254, 160, 44, 237 ));

   -----------------------------------------------------------------------------
   -- type ITextConstantsStatics is interface and WinRt.IInspectable;

      function get_AutoColor
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_MinUnitCount
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_MaxUnitCount
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_UndefinedColor
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_UndefinedFloatValue
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_UndefinedInt32Value
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_UndefinedFontStretch
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access Windows.UI.Text.FontStretch
      )
      return WinRt.Hresult is abstract;

      function get_UndefinedFontStyle
      (
         this : access ITextConstantsStatics_Interface;
         RetVal : access Windows.UI.Text.FontStyle
      )
      return WinRt.Hresult is abstract;

      IID_ITextConstantsStatics : aliased WinRt.IID := (2006875187, 6301, 19450, (151, 200, 16, 219, 19, 93, 151, 110 ));

   -----------------------------------------------------------------------------
   -- type ITextDocument is interface and WinRt.IInspectable;

      function get_CaretType
      (
         this : access ITextDocument_Interface;
         RetVal : access Windows.UI.Text.CaretType
      )
      return WinRt.Hresult is abstract;

      function put_CaretType
      (
         this : access ITextDocument_Interface;
         value : Windows.UI.Text.CaretType
      )
      return WinRt.Hresult is abstract;

      function get_DefaultTabStop
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_DefaultTabStop
      (
         this : access ITextDocument_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_Selection
      (
         this : access ITextDocument_Interface;
         RetVal : access Windows.UI.Text.ITextSelection
      )
      return WinRt.Hresult is abstract;

      function get_UndoLimit
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function put_UndoLimit
      (
         this : access ITextDocument_Interface;
         value : WinRt.UInt32
      )
      return WinRt.Hresult is abstract;

      function CanCopy
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function CanPaste
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function CanRedo
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function CanUndo
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function ApplyDisplayUpdates
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function BatchDisplayUpdates
      (
         this : access ITextDocument_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function BeginUndoGroup
      (
         this : access ITextDocument_Interface
      )
      return WinRt.Hresult is abstract;

      function EndUndoGroup
      (
         this : access ITextDocument_Interface
      )
      return WinRt.Hresult is abstract;

      function GetDefaultCharacterFormat
      (
         this : access ITextDocument_Interface;
         RetVal : access Windows.UI.Text.ITextCharacterFormat
      )
      return WinRt.Hresult is abstract;

      function GetDefaultParagraphFormat
      (
         this : access ITextDocument_Interface;
         RetVal : access Windows.UI.Text.ITextParagraphFormat
      )
      return WinRt.Hresult is abstract;

      function GetRange
      (
         this : access ITextDocument_Interface;
         startPosition : WinRt.Int32;
         endPosition : WinRt.Int32;
         RetVal : access Windows.UI.Text.ITextRange
      )
      return WinRt.Hresult is abstract;

      function GetRangeFromPoint
      (
         this : access ITextDocument_Interface;
         point : Windows.Foundation.Point;
         options : Windows.UI.Text.PointOptions;
         RetVal : access Windows.UI.Text.ITextRange
      )
      return WinRt.Hresult is abstract;

      function GetText
      (
         this : access ITextDocument_Interface;
         options : Windows.UI.Text.TextGetOptions;
         value : WinRt.HString_Ptr
      )
      return WinRt.Hresult is abstract;

      function LoadFromStream
      (
         this : access ITextDocument_Interface;
         options : Windows.UI.Text.TextSetOptions;
         value : Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function Redo
      (
         this : access ITextDocument_Interface
      )
      return WinRt.Hresult is abstract;

      function SaveToStream
      (
         this : access ITextDocument_Interface;
         options : Windows.UI.Text.TextGetOptions;
         value : Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function SetDefaultCharacterFormat
      (
         this : access ITextDocument_Interface;
         value : Windows.UI.Text.ITextCharacterFormat
      )
      return WinRt.Hresult is abstract;

      function SetDefaultParagraphFormat
      (
         this : access ITextDocument_Interface;
         value : Windows.UI.Text.ITextParagraphFormat
      )
      return WinRt.Hresult is abstract;

      function SetText
      (
         this : access ITextDocument_Interface;
         options : Windows.UI.Text.TextSetOptions;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function Undo
      (
         this : access ITextDocument_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ITextDocument : aliased WinRt.IID := (3203288539, 37042, 16524, (162, 246, 10, 10, 195, 30, 51, 228 ));

   -----------------------------------------------------------------------------
   -- type ITextDocument2 is interface and WinRt.IInspectable;

      function get_AlignmentIncludesTrailingWhitespace
      (
         this : access ITextDocument2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AlignmentIncludesTrailingWhitespace
      (
         this : access ITextDocument2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IgnoreTrailingCharacterSpacing
      (
         this : access ITextDocument2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IgnoreTrailingCharacterSpacing
      (
         this : access ITextDocument2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_ITextDocument2 : aliased WinRt.IID := (4063301906, 35977, 18889, (145, 24, 240, 87, 203, 184, 20, 238 ));

   -----------------------------------------------------------------------------
   -- type ITextDocument3 is interface and WinRt.IInspectable;

      function ClearUndoRedoHistory
      (
         this : access ITextDocument3_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ITextDocument3 : aliased WinRt.IID := (1974141857, 42744, 17437, (170, 24, 10, 133, 29, 110, 94, 60 ));

   -----------------------------------------------------------------------------
   -- type ITextDocument4 is interface and WinRt.IInspectable;

      function SetMath
      (
         this : access ITextDocument4_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function GetMath
      (
         this : access ITextDocument4_Interface;
         value : WinRt.HString_Ptr
      )
      return WinRt.Hresult is abstract;

      function SetMathMode
      (
         this : access ITextDocument4_Interface;
         mode : Windows.UI.Text.RichEditMathMode
      )
      return WinRt.Hresult is abstract;

      IID_ITextDocument4 : aliased WinRt.IID := (1637622002, 52027, 17697, (152, 31, 40, 101, 177, 185, 63, 4 ));

   -----------------------------------------------------------------------------
   -- type ITextParagraphFormat is interface and WinRt.IInspectable;

      function get_Alignment
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.ParagraphAlignment
      )
      return WinRt.Hresult is abstract;

      function put_Alignment
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.ParagraphAlignment
      )
      return WinRt.Hresult is abstract;

      function get_FirstLineIndent
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_KeepTogether
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_KeepTogether
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_KeepWithNext
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_KeepWithNext
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_LeftIndent
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_LineSpacing
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_LineSpacingRule
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.LineSpacingRule
      )
      return WinRt.Hresult is abstract;

      function get_ListAlignment
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.MarkerAlignment
      )
      return WinRt.Hresult is abstract;

      function put_ListAlignment
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.MarkerAlignment
      )
      return WinRt.Hresult is abstract;

      function get_ListLevelIndex
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_ListLevelIndex
      (
         this : access ITextParagraphFormat_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ListStart
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_ListStart
      (
         this : access ITextParagraphFormat_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ListStyle
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.MarkerStyle
      )
      return WinRt.Hresult is abstract;

      function put_ListStyle
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.MarkerStyle
      )
      return WinRt.Hresult is abstract;

      function get_ListTab
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_ListTab
      (
         this : access ITextParagraphFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_ListType
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.MarkerType
      )
      return WinRt.Hresult is abstract;

      function put_ListType
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.MarkerType
      )
      return WinRt.Hresult is abstract;

      function get_NoLineNumber
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_NoLineNumber
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_PageBreakBefore
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_PageBreakBefore
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_RightIndent
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_RightIndent
      (
         this : access ITextParagraphFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_RightToLeft
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_RightToLeft
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_Style
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.ParagraphStyle
      )
      return WinRt.Hresult is abstract;

      function put_Style
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.ParagraphStyle
      )
      return WinRt.Hresult is abstract;

      function get_SpaceAfter
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_SpaceAfter
      (
         this : access ITextParagraphFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_SpaceBefore
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function put_SpaceBefore
      (
         this : access ITextParagraphFormat_Interface;
         value : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function get_WidowControl
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function put_WidowControl
      (
         this : access ITextParagraphFormat_Interface;
         value : Windows.UI.Text.FormatEffect
      )
      return WinRt.Hresult is abstract;

      function get_TabCount
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function AddTab
      (
         this : access ITextParagraphFormat_Interface;
         position : WinRt.Single;
         align : Windows.UI.Text.TabAlignment;
         leader : Windows.UI.Text.TabLeader
      )
      return WinRt.Hresult is abstract;

      function ClearAllTabs
      (
         this : access ITextParagraphFormat_Interface
      )
      return WinRt.Hresult is abstract;

      function DeleteTab
      (
         this : access ITextParagraphFormat_Interface;
         position : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function GetClone
      (
         this : access ITextParagraphFormat_Interface;
         RetVal : access Windows.UI.Text.ITextParagraphFormat
      )
      return WinRt.Hresult is abstract;

      function GetTab
      (
         this : access ITextParagraphFormat_Interface;
         index : WinRt.Int32;
         position : WinRt.Single_Ptr;
         align : Windows.UI.Text.TabAlignment_Ptr;
         leader : Windows.UI.Text.TabLeader_Ptr
      )
      return WinRt.Hresult is abstract;

      function IsEqual
      (
         this : access ITextParagraphFormat_Interface;
         format : Windows.UI.Text.ITextParagraphFormat;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function SetClone
      (
         this : access ITextParagraphFormat_Interface;
         format : Windows.UI.Text.ITextParagraphFormat
      )
      return WinRt.Hresult is abstract;

      function SetIndents
      (
         this : access ITextParagraphFormat_Interface;
         start : WinRt.Single;
         left : WinRt.Single;
         right : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      function SetLineSpacing
      (
         this : access ITextParagraphFormat_Interface;
         rule : Windows.UI.Text.LineSpacingRule;
         spacing : WinRt.Single
      )
      return WinRt.Hresult is abstract;

      IID_ITextParagraphFormat : aliased WinRt.IID := (754503590, 18038, 18826, (147, 245, 187, 219, 252, 11, 216, 131 ));

   -----------------------------------------------------------------------------
   -- type ITextRange is interface and WinRt.IInspectable;

      function get_Character
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.Wide_Char
      )
      return WinRt.Hresult is abstract;

      function put_Character
      (
         this : access ITextRange_Interface;
         value : WinRt.Wide_Char
      )
      return WinRt.Hresult is abstract;

      function get_CharacterFormat
      (
         this : access ITextRange_Interface;
         RetVal : access Windows.UI.Text.ITextCharacterFormat
      )
      return WinRt.Hresult is abstract;

      function put_CharacterFormat
      (
         this : access ITextRange_Interface;
         value : Windows.UI.Text.ITextCharacterFormat
      )
      return WinRt.Hresult is abstract;

      function get_FormattedText
      (
         this : access ITextRange_Interface;
         RetVal : access Windows.UI.Text.ITextRange
      )
      return WinRt.Hresult is abstract;

      function put_FormattedText
      (
         this : access ITextRange_Interface;
         value : Windows.UI.Text.ITextRange
      )
      return WinRt.Hresult is abstract;

      function get_EndPosition
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_EndPosition
      (
         this : access ITextRange_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Gravity
      (
         this : access ITextRange_Interface;
         RetVal : access Windows.UI.Text.RangeGravity
      )
      return WinRt.Hresult is abstract;

      function put_Gravity
      (
         this : access ITextRange_Interface;
         value : Windows.UI.Text.RangeGravity
      )
      return WinRt.Hresult is abstract;

      function get_Length
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Link
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Link
      (
         this : access ITextRange_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ParagraphFormat
      (
         this : access ITextRange_Interface;
         RetVal : access Windows.UI.Text.ITextParagraphFormat
      )
      return WinRt.Hresult is abstract;

      function put_ParagraphFormat
      (
         this : access ITextRange_Interface;
         value : Windows.UI.Text.ITextParagraphFormat
      )
      return WinRt.Hresult is abstract;

      function get_StartPosition
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_StartPosition
      (
         this : access ITextRange_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_StoryLength
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Text
      (
         this : access ITextRange_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Text
      (
         this : access ITextRange_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function CanPaste
      (
         this : access ITextRange_Interface;
         format : WinRt.Int32;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function ChangeCase
      (
         this : access ITextRange_Interface;
         value : Windows.UI.Text.LetterCase
      )
      return WinRt.Hresult is abstract;

      function Collapse
      (
         this : access ITextRange_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function Copy
      (
         this : access ITextRange_Interface
      )
      return WinRt.Hresult is abstract;

      function Cut
      (
         this : access ITextRange_Interface
      )
      return WinRt.Hresult is abstract;

      function Delete
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function EndOf
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function Expand
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function FindText
      (
         this : access ITextRange_Interface;
         value : WinRt.HString;
         scanLength : WinRt.Int32;
         options : Windows.UI.Text.FindOptions;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function GetCharacterUtf32
      (
         this : access ITextRange_Interface;
         value : WinRt.UInt32_Ptr;
         offset : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function GetClone
      (
         this : access ITextRange_Interface;
         RetVal : access Windows.UI.Text.ITextRange
      )
      return WinRt.Hresult is abstract;

      function GetIndex
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function GetPoint
      (
         this : access ITextRange_Interface;
         horizontalAlign : Windows.UI.Text.HorizontalCharacterAlignment;
         verticalAlign : Windows.UI.Text.VerticalCharacterAlignment;
         options : Windows.UI.Text.PointOptions;
         point : Windows.Foundation.Point_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetRect
      (
         this : access ITextRange_Interface;
         options : Windows.UI.Text.PointOptions;
         rect : Windows.Foundation.Rect_Ptr;
         hit : WinRt.Int32_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetText
      (
         this : access ITextRange_Interface;
         options : Windows.UI.Text.TextGetOptions;
         value : WinRt.HString_Ptr
      )
      return WinRt.Hresult is abstract;

      function GetTextViaStream
      (
         this : access ITextRange_Interface;
         options : Windows.UI.Text.TextGetOptions;
         value : Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function InRange
      (
         this : access ITextRange_Interface;
         range_x : Windows.UI.Text.ITextRange;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function InsertImage
      (
         this : access ITextRange_Interface;
         width : WinRt.Int32;
         height : WinRt.Int32;
         ascent : WinRt.Int32;
         verticalAlign : Windows.UI.Text.VerticalCharacterAlignment;
         alternateText : WinRt.HString;
         value : Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function InStory
      (
         this : access ITextRange_Interface;
         range_x : Windows.UI.Text.ITextRange;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function IsEqual
      (
         this : access ITextRange_Interface;
         range_x : Windows.UI.Text.ITextRange;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function Move
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MoveEnd
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MoveStart
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function Paste
      (
         this : access ITextRange_Interface;
         format : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function ScrollIntoView
      (
         this : access ITextRange_Interface;
         value : Windows.UI.Text.PointOptions
      )
      return WinRt.Hresult is abstract;

      function MatchSelection
      (
         this : access ITextRange_Interface
      )
      return WinRt.Hresult is abstract;

      function SetIndex
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         index : WinRt.Int32;
         extend : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function SetPoint
      (
         this : access ITextRange_Interface;
         point : Windows.Foundation.Point;
         options : Windows.UI.Text.PointOptions;
         extend : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function SetRange
      (
         this : access ITextRange_Interface;
         startPosition : WinRt.Int32;
         endPosition : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function SetText
      (
         this : access ITextRange_Interface;
         options : Windows.UI.Text.TextSetOptions;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function SetTextViaStream
      (
         this : access ITextRange_Interface;
         options : Windows.UI.Text.TextSetOptions;
         value : Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function StartOf
      (
         this : access ITextRange_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_ITextRange : aliased WinRt.IID := (1537101399, 49266, 17056, (137, 69, 175, 80, 62, 229, 71, 104 ));

   -----------------------------------------------------------------------------
   -- type ITextSelection is interface and WinRt.IInspectable;

      function get_Options
      (
         this : access ITextSelection_Interface;
         RetVal : access Windows.UI.Text.SelectionOptions
      )
      return WinRt.Hresult is abstract;

      function put_Options
      (
         this : access ITextSelection_Interface;
         value : Windows.UI.Text.SelectionOptions
      )
      return WinRt.Hresult is abstract;

      function get_Type
      (
         this : access ITextSelection_Interface;
         RetVal : access Windows.UI.Text.SelectionType
      )
      return WinRt.Hresult is abstract;

      function EndKey
      (
         this : access ITextSelection_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function HomeKey
      (
         this : access ITextSelection_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MoveDown
      (
         this : access ITextSelection_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MoveLeft
      (
         this : access ITextSelection_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MoveRight
      (
         this : access ITextSelection_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function MoveUp
      (
         this : access ITextSelection_Interface;
         unit : Windows.UI.Text.TextRangeUnit;
         count : WinRt.Int32;
         extend : WinRt.Boolean;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function TypeText
      (
         this : access ITextSelection_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_ITextSelection : aliased WinRt.IID := (2798872356, 62095, 17162, (178, 207, 195, 67, 103, 30, 192, 233 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for ContentLinkInfo

   overriding procedure Initialize (this : in out ContentLinkInfo);
   overriding procedure Finalize (this : in out ContentLinkInfo);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for ContentLinkInfo

   function Constructor return ContentLinkInfo;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for ContentLinkInfo

   function get_Id
   (
      this : in out ContentLinkInfo
   )
   return WinRt.UInt32;

   procedure put_Id
   (
      this : in out ContentLinkInfo;
      value : WinRt.UInt32
   );

   function get_DisplayText
   (
      this : in out ContentLinkInfo
   )
   return WinRt.WString;

   procedure put_DisplayText
   (
      this : in out ContentLinkInfo;
      value : WinRt.WString
   );

   function get_SecondaryText
   (
      this : in out ContentLinkInfo
   )
   return WinRt.WString;

   procedure put_SecondaryText
   (
      this : in out ContentLinkInfo;
      value : WinRt.WString
   );

   function get_Uri
   (
      this : in out ContentLinkInfo
   )
   return WinRt.Windows.Foundation.Uri'Class;

   procedure put_Uri
   (
      this : in out ContentLinkInfo;
      value : Windows.Foundation.Uri'Class
   );

   function get_LinkContentKind
   (
      this : in out ContentLinkInfo
   )
   return WinRt.WString;

   procedure put_LinkContentKind
   (
      this : in out ContentLinkInfo;
      value : WinRt.WString
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for FontWeights

   overriding procedure Initialize (this : in out FontWeights);
   overriding procedure Finalize (this : in out FontWeights);

   -----------------------------------------------------------------------------
   -- Static Interfaces for FontWeights

   function get_Black
   return WinRt.Windows.UI.Text.FontWeight;

   function get_Bold
   return WinRt.Windows.UI.Text.FontWeight;

   function get_ExtraBlack
   return WinRt.Windows.UI.Text.FontWeight;

   function get_ExtraBold
   return WinRt.Windows.UI.Text.FontWeight;

   function get_ExtraLight
   return WinRt.Windows.UI.Text.FontWeight;

   function get_Light
   return WinRt.Windows.UI.Text.FontWeight;

   function get_Medium
   return WinRt.Windows.UI.Text.FontWeight;

   function get_Normal
   return WinRt.Windows.UI.Text.FontWeight;

   function get_SemiBold
   return WinRt.Windows.UI.Text.FontWeight;

   function get_SemiLight
   return WinRt.Windows.UI.Text.FontWeight;

   function get_Thin
   return WinRt.Windows.UI.Text.FontWeight;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for FontWeights

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for RichEditTextDocument

   overriding procedure Initialize (this : in out RichEditTextDocument);
   overriding procedure Finalize (this : in out RichEditTextDocument);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for RichEditTextDocument

   function get_AlignmentIncludesTrailingWhitespace
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Boolean;

   procedure put_AlignmentIncludesTrailingWhitespace
   (
      this : in out RichEditTextDocument;
      value : WinRt.Boolean
   );

   function get_IgnoreTrailingCharacterSpacing
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Boolean;

   procedure put_IgnoreTrailingCharacterSpacing
   (
      this : in out RichEditTextDocument;
      value : WinRt.Boolean
   );

   procedure ClearUndoRedoHistory
   (
      this : in out RichEditTextDocument
   );

   procedure SetMath
   (
      this : in out RichEditTextDocument;
      value : WinRt.WString
   );

   procedure GetMath
   (
      this : in out RichEditTextDocument;
      value : WinRt.HString_Ptr
   );

   procedure SetMathMode
   (
      this : in out RichEditTextDocument;
      mode : Windows.UI.Text.RichEditMathMode
   );

   function get_CaretType
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Windows.UI.Text.CaretType;

   procedure put_CaretType
   (
      this : in out RichEditTextDocument;
      value : Windows.UI.Text.CaretType
   );

   function get_DefaultTabStop
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Single;

   procedure put_DefaultTabStop
   (
      this : in out RichEditTextDocument;
      value : WinRt.Single
   );

   function get_Selection
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Windows.UI.Text.ITextSelection;

   function get_UndoLimit
   (
      this : in out RichEditTextDocument
   )
   return WinRt.UInt32;

   procedure put_UndoLimit
   (
      this : in out RichEditTextDocument;
      value : WinRt.UInt32
   );

   function CanCopy
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Boolean;

   function CanPaste
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Boolean;

   function CanRedo
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Boolean;

   function CanUndo
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Boolean;

   function ApplyDisplayUpdates
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Int32;

   function BatchDisplayUpdates
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Int32;

   procedure BeginUndoGroup
   (
      this : in out RichEditTextDocument
   );

   procedure EndUndoGroup
   (
      this : in out RichEditTextDocument
   );

   function GetDefaultCharacterFormat
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Windows.UI.Text.ITextCharacterFormat;

   function GetDefaultParagraphFormat
   (
      this : in out RichEditTextDocument
   )
   return WinRt.Windows.UI.Text.ITextParagraphFormat;

   function GetRange
   (
      this : in out RichEditTextDocument;
      startPosition : WinRt.Int32;
      endPosition : WinRt.Int32
   )
   return WinRt.Windows.UI.Text.ITextRange;

   function GetRangeFromPoint
   (
      this : in out RichEditTextDocument;
      point : Windows.Foundation.Point;
      options : Windows.UI.Text.PointOptions
   )
   return WinRt.Windows.UI.Text.ITextRange;

   procedure GetText
   (
      this : in out RichEditTextDocument;
      options : Windows.UI.Text.TextGetOptions;
      value : WinRt.HString_Ptr
   );

   procedure LoadFromStream
   (
      this : in out RichEditTextDocument;
      options : Windows.UI.Text.TextSetOptions;
      value : Windows.Storage.Streams.IRandomAccessStream
   );

   procedure Redo
   (
      this : in out RichEditTextDocument
   );

   procedure SaveToStream
   (
      this : in out RichEditTextDocument;
      options : Windows.UI.Text.TextGetOptions;
      value : Windows.Storage.Streams.IRandomAccessStream
   );

   procedure SetDefaultCharacterFormat
   (
      this : in out RichEditTextDocument;
      value : Windows.UI.Text.ITextCharacterFormat
   );

   procedure SetDefaultParagraphFormat
   (
      this : in out RichEditTextDocument;
      value : Windows.UI.Text.ITextParagraphFormat
   );

   procedure SetText
   (
      this : in out RichEditTextDocument;
      options : Windows.UI.Text.TextSetOptions;
      value : WinRt.WString
   );

   procedure Undo
   (
      this : in out RichEditTextDocument
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for RichEditTextRange

   overriding procedure Initialize (this : in out RichEditTextRange);
   overriding procedure Finalize (this : in out RichEditTextRange);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for RichEditTextRange

   function get_ContentLinkInfo
   (
      this : in out RichEditTextRange
   )
   return WinRt.Windows.UI.Text.ContentLinkInfo'Class;

   procedure put_ContentLinkInfo
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.ContentLinkInfo'Class
   );

   function get_Character
   (
      this : in out RichEditTextRange
   )
   return WinRt.Wide_Char;

   procedure put_Character
   (
      this : in out RichEditTextRange;
      value : WinRt.Wide_Char
   );

   function get_CharacterFormat
   (
      this : in out RichEditTextRange
   )
   return WinRt.Windows.UI.Text.ITextCharacterFormat;

   procedure put_CharacterFormat
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.ITextCharacterFormat
   );

   function get_FormattedText
   (
      this : in out RichEditTextRange
   )
   return WinRt.Windows.UI.Text.ITextRange;

   procedure put_FormattedText
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.ITextRange
   );

   function get_EndPosition
   (
      this : in out RichEditTextRange
   )
   return WinRt.Int32;

   procedure put_EndPosition
   (
      this : in out RichEditTextRange;
      value : WinRt.Int32
   );

   function get_Gravity
   (
      this : in out RichEditTextRange
   )
   return WinRt.Windows.UI.Text.RangeGravity;

   procedure put_Gravity
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.RangeGravity
   );

   function get_Length
   (
      this : in out RichEditTextRange
   )
   return WinRt.Int32;

   function get_Link
   (
      this : in out RichEditTextRange
   )
   return WinRt.WString;

   procedure put_Link
   (
      this : in out RichEditTextRange;
      value : WinRt.WString
   );

   function get_ParagraphFormat
   (
      this : in out RichEditTextRange
   )
   return WinRt.Windows.UI.Text.ITextParagraphFormat;

   procedure put_ParagraphFormat
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.ITextParagraphFormat
   );

   function get_StartPosition
   (
      this : in out RichEditTextRange
   )
   return WinRt.Int32;

   procedure put_StartPosition
   (
      this : in out RichEditTextRange;
      value : WinRt.Int32
   );

   function get_StoryLength
   (
      this : in out RichEditTextRange
   )
   return WinRt.Int32;

   function get_Text
   (
      this : in out RichEditTextRange
   )
   return WinRt.WString;

   procedure put_Text
   (
      this : in out RichEditTextRange;
      value : WinRt.WString
   );

   function CanPaste
   (
      this : in out RichEditTextRange;
      format : WinRt.Int32
   )
   return WinRt.Boolean;

   procedure ChangeCase
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.LetterCase
   );

   procedure Collapse
   (
      this : in out RichEditTextRange;
      value : WinRt.Boolean
   );

   procedure Copy
   (
      this : in out RichEditTextRange
   );

   procedure Cut
   (
      this : in out RichEditTextRange
   );

   function Delete
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      count : WinRt.Int32
   )
   return WinRt.Int32;

   function EndOf
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      extend : WinRt.Boolean
   )
   return WinRt.Int32;

   function Expand
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit
   )
   return WinRt.Int32;

   function FindText
   (
      this : in out RichEditTextRange;
      value : WinRt.WString;
      scanLength : WinRt.Int32;
      options : Windows.UI.Text.FindOptions
   )
   return WinRt.Int32;

   procedure GetCharacterUtf32
   (
      this : in out RichEditTextRange;
      value : WinRt.UInt32_Ptr;
      offset : WinRt.Int32
   );

   function GetClone
   (
      this : in out RichEditTextRange
   )
   return WinRt.Windows.UI.Text.ITextRange;

   function GetIndex
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit
   )
   return WinRt.Int32;

   procedure GetPoint
   (
      this : in out RichEditTextRange;
      horizontalAlign : Windows.UI.Text.HorizontalCharacterAlignment;
      verticalAlign : Windows.UI.Text.VerticalCharacterAlignment;
      options : Windows.UI.Text.PointOptions;
      point : Windows.Foundation.Point_Ptr
   );

   procedure GetRect
   (
      this : in out RichEditTextRange;
      options : Windows.UI.Text.PointOptions;
      rect : Windows.Foundation.Rect_Ptr;
      hit : WinRt.Int32_Ptr
   );

   procedure GetText
   (
      this : in out RichEditTextRange;
      options : Windows.UI.Text.TextGetOptions;
      value : WinRt.HString_Ptr
   );

   procedure GetTextViaStream
   (
      this : in out RichEditTextRange;
      options : Windows.UI.Text.TextGetOptions;
      value : Windows.Storage.Streams.IRandomAccessStream
   );

   function InRange
   (
      this : in out RichEditTextRange;
      range_x : Windows.UI.Text.ITextRange
   )
   return WinRt.Boolean;

   procedure InsertImage
   (
      this : in out RichEditTextRange;
      width : WinRt.Int32;
      height : WinRt.Int32;
      ascent : WinRt.Int32;
      verticalAlign : Windows.UI.Text.VerticalCharacterAlignment;
      alternateText : WinRt.WString;
      value : Windows.Storage.Streams.IRandomAccessStream
   );

   function InStory
   (
      this : in out RichEditTextRange;
      range_x : Windows.UI.Text.ITextRange
   )
   return WinRt.Boolean;

   function IsEqual
   (
      this : in out RichEditTextRange;
      range_x : Windows.UI.Text.ITextRange
   )
   return WinRt.Boolean;

   function Move
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      count : WinRt.Int32
   )
   return WinRt.Int32;

   function MoveEnd
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      count : WinRt.Int32
   )
   return WinRt.Int32;

   function MoveStart
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      count : WinRt.Int32
   )
   return WinRt.Int32;

   procedure Paste
   (
      this : in out RichEditTextRange;
      format : WinRt.Int32
   );

   procedure ScrollIntoView
   (
      this : in out RichEditTextRange;
      value : Windows.UI.Text.PointOptions
   );

   procedure MatchSelection
   (
      this : in out RichEditTextRange
   );

   procedure SetIndex
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      index : WinRt.Int32;
      extend : WinRt.Boolean
   );

   procedure SetPoint
   (
      this : in out RichEditTextRange;
      point : Windows.Foundation.Point;
      options : Windows.UI.Text.PointOptions;
      extend : WinRt.Boolean
   );

   procedure SetRange
   (
      this : in out RichEditTextRange;
      startPosition : WinRt.Int32;
      endPosition : WinRt.Int32
   );

   procedure SetText
   (
      this : in out RichEditTextRange;
      options : Windows.UI.Text.TextSetOptions;
      value : WinRt.WString
   );

   procedure SetTextViaStream
   (
      this : in out RichEditTextRange;
      options : Windows.UI.Text.TextSetOptions;
      value : Windows.Storage.Streams.IRandomAccessStream
   );

   function StartOf
   (
      this : in out RichEditTextRange;
      unit : Windows.UI.Text.TextRangeUnit;
      extend : WinRt.Boolean
   )
   return WinRt.Int32;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package TextConstants is

      function get_AutoColor
      return WinRt.Windows.UI.Color;

      function get_MinUnitCount
      return WinRt.Int32;

      function get_MaxUnitCount
      return WinRt.Int32;

      function get_UndefinedColor
      return WinRt.Windows.UI.Color;

      function get_UndefinedFloatValue
      return WinRt.Single;

      function get_UndefinedInt32Value
      return WinRt.Int32;

      function get_UndefinedFontStretch
      return WinRt.Windows.UI.Text.FontStretch;

      function get_UndefinedFontStyle
      return WinRt.Windows.UI.Text.FontStyle;

   end TextConstants;

end;
