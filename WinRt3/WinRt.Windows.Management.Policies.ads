--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
limited with WinRt.Windows.Storage.Streams;
limited with WinRt.Windows.System;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Management.Policies is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type INamedPolicyData_Interface is interface and WinRt.IInspectable_Interface;
   type INamedPolicyData is access all INamedPolicyData_Interface'Class;
   type INamedPolicyData_Ptr is access all INamedPolicyData;

   type INamedPolicyStatics_Interface is interface and WinRt.IInspectable_Interface;
   type INamedPolicyStatics is access all INamedPolicyStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type NamedPolicyData is new Ada.Finalization.Limited_Controlled with
      record
         m_INamedPolicyData : access Windows.Management.Policies.INamedPolicyData;
      end record;
   type NamedPolicyData_Ptr is access all NamedPolicyData;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type NamedPolicyKind is (
      Invalid_e,
      Binary_e,
      Boolean_e,
      Int32_e,
      Int64_e,
      String_e
   );
   for NamedPolicyKind use (
      Invalid_e => 0,
      Binary_e => 1,
      Boolean_e => 2,
      Int32_e => 3,
      Int64_e => 4,
      String_e => 5
   );
   type NamedPolicyKind_Ptr is access all NamedPolicyKind;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type INamedPolicyData is interface and WinRt.IInspectable;

      function get_Area
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Name
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Kind
      (
         this : access INamedPolicyData_Interface;
         RetVal : access Windows.Management.Policies.NamedPolicyKind
      )
      return WinRt.Hresult is abstract;

      function get_IsManaged
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsUserPolicy
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_User
      (
         this : access INamedPolicyData_Interface;
         RetVal : access Windows.System.IUser
      )
      return WinRt.Hresult is abstract;

      function GetBoolean
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetBinary
      (
         this : access INamedPolicyData_Interface;
         RetVal : access Windows.Storage.Streams.IBuffer
      )
      return WinRt.Hresult is abstract;

      function GetInt32
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function GetInt64
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.Int64
      )
      return WinRt.Hresult is abstract;

      function GetString
      (
         this : access INamedPolicyData_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function add_Changed
      (
         this : access INamedPolicyData_Interface;
         changedHandler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Changed
      (
         this : access INamedPolicyData_Interface;
         cookie : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_INamedPolicyData : aliased WinRt.IID := (953987480, 38316, 16503, (166, 67, 128, 120, 202, 226, 100, 0 ));

   -----------------------------------------------------------------------------
   -- type INamedPolicyStatics is interface and WinRt.IInspectable;

      function GetPolicyFromPath
      (
         this : access INamedPolicyStatics_Interface;
         area : WinRt.HString;
         name : WinRt.HString;
         RetVal : access Windows.Management.Policies.INamedPolicyData
      )
      return WinRt.Hresult is abstract;

      function GetPolicyFromPathForUser
      (
         this : access INamedPolicyStatics_Interface;
         user : Windows.System.IUser;
         area : WinRt.HString;
         name : WinRt.HString;
         RetVal : access Windows.Management.Policies.INamedPolicyData
      )
      return WinRt.Hresult is abstract;

      IID_INamedPolicyStatics : aliased WinRt.IID := (2138651623, 30404, 16472, (140, 173, 103, 102, 44, 208, 95, 13 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package NamedPolicy is

      function GetPolicyFromPath
      (
         area : WinRt.WString;
         name : WinRt.WString
      )
      return WinRt.Windows.Management.Policies.NamedPolicyData;

      function GetPolicyFromPathForUser
      (
         user : Windows.System.User'Class;
         area : WinRt.WString;
         name : WinRt.WString
      )
      return WinRt.Windows.Management.Policies.NamedPolicyData;

   end NamedPolicy;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for NamedPolicyData

   overriding procedure Initialize (this : in out NamedPolicyData);
   overriding procedure Finalize (this : in out NamedPolicyData);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for NamedPolicyData

   function get_Area
   (
      this : in out NamedPolicyData
   )
   return WinRt.WString;

   function get_Name
   (
      this : in out NamedPolicyData
   )
   return WinRt.WString;

   function get_Kind
   (
      this : in out NamedPolicyData
   )
   return WinRt.Windows.Management.Policies.NamedPolicyKind;

   function get_IsManaged
   (
      this : in out NamedPolicyData
   )
   return WinRt.Boolean;

   function get_IsUserPolicy
   (
      this : in out NamedPolicyData
   )
   return WinRt.Boolean;

   function get_User
   (
      this : in out NamedPolicyData
   )
   return WinRt.Windows.System.User'Class;

   function GetBoolean
   (
      this : in out NamedPolicyData
   )
   return WinRt.Boolean;

   function GetBinary
   (
      this : in out NamedPolicyData
   )
   return WinRt.Windows.Storage.Streams.IBuffer;

   function GetInt32
   (
      this : in out NamedPolicyData
   )
   return WinRt.Int32;

   function GetInt64
   (
      this : in out NamedPolicyData
   )
   return WinRt.Int64;

   function GetString
   (
      this : in out NamedPolicyData
   )
   return WinRt.WString;

   function add_Changed
   (
      this : in out NamedPolicyData;
      changedHandler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Changed
   (
      this : in out NamedPolicyData;
      cookie : Windows.Foundation.EventRegistrationToken
   );

end;
