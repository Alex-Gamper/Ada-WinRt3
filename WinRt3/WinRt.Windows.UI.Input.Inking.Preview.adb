--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation; use WinRt.Windows.Foundation;
with WinRt.Windows.UI.Composition;
with Ada.Unchecked_Conversion;
with Ada.Unchecked_Deallocation;
--------------------------------------------------------------------------------
package body WinRt.Windows.UI.Input.Inking.Preview is

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PalmRejectionDelayZonePreview

   procedure Initialize (this : in out PalmRejectionDelayZonePreview) is
   begin
      null;
   end;

   procedure Finalize (this : in out PalmRejectionDelayZonePreview) is
      RefCount : WinRt.UInt32 := 0;
      procedure Free is new Ada.Unchecked_Deallocation (IPalmRejectionDelayZonePreview, IPalmRejectionDelayZonePreview_Ptr);
   begin
      if this.m_IPalmRejectionDelayZonePreview /= null then
         if this.m_IPalmRejectionDelayZonePreview.all /= null then
            RefCount := this.m_IPalmRejectionDelayZonePreview.all.Release;
            Free (this.m_IPalmRejectionDelayZonePreview);
         end if;
      end if;
   end;

   -----------------------------------------------------------------------------
   -- Static Interfaces for PalmRejectionDelayZonePreview

   function CreateForVisual
   (
      inputPanelVisual : Windows.UI.Composition.Visual'Class;
      inputPanelRect : Windows.Foundation.Rect
   )
   return WinRt.Windows.UI.Input.Inking.Preview.PalmRejectionDelayZonePreview is
      Hr               : WinRt.HResult := S_OK;
      m_hString        : WinRt.HString := To_HString ("Windows.UI.Input.Inking.Preview.PalmRejectionDelayZonePreview");
      m_Factory        : access WinRt.Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreviewStatics_Interface'Class := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreview;
   begin
      return RetVal : WinRt.Windows.UI.Input.Inking.Preview.PalmRejectionDelayZonePreview do
         Hr := RoGetActivationFactory (m_hString, IID_IPalmRejectionDelayZonePreviewStatics'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.CreateForVisual (inputPanelVisual.m_IVisual.all, inputPanelRect, m_ComRetVal'Access);
            m_RefCount := m_Factory.Release;
            Retval.m_IPalmRejectionDelayZonePreview := new Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreview;
            Retval.m_IPalmRejectionDelayZonePreview.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   function CreateForVisual
   (
      inputPanelVisual : Windows.UI.Composition.Visual'Class;
      inputPanelRect : Windows.Foundation.Rect;
      viewportVisual : Windows.UI.Composition.Visual'Class;
      viewportRect : Windows.Foundation.Rect
   )
   return WinRt.Windows.UI.Input.Inking.Preview.PalmRejectionDelayZonePreview is
      Hr               : WinRt.HResult := S_OK;
      m_hString        : WinRt.HString := To_HString ("Windows.UI.Input.Inking.Preview.PalmRejectionDelayZonePreview");
      m_Factory        : access WinRt.Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreviewStatics_Interface'Class := null;
      m_RefCount       : WinRt.UInt32 := 0;
      m_ComRetVal      : aliased Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreview;
   begin
      return RetVal : WinRt.Windows.UI.Input.Inking.Preview.PalmRejectionDelayZonePreview do
         Hr := RoGetActivationFactory (m_hString, IID_IPalmRejectionDelayZonePreviewStatics'Access , m_Factory'Address);
         if Hr = S_OK then
            Hr := m_Factory.CreateForVisual (inputPanelVisual.m_IVisual.all, inputPanelRect, viewportVisual.m_IVisual.all, viewportRect, m_ComRetVal'Access);
            m_RefCount := m_Factory.Release;
            Retval.m_IPalmRejectionDelayZonePreview := new Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreview;
            Retval.m_IPalmRejectionDelayZonePreview.all := m_ComRetVal;
         end if;
         Hr := WindowsDeleteString (m_hString);
      end return;
   end;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PalmRejectionDelayZonePreview

   procedure Close
   (
      this : in out PalmRejectionDelayZonePreview
   ) is
      Hr               : WinRt.HResult := S_OK;
      m_Interface      : WinRt.Windows.Foundation.IClosable := null;
      m_RefCount       : WinRt.UInt32 := 0;
      function QInterface is new Generic_QueryInterface (WinRt.Windows.UI.Input.Inking.Preview.IPalmRejectionDelayZonePreview_Interface, WinRt.Windows.Foundation.IClosable, WinRt.Windows.Foundation.IID_IClosable'Unchecked_Access);
   begin
      m_Interface := QInterface (this.m_IPalmRejectionDelayZonePreview.all);
      Hr := m_Interface.Close;
      m_RefCount := m_Interface.Release;
   end;

end;
