--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
limited with WinRt.Windows.Devices.Geolocation;
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
with WinRt.Windows.Foundation.Numerics;
limited with WinRt.Windows.Services.Maps;
limited with WinRt.Windows.Services.Maps.LocalSearch;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.UI.Xaml.Controls.Maps is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ICustomMapTileDataSource_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomMapTileDataSource is access ICustomMapTileDataSource_Interface'Class;
   type ICustomMapTileDataSource_Ptr is access all ICustomMapTileDataSource;

   type ICustomMapTileDataSourceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ICustomMapTileDataSourceFactory is access ICustomMapTileDataSourceFactory_Interface'Class;

   type IHttpMapTileDataSource_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpMapTileDataSource is access IHttpMapTileDataSource_Interface'Class;
   type IHttpMapTileDataSource_Ptr is access all IHttpMapTileDataSource;

   type IHttpMapTileDataSourceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IHttpMapTileDataSourceFactory is access IHttpMapTileDataSourceFactory_Interface'Class;

   type ILocalMapTileDataSource_Interface is interface and WinRt.IInspectable_Interface;
   type ILocalMapTileDataSource is access ILocalMapTileDataSource_Interface'Class;
   type ILocalMapTileDataSource_Ptr is access all ILocalMapTileDataSource;

   type ILocalMapTileDataSourceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type ILocalMapTileDataSourceFactory is access ILocalMapTileDataSourceFactory_Interface'Class;

   type IMapActualCameraChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapActualCameraChangedEventArgs is access IMapActualCameraChangedEventArgs_Interface'Class;
   type IMapActualCameraChangedEventArgs_Ptr is access all IMapActualCameraChangedEventArgs;

   type IMapActualCameraChangedEventArgs2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapActualCameraChangedEventArgs2 is access IMapActualCameraChangedEventArgs2_Interface'Class;

   type IMapActualCameraChangingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapActualCameraChangingEventArgs is access IMapActualCameraChangingEventArgs_Interface'Class;
   type IMapActualCameraChangingEventArgs_Ptr is access all IMapActualCameraChangingEventArgs;

   type IMapActualCameraChangingEventArgs2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapActualCameraChangingEventArgs2 is access IMapActualCameraChangingEventArgs2_Interface'Class;

   type IMapBillboard_Interface is interface and WinRt.IInspectable_Interface;
   type IMapBillboard is access IMapBillboard_Interface'Class;
   type IMapBillboard_Ptr is access all IMapBillboard;

   type IMapBillboardFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapBillboardFactory is access IMapBillboardFactory_Interface'Class;

   type IMapBillboardStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapBillboardStatics is access IMapBillboardStatics_Interface'Class;

   type IMapCamera_Interface is interface and WinRt.IInspectable_Interface;
   type IMapCamera is access IMapCamera_Interface'Class;
   type IMapCamera_Ptr is access all IMapCamera;

   type IMapCameraFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapCameraFactory is access IMapCameraFactory_Interface'Class;

   type IMapContextRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapContextRequestedEventArgs is access IMapContextRequestedEventArgs_Interface'Class;
   type IMapContextRequestedEventArgs_Ptr is access all IMapContextRequestedEventArgs;

   type IMapControl_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl is access IMapControl_Interface'Class;
   type IMapControl_Ptr is access all IMapControl;

   type IMapControl2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl2 is access IMapControl2_Interface'Class;

   type IMapControl3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl3 is access IMapControl3_Interface'Class;

   type IMapControl4_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl4 is access IMapControl4_Interface'Class;

   type IMapControl5_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl5 is access IMapControl5_Interface'Class;

   type IMapControl6_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl6 is access IMapControl6_Interface'Class;

   type IMapControl7_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl7 is access IMapControl7_Interface'Class;

   type IMapControl8_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControl8 is access IMapControl8_Interface'Class;

   type IMapControlBusinessLandmarkClickEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlBusinessLandmarkClickEventArgs is access IMapControlBusinessLandmarkClickEventArgs_Interface'Class;
   type IMapControlBusinessLandmarkClickEventArgs_Ptr is access all IMapControlBusinessLandmarkClickEventArgs;

   type IMapControlBusinessLandmarkPointerEnteredEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlBusinessLandmarkPointerEnteredEventArgs is access IMapControlBusinessLandmarkPointerEnteredEventArgs_Interface'Class;
   type IMapControlBusinessLandmarkPointerEnteredEventArgs_Ptr is access all IMapControlBusinessLandmarkPointerEnteredEventArgs;

   type IMapControlBusinessLandmarkPointerExitedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlBusinessLandmarkPointerExitedEventArgs is access IMapControlBusinessLandmarkPointerExitedEventArgs_Interface'Class;
   type IMapControlBusinessLandmarkPointerExitedEventArgs_Ptr is access all IMapControlBusinessLandmarkPointerExitedEventArgs;

   type IMapControlBusinessLandmarkRightTappedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlBusinessLandmarkRightTappedEventArgs is access IMapControlBusinessLandmarkRightTappedEventArgs_Interface'Class;
   type IMapControlBusinessLandmarkRightTappedEventArgs_Ptr is access all IMapControlBusinessLandmarkRightTappedEventArgs;

   type IMapControlDataHelper_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlDataHelper is access IMapControlDataHelper_Interface'Class;
   type IMapControlDataHelper_Ptr is access all IMapControlDataHelper;

   type IMapControlDataHelper2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlDataHelper2 is access IMapControlDataHelper2_Interface'Class;

   type IMapControlDataHelperFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlDataHelperFactory is access IMapControlDataHelperFactory_Interface'Class;

   type IMapControlDataHelperStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlDataHelperStatics is access IMapControlDataHelperStatics_Interface'Class;

   type IMapControlStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics is access IMapControlStatics_Interface'Class;

   type IMapControlStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics2 is access IMapControlStatics2_Interface'Class;

   type IMapControlStatics4_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics4 is access IMapControlStatics4_Interface'Class;

   type IMapControlStatics5_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics5 is access IMapControlStatics5_Interface'Class;

   type IMapControlStatics6_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics6 is access IMapControlStatics6_Interface'Class;

   type IMapControlStatics7_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics7 is access IMapControlStatics7_Interface'Class;

   type IMapControlStatics8_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlStatics8 is access IMapControlStatics8_Interface'Class;

   type IMapControlTransitFeatureClickEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlTransitFeatureClickEventArgs is access IMapControlTransitFeatureClickEventArgs_Interface'Class;
   type IMapControlTransitFeatureClickEventArgs_Ptr is access all IMapControlTransitFeatureClickEventArgs;

   type IMapControlTransitFeaturePointerEnteredEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlTransitFeaturePointerEnteredEventArgs is access IMapControlTransitFeaturePointerEnteredEventArgs_Interface'Class;
   type IMapControlTransitFeaturePointerEnteredEventArgs_Ptr is access all IMapControlTransitFeaturePointerEnteredEventArgs;

   type IMapControlTransitFeaturePointerExitedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlTransitFeaturePointerExitedEventArgs is access IMapControlTransitFeaturePointerExitedEventArgs_Interface'Class;
   type IMapControlTransitFeaturePointerExitedEventArgs_Ptr is access all IMapControlTransitFeaturePointerExitedEventArgs;

   type IMapControlTransitFeatureRightTappedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapControlTransitFeatureRightTappedEventArgs is access IMapControlTransitFeatureRightTappedEventArgs_Interface'Class;
   type IMapControlTransitFeatureRightTappedEventArgs_Ptr is access all IMapControlTransitFeatureRightTappedEventArgs;

   type IMapCustomExperience_Interface is interface and WinRt.IInspectable_Interface;
   type IMapCustomExperience is access IMapCustomExperience_Interface'Class;
   type IMapCustomExperience_Ptr is access all IMapCustomExperience;

   type IMapCustomExperienceChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapCustomExperienceChangedEventArgs is access IMapCustomExperienceChangedEventArgs_Interface'Class;
   type IMapCustomExperienceChangedEventArgs_Ptr is access all IMapCustomExperienceChangedEventArgs;

   type IMapCustomExperienceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapCustomExperienceFactory is access IMapCustomExperienceFactory_Interface'Class;

   type IMapElement_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElement is access IMapElement_Interface'Class;
   type IMapElement_Ptr is access all IMapElement;

   type IMapElement2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElement2 is access IMapElement2_Interface'Class;

   type IMapElement3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElement3 is access IMapElement3_Interface'Class;

   type IMapElement3D_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElement3D is access IMapElement3D_Interface'Class;
   type IMapElement3D_Ptr is access all IMapElement3D;

   type IMapElement3DStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElement3DStatics is access IMapElement3DStatics_Interface'Class;

   type IMapElement4_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElement4 is access IMapElement4_Interface'Class;

   type IMapElementClickEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementClickEventArgs is access IMapElementClickEventArgs_Interface'Class;
   type IMapElementClickEventArgs_Ptr is access all IMapElementClickEventArgs;

   type IMapElementFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementFactory is access IMapElementFactory_Interface'Class;

   type IMapElementPointerEnteredEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementPointerEnteredEventArgs is access IMapElementPointerEnteredEventArgs_Interface'Class;
   type IMapElementPointerEnteredEventArgs_Ptr is access all IMapElementPointerEnteredEventArgs;

   type IMapElementPointerExitedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementPointerExitedEventArgs is access IMapElementPointerExitedEventArgs_Interface'Class;
   type IMapElementPointerExitedEventArgs_Ptr is access all IMapElementPointerExitedEventArgs;

   type IMapElementStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementStatics is access IMapElementStatics_Interface'Class;

   type IMapElementStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementStatics2 is access IMapElementStatics2_Interface'Class;

   type IMapElementStatics3_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementStatics3 is access IMapElementStatics3_Interface'Class;

   type IMapElementStatics4_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementStatics4 is access IMapElementStatics4_Interface'Class;

   type IMapElementsLayer_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementsLayer is access IMapElementsLayer_Interface'Class;
   type IMapElementsLayer_Ptr is access all IMapElementsLayer;

   type IMapElementsLayerClickEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementsLayerClickEventArgs is access IMapElementsLayerClickEventArgs_Interface'Class;
   type IMapElementsLayerClickEventArgs_Ptr is access all IMapElementsLayerClickEventArgs;

   type IMapElementsLayerContextRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementsLayerContextRequestedEventArgs is access IMapElementsLayerContextRequestedEventArgs_Interface'Class;
   type IMapElementsLayerContextRequestedEventArgs_Ptr is access all IMapElementsLayerContextRequestedEventArgs;

   type IMapElementsLayerPointerEnteredEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementsLayerPointerEnteredEventArgs is access IMapElementsLayerPointerEnteredEventArgs_Interface'Class;
   type IMapElementsLayerPointerEnteredEventArgs_Ptr is access all IMapElementsLayerPointerEnteredEventArgs;

   type IMapElementsLayerPointerExitedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementsLayerPointerExitedEventArgs is access IMapElementsLayerPointerExitedEventArgs_Interface'Class;
   type IMapElementsLayerPointerExitedEventArgs_Ptr is access all IMapElementsLayerPointerExitedEventArgs;

   type IMapElementsLayerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapElementsLayerStatics is access IMapElementsLayerStatics_Interface'Class;

   type IMapIcon_Interface is interface and WinRt.IInspectable_Interface;
   type IMapIcon is access IMapIcon_Interface'Class;
   type IMapIcon_Ptr is access all IMapIcon;

   type IMapIcon2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapIcon2 is access IMapIcon2_Interface'Class;

   type IMapIconStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapIconStatics is access IMapIconStatics_Interface'Class;

   type IMapIconStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapIconStatics2 is access IMapIconStatics2_Interface'Class;

   type IMapInputEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapInputEventArgs is access IMapInputEventArgs_Interface'Class;
   type IMapInputEventArgs_Ptr is access all IMapInputEventArgs;

   type IMapItemsControl_Interface is interface and WinRt.IInspectable_Interface;
   type IMapItemsControl is access IMapItemsControl_Interface'Class;
   type IMapItemsControl_Ptr is access all IMapItemsControl;

   type IMapItemsControlStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapItemsControlStatics is access IMapItemsControlStatics_Interface'Class;

   type IMapLayer_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLayer is access IMapLayer_Interface'Class;
   type IMapLayer_Ptr is access all IMapLayer;

   type IMapLayerFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLayerFactory is access IMapLayerFactory_Interface'Class;

   type IMapLayerStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapLayerStatics is access IMapLayerStatics_Interface'Class;

   type IMapModel3D_Interface is interface and WinRt.IInspectable_Interface;
   type IMapModel3D is access IMapModel3D_Interface'Class;
   type IMapModel3D_Ptr is access all IMapModel3D;

   type IMapModel3DFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapModel3DFactory is access IMapModel3DFactory_Interface'Class;

   type IMapModel3DStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapModel3DStatics is access IMapModel3DStatics_Interface'Class;

   type IMapPolygon_Interface is interface and WinRt.IInspectable_Interface;
   type IMapPolygon is access IMapPolygon_Interface'Class;
   type IMapPolygon_Ptr is access all IMapPolygon;

   type IMapPolygon2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapPolygon2 is access IMapPolygon2_Interface'Class;

   type IMapPolygonStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapPolygonStatics is access IMapPolygonStatics_Interface'Class;

   type IMapPolyline_Interface is interface and WinRt.IInspectable_Interface;
   type IMapPolyline is access IMapPolyline_Interface'Class;
   type IMapPolyline_Ptr is access all IMapPolyline;

   type IMapPolylineStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapPolylineStatics is access IMapPolylineStatics_Interface'Class;

   type IMapRightTappedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRightTappedEventArgs is access IMapRightTappedEventArgs_Interface'Class;
   type IMapRightTappedEventArgs_Ptr is access all IMapRightTappedEventArgs;

   type IMapRouteView_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteView is access IMapRouteView_Interface'Class;
   type IMapRouteView_Ptr is access all IMapRouteView;

   type IMapRouteViewFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapRouteViewFactory is access IMapRouteViewFactory_Interface'Class;

   type IMapScene_Interface is interface and WinRt.IInspectable_Interface;
   type IMapScene is access IMapScene_Interface'Class;
   type IMapScene_Ptr is access all IMapScene;

   type IMapSceneStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapSceneStatics is access IMapSceneStatics_Interface'Class;

   type IMapStyleSheet_Interface is interface and WinRt.IInspectable_Interface;
   type IMapStyleSheet is access IMapStyleSheet_Interface'Class;
   type IMapStyleSheet_Ptr is access all IMapStyleSheet;

   type IMapStyleSheetEntriesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapStyleSheetEntriesStatics is access IMapStyleSheetEntriesStatics_Interface'Class;

   type IMapStyleSheetEntryStatesStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapStyleSheetEntryStatesStatics is access IMapStyleSheetEntryStatesStatics_Interface'Class;

   type IMapStyleSheetStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapStyleSheetStatics is access IMapStyleSheetStatics_Interface'Class;

   type IMapTargetCameraChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTargetCameraChangedEventArgs is access IMapTargetCameraChangedEventArgs_Interface'Class;
   type IMapTargetCameraChangedEventArgs_Ptr is access all IMapTargetCameraChangedEventArgs;

   type IMapTargetCameraChangedEventArgs2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTargetCameraChangedEventArgs2 is access IMapTargetCameraChangedEventArgs2_Interface'Class;

   type IMapTileBitmapRequest_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileBitmapRequest is access IMapTileBitmapRequest_Interface'Class;
   type IMapTileBitmapRequest_Ptr is access all IMapTileBitmapRequest;

   type IMapTileBitmapRequestDeferral_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileBitmapRequestDeferral is access IMapTileBitmapRequestDeferral_Interface'Class;
   type IMapTileBitmapRequestDeferral_Ptr is access all IMapTileBitmapRequestDeferral;

   type IMapTileBitmapRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileBitmapRequestedEventArgs is access IMapTileBitmapRequestedEventArgs_Interface'Class;
   type IMapTileBitmapRequestedEventArgs_Ptr is access all IMapTileBitmapRequestedEventArgs;

   type IMapTileBitmapRequestedEventArgs2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileBitmapRequestedEventArgs2 is access IMapTileBitmapRequestedEventArgs2_Interface'Class;

   type IMapTileDataSource_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileDataSource is access IMapTileDataSource_Interface'Class;
   type IMapTileDataSource_Ptr is access all IMapTileDataSource;

   type IMapTileDataSourceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileDataSourceFactory is access IMapTileDataSourceFactory_Interface'Class;

   type IMapTileSource_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileSource is access IMapTileSource_Interface'Class;
   type IMapTileSource_Ptr is access all IMapTileSource;

   type IMapTileSource2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileSource2 is access IMapTileSource2_Interface'Class;

   type IMapTileSourceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileSourceFactory is access IMapTileSourceFactory_Interface'Class;

   type IMapTileSourceStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileSourceStatics is access IMapTileSourceStatics_Interface'Class;

   type IMapTileSourceStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileSourceStatics2 is access IMapTileSourceStatics2_Interface'Class;

   type IMapTileUriRequest_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileUriRequest is access IMapTileUriRequest_Interface'Class;
   type IMapTileUriRequest_Ptr is access all IMapTileUriRequest;

   type IMapTileUriRequestDeferral_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileUriRequestDeferral is access IMapTileUriRequestDeferral_Interface'Class;
   type IMapTileUriRequestDeferral_Ptr is access all IMapTileUriRequestDeferral;

   type IMapTileUriRequestedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileUriRequestedEventArgs is access IMapTileUriRequestedEventArgs_Interface'Class;
   type IMapTileUriRequestedEventArgs_Ptr is access all IMapTileUriRequestedEventArgs;

   type IMapTileUriRequestedEventArgs2_Interface is interface and WinRt.IInspectable_Interface;
   type IMapTileUriRequestedEventArgs2 is access IMapTileUriRequestedEventArgs2_Interface'Class;

   type IStreetsideExperience_Interface is interface and WinRt.IInspectable_Interface;
   type IStreetsideExperience is access IStreetsideExperience_Interface'Class;
   type IStreetsideExperience_Ptr is access all IStreetsideExperience;

   type IStreetsideExperienceFactory_Interface is interface and WinRt.IInspectable_Interface;
   type IStreetsideExperienceFactory is access IStreetsideExperienceFactory_Interface'Class;

   type IStreetsidePanorama_Interface is interface and WinRt.IInspectable_Interface;
   type IStreetsidePanorama is access IStreetsidePanorama_Interface'Class;
   type IStreetsidePanorama_Ptr is access all IStreetsidePanorama;

   type IStreetsidePanoramaStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IStreetsidePanoramaStatics is access IStreetsidePanoramaStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type MapTileDataSource is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileDataSource : access Windows.UI.Xaml.Controls.Maps.IMapTileDataSource;
      end record;
   type MapTileDataSource_Ptr is access all MapTileDataSource;

   type CustomMapTileDataSource is new Ada.Finalization.Limited_Controlled with
      record
         m_ICustomMapTileDataSource : access Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource;
      end record;
   type CustomMapTileDataSource_Ptr is access all CustomMapTileDataSource;

   type HttpMapTileDataSource is new Ada.Finalization.Limited_Controlled with
      record
         m_IHttpMapTileDataSource : access Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource;
      end record;
   type HttpMapTileDataSource_Ptr is access all HttpMapTileDataSource;

   type LocalMapTileDataSource is new Ada.Finalization.Limited_Controlled with
      record
         m_ILocalMapTileDataSource : access Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource;
      end record;
   type LocalMapTileDataSource_Ptr is access all LocalMapTileDataSource;

   type MapActualCameraChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapActualCameraChangedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs;
      end record;
   type MapActualCameraChangedEventArgs_Ptr is access all MapActualCameraChangedEventArgs;

   type MapActualCameraChangingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapActualCameraChangingEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs;
      end record;
   type MapActualCameraChangingEventArgs_Ptr is access all MapActualCameraChangingEventArgs;

   type MapElement is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElement : access Windows.UI.Xaml.Controls.Maps.IMapElement;
      end record;
   type MapElement_Ptr is access all MapElement;

   type MapBillboard is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapBillboard : access Windows.UI.Xaml.Controls.Maps.IMapBillboard;
      end record;
   type MapBillboard_Ptr is access all MapBillboard;

   type MapCamera is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapCamera : access Windows.UI.Xaml.Controls.Maps.IMapCamera;
      end record;
   type MapCamera_Ptr is access all MapCamera;

   type MapContextRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapContextRequestedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs;
      end record;
   type MapContextRequestedEventArgs_Ptr is access all MapContextRequestedEventArgs;

   type MapControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControl : access Windows.UI.Xaml.Controls.Maps.IMapControl;
      end record;
   type MapControl_Ptr is access all MapControl;

   type MapControlBusinessLandmarkClickEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlBusinessLandmarkClickEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs;
      end record;
   type MapControlBusinessLandmarkClickEventArgs_Ptr is access all MapControlBusinessLandmarkClickEventArgs;

   type MapControlBusinessLandmarkPointerEnteredEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlBusinessLandmarkPointerEnteredEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs;
      end record;
   type MapControlBusinessLandmarkPointerEnteredEventArgs_Ptr is access all MapControlBusinessLandmarkPointerEnteredEventArgs;

   type MapControlBusinessLandmarkPointerExitedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlBusinessLandmarkPointerExitedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs;
      end record;
   type MapControlBusinessLandmarkPointerExitedEventArgs_Ptr is access all MapControlBusinessLandmarkPointerExitedEventArgs;

   type MapControlBusinessLandmarkRightTappedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlBusinessLandmarkRightTappedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs;
      end record;
   type MapControlBusinessLandmarkRightTappedEventArgs_Ptr is access all MapControlBusinessLandmarkRightTappedEventArgs;

   type MapControlDataHelper is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlDataHelper : access Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper;
      end record;
   type MapControlDataHelper_Ptr is access all MapControlDataHelper;

   type MapControlTransitFeatureClickEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlTransitFeatureClickEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs;
      end record;
   type MapControlTransitFeatureClickEventArgs_Ptr is access all MapControlTransitFeatureClickEventArgs;

   type MapControlTransitFeaturePointerEnteredEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlTransitFeaturePointerEnteredEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs;
      end record;
   type MapControlTransitFeaturePointerEnteredEventArgs_Ptr is access all MapControlTransitFeaturePointerEnteredEventArgs;

   type MapControlTransitFeaturePointerExitedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlTransitFeaturePointerExitedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs;
      end record;
   type MapControlTransitFeaturePointerExitedEventArgs_Ptr is access all MapControlTransitFeaturePointerExitedEventArgs;

   type MapControlTransitFeatureRightTappedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapControlTransitFeatureRightTappedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs;
      end record;
   type MapControlTransitFeatureRightTappedEventArgs_Ptr is access all MapControlTransitFeatureRightTappedEventArgs;

   type MapCustomExperience is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapCustomExperience : access Windows.UI.Xaml.Controls.Maps.IMapCustomExperience;
      end record;
   type MapCustomExperience_Ptr is access all MapCustomExperience;

   type MapCustomExperienceChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapCustomExperienceChangedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs;
      end record;
   type MapCustomExperienceChangedEventArgs_Ptr is access all MapCustomExperienceChangedEventArgs;

   type MapElement3D is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElement3D : access Windows.UI.Xaml.Controls.Maps.IMapElement3D;
      end record;
   type MapElement3D_Ptr is access all MapElement3D;

   type MapElementClickEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementClickEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs;
      end record;
   type MapElementClickEventArgs_Ptr is access all MapElementClickEventArgs;

   type MapElementPointerEnteredEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementPointerEnteredEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs;
      end record;
   type MapElementPointerEnteredEventArgs_Ptr is access all MapElementPointerEnteredEventArgs;

   type MapElementPointerExitedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementPointerExitedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs;
      end record;
   type MapElementPointerExitedEventArgs_Ptr is access all MapElementPointerExitedEventArgs;

   type MapLayer is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapLayer : access Windows.UI.Xaml.Controls.Maps.IMapLayer;
      end record;
   type MapLayer_Ptr is access all MapLayer;

   type MapElementsLayer is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementsLayer : access Windows.UI.Xaml.Controls.Maps.IMapElementsLayer;
      end record;
   type MapElementsLayer_Ptr is access all MapElementsLayer;

   type MapElementsLayerClickEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementsLayerClickEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs;
      end record;
   type MapElementsLayerClickEventArgs_Ptr is access all MapElementsLayerClickEventArgs;

   type MapElementsLayerContextRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementsLayerContextRequestedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs;
      end record;
   type MapElementsLayerContextRequestedEventArgs_Ptr is access all MapElementsLayerContextRequestedEventArgs;

   type MapElementsLayerPointerEnteredEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementsLayerPointerEnteredEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs;
      end record;
   type MapElementsLayerPointerEnteredEventArgs_Ptr is access all MapElementsLayerPointerEnteredEventArgs;

   type MapElementsLayerPointerExitedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapElementsLayerPointerExitedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs;
      end record;
   type MapElementsLayerPointerExitedEventArgs_Ptr is access all MapElementsLayerPointerExitedEventArgs;

   type MapIcon is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapIcon : access Windows.UI.Xaml.Controls.Maps.IMapIcon;
      end record;
   type MapIcon_Ptr is access all MapIcon;

   type MapInputEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapInputEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs;
      end record;
   type MapInputEventArgs_Ptr is access all MapInputEventArgs;

   type MapItemsControl is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapItemsControl : access Windows.UI.Xaml.Controls.Maps.IMapItemsControl;
      end record;
   type MapItemsControl_Ptr is access all MapItemsControl;

   type MapModel3D is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapModel3D : access Windows.UI.Xaml.Controls.Maps.IMapModel3D;
      end record;
   type MapModel3D_Ptr is access all MapModel3D;

   type MapPolygon is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapPolygon : access Windows.UI.Xaml.Controls.Maps.IMapPolygon;
      end record;
   type MapPolygon_Ptr is access all MapPolygon;

   type MapPolyline is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapPolyline : access Windows.UI.Xaml.Controls.Maps.IMapPolyline;
      end record;
   type MapPolyline_Ptr is access all MapPolyline;

   type MapRightTappedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRightTappedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs;
      end record;
   type MapRightTappedEventArgs_Ptr is access all MapRightTappedEventArgs;

   type MapRouteView is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapRouteView : access Windows.UI.Xaml.Controls.Maps.IMapRouteView;
      end record;
   type MapRouteView_Ptr is access all MapRouteView;

   type MapScene is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapScene : access Windows.UI.Xaml.Controls.Maps.IMapScene;
      end record;
   type MapScene_Ptr is access all MapScene;

   type MapStyleSheet is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapStyleSheet : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet;
      end record;
   type MapStyleSheet_Ptr is access all MapStyleSheet;

   type MapTargetCameraChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTargetCameraChangedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs;
      end record;
   type MapTargetCameraChangedEventArgs_Ptr is access all MapTargetCameraChangedEventArgs;

   type MapTileBitmapRequest is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileBitmapRequest : access Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest;
      end record;
   type MapTileBitmapRequest_Ptr is access all MapTileBitmapRequest;

   type MapTileBitmapRequestDeferral is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileBitmapRequestDeferral : access Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral;
      end record;
   type MapTileBitmapRequestDeferral_Ptr is access all MapTileBitmapRequestDeferral;

   type MapTileBitmapRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileBitmapRequestedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs;
      end record;
   type MapTileBitmapRequestedEventArgs_Ptr is access all MapTileBitmapRequestedEventArgs;

   type MapTileSource is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileSource : access Windows.UI.Xaml.Controls.Maps.IMapTileSource;
      end record;
   type MapTileSource_Ptr is access all MapTileSource;

   type MapTileUriRequest is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileUriRequest : access Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest;
      end record;
   type MapTileUriRequest_Ptr is access all MapTileUriRequest;

   type MapTileUriRequestDeferral is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileUriRequestDeferral : access Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral;
      end record;
   type MapTileUriRequestDeferral_Ptr is access all MapTileUriRequestDeferral;

   type MapTileUriRequestedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IMapTileUriRequestedEventArgs : access Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs;
      end record;
   type MapTileUriRequestedEventArgs_Ptr is access all MapTileUriRequestedEventArgs;

   type StreetsideExperience is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreetsideExperience : access Windows.UI.Xaml.Controls.Maps.IStreetsideExperience;
      end record;
   type StreetsideExperience_Ptr is access all StreetsideExperience;

   type StreetsidePanorama is new Ada.Finalization.Limited_Controlled with
      record
         m_IStreetsidePanorama : access Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama;
      end record;
   type StreetsidePanorama_Ptr is access all StreetsidePanorama;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type MapAnimationKind is (
      Default_e,
      None_e,
      Linear_e,
      Bow_e
   );
   for MapAnimationKind use (
      Default_e => 0,
      None_e => 1,
      Linear_e => 2,
      Bow_e => 3
   );
   type MapAnimationKind_Ptr is access all MapAnimationKind;

   type MapCameraChangeReason is (
      System_e,
      UserInteraction_e,
      Programmatic_e
   );
   for MapCameraChangeReason use (
      System_e => 0,
      UserInteraction_e => 1,
      Programmatic_e => 2
   );
   type MapCameraChangeReason_Ptr is access all MapCameraChangeReason;

   type MapColorScheme is (
      Light_e,
      Dark_e
   );
   for MapColorScheme use (
      Light_e => 0,
      Dark_e => 1
   );
   type MapColorScheme_Ptr is access all MapColorScheme;

   type MapElementCollisionBehavior is (
      Hide_e,
      RemainVisible_e
   );
   for MapElementCollisionBehavior use (
      Hide_e => 0,
      RemainVisible_e => 1
   );
   type MapElementCollisionBehavior_Ptr is access all MapElementCollisionBehavior;

   type MapInteractionMode is (
      Auto_e,
      Disabled_e,
      GestureOnly_e,
      ControlOnly_e,
      GestureAndControl_e,
      PointerOnly_e
   );
   for MapInteractionMode use (
      Auto_e => 0,
      Disabled_e => 1,
      GestureOnly_e => 2,
      ControlOnly_e => 3,
      GestureAndControl_e => 4,
      PointerOnly_e => 5
   );
   type MapInteractionMode_Ptr is access all MapInteractionMode;

   type MapLoadingStatus is (
      Loading_e,
      Loaded_e,
      DataUnavailable_e,
      DownloadedMapsManagerUnavailable_e
   );
   for MapLoadingStatus use (
      Loading_e => 0,
      Loaded_e => 1,
      DataUnavailable_e => 2,
      DownloadedMapsManagerUnavailable_e => 3
   );
   type MapLoadingStatus_Ptr is access all MapLoadingStatus;

   type MapModel3DShadingOption is (
      Default_e,
      Flat_e,
      Smooth_e
   );
   for MapModel3DShadingOption use (
      Default_e => 0,
      Flat_e => 1,
      Smooth_e => 2
   );
   type MapModel3DShadingOption_Ptr is access all MapModel3DShadingOption;

   type MapPanInteractionMode is (
      Auto_e,
      Disabled_e
   );
   for MapPanInteractionMode use (
      Auto_e => 0,
      Disabled_e => 1
   );
   type MapPanInteractionMode_Ptr is access all MapPanInteractionMode;

   type MapProjection is (
      WebMercator_e,
      Globe_e
   );
   for MapProjection use (
      WebMercator_e => 0,
      Globe_e => 1
   );
   type MapProjection_Ptr is access all MapProjection;

   type MapStyle is (
      None_e,
      Road_e,
      Aerial_e,
      AerialWithRoads_e,
      Terrain_e,
      Aerial3D_e,
      Aerial3DWithRoads_e,
      Custom_e
   );
   for MapStyle use (
      None_e => 0,
      Road_e => 1,
      Aerial_e => 2,
      AerialWithRoads_e => 3,
      Terrain_e => 4,
      Aerial3D_e => 5,
      Aerial3DWithRoads_e => 6,
      Custom_e => 7
   );
   type MapStyle_Ptr is access all MapStyle;

   type MapTileAnimationState is (
      Stopped_e,
      Paused_e,
      Playing_e
   );
   for MapTileAnimationState use (
      Stopped_e => 0,
      Paused_e => 1,
      Playing_e => 2
   );
   type MapTileAnimationState_Ptr is access all MapTileAnimationState;

   type MapTileLayer is (
      LabelOverlay_e,
      RoadOverlay_e,
      AreaOverlay_e,
      BackgroundOverlay_e,
      BackgroundReplacement_e
   );
   for MapTileLayer use (
      LabelOverlay_e => 0,
      RoadOverlay_e => 1,
      AreaOverlay_e => 2,
      BackgroundOverlay_e => 3,
      BackgroundReplacement_e => 4
   );
   type MapTileLayer_Ptr is access all MapTileLayer;

   type MapVisibleRegionKind is (
      Near_e,
      Full_e
   );
   for MapVisibleRegionKind use (
      Near_e => 0,
      Full_e => 1
   );
   type MapVisibleRegionKind_Ptr is access all MapVisibleRegionKind;

   type MapWatermarkMode is (
      Automatic_e,
      On_e
   );
   for MapWatermarkMode use (
      Automatic_e => 0,
      On_e => 1
   );
   type MapWatermarkMode_Ptr is access all MapWatermarkMode;

   -----------------------------------------------------------------------------
   -- Record declarations
   -----------------------------------------------------------------------------

   type MapZoomLevelRange is record
      Min : WinRt.Double;
      Max : WinRt.Double;
   end record with Convention => C_Pass_By_Copy;
   type MapZoomLevelRange_Ptr is access all MapZoomLevelRange;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IMap_HString_HString is new WinRt.Windows.Foundation.Collections.IMap (WinRt.HString, WinRt.HString);
   IID_IMap_HString_HString : aliased WinRt.IID := (3225661769, 38971, 22137, (163, 74, 102, 195, 93, 179, 217, 30 ));
   function QInterface_IMap_HString_HString is new Generic_QueryInterface (GenericObject_Interface, IMap_HString_HString.Kind, IID_IMap_HString_HString'Access);

   package IVectorView_IMapElement is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.UI.Xaml.Controls.Maps.IMapElement);
   IID_IVectorView_IMapElement : aliased WinRt.IID := (2491767794, 61226, 21594, (186, 192, 212, 107, 159, 139, 49, 78 ));
   function QInterface_IVectorView_IMapElement is new Generic_QueryInterface (GenericObject_Interface, IVectorView_IMapElement.Kind, IID_IVectorView_IMapElement'Access);

   package IVector_IDependencyObject is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.UI.Xaml.IDependencyObject);
   IID_IVector_IDependencyObject : aliased WinRt.IID := (1839491468, 34305, 24195, (173, 98, 29, 227, 147, 0, 120, 85 ));
   function QInterface_IVector_IDependencyObject is new Generic_QueryInterface (GenericObject_Interface, IVector_IDependencyObject.Kind, IID_IVector_IDependencyObject'Access);

   package IVector_IMapElement is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.UI.Xaml.Controls.Maps.IMapElement);
   IID_IVector_IMapElement : aliased WinRt.IID := (1839491468, 34305, 24195, (173, 98, 29, 227, 147, 0, 120, 85 ));
   function QInterface_IVector_IMapElement is new Generic_QueryInterface (GenericObject_Interface, IVector_IMapElement.Kind, IID_IVector_IMapElement'Access);

   package IVector_IMapRouteView is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.UI.Xaml.Controls.Maps.IMapRouteView);
   IID_IVector_IMapRouteView : aliased WinRt.IID := (1839491468, 34305, 24195, (173, 98, 29, 227, 147, 0, 120, 85 ));
   function QInterface_IVector_IMapRouteView is new Generic_QueryInterface (GenericObject_Interface, IVector_IMapRouteView.Kind, IID_IVector_IMapRouteView'Access);

   package IVector_IMapTileSource is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.UI.Xaml.Controls.Maps.IMapTileSource);
   IID_IVector_IMapTileSource : aliased WinRt.IID := (1839491468, 34305, 24195, (173, 98, 29, 227, 147, 0, 120, 85 ));
   function QInterface_IVector_IMapTileSource is new Generic_QueryInterface (GenericObject_Interface, IVector_IMapTileSource.Kind, IID_IVector_IMapTileSource'Access);

   package IVector_IMapLayer is new WinRt.Windows.Foundation.Collections.IVector (WinRt.Windows.UI.Xaml.Controls.Maps.IMapLayer);
   IID_IVector_IMapLayer : aliased WinRt.IID := (166809831, 31838, 24169, (169, 226, 203, 225, 210, 130, 190, 181 ));
   function QInterface_IVector_IMapLayer is new Generic_QueryInterface (GenericObject_Interface, IVector_IMapLayer.Kind, IID_IVector_IMapLayer'Access);

   package IMapView_HString_IInspectable is new WinRt.Windows.Foundation.Collections.IMapView (WinRt.HString, WinRt.IInspectable);
   IID_IMapView_HString_IInspectable : aliased WinRt.IID := (1784560815, 57128, 20664, (180, 47, 126, 189, 59, 106, 6, 90 ));
   function QInterface_IMapView_HString_IInspectable is new Generic_QueryInterface (GenericObject_Interface, IMapView_HString_IInspectable.Kind, IID_IMapView_HString_IInspectable'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ICustomMapTileDataSource is interface and WinRt.IInspectable;

      function add_BitmapRequested
      (
         this : access ICustomMapTileDataSource_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BitmapRequested
      (
         this : access ICustomMapTileDataSource_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ICustomMapTileDataSource : aliased WinRt.IID := (1708800074, 11697, 19425, (177, 85, 61, 12, 158, 207, 71, 153 ));

   -----------------------------------------------------------------------------
   -- type ICustomMapTileDataSourceFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access ICustomMapTileDataSourceFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      IID_ICustomMapTileDataSourceFactory : aliased WinRt.IID := (3360127303, 51541, 20258, (148, 68, 161, 216, 215, 68, 175, 17 ));

   -----------------------------------------------------------------------------
   -- type IHttpMapTileDataSource is interface and WinRt.IInspectable;

      function get_UriFormatString
      (
         this : access IHttpMapTileDataSource_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_UriFormatString
      (
         this : access IHttpMapTileDataSource_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AdditionalRequestHeaders
      (
         this : access IHttpMapTileDataSource_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_AllowCaching
      (
         this : access IHttpMapTileDataSource_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AllowCaching
      (
         this : access IHttpMapTileDataSource_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function add_UriRequested
      (
         this : access IHttpMapTileDataSource_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_UriRequested
      (
         this : access IHttpMapTileDataSource_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IHttpMapTileDataSource : aliased WinRt.IID := (2634271580, 64889, 18325, (135, 190, 126, 84, 202, 11, 55, 208 ));

   -----------------------------------------------------------------------------
   -- type IHttpMapTileDataSourceFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IHttpMapTileDataSourceFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithUriFormatString
      (
         this : access IHttpMapTileDataSourceFactory_Interface;
         uriFormatString : WinRt.HString;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      IID_IHttpMapTileDataSourceFactory : aliased WinRt.IID := (1404350727, 34012, 17041, (137, 248, 109, 11, 182, 18, 160, 85 ));

   -----------------------------------------------------------------------------
   -- type ILocalMapTileDataSource is interface and WinRt.IInspectable;

      function get_UriFormatString
      (
         this : access ILocalMapTileDataSource_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_UriFormatString
      (
         this : access ILocalMapTileDataSource_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function add_UriRequested
      (
         this : access ILocalMapTileDataSource_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_UriRequested
      (
         this : access ILocalMapTileDataSource_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ILocalMapTileDataSource : aliased WinRt.IID := (1633834933, 37128, 20242, (139, 244, 187, 60, 143, 98, 116, 229 ));

   -----------------------------------------------------------------------------
   -- type ILocalMapTileDataSourceFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access ILocalMapTileDataSourceFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithUriFormatString
      (
         this : access ILocalMapTileDataSourceFactory_Interface;
         uriFormatString : WinRt.HString;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      IID_ILocalMapTileDataSourceFactory : aliased WinRt.IID := (3318737404, 29356, 18489, (138, 13, 1, 31, 36, 105, 60, 121 ));

   -----------------------------------------------------------------------------
   -- type IMapActualCameraChangedEventArgs is interface and WinRt.IInspectable;

      function get_Camera
      (
         this : access IMapActualCameraChangedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      IID_IMapActualCameraChangedEventArgs : aliased WinRt.IID := (3667951834, 47092, 16940, (166, 24, 187, 170, 124, 29, 129, 76 ));

   -----------------------------------------------------------------------------
   -- type IMapActualCameraChangedEventArgs2 is interface and WinRt.IInspectable;

      function get_ChangeReason
      (
         this : access IMapActualCameraChangedEventArgs2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason
      )
      return WinRt.Hresult is abstract;

      IID_IMapActualCameraChangedEventArgs2 : aliased WinRt.IID := (2074396645, 4316, 17754, (157, 4, 29, 114, 251, 109, 155, 147 ));

   -----------------------------------------------------------------------------
   -- type IMapActualCameraChangingEventArgs is interface and WinRt.IInspectable;

      function get_Camera
      (
         this : access IMapActualCameraChangingEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      IID_IMapActualCameraChangingEventArgs : aliased WinRt.IID := (1796062934, 37879, 18050, (141, 229, 164, 122, 28, 199, 169, 69 ));

   -----------------------------------------------------------------------------
   -- type IMapActualCameraChangingEventArgs2 is interface and WinRt.IInspectable;

      function get_ChangeReason
      (
         this : access IMapActualCameraChangingEventArgs2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason
      )
      return WinRt.Hresult is abstract;

      IID_IMapActualCameraChangingEventArgs2 : aliased WinRt.IID := (4068898967, 16556, 20106, (169, 39, 81, 15, 56, 70, 164, 126 ));

   -----------------------------------------------------------------------------
   -- type IMapBillboard is interface and WinRt.IInspectable;

      function get_Location
      (
         this : access IMapBillboard_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function put_Location
      (
         this : access IMapBillboard_Interface;
         value : Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_NormalizedAnchorPoint
      (
         this : access IMapBillboard_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function put_NormalizedAnchorPoint
      (
         this : access IMapBillboard_Interface;
         value : Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Image
      (
         this : access IMapBillboard_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      function put_Image
      (
         this : access IMapBillboard_Interface;
         value : Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      function get_CollisionBehaviorDesired
      (
         this : access IMapBillboard_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
      )
      return WinRt.Hresult is abstract;

      function put_CollisionBehaviorDesired
      (
         this : access IMapBillboard_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
      )
      return WinRt.Hresult is abstract;

      function get_ReferenceCamera
      (
         this : access IMapBillboard_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      IID_IMapBillboard : aliased WinRt.IID := (378807709, 2786, 20290, (160, 46, 41, 44, 168, 53, 211, 157 ));

   -----------------------------------------------------------------------------
   -- type IMapBillboardFactory is interface and WinRt.IInspectable;

      function CreateInstanceFromCamera
      (
         this : access IMapBillboardFactory_Interface;
         camera : Windows.UI.Xaml.Controls.Maps.IMapCamera;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapBillboard
      )
      return WinRt.Hresult is abstract;

      IID_IMapBillboardFactory : aliased WinRt.IID := (3192235205, 36617, 19334, (174, 40, 120, 55, 64, 235, 139, 49 ));

   -----------------------------------------------------------------------------
   -- type IMapBillboardStatics is interface and WinRt.IInspectable;

      function get_LocationProperty
      (
         this : access IMapBillboardStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_NormalizedAnchorPointProperty
      (
         this : access IMapBillboardStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_CollisionBehaviorDesiredProperty
      (
         this : access IMapBillboardStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapBillboardStatics : aliased WinRt.IID := (4260903422, 57847, 20400, (136, 135, 125, 166, 140, 100, 115, 51 ));

   -----------------------------------------------------------------------------
   -- type IMapCamera is interface and WinRt.IInspectable;

      function get_Location
      (
         this : access IMapCamera_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function put_Location
      (
         this : access IMapCamera_Interface;
         value : Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_Heading
      (
         this : access IMapCamera_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Heading
      (
         this : access IMapCamera_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Pitch
      (
         this : access IMapCamera_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Pitch
      (
         this : access IMapCamera_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Roll
      (
         this : access IMapCamera_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Roll
      (
         this : access IMapCamera_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_FieldOfView
      (
         this : access IMapCamera_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_FieldOfView
      (
         this : access IMapCamera_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      IID_IMapCamera : aliased WinRt.IID := (1403434531, 49400, 19851, (173, 30, 165, 149, 152, 234, 132, 11 ));

   -----------------------------------------------------------------------------
   -- type IMapCameraFactory is interface and WinRt.IInspectable;

      function CreateInstanceWithLocation
      (
         this : access IMapCameraFactory_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithLocationAndHeading
      (
         this : access IMapCameraFactory_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         headingInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithLocationHeadingAndPitch
      (
         this : access IMapCameraFactory_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithLocationHeadingPitchRollAndFieldOfView
      (
         this : access IMapCameraFactory_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         rollInDegrees : WinRt.Double;
         fieldOfViewInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      IID_IMapCameraFactory : aliased WinRt.IID := (3929739030, 33711, 19150, (142, 113, 16, 173, 159, 30, 158, 127 ));

   -----------------------------------------------------------------------------
   -- type IMapContextRequestedEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapContextRequestedEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapContextRequestedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElements
      (
         this : access IMapContextRequestedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapContextRequestedEventArgs : aliased WinRt.IID := (4258378787, 51553, 19954, (187, 87, 130, 238, 15, 11, 181, 145 ));

   -----------------------------------------------------------------------------
   -- type IMapControl is interface and WinRt.IInspectable;

      function get_Center
      (
         this : access IMapControl_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function put_Center
      (
         this : access IMapControl_Interface;
         value : Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_Children
      (
         this : access IMapControl_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ColorScheme
      (
         this : access IMapControl_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapColorScheme
      )
      return WinRt.Hresult is abstract;

      function put_ColorScheme
      (
         this : access IMapControl_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapColorScheme
      )
      return WinRt.Hresult is abstract;

      function get_DesiredPitch
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_DesiredPitch
      (
         this : access IMapControl_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Heading
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Heading
      (
         this : access IMapControl_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_LandmarksVisible
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_LandmarksVisible
      (
         this : access IMapControl_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_LoadingStatus
      (
         this : access IMapControl_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapLoadingStatus
      )
      return WinRt.Hresult is abstract;

      function get_MapServiceToken
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_MapServiceToken
      (
         this : access IMapControl_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MaxZoomLevel
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_MinZoomLevel
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_PedestrianFeaturesVisible
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_PedestrianFeaturesVisible
      (
         this : access IMapControl_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Pitch
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Style
      (
         this : access IMapControl_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapStyle
      )
      return WinRt.Hresult is abstract;

      function put_Style
      (
         this : access IMapControl_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapStyle
      )
      return WinRt.Hresult is abstract;

      function get_TrafficFlowVisible
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_TrafficFlowVisible
      (
         this : access IMapControl_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_TransformOrigin
      (
         this : access IMapControl_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function put_TransformOrigin
      (
         this : access IMapControl_Interface;
         value : Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_WatermarkMode
      (
         this : access IMapControl_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapWatermarkMode
      )
      return WinRt.Hresult is abstract;

      function put_WatermarkMode
      (
         this : access IMapControl_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapWatermarkMode
      )
      return WinRt.Hresult is abstract;

      function get_ZoomLevel
      (
         this : access IMapControl_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_ZoomLevel
      (
         this : access IMapControl_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_MapElements
      (
         this : access IMapControl_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_Routes
      (
         this : access IMapControl_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_TileSources
      (
         this : access IMapControl_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_CenterChanged
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_CenterChanged
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_HeadingChanged
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_HeadingChanged
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_LoadingStatusChanged
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_LoadingStatusChanged
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapDoubleTapped
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapDoubleTapped
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapHolding
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapHolding
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapTapped
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapTapped
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_PitchChanged
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_PitchChanged
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TransformOriginChanged
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TransformOriginChanged
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ZoomLevelChanged
      (
         this : access IMapControl_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ZoomLevelChanged
      (
         this : access IMapControl_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function FindMapElementsAtOffset
      (
         this : access IMapControl_Interface;
         offset : Windows.Foundation.Point;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetLocationFromOffset
      (
         this : access IMapControl_Interface;
         offset : Windows.Foundation.Point;
         location : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function GetOffsetFromLocation
      (
         this : access IMapControl_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         offset : Windows.Foundation.Point_Ptr
      )
      return WinRt.Hresult is abstract;

      function IsLocationInView
      (
         this : access IMapControl_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         isInView : WinRt.Boolean_Ptr
      )
      return WinRt.Hresult is abstract;

      function TrySetViewBoundsAsync
      (
         this : access IMapControl_Interface;
         bounds : Windows.Devices.Geolocation.IGeoboundingBox;
         margin : GenericObject;
         animation : Windows.UI.Xaml.Controls.Maps.MapAnimationKind;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetViewAsync
      (
         this : access IMapControl_Interface;
         center : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetViewAsync
      (
         this : access IMapControl_Interface;
         center : Windows.Devices.Geolocation.IGeopoint;
         zoomLevel : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetViewAsync
      (
         this : access IMapControl_Interface;
         center : Windows.Devices.Geolocation.IGeopoint;
         zoomLevel : GenericObject;
         heading : GenericObject;
         desiredPitch : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetViewAsync
      (
         this : access IMapControl_Interface;
         center : Windows.Devices.Geolocation.IGeopoint;
         zoomLevel : GenericObject;
         heading : GenericObject;
         desiredPitch : GenericObject;
         animation : Windows.UI.Xaml.Controls.Maps.MapAnimationKind;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl : aliased WinRt.IID := (1120974929, 21078, 18247, (158, 108, 13, 17, 233, 102, 20, 30 ));

   -----------------------------------------------------------------------------
   -- type IMapControl2 is interface and WinRt.IInspectable;

      function get_BusinessLandmarksVisible
      (
         this : access IMapControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_BusinessLandmarksVisible
      (
         this : access IMapControl2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_TransitFeaturesVisible
      (
         this : access IMapControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_TransitFeaturesVisible
      (
         this : access IMapControl2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_PanInteractionMode
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode
      )
      return WinRt.Hresult is abstract;

      function put_PanInteractionMode
      (
         this : access IMapControl2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode
      )
      return WinRt.Hresult is abstract;

      function get_RotateInteractionMode
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapInteractionMode
      )
      return WinRt.Hresult is abstract;

      function put_RotateInteractionMode
      (
         this : access IMapControl2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapInteractionMode
      )
      return WinRt.Hresult is abstract;

      function get_TiltInteractionMode
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapInteractionMode
      )
      return WinRt.Hresult is abstract;

      function put_TiltInteractionMode
      (
         this : access IMapControl2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapInteractionMode
      )
      return WinRt.Hresult is abstract;

      function get_ZoomInteractionMode
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapInteractionMode
      )
      return WinRt.Hresult is abstract;

      function put_ZoomInteractionMode
      (
         this : access IMapControl2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapInteractionMode
      )
      return WinRt.Hresult is abstract;

      function get_Is3DSupported
      (
         this : access IMapControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsStreetsideSupported
      (
         this : access IMapControl2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_Scene
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function put_Scene
      (
         this : access IMapControl2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function get_ActualCamera
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      function get_TargetCamera
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      function get_CustomExperience
      (
         this : access IMapControl2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
      )
      return WinRt.Hresult is abstract;

      function put_CustomExperience
      (
         this : access IMapControl2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
      )
      return WinRt.Hresult is abstract;

      function add_MapElementClick
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapElementClick
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapElementPointerEntered
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapElementPointerEntered
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapElementPointerExited
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapElementPointerExited
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ActualCameraChanged
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ActualCameraChanged
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_ActualCameraChanging
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_ActualCameraChanging
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TargetCameraChanged
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TargetCameraChanged
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_CustomExperienceChanged
      (
         this : access IMapControl2_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_CustomExperienceChanged
      (
         this : access IMapControl2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function StartContinuousRotate
      (
         this : access IMapControl2_Interface;
         rateInDegreesPerSecond : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function StopContinuousRotate
      (
         this : access IMapControl2_Interface
      )
      return WinRt.Hresult is abstract;

      function StartContinuousTilt
      (
         this : access IMapControl2_Interface;
         rateInDegreesPerSecond : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function StopContinuousTilt
      (
         this : access IMapControl2_Interface
      )
      return WinRt.Hresult is abstract;

      function StartContinuousZoom
      (
         this : access IMapControl2_Interface;
         rateOfChangePerSecond : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function StopContinuousZoom
      (
         this : access IMapControl2_Interface
      )
      return WinRt.Hresult is abstract;

      function TryRotateAsync
      (
         this : access IMapControl2_Interface;
         degrees : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryRotateToAsync
      (
         this : access IMapControl2_Interface;
         angleInDegrees : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryTiltAsync
      (
         this : access IMapControl2_Interface;
         degrees : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryTiltToAsync
      (
         this : access IMapControl2_Interface;
         angleInDegrees : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryZoomInAsync
      (
         this : access IMapControl2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryZoomOutAsync
      (
         this : access IMapControl2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryZoomToAsync
      (
         this : access IMapControl2_Interface;
         zoomLevel : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetSceneAsync
      (
         this : access IMapControl2_Interface;
         scene : Windows.UI.Xaml.Controls.Maps.IMapScene;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TrySetSceneAsync
      (
         this : access IMapControl2_Interface;
         scene : Windows.UI.Xaml.Controls.Maps.IMapScene;
         animationKind : Windows.UI.Xaml.Controls.Maps.MapAnimationKind;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl2 : aliased WinRt.IID := (3791479885, 38636, 16485, (176, 240, 117, 40, 29, 163, 101, 77 ));

   -----------------------------------------------------------------------------
   -- type IMapControl3 is interface and WinRt.IInspectable;

      function add_MapRightTapped
      (
         this : access IMapControl3_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapRightTapped
      (
         this : access IMapControl3_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl3 : aliased WinRt.IID := (1482893560, 36061, 16558, (147, 56, 175, 42, 123, 232, 69, 229 ));

   -----------------------------------------------------------------------------
   -- type IMapControl4 is interface and WinRt.IInspectable;

      function get_BusinessLandmarksEnabled
      (
         this : access IMapControl4_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_BusinessLandmarksEnabled
      (
         this : access IMapControl4_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_TransitFeaturesEnabled
      (
         this : access IMapControl4_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_TransitFeaturesEnabled
      (
         this : access IMapControl4_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function GetVisibleRegion
      (
         this : access IMapControl4_Interface;
         region : Windows.UI.Xaml.Controls.Maps.MapVisibleRegionKind;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl4 : aliased WinRt.IID := (110039850, 6167, 18029, (183, 206, 65, 155, 63, 142, 36, 139 ));

   -----------------------------------------------------------------------------
   -- type IMapControl5 is interface and WinRt.IInspectable;

      function get_MapProjection
      (
         this : access IMapControl5_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapProjection
      )
      return WinRt.Hresult is abstract;

      function put_MapProjection
      (
         this : access IMapControl5_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapProjection
      )
      return WinRt.Hresult is abstract;

      function get_StyleSheet
      (
         this : access IMapControl5_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function put_StyleSheet
      (
         this : access IMapControl5_Interface;
         value : Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function get_ViewPadding
      (
         this : access IMapControl5_Interface;
         RetVal : access Windows.UI.Xaml.Thickness
      )
      return WinRt.Hresult is abstract;

      function put_ViewPadding
      (
         this : access IMapControl5_Interface;
         value : Windows.UI.Xaml.Thickness
      )
      return WinRt.Hresult is abstract;

      function add_MapContextRequested
      (
         this : access IMapControl5_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapContextRequested
      (
         this : access IMapControl5_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function FindMapElementsAtOffset
      (
         this : access IMapControl5_Interface;
         offset : Windows.Foundation.Point;
         radius : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function GetLocationFromOffset
      (
         this : access IMapControl5_Interface;
         offset : Windows.Foundation.Point;
         desiredReferenceSystem : Windows.Devices.Geolocation.AltitudeReferenceSystem;
         location : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function StartContinuousPan
      (
         this : access IMapControl5_Interface;
         horizontalPixelsPerSecond : WinRt.Double;
         verticalPixelsPerSecond : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function StopContinuousPan
      (
         this : access IMapControl5_Interface
      )
      return WinRt.Hresult is abstract;

      function TryPanAsync
      (
         this : access IMapControl5_Interface;
         horizontalPixels : WinRt.Double;
         verticalPixels : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryPanToAsync
      (
         this : access IMapControl5_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl5 : aliased WinRt.IID := (3717926909, 30755, 18082, (130, 201, 101, 221, 172, 79, 54, 95 ));

   -----------------------------------------------------------------------------
   -- type IMapControl6 is interface and WinRt.IInspectable;

      function get_Layers
      (
         this : access IMapControl6_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_Layers
      (
         this : access IMapControl6_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function TryGetLocationFromOffset
      (
         this : access IMapControl6_Interface;
         offset : Windows.Foundation.Point;
         location : access Windows.Devices.Geolocation.IGeopoint;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function TryGetLocationFromOffset
      (
         this : access IMapControl6_Interface;
         offset : Windows.Foundation.Point;
         desiredReferenceSystem : Windows.Devices.Geolocation.AltitudeReferenceSystem;
         location : access Windows.Devices.Geolocation.IGeopoint;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl6 : aliased WinRt.IID := (2967112098, 4161, 19434, (184, 138, 18, 172, 154, 130, 224, 226 ));

   -----------------------------------------------------------------------------
   -- type IMapControl7 is interface and WinRt.IInspectable;

      function get_Region
      (
         this : access IMapControl7_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Region
      (
         this : access IMapControl7_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl7 : aliased WinRt.IID := (226944083, 3103, 20350, (174, 102, 74, 208, 180, 152, 120, 87 ));

   -----------------------------------------------------------------------------
   -- type IMapControl8 is interface and WinRt.IInspectable;

      function get_CanTiltDown
      (
         this : access IMapControl8_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanTiltUp
      (
         this : access IMapControl8_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanZoomIn
      (
         this : access IMapControl8_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CanZoomOut
      (
         this : access IMapControl8_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapControl8 : aliased WinRt.IID := (10394694, 29261, 21450, (148, 33, 122, 72, 252, 115, 21, 35 ));

   -----------------------------------------------------------------------------
   -- type IMapControlBusinessLandmarkClickEventArgs is interface and WinRt.IInspectable;

      function get_LocalLocations
      (
         this : access IMapControlBusinessLandmarkClickEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlBusinessLandmarkClickEventArgs : aliased WinRt.IID := (1581664546, 18970, 18327, (190, 183, 92, 247, 117, 76, 184, 103 ));

   -----------------------------------------------------------------------------
   -- type IMapControlBusinessLandmarkPointerEnteredEventArgs is interface and WinRt.IInspectable;

      function get_LocalLocations
      (
         this : access IMapControlBusinessLandmarkPointerEnteredEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlBusinessLandmarkPointerEnteredEventArgs : aliased WinRt.IID := (1581285798, 60056, 20373, (140, 175, 91, 66, 105, 111, 245, 4 ));

   -----------------------------------------------------------------------------
   -- type IMapControlBusinessLandmarkPointerExitedEventArgs is interface and WinRt.IInspectable;

      function get_LocalLocations
      (
         this : access IMapControlBusinessLandmarkPointerExitedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlBusinessLandmarkPointerExitedEventArgs : aliased WinRt.IID := (733293743, 62026, 18128, (180, 99, 101, 247, 25, 115, 16, 87 ));

   -----------------------------------------------------------------------------
   -- type IMapControlBusinessLandmarkRightTappedEventArgs is interface and WinRt.IInspectable;

      function get_LocalLocations
      (
         this : access IMapControlBusinessLandmarkRightTappedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlBusinessLandmarkRightTappedEventArgs : aliased WinRt.IID := (1504414439, 61828, 19121, (176, 176, 53, 200, 191, 6, 84, 178 ));

   -----------------------------------------------------------------------------
   -- type IMapControlDataHelper is interface and WinRt.IInspectable;

      function add_BusinessLandmarkClick
      (
         this : access IMapControlDataHelper_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BusinessLandmarkClick
      (
         this : access IMapControlDataHelper_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TransitFeatureClick
      (
         this : access IMapControlDataHelper_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TransitFeatureClick
      (
         this : access IMapControlDataHelper_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_BusinessLandmarkRightTapped
      (
         this : access IMapControlDataHelper_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BusinessLandmarkRightTapped
      (
         this : access IMapControlDataHelper_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TransitFeatureRightTapped
      (
         this : access IMapControlDataHelper_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TransitFeatureRightTapped
      (
         this : access IMapControlDataHelper_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlDataHelper : aliased WinRt.IID := (2343628956, 5291, 18540, (157, 229, 90, 93, 239, 2, 5, 162 ));

   -----------------------------------------------------------------------------
   -- type IMapControlDataHelper2 is interface and WinRt.IInspectable;

      function add_BusinessLandmarkPointerEntered
      (
         this : access IMapControlDataHelper2_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BusinessLandmarkPointerEntered
      (
         this : access IMapControlDataHelper2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TransitFeaturePointerEntered
      (
         this : access IMapControlDataHelper2_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TransitFeaturePointerEntered
      (
         this : access IMapControlDataHelper2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_BusinessLandmarkPointerExited
      (
         this : access IMapControlDataHelper2_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BusinessLandmarkPointerExited
      (
         this : access IMapControlDataHelper2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_TransitFeaturePointerExited
      (
         this : access IMapControlDataHelper2_Interface;
         value : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TransitFeaturePointerExited
      (
         this : access IMapControlDataHelper2_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlDataHelper2 : aliased WinRt.IID := (1506689694, 22063, 19489, (166, 116, 15, 17, 222, 207, 15, 179 ));

   -----------------------------------------------------------------------------
   -- type IMapControlDataHelperFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapControlDataHelperFactory_Interface;
         map : Windows.UI.Xaml.Controls.Maps.IMapControl;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlDataHelperFactory : aliased WinRt.IID := (997239438, 751, 18076, (187, 175, 220, 33, 88, 212, 40, 155 ));

   -----------------------------------------------------------------------------
   -- type IMapControlDataHelperStatics is interface and WinRt.IInspectable;

      function CreateMapControl
      (
         this : access IMapControlDataHelperStatics_Interface;
         rasterRenderMode : WinRt.Boolean;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapControl
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlDataHelperStatics : aliased WinRt.IID := (2053518038, 59716, 16656, (131, 207, 49, 77, 7, 34, 226, 229 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics is interface and WinRt.IInspectable;

      function get_CenterProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ChildrenProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ColorSchemeProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_DesiredPitchProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_HeadingProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_LandmarksVisibleProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_LoadingStatusProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_MapServiceTokenProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_PedestrianFeaturesVisibleProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_PitchProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_StyleProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TrafficFlowVisibleProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TransformOriginProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_WatermarkModeProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ZoomLevelProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_MapElementsProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_RoutesProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TileSourcesProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_LocationProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function GetLocation
      (
         this : access IMapControlStatics_Interface;
         element : Windows.UI.Xaml.IDependencyObject;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function SetLocation
      (
         this : access IMapControlStatics_Interface;
         element : Windows.UI.Xaml.IDependencyObject;
         value : Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_NormalizedAnchorPointProperty
      (
         this : access IMapControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function GetNormalizedAnchorPoint
      (
         this : access IMapControlStatics_Interface;
         element : Windows.UI.Xaml.IDependencyObject;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function SetNormalizedAnchorPoint
      (
         this : access IMapControlStatics_Interface;
         element : Windows.UI.Xaml.IDependencyObject;
         value : Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics : aliased WinRt.IID := (3267762069, 8519, 20234, (148, 42, 84, 147, 168, 93, 232, 7 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics2 is interface and WinRt.IInspectable;

      function get_BusinessLandmarksVisibleProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TransitFeaturesVisibleProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_PanInteractionModeProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_RotateInteractionModeProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TiltInteractionModeProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ZoomInteractionModeProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_Is3DSupportedProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_IsStreetsideSupportedProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_SceneProperty
      (
         this : access IMapControlStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics2 : aliased WinRt.IID := (75836307, 46150, 19761, (151, 82, 30, 198, 154, 89, 150, 174 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics4 is interface and WinRt.IInspectable;

      function get_BusinessLandmarksEnabledProperty
      (
         this : access IMapControlStatics4_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TransitFeaturesEnabledProperty
      (
         this : access IMapControlStatics4_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics4 : aliased WinRt.IID := (4269301143, 23827, 20385, (191, 29, 132, 6, 23, 104, 193, 131 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics5 is interface and WinRt.IInspectable;

      function get_MapProjectionProperty
      (
         this : access IMapControlStatics5_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_StyleSheetProperty
      (
         this : access IMapControlStatics5_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ViewPaddingProperty
      (
         this : access IMapControlStatics5_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics5 : aliased WinRt.IID := (157445888, 47069, 16777, (167, 247, 131, 12, 65, 45, 238, 163 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics6 is interface and WinRt.IInspectable;

      function get_LayersProperty
      (
         this : access IMapControlStatics6_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics6 : aliased WinRt.IID := (1020255615, 9425, 16546, (131, 81, 179, 6, 58, 140, 149, 164 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics7 is interface and WinRt.IInspectable;

      function get_RegionProperty
      (
         this : access IMapControlStatics7_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics7 : aliased WinRt.IID := (1441901645, 29378, 18098, (183, 174, 121, 2, 96, 190, 100, 27 ));

   -----------------------------------------------------------------------------
   -- type IMapControlStatics8 is interface and WinRt.IInspectable;

      function get_CanTiltDownProperty
      (
         this : access IMapControlStatics8_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_CanTiltUpProperty
      (
         this : access IMapControlStatics8_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_CanZoomInProperty
      (
         this : access IMapControlStatics8_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_CanZoomOutProperty
      (
         this : access IMapControlStatics8_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlStatics8 : aliased WinRt.IID := (2914494384, 1541, 22828, (191, 157, 209, 11, 220, 43, 228, 123 ));

   -----------------------------------------------------------------------------
   -- type IMapControlTransitFeatureClickEventArgs is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IMapControlTransitFeatureClickEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapControlTransitFeatureClickEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_TransitProperties
      (
         this : access IMapControlTransitFeatureClickEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlTransitFeatureClickEventArgs : aliased WinRt.IID := (1981258089, 46949, 17954, (176, 138, 48, 114, 116, 90, 69, 65 ));

   -----------------------------------------------------------------------------
   -- type IMapControlTransitFeaturePointerEnteredEventArgs is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IMapControlTransitFeaturePointerEnteredEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapControlTransitFeaturePointerEnteredEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_TransitProperties
      (
         this : access IMapControlTransitFeaturePointerEnteredEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlTransitFeaturePointerEnteredEventArgs : aliased WinRt.IID := (1938889294, 60495, 18334, (148, 161, 54, 224, 129, 208, 216, 151 ));

   -----------------------------------------------------------------------------
   -- type IMapControlTransitFeaturePointerExitedEventArgs is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IMapControlTransitFeaturePointerExitedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapControlTransitFeaturePointerExitedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_TransitProperties
      (
         this : access IMapControlTransitFeaturePointerExitedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlTransitFeaturePointerExitedEventArgs : aliased WinRt.IID := (1779508621, 17549, 17639, (188, 105, 209, 61, 73, 113, 84, 233 ));

   -----------------------------------------------------------------------------
   -- type IMapControlTransitFeatureRightTappedEventArgs is interface and WinRt.IInspectable;

      function get_DisplayName
      (
         this : access IMapControlTransitFeatureRightTappedEventArgs_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapControlTransitFeatureRightTappedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_TransitProperties
      (
         this : access IMapControlTransitFeatureRightTappedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapControlTransitFeatureRightTappedEventArgs : aliased WinRt.IID := (2929839177, 42793, 20142, (165, 154, 62, 201, 161, 37, 160, 40 ));

   -----------------------------------------------------------------------------
   -- type IMapCustomExperience is interface and WinRt.IInspectable;

      IID_IMapCustomExperience : aliased WinRt.IID := (1683564646, 5283, 20063, (136, 131, 142, 156, 80, 14, 238, 222 ));

   -----------------------------------------------------------------------------
   -- type IMapCustomExperienceChangedEventArgs is interface and WinRt.IInspectable;

      IID_IMapCustomExperienceChangedEventArgs : aliased WinRt.IID := (3118922651, 36801, 16450, (172, 52, 166, 27, 56, 187, 117, 20 ));

   -----------------------------------------------------------------------------
   -- type IMapCustomExperienceFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapCustomExperienceFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
      )
      return WinRt.Hresult is abstract;

      IID_IMapCustomExperienceFactory : aliased WinRt.IID := (2051030965, 41393, 20095, (146, 30, 62, 107, 141, 142, 190, 214 ));

   -----------------------------------------------------------------------------
   -- type IMapElement is interface and WinRt.IInspectable;

      function get_ZIndex
      (
         this : access IMapElement_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_ZIndex
      (
         this : access IMapElement_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Visible
      (
         this : access IMapElement_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Visible
      (
         this : access IMapElement_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapElement : aliased WinRt.IID := (3592406239, 45637, 18418, (154, 194, 67, 192, 88, 177, 201, 3 ));

   -----------------------------------------------------------------------------
   -- type IMapElement2 is interface and WinRt.IInspectable;

      function get_MapTabIndex
      (
         this : access IMapElement2_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_MapTabIndex
      (
         this : access IMapElement2_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IMapElement2 : aliased WinRt.IID := (1712976481, 64422, 18788, (167, 255, 241, 175, 99, 171, 156, 176 ));

   -----------------------------------------------------------------------------
   -- type IMapElement3 is interface and WinRt.IInspectable;

      function get_MapStyleSheetEntry
      (
         this : access IMapElement3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_MapStyleSheetEntry
      (
         this : access IMapElement3_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MapStyleSheetEntryState
      (
         this : access IMapElement3_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_MapStyleSheetEntryState
      (
         this : access IMapElement3_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Tag
      (
         this : access IMapElement3_Interface;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function put_Tag
      (
         this : access IMapElement3_Interface;
         value : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      IID_IMapElement3 : aliased WinRt.IID := (334478425, 17901, 18612, (147, 173, 227, 247, 143, 140, 242, 24 ));

   -----------------------------------------------------------------------------
   -- type IMapElement3D is interface and WinRt.IInspectable;

      function get_Location
      (
         this : access IMapElement3D_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function put_Location
      (
         this : access IMapElement3D_Interface;
         value : Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_Model
      (
         this : access IMapElement3D_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapModel3D
      )
      return WinRt.Hresult is abstract;

      function put_Model
      (
         this : access IMapElement3D_Interface;
         value : Windows.UI.Xaml.Controls.Maps.IMapModel3D
      )
      return WinRt.Hresult is abstract;

      function get_Heading
      (
         this : access IMapElement3D_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Heading
      (
         this : access IMapElement3D_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Pitch
      (
         this : access IMapElement3D_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Pitch
      (
         this : access IMapElement3D_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Roll
      (
         this : access IMapElement3D_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_Roll
      (
         this : access IMapElement3D_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_Scale
      (
         this : access IMapElement3D_Interface;
         RetVal : access Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      function put_Scale
      (
         this : access IMapElement3D_Interface;
         value : Windows.Foundation.Numerics.Vector3
      )
      return WinRt.Hresult is abstract;

      IID_IMapElement3D : aliased WinRt.IID := (2189097173, 14403, 18658, (189, 0, 15, 6, 68, 251, 230, 165 ));

   -----------------------------------------------------------------------------
   -- type IMapElement3DStatics is interface and WinRt.IInspectable;

      function get_LocationProperty
      (
         this : access IMapElement3DStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_HeadingProperty
      (
         this : access IMapElement3DStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_PitchProperty
      (
         this : access IMapElement3DStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_RollProperty
      (
         this : access IMapElement3DStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ScaleProperty
      (
         this : access IMapElement3DStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapElement3DStatics : aliased WinRt.IID := (1630011674, 17679, 17450, (185, 217, 170, 129, 92, 113, 144, 122 ));

   -----------------------------------------------------------------------------
   -- type IMapElement4 is interface and WinRt.IInspectable;

      function get_IsEnabled
      (
         this : access IMapElement4_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsEnabled
      (
         this : access IMapElement4_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapElement4 : aliased WinRt.IID := (1683522486, 8129, 19691, (147, 189, 220, 44, 150, 0, 114, 233 ));

   -----------------------------------------------------------------------------
   -- type IMapElementClickEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementClickEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementClickEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElements
      (
         this : access IMapElementClickEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementClickEventArgs : aliased WinRt.IID := (1075218961, 53376, 17689, (153, 161, 49, 73, 251, 137, 153, 208 ));

   -----------------------------------------------------------------------------
   -- type IMapElementFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapElementFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapElement
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementFactory : aliased WinRt.IID := (1244712967, 3030, 18341, (134, 11, 126, 124, 245, 240, 197, 115 ));

   -----------------------------------------------------------------------------
   -- type IMapElementPointerEnteredEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementPointerEnteredEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementPointerEnteredEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElement
      (
         this : access IMapElementPointerEnteredEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapElement
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementPointerEnteredEventArgs : aliased WinRt.IID := (2877676878, 37335, 19249, (143, 10, 211, 144, 199, 211, 162, 239 ));

   -----------------------------------------------------------------------------
   -- type IMapElementPointerExitedEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementPointerExitedEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementPointerExitedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElement
      (
         this : access IMapElementPointerExitedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapElement
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementPointerExitedEventArgs : aliased WinRt.IID := (3248773881, 24777, 18041, (145, 25, 32, 171, 199, 93, 147, 31 ));

   -----------------------------------------------------------------------------
   -- type IMapElementStatics is interface and WinRt.IInspectable;

      function get_ZIndexProperty
      (
         this : access IMapElementStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_VisibleProperty
      (
         this : access IMapElementStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementStatics : aliased WinRt.IID := (3905363186, 49135, 19273, (142, 153, 65, 181, 227, 120, 159, 210 ));

   -----------------------------------------------------------------------------
   -- type IMapElementStatics2 is interface and WinRt.IInspectable;

      function get_MapTabIndexProperty
      (
         this : access IMapElementStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementStatics2 : aliased WinRt.IID := (2616667952, 33022, 20272, (188, 193, 250, 137, 64, 80, 246, 118 ));

   -----------------------------------------------------------------------------
   -- type IMapElementStatics3 is interface and WinRt.IInspectable;

      function get_MapStyleSheetEntryProperty
      (
         this : access IMapElementStatics3_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_MapStyleSheetEntryStateProperty
      (
         this : access IMapElementStatics3_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TagProperty
      (
         this : access IMapElementStatics3_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementStatics3 : aliased WinRt.IID := (3776899375, 38722, 18858, (170, 216, 46, 70, 107, 255, 55, 150 ));

   -----------------------------------------------------------------------------
   -- type IMapElementStatics4 is interface and WinRt.IInspectable;

      function get_IsEnabledProperty
      (
         this : access IMapElementStatics4_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementStatics4 : aliased WinRt.IID := (2754178827, 57336, 18044, (147, 21, 111, 109, 185, 62, 226, 186 ));

   -----------------------------------------------------------------------------
   -- type IMapElementsLayer is interface and WinRt.IInspectable;

      function get_MapElements
      (
         this : access IMapElementsLayer_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function put_MapElements
      (
         this : access IMapElementsLayer_Interface;
         value : GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_MapElementClick
      (
         this : access IMapElementsLayer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapElementClick
      (
         this : access IMapElementsLayer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapElementPointerEntered
      (
         this : access IMapElementsLayer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapElementPointerEntered
      (
         this : access IMapElementsLayer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapElementPointerExited
      (
         this : access IMapElementsLayer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapElementPointerExited
      (
         this : access IMapElementsLayer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function add_MapContextRequested
      (
         this : access IMapElementsLayer_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_MapContextRequested
      (
         this : access IMapElementsLayer_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementsLayer : aliased WinRt.IID := (3732498586, 495, 18164, (172, 96, 124, 32, 11, 85, 38, 16 ));

   -----------------------------------------------------------------------------
   -- type IMapElementsLayerClickEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementsLayerClickEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementsLayerClickEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElements
      (
         this : access IMapElementsLayerClickEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementsLayerClickEventArgs : aliased WinRt.IID := (749195110, 44827, 19461, (140, 133, 247, 74, 227, 212, 103, 127 ));

   -----------------------------------------------------------------------------
   -- type IMapElementsLayerContextRequestedEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementsLayerContextRequestedEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementsLayerContextRequestedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElements
      (
         this : access IMapElementsLayerContextRequestedEventArgs_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementsLayerContextRequestedEventArgs : aliased WinRt.IID := (3662008499, 31246, 18264, (128, 139, 58, 99, 118, 39, 235, 13 ));

   -----------------------------------------------------------------------------
   -- type IMapElementsLayerPointerEnteredEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementsLayerPointerEnteredEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementsLayerPointerEnteredEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElement
      (
         this : access IMapElementsLayerPointerEnteredEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapElement
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementsLayerPointerEnteredEventArgs : aliased WinRt.IID := (1971306546, 18068, 17412, (140, 137, 52, 139, 107, 118, 197, 230 ));

   -----------------------------------------------------------------------------
   -- type IMapElementsLayerPointerExitedEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapElementsLayerPointerExitedEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapElementsLayerPointerExitedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_MapElement
      (
         this : access IMapElementsLayerPointerExitedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapElement
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementsLayerPointerExitedEventArgs : aliased WinRt.IID := (2465449645, 1005, 19513, (175, 32, 42, 7, 238, 28, 206, 166 ));

   -----------------------------------------------------------------------------
   -- type IMapElementsLayerStatics is interface and WinRt.IInspectable;

      function get_MapElementsProperty
      (
         this : access IMapElementsLayerStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapElementsLayerStatics : aliased WinRt.IID := (872437543, 62729, 19752, (145, 128, 145, 28, 3, 65, 29, 116 ));

   -----------------------------------------------------------------------------
   -- type IMapIcon is interface and WinRt.IInspectable;

      function get_Location
      (
         this : access IMapIcon_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function put_Location
      (
         this : access IMapIcon_Interface;
         value : Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      function get_Title
      (
         this : access IMapIcon_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function put_Title
      (
         this : access IMapIcon_Interface;
         value : WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NormalizedAnchorPoint
      (
         this : access IMapIcon_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function put_NormalizedAnchorPoint
      (
         this : access IMapIcon_Interface;
         value : Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Image
      (
         this : access IMapIcon_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      function put_Image
      (
         this : access IMapIcon_Interface;
         value : Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      IID_IMapIcon : aliased WinRt.IID := (3523831922, 9177, 18987, (139, 224, 105, 243, 168, 84, 130, 171 ));

   -----------------------------------------------------------------------------
   -- type IMapIcon2 is interface and WinRt.IInspectable;

      function get_CollisionBehaviorDesired
      (
         this : access IMapIcon2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
      )
      return WinRt.Hresult is abstract;

      function put_CollisionBehaviorDesired
      (
         this : access IMapIcon2_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
      )
      return WinRt.Hresult is abstract;

      IID_IMapIcon2 : aliased WinRt.IID := (1628591289, 55466, 19389, (163, 22, 186, 223, 6, 145, 29, 99 ));

   -----------------------------------------------------------------------------
   -- type IMapIconStatics is interface and WinRt.IInspectable;

      function get_LocationProperty
      (
         this : access IMapIconStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TitleProperty
      (
         this : access IMapIconStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_NormalizedAnchorPointProperty
      (
         this : access IMapIconStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapIconStatics : aliased WinRt.IID := (3703348822, 4496, 19293, (158, 86, 229, 182, 114, 74, 163, 40 ));

   -----------------------------------------------------------------------------
   -- type IMapIconStatics2 is interface and WinRt.IInspectable;

      function get_CollisionBehaviorDesiredProperty
      (
         this : access IMapIconStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapIconStatics2 : aliased WinRt.IID := (4283183210, 53110, 18091, (161, 47, 182, 3, 185, 134, 198, 150 ));

   -----------------------------------------------------------------------------
   -- type IMapInputEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapInputEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapInputEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      IID_IMapInputEventArgs : aliased WinRt.IID := (2680488864, 43170, 17300, (146, 233, 34, 71, 118, 79, 47, 73 ));

   -----------------------------------------------------------------------------
   -- type IMapItemsControl is interface and WinRt.IInspectable;

      function get_ItemsSource
      (
         this : access IMapItemsControl_Interface;
         RetVal : access WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function put_ItemsSource
      (
         this : access IMapItemsControl_Interface;
         value : WinRt.IInspectable
      )
      return WinRt.Hresult is abstract;

      function get_Items
      (
         this : access IMapItemsControl_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_ItemTemplate
      (
         this : access IMapItemsControl_Interface;
         RetVal : access Windows.UI.Xaml.IDataTemplate
      )
      return WinRt.Hresult is abstract;

      function put_ItemTemplate
      (
         this : access IMapItemsControl_Interface;
         value : Windows.UI.Xaml.IDataTemplate
      )
      return WinRt.Hresult is abstract;

      IID_IMapItemsControl : aliased WinRt.IID := (2495792339, 45877, 17093, (182, 96, 230, 160, 126, 195, 189, 220 ));

   -----------------------------------------------------------------------------
   -- type IMapItemsControlStatics is interface and WinRt.IInspectable;

      function get_ItemsSourceProperty
      (
         this : access IMapItemsControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ItemsProperty
      (
         this : access IMapItemsControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ItemTemplateProperty
      (
         this : access IMapItemsControlStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapItemsControlStatics : aliased WinRt.IID := (866671047, 30875, 16988, (138, 10, 50, 56, 88, 150, 203, 74 ));

   -----------------------------------------------------------------------------
   -- type IMapLayer is interface and WinRt.IInspectable;

      function get_MapTabIndex
      (
         this : access IMapLayer_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_MapTabIndex
      (
         this : access IMapLayer_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Visible
      (
         this : access IMapLayer_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Visible
      (
         this : access IMapLayer_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ZIndex
      (
         this : access IMapLayer_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_ZIndex
      (
         this : access IMapLayer_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IMapLayer : aliased WinRt.IID := (1829763521, 41293, 20375, (143, 87, 70, 113, 91, 87, 104, 58 ));

   -----------------------------------------------------------------------------
   -- type IMapLayerFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapLayerFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapLayer
      )
      return WinRt.Hresult is abstract;

      IID_IMapLayerFactory : aliased WinRt.IID := (3760857607, 57059, 18376, (152, 37, 189, 2, 156, 87, 82, 247 ));

   -----------------------------------------------------------------------------
   -- type IMapLayerStatics is interface and WinRt.IInspectable;

      function get_MapTabIndexProperty
      (
         this : access IMapLayerStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_VisibleProperty
      (
         this : access IMapLayerStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ZIndexProperty
      (
         this : access IMapLayerStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapLayerStatics : aliased WinRt.IID := (2628035179, 23993, 20236, (189, 213, 177, 191, 253, 204, 233, 70 ));

   -----------------------------------------------------------------------------
   -- type IMapModel3D is interface and WinRt.IInspectable;

      IID_IMapModel3D : aliased WinRt.IID := (4173676961, 51751, 18792, (162, 191, 156, 32, 240, 106, 4, 104 ));

   -----------------------------------------------------------------------------
   -- type IMapModel3DFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapModel3DFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapModel3D
      )
      return WinRt.Hresult is abstract;

      IID_IMapModel3DFactory : aliased WinRt.IID := (3749645260, 22538, 18827, (147, 155, 1, 25, 169, 218, 219, 158 ));

   -----------------------------------------------------------------------------
   -- type IMapModel3DStatics is interface and WinRt.IInspectable;

      function CreateFrom3MFAsync
      (
         this : access IMapModel3DStatics_Interface;
         source : Windows.Storage.Streams.IRandomAccessStreamReference;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CreateFrom3MFAsync
      (
         this : access IMapModel3DStatics_Interface;
         source : Windows.Storage.Streams.IRandomAccessStreamReference;
         shadingOption : Windows.UI.Xaml.Controls.Maps.MapModel3DShadingOption;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapModel3DStatics : aliased WinRt.IID := (1211409536, 36438, 19215, (135, 45, 126, 173, 16, 49, 135, 205 ));

   -----------------------------------------------------------------------------
   -- type IMapPolygon is interface and WinRt.IInspectable;

      function get_Path
      (
         this : access IMapPolygon_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function put_Path
      (
         this : access IMapPolygon_Interface;
         value : Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function get_StrokeColor
      (
         this : access IMapPolygon_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_StrokeColor
      (
         this : access IMapPolygon_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_StrokeThickness
      (
         this : access IMapPolygon_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_StrokeThickness
      (
         this : access IMapPolygon_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashed
      (
         this : access IMapPolygon_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_StrokeDashed
      (
         this : access IMapPolygon_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_FillColor
      (
         this : access IMapPolygon_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_FillColor
      (
         this : access IMapPolygon_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      IID_IMapPolygon : aliased WinRt.IID := (2883199621, 18726, 19514, (165, 249, 25, 223, 127, 105, 219, 61 ));

   -----------------------------------------------------------------------------
   -- type IMapPolygon2 is interface and WinRt.IInspectable;

      function get_Paths
      (
         this : access IMapPolygon2_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IMapPolygon2 : aliased WinRt.IID := (2529730846, 25451, 16408, (156, 46, 172, 201, 18, 42, 1, 178 ));

   -----------------------------------------------------------------------------
   -- type IMapPolygonStatics is interface and WinRt.IInspectable;

      function get_PathProperty
      (
         this : access IMapPolygonStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_StrokeThicknessProperty
      (
         this : access IMapPolygonStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashedProperty
      (
         this : access IMapPolygonStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapPolygonStatics : aliased WinRt.IID := (938832830, 2427, 16972, (135, 204, 46, 224, 66, 253, 166, 210 ));

   -----------------------------------------------------------------------------
   -- type IMapPolyline is interface and WinRt.IInspectable;

      function get_Path
      (
         this : access IMapPolyline_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function put_Path
      (
         this : access IMapPolyline_Interface;
         value : Windows.Devices.Geolocation.IGeopath
      )
      return WinRt.Hresult is abstract;

      function get_StrokeColor
      (
         this : access IMapPolyline_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_StrokeColor
      (
         this : access IMapPolyline_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_StrokeThickness
      (
         this : access IMapPolyline_Interface;
         RetVal : access WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function put_StrokeThickness
      (
         this : access IMapPolyline_Interface;
         value : WinRt.Double
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashed
      (
         this : access IMapPolyline_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_StrokeDashed
      (
         this : access IMapPolyline_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapPolyline : aliased WinRt.IID := (4222428322, 9439, 19078, (143, 250, 15, 143, 77, 158, 193, 125 ));

   -----------------------------------------------------------------------------
   -- type IMapPolylineStatics is interface and WinRt.IInspectable;

      function get_PathProperty
      (
         this : access IMapPolylineStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_StrokeDashedProperty
      (
         this : access IMapPolylineStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapPolylineStatics : aliased WinRt.IID := (1644029003, 7647, 17155, (184, 9, 236, 135, 245, 138, 208, 101 ));

   -----------------------------------------------------------------------------
   -- type IMapRightTappedEventArgs is interface and WinRt.IInspectable;

      function get_Position
      (
         this : access IMapRightTappedEventArgs_Interface;
         RetVal : access Windows.Foundation.Point
      )
      return WinRt.Hresult is abstract;

      function get_Location
      (
         this : access IMapRightTappedEventArgs_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      IID_IMapRightTappedEventArgs : aliased WinRt.IID := (546582897, 28648, 16550, (173, 14, 41, 115, 121, 181, 117, 167 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteView is interface and WinRt.IInspectable;

      function get_RouteColor
      (
         this : access IMapRouteView_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_RouteColor
      (
         this : access IMapRouteView_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_OutlineColor
      (
         this : access IMapRouteView_Interface;
         RetVal : access Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function put_OutlineColor
      (
         this : access IMapRouteView_Interface;
         value : Windows.UI.Color
      )
      return WinRt.Hresult is abstract;

      function get_Route
      (
         this : access IMapRouteView_Interface;
         RetVal : access Windows.Services.Maps.IMapRoute
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteView : aliased WinRt.IID := (1947119301, 47820, 16865, (166, 126, 221, 101, 19, 131, 32, 73 ));

   -----------------------------------------------------------------------------
   -- type IMapRouteViewFactory is interface and WinRt.IInspectable;

      function CreateInstanceWithMapRoute
      (
         this : access IMapRouteViewFactory_Interface;
         route : Windows.Services.Maps.IMapRoute;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapRouteView
      )
      return WinRt.Hresult is abstract;

      IID_IMapRouteViewFactory : aliased WinRt.IID := (4035161567, 102, 17960, (130, 254, 234, 120, 194, 60, 236, 30 ));

   -----------------------------------------------------------------------------
   -- type IMapScene is interface and WinRt.IInspectable;

      function get_TargetCamera
      (
         this : access IMapScene_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      function add_TargetCameraChanged
      (
         this : access IMapScene_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_TargetCameraChanged
      (
         this : access IMapScene_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IMapScene : aliased WinRt.IID := (2344226985, 20711, 18476, (151, 137, 198, 136, 177, 120, 172, 36 ));

   -----------------------------------------------------------------------------
   -- type IMapSceneStatics is interface and WinRt.IInspectable;

      function CreateFromBoundingBox
      (
         this : access IMapSceneStatics_Interface;
         bounds : Windows.Devices.Geolocation.IGeoboundingBox;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromBoundingBox
      (
         this : access IMapSceneStatics_Interface;
         bounds : Windows.Devices.Geolocation.IGeoboundingBox;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromCamera
      (
         this : access IMapSceneStatics_Interface;
         camera : Windows.UI.Xaml.Controls.Maps.IMapCamera;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromLocation
      (
         this : access IMapSceneStatics_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromLocation
      (
         this : access IMapSceneStatics_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromLocationAndRadius
      (
         this : access IMapSceneStatics_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         radiusInMeters : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromLocationAndRadius
      (
         this : access IMapSceneStatics_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         radiusInMeters : WinRt.Double;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromLocations
      (
         this : access IMapSceneStatics_Interface;
         locations : GenericObject;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      function CreateFromLocations
      (
         this : access IMapSceneStatics_Interface;
         locations : GenericObject;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapScene
      )
      return WinRt.Hresult is abstract;

      IID_IMapSceneStatics : aliased WinRt.IID := (65318252, 34540, 17625, (149, 151, 251, 117, 183, 222, 186, 10 ));

   -----------------------------------------------------------------------------
   -- type IMapStyleSheet is interface and WinRt.IInspectable;

      IID_IMapStyleSheet : aliased WinRt.IID := (2924786367, 35217, 17133, (141, 88, 32, 71, 61, 238, 222, 29 ));

   -----------------------------------------------------------------------------
   -- type IMapStyleSheetEntriesStatics is interface and WinRt.IInspectable;

      function get_Area
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Airport
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Cemetery
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Continent
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Education
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_IndigenousPeoplesReserve
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Island
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Medical
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Military
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Nautical
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Neighborhood
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Runway
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Sand
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ShoppingCenter
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Stadium
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Vegetation
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Forest
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_GolfCourse
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Park
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PlayingField
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Reserve
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Point
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_NaturalPoint
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Peak
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_VolcanicPeak
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_WaterPoint
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PointOfInterest
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Business
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_FoodPoint
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_PopulatedPlace
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Capital
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AdminDistrictCapital
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CountryRegionCapital
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RoadShield
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RoadExit
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Transit
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Political
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_CountryRegion
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_AdminDistrict
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_District
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Structure
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Building
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_EducationBuilding
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MedicalBuilding
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TransitBuilding
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Transportation
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Road
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ControlledAccessHighway
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_HighSpeedRamp
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Highway
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_MajorRoad
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_ArterialRoad
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Street
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Ramp
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_UnpavedStreet
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_TollRoad
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Railway
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Trail
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_WaterRoute
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Water
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_River
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_RouteLine
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_WalkingRoute
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_DrivingRoute
      (
         this : access IMapStyleSheetEntriesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapStyleSheetEntriesStatics : aliased WinRt.IID := (3378733893, 61210, 16804, (167, 87, 189, 79, 67, 225, 228, 209 ));

   -----------------------------------------------------------------------------
   -- type IMapStyleSheetEntryStatesStatics is interface and WinRt.IInspectable;

      function get_Disabled
      (
         this : access IMapStyleSheetEntryStatesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Hover
      (
         this : access IMapStyleSheetEntryStatesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_Selected
      (
         this : access IMapStyleSheetEntryStatesStatics_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      IID_IMapStyleSheetEntryStatesStatics : aliased WinRt.IID := (598496562, 34413, 19450, (180, 129, 57, 190, 161, 222, 53, 6 ));

   -----------------------------------------------------------------------------
   -- type IMapStyleSheetStatics is interface and WinRt.IInspectable;

      function Aerial
      (
         this : access IMapStyleSheetStatics_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function AerialWithOverlay
      (
         this : access IMapStyleSheetStatics_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function RoadLight
      (
         this : access IMapStyleSheetStatics_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function RoadDark
      (
         this : access IMapStyleSheetStatics_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function RoadHighContrastLight
      (
         this : access IMapStyleSheetStatics_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function RoadHighContrastDark
      (
         this : access IMapStyleSheetStatics_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function Combine
      (
         this : access IMapStyleSheetStatics_Interface;
         styleSheets : GenericObject;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function ParseFromJson
      (
         this : access IMapStyleSheetStatics_Interface;
         styleAsJson : WinRt.HString;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
      )
      return WinRt.Hresult is abstract;

      function TryParseFromJson
      (
         this : access IMapStyleSheetStatics_Interface;
         styleAsJson : WinRt.HString;
         styleSheet : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapStyleSheetStatics : aliased WinRt.IID := (2881290413, 2588, 17205, (130, 244, 97, 217, 54, 170, 25, 125 ));

   -----------------------------------------------------------------------------
   -- type IMapTargetCameraChangedEventArgs is interface and WinRt.IInspectable;

      function get_Camera
      (
         this : access IMapTargetCameraChangedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapCamera
      )
      return WinRt.Hresult is abstract;

      IID_IMapTargetCameraChangedEventArgs : aliased WinRt.IID := (3689940082, 59731, 20392, (151, 208, 234, 134, 53, 144, 87, 207 ));

   -----------------------------------------------------------------------------
   -- type IMapTargetCameraChangedEventArgs2 is interface and WinRt.IInspectable;

      function get_ChangeReason
      (
         this : access IMapTargetCameraChangedEventArgs2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason
      )
      return WinRt.Hresult is abstract;

      IID_IMapTargetCameraChangedEventArgs2 : aliased WinRt.IID := (2545988402, 62134, 17931, (141, 145, 172, 2, 10, 35, 131, 221 ));

   -----------------------------------------------------------------------------
   -- type IMapTileBitmapRequest is interface and WinRt.IInspectable;

      function get_PixelData
      (
         this : access IMapTileBitmapRequest_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      function put_PixelData
      (
         this : access IMapTileBitmapRequest_Interface;
         value : Windows.Storage.Streams.IRandomAccessStreamReference
      )
      return WinRt.Hresult is abstract;

      function GetDeferral
      (
         this : access IMapTileBitmapRequest_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileBitmapRequest : aliased WinRt.IID := (1181958076, 55453, 18219, (181, 246, 215, 6, 107, 5, 132, 244 ));

   -----------------------------------------------------------------------------
   -- type IMapTileBitmapRequestDeferral is interface and WinRt.IInspectable;

      function Complete
      (
         this : access IMapTileBitmapRequestDeferral_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileBitmapRequestDeferral : aliased WinRt.IID := (4265018690, 42156, 20218, (150, 101, 4, 144, 176, 202, 253, 210 ));

   -----------------------------------------------------------------------------
   -- type IMapTileBitmapRequestedEventArgs is interface and WinRt.IInspectable;

      function get_X
      (
         this : access IMapTileBitmapRequestedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Y
      (
         this : access IMapTileBitmapRequestedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ZoomLevel
      (
         this : access IMapTileBitmapRequestedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Request
      (
         this : access IMapTileBitmapRequestedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileBitmapRequestedEventArgs : aliased WinRt.IID := (863987997, 39682, 19106, (139, 30, 204, 77, 145, 113, 155, 243 ));

   -----------------------------------------------------------------------------
   -- type IMapTileBitmapRequestedEventArgs2 is interface and WinRt.IInspectable;

      function get_FrameIndex
      (
         this : access IMapTileBitmapRequestedEventArgs2_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileBitmapRequestedEventArgs2 : aliased WinRt.IID := (39964948, 9322, 21142, (188, 133, 89, 15, 83, 170, 57, 200 ));

   -----------------------------------------------------------------------------
   -- type IMapTileDataSource is interface and WinRt.IInspectable;

      IID_IMapTileDataSource : aliased WinRt.IID := (3225263966, 48671, 19561, (153, 105, 121, 70, 122, 81, 60, 56 ));

   -----------------------------------------------------------------------------
   -- type IMapTileDataSourceFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapTileDataSourceFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileDataSourceFactory : aliased WinRt.IID := (2744258493, 58438, 17992, (167, 77, 253, 44, 93, 85, 124, 6 ));

   -----------------------------------------------------------------------------
   -- type IMapTileSource is interface and WinRt.IInspectable;

      function get_DataSource
      (
         this : access IMapTileSource_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      function put_DataSource
      (
         this : access IMapTileSource_Interface;
         value : Windows.UI.Xaml.Controls.Maps.IMapTileDataSource
      )
      return WinRt.Hresult is abstract;

      function get_Layer
      (
         this : access IMapTileSource_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapTileLayer
      )
      return WinRt.Hresult is abstract;

      function put_Layer
      (
         this : access IMapTileSource_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapTileLayer
      )
      return WinRt.Hresult is abstract;

      function get_ZoomLevelRange
      (
         this : access IMapTileSource_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange
      )
      return WinRt.Hresult is abstract;

      function put_ZoomLevelRange
      (
         this : access IMapTileSource_Interface;
         value : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange
      )
      return WinRt.Hresult is abstract;

      function get_Bounds
      (
         this : access IMapTileSource_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeoboundingBox
      )
      return WinRt.Hresult is abstract;

      function put_Bounds
      (
         this : access IMapTileSource_Interface;
         value : Windows.Devices.Geolocation.IGeoboundingBox
      )
      return WinRt.Hresult is abstract;

      function get_AllowOverstretch
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AllowOverstretch
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsFadingEnabled
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsFadingEnabled
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsTransparencyEnabled
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsTransparencyEnabled
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_IsRetryEnabled
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_IsRetryEnabled
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ZIndex
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_ZIndex
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_TilePixelSize
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_TilePixelSize
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Visible
      (
         this : access IMapTileSource_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_Visible
      (
         this : access IMapTileSource_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileSource : aliased WinRt.IID := (2292674126, 12255, 17767, (146, 85, 17, 0, 81, 156, 141, 98 ));

   -----------------------------------------------------------------------------
   -- type IMapTileSource2 is interface and WinRt.IInspectable;

      function get_AnimationState
      (
         this : access IMapTileSource2_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.MapTileAnimationState
      )
      return WinRt.Hresult is abstract;

      function get_AutoPlay
      (
         this : access IMapTileSource2_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AutoPlay
      (
         this : access IMapTileSource2_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_FrameCount
      (
         this : access IMapTileSource2_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function put_FrameCount
      (
         this : access IMapTileSource2_Interface;
         value : WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_FrameDuration
      (
         this : access IMapTileSource2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function put_FrameDuration
      (
         this : access IMapTileSource2_Interface;
         value : Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      function Pause
      (
         this : access IMapTileSource2_Interface
      )
      return WinRt.Hresult is abstract;

      function Play
      (
         this : access IMapTileSource2_Interface
      )
      return WinRt.Hresult is abstract;

      function Stop
      (
         this : access IMapTileSource2_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileSource2 : aliased WinRt.IID := (2389044157, 16533, 23573, (153, 241, 18, 96, 180, 232, 176, 169 ));

   -----------------------------------------------------------------------------
   -- type IMapTileSourceFactory is interface and WinRt.IInspectable;

      function CreateInstance
      (
         this : access IMapTileSourceFactory_Interface;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileSource
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithDataSource
      (
         this : access IMapTileSourceFactory_Interface;
         dataSource : Windows.UI.Xaml.Controls.Maps.IMapTileDataSource;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileSource
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithDataSourceAndZoomRange
      (
         this : access IMapTileSourceFactory_Interface;
         dataSource : Windows.UI.Xaml.Controls.Maps.IMapTileDataSource;
         zoomLevelRange : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileSource
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithDataSourceZoomRangeAndBounds
      (
         this : access IMapTileSourceFactory_Interface;
         dataSource : Windows.UI.Xaml.Controls.Maps.IMapTileDataSource;
         zoomLevelRange : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;
         bounds : Windows.Devices.Geolocation.IGeoboundingBox;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileSource
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize
      (
         this : access IMapTileSourceFactory_Interface;
         dataSource : Windows.UI.Xaml.Controls.Maps.IMapTileDataSource;
         zoomLevelRange : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;
         bounds : Windows.Devices.Geolocation.IGeoboundingBox;
         tileSizeInPixels : WinRt.Int32;
         baseInterface : WinRt.IInspectable;
         innerInterface : access WinRt.IInspectable;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileSource
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileSourceFactory : aliased WinRt.IID := (3447685407, 30714, 18475, (157, 52, 113, 211, 29, 70, 92, 72 ));

   -----------------------------------------------------------------------------
   -- type IMapTileSourceStatics is interface and WinRt.IInspectable;

      function get_DataSourceProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_LayerProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ZoomLevelRangeProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_BoundsProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_AllowOverstretchProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_IsFadingEnabledProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_IsTransparencyEnabledProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_IsRetryEnabledProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_ZIndexProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_TilePixelSizeProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_VisibleProperty
      (
         this : access IMapTileSourceStatics_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileSourceStatics : aliased WinRt.IID := (2482817340, 28725, 17923, (153, 177, 230, 89, 146, 27, 96, 147 ));

   -----------------------------------------------------------------------------
   -- type IMapTileSourceStatics2 is interface and WinRt.IInspectable;

      function get_AnimationStateProperty
      (
         this : access IMapTileSourceStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_AutoPlayProperty
      (
         this : access IMapTileSourceStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_FrameCountProperty
      (
         this : access IMapTileSourceStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      function get_FrameDurationProperty
      (
         this : access IMapTileSourceStatics2_Interface;
         RetVal : access Windows.UI.Xaml.IDependencyProperty
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileSourceStatics2 : aliased WinRt.IID := (1976423550, 26268, 20733, (173, 133, 94, 165, 23, 76, 245, 155 ));

   -----------------------------------------------------------------------------
   -- type IMapTileUriRequest is interface and WinRt.IInspectable;

      function get_Uri
      (
         this : access IMapTileUriRequest_Interface;
         RetVal : access Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function put_Uri
      (
         this : access IMapTileUriRequest_Interface;
         value : Windows.Foundation.IUriRuntimeClass
      )
      return WinRt.Hresult is abstract;

      function GetDeferral
      (
         this : access IMapTileUriRequest_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileUriRequest : aliased WinRt.IID := (390079285, 12583, 17848, (135, 167, 153, 248, 125, 78, 39, 69 ));

   -----------------------------------------------------------------------------
   -- type IMapTileUriRequestDeferral is interface and WinRt.IInspectable;

      function Complete
      (
         this : access IMapTileUriRequestDeferral_Interface
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileUriRequestDeferral : aliased WinRt.IID := (3239554528, 48958, 19537, (143, 170, 75, 89, 60, 246, 142, 178 ));

   -----------------------------------------------------------------------------
   -- type IMapTileUriRequestedEventArgs is interface and WinRt.IInspectable;

      function get_X
      (
         this : access IMapTileUriRequestedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Y
      (
         this : access IMapTileUriRequestedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_ZoomLevel
      (
         this : access IMapTileUriRequestedEventArgs_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      function get_Request
      (
         this : access IMapTileUriRequestedEventArgs_Interface;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileUriRequestedEventArgs : aliased WinRt.IID := (3524557635, 7103, 19352, (141, 211, 183, 131, 78, 64, 126, 13 ));

   -----------------------------------------------------------------------------
   -- type IMapTileUriRequestedEventArgs2 is interface and WinRt.IInspectable;

      function get_FrameIndex
      (
         this : access IMapTileUriRequestedEventArgs2_Interface;
         RetVal : access WinRt.Int32
      )
      return WinRt.Hresult is abstract;

      IID_IMapTileUriRequestedEventArgs2 : aliased WinRt.IID := (587339869, 13237, 23125, (146, 245, 116, 168, 106, 34, 239, 166 ));

   -----------------------------------------------------------------------------
   -- type IStreetsideExperience is interface and WinRt.IInspectable;

      function get_AddressTextVisible
      (
         this : access IStreetsideExperience_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_AddressTextVisible
      (
         this : access IStreetsideExperience_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_CursorVisible
      (
         this : access IStreetsideExperience_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_CursorVisible
      (
         this : access IStreetsideExperience_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_OverviewMapVisible
      (
         this : access IStreetsideExperience_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_OverviewMapVisible
      (
         this : access IStreetsideExperience_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_StreetLabelsVisible
      (
         this : access IStreetsideExperience_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_StreetLabelsVisible
      (
         this : access IStreetsideExperience_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ExitButtonVisible
      (
         this : access IStreetsideExperience_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ExitButtonVisible
      (
         this : access IStreetsideExperience_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function get_ZoomButtonsVisible
      (
         this : access IStreetsideExperience_Interface;
         RetVal : access WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      function put_ZoomButtonsVisible
      (
         this : access IStreetsideExperience_Interface;
         value : WinRt.Boolean
      )
      return WinRt.Hresult is abstract;

      IID_IStreetsideExperience : aliased WinRt.IID := (2774052553, 58124, 18120, (129, 22, 72, 70, 145, 103, 85, 88 ));

   -----------------------------------------------------------------------------
   -- type IStreetsideExperienceFactory is interface and WinRt.IInspectable;

      function CreateInstanceWithPanorama
      (
         this : access IStreetsideExperienceFactory_Interface;
         panorama : Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
      )
      return WinRt.Hresult is abstract;

      function CreateInstanceWithPanoramaHeadingPitchAndFieldOfView
      (
         this : access IStreetsideExperienceFactory_Interface;
         panorama : Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama;
         headingInDegrees : WinRt.Double;
         pitchInDegrees : WinRt.Double;
         fieldOfViewInDegrees : WinRt.Double;
         RetVal : access Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
      )
      return WinRt.Hresult is abstract;

      IID_IStreetsideExperienceFactory : aliased WinRt.IID := (2052837180, 25758, 17218, (153, 149, 104, 166, 207, 89, 97, 167 ));

   -----------------------------------------------------------------------------
   -- type IStreetsidePanorama is interface and WinRt.IInspectable;

      function get_Location
      (
         this : access IStreetsidePanorama_Interface;
         RetVal : access Windows.Devices.Geolocation.IGeopoint
      )
      return WinRt.Hresult is abstract;

      IID_IStreetsidePanorama : aliased WinRt.IID := (1876955096, 44384, 18020, (181, 57, 177, 6, 159, 22, 197, 175 ));

   -----------------------------------------------------------------------------
   -- type IStreetsidePanoramaStatics is interface and WinRt.IInspectable;

      function FindNearbyAsync
      (
         this : access IStreetsidePanoramaStatics_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function FindNearbyAsync
      (
         this : access IStreetsidePanoramaStatics_Interface;
         location : Windows.Devices.Geolocation.IGeopoint;
         radiusInMeters : WinRt.Double;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      IID_IStreetsidePanoramaStatics : aliased WinRt.IID := (3551821673, 21683, 20165, (178, 160, 79, 130, 4, 87, 101, 7 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileDataSource

   overriding procedure Initialize (this : in out MapTileDataSource);
   overriding procedure Finalize (this : in out MapTileDataSource);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileDataSource

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapTileDataSource;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileDataSource

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for CustomMapTileDataSource

   overriding procedure Initialize (this : in out CustomMapTileDataSource);
   overriding procedure Finalize (this : in out CustomMapTileDataSource);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for CustomMapTileDataSource

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return CustomMapTileDataSource;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for CustomMapTileDataSource

   function add_BitmapRequested
   (
      this : in out CustomMapTileDataSource;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BitmapRequested
   (
      this : in out CustomMapTileDataSource;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for HttpMapTileDataSource

   overriding procedure Initialize (this : in out HttpMapTileDataSource);
   overriding procedure Finalize (this : in out HttpMapTileDataSource);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for HttpMapTileDataSource

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return HttpMapTileDataSource;

   function Constructor
   (
      uriFormatString : WinRt.WString;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return HttpMapTileDataSource;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for HttpMapTileDataSource

   function get_UriFormatString
   (
      this : in out HttpMapTileDataSource
   )
   return WinRt.WString;

   procedure put_UriFormatString
   (
      this : in out HttpMapTileDataSource;
      value : WinRt.WString
   );

   function get_AdditionalRequestHeaders
   (
      this : in out HttpMapTileDataSource
   )
   return IMap_HString_HString.Kind;

   function get_AllowCaching
   (
      this : in out HttpMapTileDataSource
   )
   return WinRt.Boolean;

   procedure put_AllowCaching
   (
      this : in out HttpMapTileDataSource;
      value : WinRt.Boolean
   );

   function add_UriRequested
   (
      this : in out HttpMapTileDataSource;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_UriRequested
   (
      this : in out HttpMapTileDataSource;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LocalMapTileDataSource

   overriding procedure Initialize (this : in out LocalMapTileDataSource);
   overriding procedure Finalize (this : in out LocalMapTileDataSource);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for LocalMapTileDataSource

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return LocalMapTileDataSource;

   function Constructor
   (
      uriFormatString : WinRt.WString;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return LocalMapTileDataSource;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LocalMapTileDataSource

   function get_UriFormatString
   (
      this : in out LocalMapTileDataSource
   )
   return WinRt.WString;

   procedure put_UriFormatString
   (
      this : in out LocalMapTileDataSource;
      value : WinRt.WString
   );

   function add_UriRequested
   (
      this : in out LocalMapTileDataSource;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_UriRequested
   (
      this : in out LocalMapTileDataSource;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapActualCameraChangedEventArgs

   overriding procedure Initialize (this : in out MapActualCameraChangedEventArgs);
   overriding procedure Finalize (this : in out MapActualCameraChangedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapActualCameraChangedEventArgs

   function Constructor return MapActualCameraChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapActualCameraChangedEventArgs

   function get_Camera
   (
      this : in out MapActualCameraChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   function get_ChangeReason
   (
      this : in out MapActualCameraChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapActualCameraChangingEventArgs

   overriding procedure Initialize (this : in out MapActualCameraChangingEventArgs);
   overriding procedure Finalize (this : in out MapActualCameraChangingEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapActualCameraChangingEventArgs

   function Constructor return MapActualCameraChangingEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapActualCameraChangingEventArgs

   function get_Camera
   (
      this : in out MapActualCameraChangingEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   function get_ChangeReason
   (
      this : in out MapActualCameraChangingEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElement

   overriding procedure Initialize (this : in out MapElement);
   overriding procedure Finalize (this : in out MapElement);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElement

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapElement;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapElement

   function get_MapStyleSheetEntryProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_MapStyleSheetEntryStateProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TagProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_IsEnabledProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_MapTabIndexProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ZIndexProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_VisibleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElement

   function get_ZIndex
   (
      this : in out MapElement
   )
   return WinRt.Int32;

   procedure put_ZIndex
   (
      this : in out MapElement;
      value : WinRt.Int32
   );

   function get_Visible
   (
      this : in out MapElement
   )
   return WinRt.Boolean;

   procedure put_Visible
   (
      this : in out MapElement;
      value : WinRt.Boolean
   );

   function get_MapTabIndex
   (
      this : in out MapElement
   )
   return WinRt.Int32;

   procedure put_MapTabIndex
   (
      this : in out MapElement;
      value : WinRt.Int32
   );

   function get_MapStyleSheetEntry
   (
      this : in out MapElement
   )
   return WinRt.WString;

   procedure put_MapStyleSheetEntry
   (
      this : in out MapElement;
      value : WinRt.WString
   );

   function get_MapStyleSheetEntryState
   (
      this : in out MapElement
   )
   return WinRt.WString;

   procedure put_MapStyleSheetEntryState
   (
      this : in out MapElement;
      value : WinRt.WString
   );

   function get_Tag
   (
      this : in out MapElement
   )
   return WinRt.IInspectable;

   procedure put_Tag
   (
      this : in out MapElement;
      value : WinRt.IInspectable
   );

   function get_IsEnabled
   (
      this : in out MapElement
   )
   return WinRt.Boolean;

   procedure put_IsEnabled
   (
      this : in out MapElement;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapBillboard

   overriding procedure Initialize (this : in out MapBillboard);
   overriding procedure Finalize (this : in out MapBillboard);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapBillboard

   function Constructor
   (
      camera : Windows.UI.Xaml.Controls.Maps.MapCamera'Class
   )
   return MapBillboard;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapBillboard

   function get_LocationProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_NormalizedAnchorPointProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_CollisionBehaviorDesiredProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapBillboard

   function get_Location
   (
      this : in out MapBillboard
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   procedure put_Location
   (
      this : in out MapBillboard;
      value : Windows.Devices.Geolocation.Geopoint'Class
   );

   function get_NormalizedAnchorPoint
   (
      this : in out MapBillboard
   )
   return WinRt.Windows.Foundation.Point;

   procedure put_NormalizedAnchorPoint
   (
      this : in out MapBillboard;
      value : Windows.Foundation.Point
   );

   function get_Image
   (
      this : in out MapBillboard
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamReference;

   procedure put_Image
   (
      this : in out MapBillboard;
      value : Windows.Storage.Streams.IRandomAccessStreamReference
   );

   function get_CollisionBehaviorDesired
   (
      this : in out MapBillboard
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior;

   procedure put_CollisionBehaviorDesired
   (
      this : in out MapBillboard;
      value : Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
   );

   function get_ReferenceCamera
   (
      this : in out MapBillboard
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapCamera

   overriding procedure Initialize (this : in out MapCamera);
   overriding procedure Finalize (this : in out MapCamera);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapCamera

   function Constructor
   (
      location : Windows.Devices.Geolocation.Geopoint'Class
   )
   return MapCamera;

   function Constructor
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      headingInDegrees : WinRt.Double
   )
   return MapCamera;

   function Constructor
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double
   )
   return MapCamera;

   function Constructor
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double;
      rollInDegrees : WinRt.Double;
      fieldOfViewInDegrees : WinRt.Double
   )
   return MapCamera;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapCamera

   function get_Location
   (
      this : in out MapCamera
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   procedure put_Location
   (
      this : in out MapCamera;
      value : Windows.Devices.Geolocation.Geopoint'Class
   );

   function get_Heading
   (
      this : in out MapCamera
   )
   return WinRt.Double;

   procedure put_Heading
   (
      this : in out MapCamera;
      value : WinRt.Double
   );

   function get_Pitch
   (
      this : in out MapCamera
   )
   return WinRt.Double;

   procedure put_Pitch
   (
      this : in out MapCamera;
      value : WinRt.Double
   );

   function get_Roll
   (
      this : in out MapCamera
   )
   return WinRt.Double;

   procedure put_Roll
   (
      this : in out MapCamera;
      value : WinRt.Double
   );

   function get_FieldOfView
   (
      this : in out MapCamera
   )
   return WinRt.Double;

   procedure put_FieldOfView
   (
      this : in out MapCamera;
      value : WinRt.Double
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapContextRequestedEventArgs

   overriding procedure Initialize (this : in out MapContextRequestedEventArgs);
   overriding procedure Finalize (this : in out MapContextRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapContextRequestedEventArgs

   function Constructor return MapContextRequestedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapContextRequestedEventArgs

   function get_Position
   (
      this : in out MapContextRequestedEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapContextRequestedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElements
   (
      this : in out MapContextRequestedEventArgs
   )
   return IVectorView_IMapElement.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControl

   overriding procedure Initialize (this : in out MapControl);
   overriding procedure Finalize (this : in out MapControl);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControl

   function Constructor return MapControl;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapControl

   function get_CanTiltDownProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_CanTiltUpProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_CanZoomInProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_CanZoomOutProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_BusinessLandmarksVisibleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TransitFeaturesVisibleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_PanInteractionModeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_RotateInteractionModeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TiltInteractionModeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ZoomInteractionModeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_Is3DSupportedProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_IsStreetsideSupportedProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_SceneProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_BusinessLandmarksEnabledProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TransitFeaturesEnabledProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_CenterProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ChildrenProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ColorSchemeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_DesiredPitchProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_HeadingProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_LandmarksVisibleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_LoadingStatusProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_MapServiceTokenProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_PedestrianFeaturesVisibleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_PitchProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_StyleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TrafficFlowVisibleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TransformOriginProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_WatermarkModeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ZoomLevelProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_MapElementsProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_RoutesProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TileSourcesProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_LocationProperty_MapControl
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function GetLocation
   (
      element : Windows.UI.Xaml.DependencyObject'Class
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint;

   procedure SetLocation
   (
      element : Windows.UI.Xaml.DependencyObject'Class;
      value : Windows.Devices.Geolocation.Geopoint'Class
   );

   function get_NormalizedAnchorPointProperty_MapControl
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function GetNormalizedAnchorPoint
   (
      element : Windows.UI.Xaml.DependencyObject'Class
   )
   return WinRt.Windows.Foundation.Point;

   procedure SetNormalizedAnchorPoint
   (
      element : Windows.UI.Xaml.DependencyObject'Class;
      value : Windows.Foundation.Point
   );

   function get_RegionProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_MapProjectionProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_StyleSheetProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ViewPaddingProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_LayersProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControl

   function get_Center
   (
      this : in out MapControl
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   procedure put_Center
   (
      this : in out MapControl;
      value : Windows.Devices.Geolocation.Geopoint'Class
   );

   function get_Children
   (
      this : in out MapControl
   )
   return IVector_IDependencyObject.Kind;

   function get_ColorScheme
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapColorScheme;

   procedure put_ColorScheme
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapColorScheme
   );

   function get_DesiredPitch
   (
      this : in out MapControl
   )
   return WinRt.Double;

   procedure put_DesiredPitch
   (
      this : in out MapControl;
      value : WinRt.Double
   );

   function get_Heading
   (
      this : in out MapControl
   )
   return WinRt.Double;

   procedure put_Heading
   (
      this : in out MapControl;
      value : WinRt.Double
   );

   function get_LandmarksVisible
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_LandmarksVisible
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function get_LoadingStatus
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapLoadingStatus;

   function get_MapServiceToken
   (
      this : in out MapControl
   )
   return WinRt.WString;

   procedure put_MapServiceToken
   (
      this : in out MapControl;
      value : WinRt.WString
   );

   function get_MaxZoomLevel
   (
      this : in out MapControl
   )
   return WinRt.Double;

   function get_MinZoomLevel
   (
      this : in out MapControl
   )
   return WinRt.Double;

   function get_PedestrianFeaturesVisible
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_PedestrianFeaturesVisible
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function get_Pitch
   (
      this : in out MapControl
   )
   return WinRt.Double;

   function get_Style
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyle;

   procedure put_Style
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapStyle
   );

   function get_TrafficFlowVisible
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_TrafficFlowVisible
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function get_TransformOrigin
   (
      this : in out MapControl
   )
   return WinRt.Windows.Foundation.Point;

   procedure put_TransformOrigin
   (
      this : in out MapControl;
      value : Windows.Foundation.Point
   );

   function get_WatermarkMode
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapWatermarkMode;

   procedure put_WatermarkMode
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapWatermarkMode
   );

   function get_ZoomLevel
   (
      this : in out MapControl
   )
   return WinRt.Double;

   procedure put_ZoomLevel
   (
      this : in out MapControl;
      value : WinRt.Double
   );

   function get_MapElements
   (
      this : in out MapControl
   )
   return IVector_IMapElement.Kind;

   function get_Routes
   (
      this : in out MapControl
   )
   return IVector_IMapRouteView.Kind;

   function get_TileSources
   (
      this : in out MapControl
   )
   return IVector_IMapTileSource.Kind;

   function add_CenterChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_CenterChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_HeadingChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_HeadingChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_LoadingStatusChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_LoadingStatusChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapDoubleTapped
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapDoubleTapped
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapHolding
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapHolding
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapTapped
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapTapped
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_PitchChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_PitchChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TransformOriginChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TransformOriginChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ZoomLevelChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ZoomLevelChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function FindMapElementsAtOffset
   (
      this : in out MapControl;
      offset : Windows.Foundation.Point
   )
   return IVectorView_IMapElement.Kind;

   procedure GetLocationFromOffset
   (
      this : in out MapControl;
      offset : Windows.Foundation.Point;
      location : access Windows.Devices.Geolocation.IGeopoint
   );

   procedure GetOffsetFromLocation
   (
      this : in out MapControl;
      location : Windows.Devices.Geolocation.Geopoint'Class;
      offset : Windows.Foundation.Point_Ptr
   );

   procedure IsLocationInView
   (
      this : in out MapControl;
      location : Windows.Devices.Geolocation.Geopoint'Class;
      isInView : WinRt.Boolean_Ptr
   );

   function TrySetViewBoundsAsync
   (
      this : in out MapControl;
      bounds : Windows.Devices.Geolocation.GeoboundingBox'Class;
      margin : GenericObject;
      animation : Windows.UI.Xaml.Controls.Maps.MapAnimationKind
   )
   return WinRt.Boolean;

   function TrySetViewAsync
   (
      this : in out MapControl;
      center : Windows.Devices.Geolocation.Geopoint'Class
   )
   return WinRt.Boolean;

   function TrySetViewAsync
   (
      this : in out MapControl;
      center : Windows.Devices.Geolocation.Geopoint'Class;
      zoomLevel : GenericObject
   )
   return WinRt.Boolean;

   function TrySetViewAsync
   (
      this : in out MapControl;
      center : Windows.Devices.Geolocation.Geopoint'Class;
      zoomLevel : GenericObject;
      heading : GenericObject;
      desiredPitch : GenericObject
   )
   return WinRt.Boolean;

   function TrySetViewAsync
   (
      this : in out MapControl;
      center : Windows.Devices.Geolocation.Geopoint'Class;
      zoomLevel : GenericObject;
      heading : GenericObject;
      desiredPitch : GenericObject;
      animation : Windows.UI.Xaml.Controls.Maps.MapAnimationKind
   )
   return WinRt.Boolean;

   function get_BusinessLandmarksVisible
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_BusinessLandmarksVisible
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function get_TransitFeaturesVisible
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_TransitFeaturesVisible
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function get_PanInteractionMode
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode;

   procedure put_PanInteractionMode
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode
   );

   function get_RotateInteractionMode
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapInteractionMode;

   procedure put_RotateInteractionMode
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapInteractionMode
   );

   function get_TiltInteractionMode
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapInteractionMode;

   procedure put_TiltInteractionMode
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapInteractionMode
   );

   function get_ZoomInteractionMode
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapInteractionMode;

   procedure put_ZoomInteractionMode
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapInteractionMode
   );

   function get_Is3DSupported
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function get_IsStreetsideSupported
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function get_Scene
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene'Class;

   procedure put_Scene
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapScene'Class
   );

   function get_ActualCamera
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   function get_TargetCamera
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   function get_CustomExperience
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCustomExperience'Class;

   procedure put_CustomExperience
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapCustomExperience'Class
   );

   function add_MapElementClick
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapElementClick
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapElementPointerEntered
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapElementPointerEntered
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapElementPointerExited
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapElementPointerExited
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ActualCameraChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ActualCameraChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_ActualCameraChanging
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_ActualCameraChanging
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TargetCameraChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TargetCameraChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_CustomExperienceChanged
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_CustomExperienceChanged
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   procedure StartContinuousRotate
   (
      this : in out MapControl;
      rateInDegreesPerSecond : WinRt.Double
   );

   procedure StopContinuousRotate
   (
      this : in out MapControl
   );

   procedure StartContinuousTilt
   (
      this : in out MapControl;
      rateInDegreesPerSecond : WinRt.Double
   );

   procedure StopContinuousTilt
   (
      this : in out MapControl
   );

   procedure StartContinuousZoom
   (
      this : in out MapControl;
      rateOfChangePerSecond : WinRt.Double
   );

   procedure StopContinuousZoom
   (
      this : in out MapControl
   );

   function TryRotateAsync
   (
      this : in out MapControl;
      degrees : WinRt.Double
   )
   return WinRt.Boolean;

   function TryRotateToAsync
   (
      this : in out MapControl;
      angleInDegrees : WinRt.Double
   )
   return WinRt.Boolean;

   function TryTiltAsync
   (
      this : in out MapControl;
      degrees : WinRt.Double
   )
   return WinRt.Boolean;

   function TryTiltToAsync
   (
      this : in out MapControl;
      angleInDegrees : WinRt.Double
   )
   return WinRt.Boolean;

   function TryZoomInAsync
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function TryZoomOutAsync
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function TryZoomToAsync
   (
      this : in out MapControl;
      zoomLevel : WinRt.Double
   )
   return WinRt.Boolean;

   function TrySetSceneAsync
   (
      this : in out MapControl;
      scene : Windows.UI.Xaml.Controls.Maps.MapScene'Class
   )
   return WinRt.Boolean;

   function TrySetSceneAsync
   (
      this : in out MapControl;
      scene : Windows.UI.Xaml.Controls.Maps.MapScene'Class;
      animationKind : Windows.UI.Xaml.Controls.Maps.MapAnimationKind
   )
   return WinRt.Boolean;

   function add_MapRightTapped
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapRightTapped
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_BusinessLandmarksEnabled
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_BusinessLandmarksEnabled
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function get_TransitFeaturesEnabled
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   procedure put_TransitFeaturesEnabled
   (
      this : in out MapControl;
      value : WinRt.Boolean
   );

   function GetVisibleRegion
   (
      this : in out MapControl;
      region : Windows.UI.Xaml.Controls.Maps.MapVisibleRegionKind
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   function get_MapProjection
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapProjection;

   procedure put_MapProjection
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapProjection
   );

   function get_StyleSheet
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet'Class;

   procedure put_StyleSheet
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Controls.Maps.MapStyleSheet'Class
   );

   function get_ViewPadding
   (
      this : in out MapControl
   )
   return WinRt.Windows.UI.Xaml.Thickness;

   procedure put_ViewPadding
   (
      this : in out MapControl;
      value : Windows.UI.Xaml.Thickness
   );

   function add_MapContextRequested
   (
      this : in out MapControl;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapContextRequested
   (
      this : in out MapControl;
      token : Windows.Foundation.EventRegistrationToken
   );

   function FindMapElementsAtOffset
   (
      this : in out MapControl;
      offset : Windows.Foundation.Point;
      radius : WinRt.Double
   )
   return IVectorView_IMapElement.Kind;

   procedure GetLocationFromOffset
   (
      this : in out MapControl;
      offset : Windows.Foundation.Point;
      desiredReferenceSystem : Windows.Devices.Geolocation.AltitudeReferenceSystem;
      location : access Windows.Devices.Geolocation.IGeopoint
   );

   procedure StartContinuousPan
   (
      this : in out MapControl;
      horizontalPixelsPerSecond : WinRt.Double;
      verticalPixelsPerSecond : WinRt.Double
   );

   procedure StopContinuousPan
   (
      this : in out MapControl
   );

   function TryPanAsync
   (
      this : in out MapControl;
      horizontalPixels : WinRt.Double;
      verticalPixels : WinRt.Double
   )
   return WinRt.Boolean;

   function TryPanToAsync
   (
      this : in out MapControl;
      location : Windows.Devices.Geolocation.Geopoint'Class
   )
   return WinRt.Boolean;

   function get_Layers
   (
      this : in out MapControl
   )
   return IVector_IMapLayer.Kind;

   procedure put_Layers
   (
      this : in out MapControl;
      value : GenericObject
   );

   function TryGetLocationFromOffset
   (
      this : in out MapControl;
      offset : Windows.Foundation.Point;
      location : access Windows.Devices.Geolocation.IGeopoint
   )
   return WinRt.Boolean;

   function TryGetLocationFromOffset
   (
      this : in out MapControl;
      offset : Windows.Foundation.Point;
      desiredReferenceSystem : Windows.Devices.Geolocation.AltitudeReferenceSystem;
      location : access Windows.Devices.Geolocation.IGeopoint
   )
   return WinRt.Boolean;

   function get_Region
   (
      this : in out MapControl
   )
   return WinRt.WString;

   procedure put_Region
   (
      this : in out MapControl;
      value : WinRt.WString
   );

   function get_CanTiltDown
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function get_CanTiltUp
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function get_CanZoomIn
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   function get_CanZoomOut
   (
      this : in out MapControl
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlBusinessLandmarkClickEventArgs

   overriding procedure Initialize (this : in out MapControlBusinessLandmarkClickEventArgs);
   overriding procedure Finalize (this : in out MapControlBusinessLandmarkClickEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlBusinessLandmarkClickEventArgs

   function Constructor return MapControlBusinessLandmarkClickEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlBusinessLandmarkClickEventArgs

   function get_LocalLocations
   (
      this : in out MapControlBusinessLandmarkClickEventArgs
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlBusinessLandmarkPointerEnteredEventArgs

   overriding procedure Initialize (this : in out MapControlBusinessLandmarkPointerEnteredEventArgs);
   overriding procedure Finalize (this : in out MapControlBusinessLandmarkPointerEnteredEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlBusinessLandmarkPointerEnteredEventArgs

   function Constructor return MapControlBusinessLandmarkPointerEnteredEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlBusinessLandmarkPointerEnteredEventArgs

   function get_LocalLocations
   (
      this : in out MapControlBusinessLandmarkPointerEnteredEventArgs
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlBusinessLandmarkPointerExitedEventArgs

   overriding procedure Initialize (this : in out MapControlBusinessLandmarkPointerExitedEventArgs);
   overriding procedure Finalize (this : in out MapControlBusinessLandmarkPointerExitedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlBusinessLandmarkPointerExitedEventArgs

   function Constructor return MapControlBusinessLandmarkPointerExitedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlBusinessLandmarkPointerExitedEventArgs

   function get_LocalLocations
   (
      this : in out MapControlBusinessLandmarkPointerExitedEventArgs
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlBusinessLandmarkRightTappedEventArgs

   overriding procedure Initialize (this : in out MapControlBusinessLandmarkRightTappedEventArgs);
   overriding procedure Finalize (this : in out MapControlBusinessLandmarkRightTappedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlBusinessLandmarkRightTappedEventArgs

   function Constructor return MapControlBusinessLandmarkRightTappedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlBusinessLandmarkRightTappedEventArgs

   function get_LocalLocations
   (
      this : in out MapControlBusinessLandmarkRightTappedEventArgs
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlDataHelper

   overriding procedure Initialize (this : in out MapControlDataHelper);
   overriding procedure Finalize (this : in out MapControlDataHelper);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlDataHelper

   function Constructor
   (
      map : Windows.UI.Xaml.Controls.Maps.MapControl'Class
   )
   return MapControlDataHelper;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapControlDataHelper

   function CreateMapControl
   (
      rasterRenderMode : WinRt.Boolean
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapControl;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlDataHelper

   function add_BusinessLandmarkClick
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BusinessLandmarkClick
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TransitFeatureClick
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TransitFeatureClick
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_BusinessLandmarkRightTapped
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BusinessLandmarkRightTapped
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TransitFeatureRightTapped
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TransitFeatureRightTapped
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_BusinessLandmarkPointerEntered
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BusinessLandmarkPointerEntered
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TransitFeaturePointerEntered
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TransitFeaturePointerEntered
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_BusinessLandmarkPointerExited
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BusinessLandmarkPointerExited
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_TransitFeaturePointerExited
   (
      this : in out MapControlDataHelper;
      value : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TransitFeaturePointerExited
   (
      this : in out MapControlDataHelper;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlTransitFeatureClickEventArgs

   overriding procedure Initialize (this : in out MapControlTransitFeatureClickEventArgs);
   overriding procedure Finalize (this : in out MapControlTransitFeatureClickEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlTransitFeatureClickEventArgs

   function Constructor return MapControlTransitFeatureClickEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlTransitFeatureClickEventArgs

   function get_DisplayName
   (
      this : in out MapControlTransitFeatureClickEventArgs
   )
   return WinRt.WString;

   function get_Location
   (
      this : in out MapControlTransitFeatureClickEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_TransitProperties
   (
      this : in out MapControlTransitFeatureClickEventArgs
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlTransitFeaturePointerEnteredEventArgs

   overriding procedure Initialize (this : in out MapControlTransitFeaturePointerEnteredEventArgs);
   overriding procedure Finalize (this : in out MapControlTransitFeaturePointerEnteredEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlTransitFeaturePointerEnteredEventArgs

   function Constructor return MapControlTransitFeaturePointerEnteredEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlTransitFeaturePointerEnteredEventArgs

   function get_DisplayName
   (
      this : in out MapControlTransitFeaturePointerEnteredEventArgs
   )
   return WinRt.WString;

   function get_Location
   (
      this : in out MapControlTransitFeaturePointerEnteredEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_TransitProperties
   (
      this : in out MapControlTransitFeaturePointerEnteredEventArgs
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlTransitFeaturePointerExitedEventArgs

   overriding procedure Initialize (this : in out MapControlTransitFeaturePointerExitedEventArgs);
   overriding procedure Finalize (this : in out MapControlTransitFeaturePointerExitedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlTransitFeaturePointerExitedEventArgs

   function Constructor return MapControlTransitFeaturePointerExitedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlTransitFeaturePointerExitedEventArgs

   function get_DisplayName
   (
      this : in out MapControlTransitFeaturePointerExitedEventArgs
   )
   return WinRt.WString;

   function get_Location
   (
      this : in out MapControlTransitFeaturePointerExitedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_TransitProperties
   (
      this : in out MapControlTransitFeaturePointerExitedEventArgs
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapControlTransitFeatureRightTappedEventArgs

   overriding procedure Initialize (this : in out MapControlTransitFeatureRightTappedEventArgs);
   overriding procedure Finalize (this : in out MapControlTransitFeatureRightTappedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapControlTransitFeatureRightTappedEventArgs

   function Constructor return MapControlTransitFeatureRightTappedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapControlTransitFeatureRightTappedEventArgs

   function get_DisplayName
   (
      this : in out MapControlTransitFeatureRightTappedEventArgs
   )
   return WinRt.WString;

   function get_Location
   (
      this : in out MapControlTransitFeatureRightTappedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_TransitProperties
   (
      this : in out MapControlTransitFeatureRightTappedEventArgs
   )
   return IMapView_HString_IInspectable.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapCustomExperience

   overriding procedure Initialize (this : in out MapCustomExperience);
   overriding procedure Finalize (this : in out MapCustomExperience);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapCustomExperience

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapCustomExperience;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapCustomExperience

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapCustomExperienceChangedEventArgs

   overriding procedure Initialize (this : in out MapCustomExperienceChangedEventArgs);
   overriding procedure Finalize (this : in out MapCustomExperienceChangedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapCustomExperienceChangedEventArgs

   function Constructor return MapCustomExperienceChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapCustomExperienceChangedEventArgs

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElement3D

   overriding procedure Initialize (this : in out MapElement3D);
   overriding procedure Finalize (this : in out MapElement3D);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElement3D

   function Constructor return MapElement3D;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapElement3D

   function get_LocationProperty_MapElement3D
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_HeadingProperty_MapElement3D
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_PitchProperty_MapElement3D
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_RollProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ScaleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElement3D

   function get_Location
   (
      this : in out MapElement3D
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   procedure put_Location
   (
      this : in out MapElement3D;
      value : Windows.Devices.Geolocation.Geopoint'Class
   );

   function get_Model
   (
      this : in out MapElement3D
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapModel3D'Class;

   procedure put_Model
   (
      this : in out MapElement3D;
      value : Windows.UI.Xaml.Controls.Maps.MapModel3D'Class
   );

   function get_Heading
   (
      this : in out MapElement3D
   )
   return WinRt.Double;

   procedure put_Heading
   (
      this : in out MapElement3D;
      value : WinRt.Double
   );

   function get_Pitch
   (
      this : in out MapElement3D
   )
   return WinRt.Double;

   procedure put_Pitch
   (
      this : in out MapElement3D;
      value : WinRt.Double
   );

   function get_Roll
   (
      this : in out MapElement3D
   )
   return WinRt.Double;

   procedure put_Roll
   (
      this : in out MapElement3D;
      value : WinRt.Double
   );

   function get_Scale
   (
      this : in out MapElement3D
   )
   return WinRt.Windows.Foundation.Numerics.Vector3;

   procedure put_Scale
   (
      this : in out MapElement3D;
      value : Windows.Foundation.Numerics.Vector3
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementClickEventArgs

   overriding procedure Initialize (this : in out MapElementClickEventArgs);
   overriding procedure Finalize (this : in out MapElementClickEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementClickEventArgs

   function Constructor return MapElementClickEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementClickEventArgs

   function get_Position
   (
      this : in out MapElementClickEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementClickEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElements
   (
      this : in out MapElementClickEventArgs
   )
   return IVector_IMapElement.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementPointerEnteredEventArgs

   overriding procedure Initialize (this : in out MapElementPointerEnteredEventArgs);
   overriding procedure Finalize (this : in out MapElementPointerEnteredEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementPointerEnteredEventArgs

   function Constructor return MapElementPointerEnteredEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementPointerEnteredEventArgs

   function get_Position
   (
      this : in out MapElementPointerEnteredEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementPointerEnteredEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElement
   (
      this : in out MapElementPointerEnteredEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapElement'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementPointerExitedEventArgs

   overriding procedure Initialize (this : in out MapElementPointerExitedEventArgs);
   overriding procedure Finalize (this : in out MapElementPointerExitedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementPointerExitedEventArgs

   function Constructor return MapElementPointerExitedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementPointerExitedEventArgs

   function get_Position
   (
      this : in out MapElementPointerExitedEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementPointerExitedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElement
   (
      this : in out MapElementPointerExitedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapElement'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapLayer

   overriding procedure Initialize (this : in out MapLayer);
   overriding procedure Finalize (this : in out MapLayer);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapLayer

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapLayer;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapLayer

   function get_MapTabIndexProperty_MapLayer
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_VisibleProperty_MapLayer
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ZIndexProperty_MapLayer
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapLayer

   function get_MapTabIndex
   (
      this : in out MapLayer
   )
   return WinRt.Int32;

   procedure put_MapTabIndex
   (
      this : in out MapLayer;
      value : WinRt.Int32
   );

   function get_Visible
   (
      this : in out MapLayer
   )
   return WinRt.Boolean;

   procedure put_Visible
   (
      this : in out MapLayer;
      value : WinRt.Boolean
   );

   function get_ZIndex
   (
      this : in out MapLayer
   )
   return WinRt.Int32;

   procedure put_ZIndex
   (
      this : in out MapLayer;
      value : WinRt.Int32
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementsLayer

   overriding procedure Initialize (this : in out MapElementsLayer);
   overriding procedure Finalize (this : in out MapElementsLayer);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementsLayer

   function Constructor return MapElementsLayer;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapElementsLayer

   function get_MapElementsProperty_MapElementsLayer
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementsLayer

   function get_MapElements
   (
      this : in out MapElementsLayer
   )
   return IVector_IMapElement.Kind;

   procedure put_MapElements
   (
      this : in out MapElementsLayer;
      value : GenericObject
   );

   function add_MapElementClick
   (
      this : in out MapElementsLayer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapElementClick
   (
      this : in out MapElementsLayer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapElementPointerEntered
   (
      this : in out MapElementsLayer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapElementPointerEntered
   (
      this : in out MapElementsLayer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapElementPointerExited
   (
      this : in out MapElementsLayer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapElementPointerExited
   (
      this : in out MapElementsLayer;
      token : Windows.Foundation.EventRegistrationToken
   );

   function add_MapContextRequested
   (
      this : in out MapElementsLayer;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_MapContextRequested
   (
      this : in out MapElementsLayer;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementsLayerClickEventArgs

   overriding procedure Initialize (this : in out MapElementsLayerClickEventArgs);
   overriding procedure Finalize (this : in out MapElementsLayerClickEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementsLayerClickEventArgs

   function Constructor return MapElementsLayerClickEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementsLayerClickEventArgs

   function get_Position
   (
      this : in out MapElementsLayerClickEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementsLayerClickEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElements
   (
      this : in out MapElementsLayerClickEventArgs
   )
   return IVector_IMapElement.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementsLayerContextRequestedEventArgs

   overriding procedure Initialize (this : in out MapElementsLayerContextRequestedEventArgs);
   overriding procedure Finalize (this : in out MapElementsLayerContextRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementsLayerContextRequestedEventArgs

   function Constructor return MapElementsLayerContextRequestedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementsLayerContextRequestedEventArgs

   function get_Position
   (
      this : in out MapElementsLayerContextRequestedEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementsLayerContextRequestedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElements
   (
      this : in out MapElementsLayerContextRequestedEventArgs
   )
   return IVectorView_IMapElement.Kind;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementsLayerPointerEnteredEventArgs

   overriding procedure Initialize (this : in out MapElementsLayerPointerEnteredEventArgs);
   overriding procedure Finalize (this : in out MapElementsLayerPointerEnteredEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementsLayerPointerEnteredEventArgs

   function Constructor return MapElementsLayerPointerEnteredEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementsLayerPointerEnteredEventArgs

   function get_Position
   (
      this : in out MapElementsLayerPointerEnteredEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementsLayerPointerEnteredEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElement
   (
      this : in out MapElementsLayerPointerEnteredEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapElement'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapElementsLayerPointerExitedEventArgs

   overriding procedure Initialize (this : in out MapElementsLayerPointerExitedEventArgs);
   overriding procedure Finalize (this : in out MapElementsLayerPointerExitedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapElementsLayerPointerExitedEventArgs

   function Constructor return MapElementsLayerPointerExitedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapElementsLayerPointerExitedEventArgs

   function get_Position
   (
      this : in out MapElementsLayerPointerExitedEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapElementsLayerPointerExitedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   function get_MapElement
   (
      this : in out MapElementsLayerPointerExitedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapElement'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapIcon

   overriding procedure Initialize (this : in out MapIcon);
   overriding procedure Finalize (this : in out MapIcon);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapIcon

   function Constructor return MapIcon;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapIcon

   function get_LocationProperty_MapIcon
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TitleProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_NormalizedAnchorPointProperty_MapIcon
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_CollisionBehaviorDesiredProperty_MapIcon
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapIcon

   function get_Location
   (
      this : in out MapIcon
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   procedure put_Location
   (
      this : in out MapIcon;
      value : Windows.Devices.Geolocation.Geopoint'Class
   );

   function get_Title
   (
      this : in out MapIcon
   )
   return WinRt.WString;

   procedure put_Title
   (
      this : in out MapIcon;
      value : WinRt.WString
   );

   function get_NormalizedAnchorPoint
   (
      this : in out MapIcon
   )
   return WinRt.Windows.Foundation.Point;

   procedure put_NormalizedAnchorPoint
   (
      this : in out MapIcon;
      value : Windows.Foundation.Point
   );

   function get_Image
   (
      this : in out MapIcon
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamReference;

   procedure put_Image
   (
      this : in out MapIcon;
      value : Windows.Storage.Streams.IRandomAccessStreamReference
   );

   function get_CollisionBehaviorDesired
   (
      this : in out MapIcon
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior;

   procedure put_CollisionBehaviorDesired
   (
      this : in out MapIcon;
      value : Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapInputEventArgs

   overriding procedure Initialize (this : in out MapInputEventArgs);
   overriding procedure Finalize (this : in out MapInputEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapInputEventArgs

   function Constructor return MapInputEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapInputEventArgs

   function get_Position
   (
      this : in out MapInputEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapInputEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapItemsControl

   overriding procedure Initialize (this : in out MapItemsControl);
   overriding procedure Finalize (this : in out MapItemsControl);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapItemsControl

   function Constructor return MapItemsControl;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapItemsControl

   function get_ItemsSourceProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ItemsProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ItemTemplateProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapItemsControl

   function get_ItemsSource
   (
      this : in out MapItemsControl
   )
   return WinRt.IInspectable;

   procedure put_ItemsSource
   (
      this : in out MapItemsControl;
      value : WinRt.IInspectable
   );

   function get_Items
   (
      this : in out MapItemsControl
   )
   return IVector_IDependencyObject.Kind;

   function get_ItemTemplate
   (
      this : in out MapItemsControl
   )
   return WinRt.Windows.UI.Xaml.DataTemplate'Class;

   procedure put_ItemTemplate
   (
      this : in out MapItemsControl;
      value : Windows.UI.Xaml.DataTemplate'Class
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapModel3D

   overriding procedure Initialize (this : in out MapModel3D);
   overriding procedure Finalize (this : in out MapModel3D);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapModel3D

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapModel3D;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapModel3D

   function CreateFrom3MFAsync
   (
      source : Windows.Storage.Streams.IRandomAccessStreamReference
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapModel3D;

   function CreateFrom3MFAsync
   (
      source : Windows.Storage.Streams.IRandomAccessStreamReference;
      shadingOption : Windows.UI.Xaml.Controls.Maps.MapModel3DShadingOption
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapModel3D;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapModel3D

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapPolygon

   overriding procedure Initialize (this : in out MapPolygon);
   overriding procedure Finalize (this : in out MapPolygon);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapPolygon

   function Constructor return MapPolygon;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapPolygon

   function get_PathProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_StrokeThicknessProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_StrokeDashedProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapPolygon

   function get_Path
   (
      this : in out MapPolygon
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   procedure put_Path
   (
      this : in out MapPolygon;
      value : Windows.Devices.Geolocation.Geopath'Class
   );

   function get_StrokeColor
   (
      this : in out MapPolygon
   )
   return WinRt.Windows.UI.Color;

   procedure put_StrokeColor
   (
      this : in out MapPolygon;
      value : Windows.UI.Color
   );

   function get_StrokeThickness
   (
      this : in out MapPolygon
   )
   return WinRt.Double;

   procedure put_StrokeThickness
   (
      this : in out MapPolygon;
      value : WinRt.Double
   );

   function get_StrokeDashed
   (
      this : in out MapPolygon
   )
   return WinRt.Boolean;

   procedure put_StrokeDashed
   (
      this : in out MapPolygon;
      value : WinRt.Boolean
   );

   function get_FillColor
   (
      this : in out MapPolygon
   )
   return WinRt.Windows.UI.Color;

   procedure put_FillColor
   (
      this : in out MapPolygon;
      value : Windows.UI.Color
   );

   function get_Paths
   (
      this : in out MapPolygon
   )
   return WinRt.GenericObject;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapPolyline

   overriding procedure Initialize (this : in out MapPolyline);
   overriding procedure Finalize (this : in out MapPolyline);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapPolyline

   function Constructor return MapPolyline;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapPolyline

   function get_PathProperty_MapPolyline
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_StrokeDashedProperty_MapPolyline
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapPolyline

   function get_Path
   (
      this : in out MapPolyline
   )
   return WinRt.Windows.Devices.Geolocation.Geopath'Class;

   procedure put_Path
   (
      this : in out MapPolyline;
      value : Windows.Devices.Geolocation.Geopath'Class
   );

   function get_StrokeColor
   (
      this : in out MapPolyline
   )
   return WinRt.Windows.UI.Color;

   procedure put_StrokeColor
   (
      this : in out MapPolyline;
      value : Windows.UI.Color
   );

   function get_StrokeThickness
   (
      this : in out MapPolyline
   )
   return WinRt.Double;

   procedure put_StrokeThickness
   (
      this : in out MapPolyline;
      value : WinRt.Double
   );

   function get_StrokeDashed
   (
      this : in out MapPolyline
   )
   return WinRt.Boolean;

   procedure put_StrokeDashed
   (
      this : in out MapPolyline;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRightTappedEventArgs

   overriding procedure Initialize (this : in out MapRightTappedEventArgs);
   overriding procedure Finalize (this : in out MapRightTappedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapRightTappedEventArgs

   function Constructor return MapRightTappedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRightTappedEventArgs

   function get_Position
   (
      this : in out MapRightTappedEventArgs
   )
   return WinRt.Windows.Foundation.Point;

   function get_Location
   (
      this : in out MapRightTappedEventArgs
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapRouteView

   overriding procedure Initialize (this : in out MapRouteView);
   overriding procedure Finalize (this : in out MapRouteView);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapRouteView

   function Constructor
   (
      route : Windows.Services.Maps.MapRoute'Class;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapRouteView;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapRouteView

   function get_RouteColor
   (
      this : in out MapRouteView
   )
   return WinRt.Windows.UI.Color;

   procedure put_RouteColor
   (
      this : in out MapRouteView;
      value : Windows.UI.Color
   );

   function get_OutlineColor
   (
      this : in out MapRouteView
   )
   return WinRt.Windows.UI.Color;

   procedure put_OutlineColor
   (
      this : in out MapRouteView;
      value : Windows.UI.Color
   );

   function get_Route
   (
      this : in out MapRouteView
   )
   return WinRt.Windows.Services.Maps.MapRoute'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapScene

   overriding procedure Initialize (this : in out MapScene);
   overriding procedure Finalize (this : in out MapScene);

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapScene

   function CreateFromBoundingBox
   (
      bounds : Windows.Devices.Geolocation.GeoboundingBox'Class
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromBoundingBox
   (
      bounds : Windows.Devices.Geolocation.GeoboundingBox'Class;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromCamera
   (
      camera : Windows.UI.Xaml.Controls.Maps.MapCamera'Class
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromLocation
   (
      location : Windows.Devices.Geolocation.Geopoint'Class
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromLocation
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromLocationAndRadius
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      radiusInMeters : WinRt.Double
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromLocationAndRadius
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      radiusInMeters : WinRt.Double;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromLocations
   (
      locations : GenericObject
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   function CreateFromLocations
   (
      locations : GenericObject;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapScene;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapScene

   function get_TargetCamera
   (
      this : in out MapScene
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   function add_TargetCameraChanged
   (
      this : in out MapScene;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_TargetCameraChanged
   (
      this : in out MapScene;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapStyleSheet

   overriding procedure Initialize (this : in out MapStyleSheet);
   overriding procedure Finalize (this : in out MapStyleSheet);

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapStyleSheet

   function Aerial
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function AerialWithOverlay
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function RoadLight
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function RoadDark
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function RoadHighContrastLight
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function RoadHighContrastDark
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function Combine
   (
      styleSheets : GenericObject
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function ParseFromJson
   (
      styleAsJson : WinRt.WString
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapStyleSheet;

   function TryParseFromJson
   (
      styleAsJson : WinRt.WString;
      styleSheet : access Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
   )
   return WinRt.Boolean;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapStyleSheet

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MapStyleSheetEntries is

      function get_Area
      return WinRt.WString;

      function get_Airport
      return WinRt.WString;

      function get_Cemetery
      return WinRt.WString;

      function get_Continent
      return WinRt.WString;

      function get_Education
      return WinRt.WString;

      function get_IndigenousPeoplesReserve
      return WinRt.WString;

      function get_Island
      return WinRt.WString;

      function get_Medical
      return WinRt.WString;

      function get_Military
      return WinRt.WString;

      function get_Nautical
      return WinRt.WString;

      function get_Neighborhood
      return WinRt.WString;

      function get_Runway
      return WinRt.WString;

      function get_Sand
      return WinRt.WString;

      function get_ShoppingCenter
      return WinRt.WString;

      function get_Stadium
      return WinRt.WString;

      function get_Vegetation
      return WinRt.WString;

      function get_Forest
      return WinRt.WString;

      function get_GolfCourse
      return WinRt.WString;

      function get_Park
      return WinRt.WString;

      function get_PlayingField
      return WinRt.WString;

      function get_Reserve
      return WinRt.WString;

      function get_Point
      return WinRt.WString;

      function get_NaturalPoint
      return WinRt.WString;

      function get_Peak
      return WinRt.WString;

      function get_VolcanicPeak
      return WinRt.WString;

      function get_WaterPoint
      return WinRt.WString;

      function get_PointOfInterest
      return WinRt.WString;

      function get_Business
      return WinRt.WString;

      function get_FoodPoint
      return WinRt.WString;

      function get_PopulatedPlace
      return WinRt.WString;

      function get_Capital
      return WinRt.WString;

      function get_AdminDistrictCapital
      return WinRt.WString;

      function get_CountryRegionCapital
      return WinRt.WString;

      function get_RoadShield
      return WinRt.WString;

      function get_RoadExit
      return WinRt.WString;

      function get_Transit
      return WinRt.WString;

      function get_Political
      return WinRt.WString;

      function get_CountryRegion
      return WinRt.WString;

      function get_AdminDistrict
      return WinRt.WString;

      function get_District
      return WinRt.WString;

      function get_Structure
      return WinRt.WString;

      function get_Building
      return WinRt.WString;

      function get_EducationBuilding
      return WinRt.WString;

      function get_MedicalBuilding
      return WinRt.WString;

      function get_TransitBuilding
      return WinRt.WString;

      function get_Transportation
      return WinRt.WString;

      function get_Road
      return WinRt.WString;

      function get_ControlledAccessHighway
      return WinRt.WString;

      function get_HighSpeedRamp
      return WinRt.WString;

      function get_Highway
      return WinRt.WString;

      function get_MajorRoad
      return WinRt.WString;

      function get_ArterialRoad
      return WinRt.WString;

      function get_Street
      return WinRt.WString;

      function get_Ramp
      return WinRt.WString;

      function get_UnpavedStreet
      return WinRt.WString;

      function get_TollRoad
      return WinRt.WString;

      function get_Railway
      return WinRt.WString;

      function get_Trail
      return WinRt.WString;

      function get_WaterRoute
      return WinRt.WString;

      function get_Water
      return WinRt.WString;

      function get_River
      return WinRt.WString;

      function get_RouteLine
      return WinRt.WString;

      function get_WalkingRoute
      return WinRt.WString;

      function get_DrivingRoute
      return WinRt.WString;

   end MapStyleSheetEntries;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package MapStyleSheetEntryStates is

      function get_Disabled
      return WinRt.WString;

      function get_Hover
      return WinRt.WString;

      function get_Selected
      return WinRt.WString;

   end MapStyleSheetEntryStates;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTargetCameraChangedEventArgs

   overriding procedure Initialize (this : in out MapTargetCameraChangedEventArgs);
   overriding procedure Finalize (this : in out MapTargetCameraChangedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTargetCameraChangedEventArgs

   function Constructor return MapTargetCameraChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTargetCameraChangedEventArgs

   function get_Camera
   (
      this : in out MapTargetCameraChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCamera'Class;

   function get_ChangeReason
   (
      this : in out MapTargetCameraChangedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileBitmapRequest

   overriding procedure Initialize (this : in out MapTileBitmapRequest);
   overriding procedure Finalize (this : in out MapTileBitmapRequest);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileBitmapRequest

   function Constructor return MapTileBitmapRequest;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileBitmapRequest

   function get_PixelData
   (
      this : in out MapTileBitmapRequest
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStreamReference;

   procedure put_PixelData
   (
      this : in out MapTileBitmapRequest;
      value : Windows.Storage.Streams.IRandomAccessStreamReference
   );

   function GetDeferral
   (
      this : in out MapTileBitmapRequest
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileBitmapRequestDeferral

   overriding procedure Initialize (this : in out MapTileBitmapRequestDeferral);
   overriding procedure Finalize (this : in out MapTileBitmapRequestDeferral);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileBitmapRequestDeferral

   function Constructor return MapTileBitmapRequestDeferral;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileBitmapRequestDeferral

   procedure Complete
   (
      this : in out MapTileBitmapRequestDeferral
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileBitmapRequestedEventArgs

   overriding procedure Initialize (this : in out MapTileBitmapRequestedEventArgs);
   overriding procedure Finalize (this : in out MapTileBitmapRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileBitmapRequestedEventArgs

   function Constructor return MapTileBitmapRequestedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileBitmapRequestedEventArgs

   function get_X
   (
      this : in out MapTileBitmapRequestedEventArgs
   )
   return WinRt.Int32;

   function get_Y
   (
      this : in out MapTileBitmapRequestedEventArgs
   )
   return WinRt.Int32;

   function get_ZoomLevel
   (
      this : in out MapTileBitmapRequestedEventArgs
   )
   return WinRt.Int32;

   function get_Request
   (
      this : in out MapTileBitmapRequestedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest'Class;

   function get_FrameIndex
   (
      this : in out MapTileBitmapRequestedEventArgs
   )
   return WinRt.Int32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileSource

   overriding procedure Initialize (this : in out MapTileSource);
   overriding procedure Finalize (this : in out MapTileSource);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileSource

   function Constructor
   (
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapTileSource;

   function Constructor
   (
      dataSource : Windows.UI.Xaml.Controls.Maps.MapTileDataSource'Class;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapTileSource;

   function Constructor
   (
      dataSource : Windows.UI.Xaml.Controls.Maps.MapTileDataSource'Class;
      zoomLevelRange : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapTileSource;

   function Constructor
   (
      dataSource : Windows.UI.Xaml.Controls.Maps.MapTileDataSource'Class;
      zoomLevelRange : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;
      bounds : Windows.Devices.Geolocation.GeoboundingBox'Class;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapTileSource;

   function Constructor
   (
      dataSource : Windows.UI.Xaml.Controls.Maps.MapTileDataSource'Class;
      zoomLevelRange : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;
      bounds : Windows.Devices.Geolocation.GeoboundingBox'Class;
      tileSizeInPixels : WinRt.Int32;
      baseInterface : WinRt.IInspectable;
      innerInterface : access WinRt.IInspectable
   )
   return MapTileSource;

   -----------------------------------------------------------------------------
   -- Static Interfaces for MapTileSource

   function get_DataSourceProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_LayerProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ZoomLevelRangeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_BoundsProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_AllowOverstretchProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_IsFadingEnabledProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_IsTransparencyEnabledProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_IsRetryEnabledProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_ZIndexProperty_MapTileSource
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_TilePixelSizeProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_VisibleProperty_MapTileSource
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_AnimationStateProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_AutoPlayProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_FrameCountProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   function get_FrameDurationProperty
   return WinRt.Windows.UI.Xaml.DependencyProperty;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileSource

   function get_DataSource
   (
      this : in out MapTileSource
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileDataSource'Class;

   procedure put_DataSource
   (
      this : in out MapTileSource;
      value : Windows.UI.Xaml.Controls.Maps.MapTileDataSource'Class
   );

   function get_Layer
   (
      this : in out MapTileSource
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileLayer;

   procedure put_Layer
   (
      this : in out MapTileSource;
      value : Windows.UI.Xaml.Controls.Maps.MapTileLayer
   );

   function get_ZoomLevelRange
   (
      this : in out MapTileSource
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange;

   procedure put_ZoomLevelRange
   (
      this : in out MapTileSource;
      value : Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange
   );

   function get_Bounds
   (
      this : in out MapTileSource
   )
   return WinRt.Windows.Devices.Geolocation.GeoboundingBox'Class;

   procedure put_Bounds
   (
      this : in out MapTileSource;
      value : Windows.Devices.Geolocation.GeoboundingBox'Class
   );

   function get_AllowOverstretch
   (
      this : in out MapTileSource
   )
   return WinRt.Boolean;

   procedure put_AllowOverstretch
   (
      this : in out MapTileSource;
      value : WinRt.Boolean
   );

   function get_IsFadingEnabled
   (
      this : in out MapTileSource
   )
   return WinRt.Boolean;

   procedure put_IsFadingEnabled
   (
      this : in out MapTileSource;
      value : WinRt.Boolean
   );

   function get_IsTransparencyEnabled
   (
      this : in out MapTileSource
   )
   return WinRt.Boolean;

   procedure put_IsTransparencyEnabled
   (
      this : in out MapTileSource;
      value : WinRt.Boolean
   );

   function get_IsRetryEnabled
   (
      this : in out MapTileSource
   )
   return WinRt.Boolean;

   procedure put_IsRetryEnabled
   (
      this : in out MapTileSource;
      value : WinRt.Boolean
   );

   function get_ZIndex
   (
      this : in out MapTileSource
   )
   return WinRt.Int32;

   procedure put_ZIndex
   (
      this : in out MapTileSource;
      value : WinRt.Int32
   );

   function get_TilePixelSize
   (
      this : in out MapTileSource
   )
   return WinRt.Int32;

   procedure put_TilePixelSize
   (
      this : in out MapTileSource;
      value : WinRt.Int32
   );

   function get_Visible
   (
      this : in out MapTileSource
   )
   return WinRt.Boolean;

   procedure put_Visible
   (
      this : in out MapTileSource;
      value : WinRt.Boolean
   );

   function get_AnimationState
   (
      this : in out MapTileSource
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileAnimationState;

   function get_AutoPlay
   (
      this : in out MapTileSource
   )
   return WinRt.Boolean;

   procedure put_AutoPlay
   (
      this : in out MapTileSource;
      value : WinRt.Boolean
   );

   function get_FrameCount
   (
      this : in out MapTileSource
   )
   return WinRt.Int32;

   procedure put_FrameCount
   (
      this : in out MapTileSource;
      value : WinRt.Int32
   );

   function get_FrameDuration
   (
      this : in out MapTileSource
   )
   return WinRt.Windows.Foundation.TimeSpan;

   procedure put_FrameDuration
   (
      this : in out MapTileSource;
      value : Windows.Foundation.TimeSpan
   );

   procedure Pause
   (
      this : in out MapTileSource
   );

   procedure Play
   (
      this : in out MapTileSource
   );

   procedure Stop
   (
      this : in out MapTileSource
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileUriRequest

   overriding procedure Initialize (this : in out MapTileUriRequest);
   overriding procedure Finalize (this : in out MapTileUriRequest);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileUriRequest

   function Constructor return MapTileUriRequest;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileUriRequest

   function get_Uri
   (
      this : in out MapTileUriRequest
   )
   return WinRt.Windows.Foundation.Uri'Class;

   procedure put_Uri
   (
      this : in out MapTileUriRequest;
      value : Windows.Foundation.Uri'Class
   );

   function GetDeferral
   (
      this : in out MapTileUriRequest
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral'Class;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileUriRequestDeferral

   overriding procedure Initialize (this : in out MapTileUriRequestDeferral);
   overriding procedure Finalize (this : in out MapTileUriRequestDeferral);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileUriRequestDeferral

   function Constructor return MapTileUriRequestDeferral;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileUriRequestDeferral

   procedure Complete
   (
      this : in out MapTileUriRequestDeferral
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for MapTileUriRequestedEventArgs

   overriding procedure Initialize (this : in out MapTileUriRequestedEventArgs);
   overriding procedure Finalize (this : in out MapTileUriRequestedEventArgs);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for MapTileUriRequestedEventArgs

   function Constructor return MapTileUriRequestedEventArgs;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for MapTileUriRequestedEventArgs

   function get_X
   (
      this : in out MapTileUriRequestedEventArgs
   )
   return WinRt.Int32;

   function get_Y
   (
      this : in out MapTileUriRequestedEventArgs
   )
   return WinRt.Int32;

   function get_ZoomLevel
   (
      this : in out MapTileUriRequestedEventArgs
   )
   return WinRt.Int32;

   function get_Request
   (
      this : in out MapTileUriRequestedEventArgs
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.MapTileUriRequest'Class;

   function get_FrameIndex
   (
      this : in out MapTileUriRequestedEventArgs
   )
   return WinRt.Int32;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreetsideExperience

   overriding procedure Initialize (this : in out StreetsideExperience);
   overriding procedure Finalize (this : in out StreetsideExperience);

   -----------------------------------------------------------------------------
   -- RuntimeClass Constructors for StreetsideExperience

   function Constructor
   (
      panorama : Windows.UI.Xaml.Controls.Maps.StreetsidePanorama'Class
   )
   return StreetsideExperience;

   function Constructor
   (
      panorama : Windows.UI.Xaml.Controls.Maps.StreetsidePanorama'Class;
      headingInDegrees : WinRt.Double;
      pitchInDegrees : WinRt.Double;
      fieldOfViewInDegrees : WinRt.Double
   )
   return StreetsideExperience;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreetsideExperience

   function get_AddressTextVisible
   (
      this : in out StreetsideExperience
   )
   return WinRt.Boolean;

   procedure put_AddressTextVisible
   (
      this : in out StreetsideExperience;
      value : WinRt.Boolean
   );

   function get_CursorVisible
   (
      this : in out StreetsideExperience
   )
   return WinRt.Boolean;

   procedure put_CursorVisible
   (
      this : in out StreetsideExperience;
      value : WinRt.Boolean
   );

   function get_OverviewMapVisible
   (
      this : in out StreetsideExperience
   )
   return WinRt.Boolean;

   procedure put_OverviewMapVisible
   (
      this : in out StreetsideExperience;
      value : WinRt.Boolean
   );

   function get_StreetLabelsVisible
   (
      this : in out StreetsideExperience
   )
   return WinRt.Boolean;

   procedure put_StreetLabelsVisible
   (
      this : in out StreetsideExperience;
      value : WinRt.Boolean
   );

   function get_ExitButtonVisible
   (
      this : in out StreetsideExperience
   )
   return WinRt.Boolean;

   procedure put_ExitButtonVisible
   (
      this : in out StreetsideExperience;
      value : WinRt.Boolean
   );

   function get_ZoomButtonsVisible
   (
      this : in out StreetsideExperience
   )
   return WinRt.Boolean;

   procedure put_ZoomButtonsVisible
   (
      this : in out StreetsideExperience;
      value : WinRt.Boolean
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for StreetsidePanorama

   overriding procedure Initialize (this : in out StreetsidePanorama);
   overriding procedure Finalize (this : in out StreetsidePanorama);

   -----------------------------------------------------------------------------
   -- Static Interfaces for StreetsidePanorama

   function FindNearbyAsync
   (
      location : Windows.Devices.Geolocation.Geopoint'Class
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.StreetsidePanorama;

   function FindNearbyAsync
   (
      location : Windows.Devices.Geolocation.Geopoint'Class;
      radiusInMeters : WinRt.Double
   )
   return WinRt.Windows.UI.Xaml.Controls.Maps.StreetsidePanorama;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for StreetsidePanorama

   function get_Location
   (
      this : in out StreetsidePanorama
   )
   return WinRt.Windows.Devices.Geolocation.Geopoint'Class;

end;
