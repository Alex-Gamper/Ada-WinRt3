--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Perception is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IPerceptionTimestamp_Interface is interface and WinRt.IInspectable_Interface;
   type IPerceptionTimestamp is access all IPerceptionTimestamp_Interface'Class;
   type IPerceptionTimestamp_Ptr is access all IPerceptionTimestamp;

   type IPerceptionTimestamp2_Interface is interface and WinRt.IInspectable_Interface;
   type IPerceptionTimestamp2 is access all IPerceptionTimestamp2_Interface'Class;

   type IPerceptionTimestampHelperStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IPerceptionTimestampHelperStatics is access all IPerceptionTimestampHelperStatics_Interface'Class;

   type IPerceptionTimestampHelperStatics2_Interface is interface and WinRt.IInspectable_Interface;
   type IPerceptionTimestampHelperStatics2 is access all IPerceptionTimestampHelperStatics2_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type PerceptionTimestamp is new Ada.Finalization.Limited_Controlled with
      record
         m_IPerceptionTimestamp : access Windows.Perception.IPerceptionTimestamp;
      end record;
   type PerceptionTimestamp_Ptr is access all PerceptionTimestamp;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IPerceptionTimestamp is interface and WinRt.IInspectable;

      function get_TargetTime
      (
         this : access IPerceptionTimestamp_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      function get_PredictionAmount
      (
         this : access IPerceptionTimestamp_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_IPerceptionTimestamp : aliased WinRt.IID := (2277656580, 41518, 19163, (186, 38, 215, 142, 246, 57, 188, 244 ));

   -----------------------------------------------------------------------------
   -- type IPerceptionTimestamp2 is interface and WinRt.IInspectable;

      function get_SystemRelativeTargetTime
      (
         this : access IPerceptionTimestamp2_Interface;
         RetVal : access Windows.Foundation.TimeSpan
      )
      return WinRt.Hresult is abstract;

      IID_IPerceptionTimestamp2 : aliased WinRt.IID := (3813980141, 11217, 16823, (158, 208, 116, 161, 92, 53, 69, 55 ));

   -----------------------------------------------------------------------------
   -- type IPerceptionTimestampHelperStatics is interface and WinRt.IInspectable;

      function FromHistoricalTargetTime
      (
         this : access IPerceptionTimestampHelperStatics_Interface;
         targetTime : Windows.Foundation.DateTime;
         RetVal : access Windows.Perception.IPerceptionTimestamp
      )
      return WinRt.Hresult is abstract;

      IID_IPerceptionTimestampHelperStatics : aliased WinRt.IID := (1202065876, 43487, 20188, (133, 93, 244, 211, 57, 217, 103, 172 ));

   -----------------------------------------------------------------------------
   -- type IPerceptionTimestampHelperStatics2 is interface and WinRt.IInspectable;

      function FromSystemRelativeTargetTime
      (
         this : access IPerceptionTimestampHelperStatics2_Interface;
         targetTime : Windows.Foundation.TimeSpan;
         RetVal : access Windows.Perception.IPerceptionTimestamp
      )
      return WinRt.Hresult is abstract;

      IID_IPerceptionTimestampHelperStatics2 : aliased WinRt.IID := (1943119870, 16313, 17777, (135, 212, 60, 146, 10, 94, 134, 235 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for PerceptionTimestamp

   overriding procedure Initialize (this : in out PerceptionTimestamp);
   overriding procedure Finalize (this : in out PerceptionTimestamp);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for PerceptionTimestamp

   function get_TargetTime
   (
      this : in out PerceptionTimestamp
   )
   return WinRt.Windows.Foundation.DateTime;

   function get_PredictionAmount
   (
      this : in out PerceptionTimestamp
   )
   return WinRt.Windows.Foundation.TimeSpan;

   function get_SystemRelativeTargetTime
   (
      this : in out PerceptionTimestamp
   )
   return WinRt.Windows.Foundation.TimeSpan;

   -----------------------------------------------------------------------------
   -- Static RuntimeClass
   package PerceptionTimestampHelper is

      function FromSystemRelativeTargetTime
      (
         targetTime : Windows.Foundation.TimeSpan
      )
      return WinRt.Windows.Perception.PerceptionTimestamp;

      function FromHistoricalTargetTime
      (
         targetTime : Windows.Foundation.DateTime
      )
      return WinRt.Windows.Perception.PerceptionTimestamp;

   end PerceptionTimestampHelper;

end;
