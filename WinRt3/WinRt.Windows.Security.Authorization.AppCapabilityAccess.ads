--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.System;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.Security.Authorization.AppCapabilityAccess is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type IAppCapability_Interface is interface and WinRt.IInspectable_Interface;
   type IAppCapability is access IAppCapability_Interface'Class;
   type IAppCapability_Ptr is access all IAppCapability;

   type IAppCapabilityAccessChangedEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type IAppCapabilityAccessChangedEventArgs is access IAppCapabilityAccessChangedEventArgs_Interface'Class;
   type IAppCapabilityAccessChangedEventArgs_Ptr is access all IAppCapabilityAccessChangedEventArgs;

   type IAppCapabilityStatics_Interface is interface and WinRt.IInspectable_Interface;
   type IAppCapabilityStatics is access IAppCapabilityStatics_Interface'Class;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type AppCapability is new Ada.Finalization.Limited_Controlled with
      record
         m_IAppCapability : access Windows.Security.Authorization.AppCapabilityAccess.IAppCapability;
      end record;
   type AppCapability_Ptr is access all AppCapability;

   type AppCapabilityAccessChangedEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_IAppCapabilityAccessChangedEventArgs : access Windows.Security.Authorization.AppCapabilityAccess.IAppCapabilityAccessChangedEventArgs;
      end record;
   type AppCapabilityAccessChangedEventArgs_Ptr is access all AppCapabilityAccessChangedEventArgs;

   -----------------------------------------------------------------------------
   -- Enum declarations
   -----------------------------------------------------------------------------

   type AppCapabilityAccessStatus is (
      DeniedBySystem_e,
      NotDeclaredByApp_e,
      DeniedByUser_e,
      UserPromptRequired_e,
      Allowed_e
   );
   for AppCapabilityAccessStatus use (
      DeniedBySystem_e => 0,
      NotDeclaredByApp_e => 1,
      DeniedByUser_e => 2,
      UserPromptRequired_e => 3,
      Allowed_e => 4
   );
   type AppCapabilityAccessStatus_Ptr is access all AppCapabilityAccessStatus;

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type IAppCapability is interface and WinRt.IInspectable;

      function get_CapabilityName
      (
         this : access IAppCapability_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function get_User
      (
         this : access IAppCapability_Interface;
         RetVal : access Windows.System.IUser
      )
      return WinRt.Hresult is abstract;

      function RequestAccessAsync
      (
         this : access IAppCapability_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function CheckAccess
      (
         this : access IAppCapability_Interface;
         RetVal : access Windows.Security.Authorization.AppCapabilityAccess.AppCapabilityAccessStatus
      )
      return WinRt.Hresult is abstract;

      function add_AccessChanged
      (
         this : access IAppCapability_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AccessChanged
      (
         this : access IAppCapability_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_IAppCapability : aliased WinRt.IID := (1279908117, 35370, 17045, (148, 55, 45, 247, 195, 150, 175, 244 ));

   -----------------------------------------------------------------------------
   -- type IAppCapabilityAccessChangedEventArgs is interface and WinRt.IInspectable;

      IID_IAppCapabilityAccessChangedEventArgs : aliased WinRt.IID := (173509909, 48599, 17790, (140, 202, 111, 83, 189, 46, 89, 68 ));

   -----------------------------------------------------------------------------
   -- type IAppCapabilityStatics is interface and WinRt.IInspectable;

      function RequestAccessForCapabilitiesAsync
      (
         this : access IAppCapabilityStatics_Interface;
         capabilityNames : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function RequestAccessForCapabilitiesForUserAsync
      (
         this : access IAppCapabilityStatics_Interface;
         user : Windows.System.IUser;
         capabilityNames : GenericObject;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function Create
      (
         this : access IAppCapabilityStatics_Interface;
         capabilityName : WinRt.HString;
         RetVal : access Windows.Security.Authorization.AppCapabilityAccess.IAppCapability
      )
      return WinRt.Hresult is abstract;

      function CreateWithProcessIdForUser
      (
         this : access IAppCapabilityStatics_Interface;
         user : Windows.System.IUser;
         capabilityName : WinRt.HString;
         pid : WinRt.UInt32;
         RetVal : access Windows.Security.Authorization.AppCapabilityAccess.IAppCapability
      )
      return WinRt.Hresult is abstract;

      IID_IAppCapabilityStatics : aliased WinRt.IID := (2083864106, 18158, 17637, (175, 61, 106, 211, 252, 73, 189, 34 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AppCapability

   overriding procedure Initialize (this : in out AppCapability);
   overriding procedure Finalize (this : in out AppCapability);

   -----------------------------------------------------------------------------
   -- Static Interfaces for AppCapability

   function RequestAccessForCapabilitiesAsync
   (
      capabilityNames : GenericObject
   )
   return WinRt.GenericObject;

   function RequestAccessForCapabilitiesForUserAsync
   (
      user : Windows.System.User'Class;
      capabilityNames : GenericObject
   )
   return WinRt.GenericObject;

   function Create
   (
      capabilityName : WinRt.WString
   )
   return WinRt.Windows.Security.Authorization.AppCapabilityAccess.AppCapability;

   function CreateWithProcessIdForUser
   (
      user : Windows.System.User'Class;
      capabilityName : WinRt.WString;
      pid : WinRt.UInt32
   )
   return WinRt.Windows.Security.Authorization.AppCapabilityAccess.AppCapability;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AppCapability

   function get_CapabilityName
   (
      this : in out AppCapability
   )
   return WinRt.WString;

   function get_User
   (
      this : in out AppCapability
   )
   return WinRt.Windows.System.User'Class;

   function RequestAccessAsync
   (
      this : in out AppCapability
   )
   return WinRt.Windows.Security.Authorization.AppCapabilityAccess.AppCapabilityAccessStatus;

   function CheckAccess
   (
      this : in out AppCapability
   )
   return WinRt.Windows.Security.Authorization.AppCapabilityAccess.AppCapabilityAccessStatus;

   function add_AccessChanged
   (
      this : in out AppCapability;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AccessChanged
   (
      this : in out AppCapability;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for AppCapabilityAccessChangedEventArgs

   overriding procedure Initialize (this : in out AppCapabilityAccessChangedEventArgs);
   overriding procedure Finalize (this : in out AppCapabilityAccessChangedEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for AppCapabilityAccessChangedEventArgs

end;
