--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2023 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--    Version   : 3.0.0.0                                                     --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with WinRt.Windows.Foundation;
with WinRt.Windows.Foundation.Collections;
limited with WinRt.Windows.Storage.Streams;
with Ada.Finalization;
--------------------------------------------------------------------------------
package WinRt.Windows.ApplicationModel.LockScreen is

   pragma PreElaborate;

   -----------------------------------------------------------------------------
   -- Forward Interface declarations
   -----------------------------------------------------------------------------

   type ILockApplicationHost_Interface is interface and WinRt.IInspectable_Interface;
   type ILockApplicationHost is access ILockApplicationHost_Interface'Class;
   type ILockApplicationHost_Ptr is access all ILockApplicationHost;

   type ILockApplicationHostStatics_Interface is interface and WinRt.IInspectable_Interface;
   type ILockApplicationHostStatics is access ILockApplicationHostStatics_Interface'Class;

   type ILockScreenBadge_Interface is interface and WinRt.IInspectable_Interface;
   type ILockScreenBadge is access ILockScreenBadge_Interface'Class;
   type ILockScreenBadge_Ptr is access all ILockScreenBadge;

   type ILockScreenInfo_Interface is interface and WinRt.IInspectable_Interface;
   type ILockScreenInfo is access ILockScreenInfo_Interface'Class;
   type ILockScreenInfo_Ptr is access all ILockScreenInfo;

   type ILockScreenUnlockingDeferral_Interface is interface and WinRt.IInspectable_Interface;
   type ILockScreenUnlockingDeferral is access ILockScreenUnlockingDeferral_Interface'Class;
   type ILockScreenUnlockingDeferral_Ptr is access all ILockScreenUnlockingDeferral;

   type ILockScreenUnlockingEventArgs_Interface is interface and WinRt.IInspectable_Interface;
   type ILockScreenUnlockingEventArgs is access ILockScreenUnlockingEventArgs_Interface'Class;
   type ILockScreenUnlockingEventArgs_Ptr is access all ILockScreenUnlockingEventArgs;

   -----------------------------------------------------------------------------
   -- Class declarations
   -----------------------------------------------------------------------------

   type LockApplicationHost is new Ada.Finalization.Limited_Controlled with
      record
         m_ILockApplicationHost : access Windows.ApplicationModel.LockScreen.ILockApplicationHost;
      end record;
   type LockApplicationHost_Ptr is access all LockApplicationHost;

   type LockScreenBadge is new Ada.Finalization.Limited_Controlled with
      record
         m_ILockScreenBadge : access Windows.ApplicationModel.LockScreen.ILockScreenBadge;
      end record;
   type LockScreenBadge_Ptr is access all LockScreenBadge;

   type LockScreenInfo is new Ada.Finalization.Limited_Controlled with
      record
         m_ILockScreenInfo : access Windows.ApplicationModel.LockScreen.ILockScreenInfo;
      end record;
   type LockScreenInfo_Ptr is access all LockScreenInfo;

   type LockScreenUnlockingDeferral is new Ada.Finalization.Limited_Controlled with
      record
         m_ILockScreenUnlockingDeferral : access Windows.ApplicationModel.LockScreen.ILockScreenUnlockingDeferral;
      end record;
   type LockScreenUnlockingDeferral_Ptr is access all LockScreenUnlockingDeferral;

   type LockScreenUnlockingEventArgs is new Ada.Finalization.Limited_Controlled with
      record
         m_ILockScreenUnlockingEventArgs : access Windows.ApplicationModel.LockScreen.ILockScreenUnlockingEventArgs;
      end record;
   type LockScreenUnlockingEventArgs_Ptr is access all LockScreenUnlockingEventArgs;

   -----------------------------------------------------------------------------
   -- Generic package declarations
   -----------------------------------------------------------------------------

   package IReference_UInt32 is new WinRt.Windows.Foundation.IReference (WinRt.UInt32);
   IID_IReference_UInt32 : aliased WinRt.IID := (3401339945, 23826, 21513, (185, 10, 22, 113, 134, 128, 72, 117 ));
   function QInterface_IReference_UInt32 is new Generic_QueryInterface (GenericObject_Interface, IReference_UInt32.Kind, IID_IReference_UInt32'Access);

   package IVectorView_ILockScreenBadge is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.Windows.ApplicationModel.LockScreen.ILockScreenBadge);
   IID_IVectorView_ILockScreenBadge : aliased WinRt.IID := (730044860, 59662, 20767, (190, 161, 231, 232, 77, 181, 204, 127 ));
   function QInterface_IVectorView_ILockScreenBadge is new Generic_QueryInterface (GenericObject_Interface, IVectorView_ILockScreenBadge.Kind, IID_IVectorView_ILockScreenBadge'Access);

   package IVectorView_HString is new WinRt.Windows.Foundation.Collections.IVectorView (WinRt.HString);
   IID_IVectorView_HString : aliased WinRt.IID := (730044860, 59662, 20767, (190, 161, 231, 232, 77, 181, 204, 127 ));
   function QInterface_IVectorView_HString is new Generic_QueryInterface (GenericObject_Interface, IVectorView_HString.Kind, IID_IVectorView_HString'Access);

   -----------------------------------------------------------------------------
   -- Interface declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- type ILockApplicationHost is interface and WinRt.IInspectable;

      function RequestUnlock
      (
         this : access ILockApplicationHost_Interface
      )
      return WinRt.Hresult is abstract;

      function add_Unlocking
      (
         this : access ILockApplicationHost_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_Unlocking
      (
         this : access ILockApplicationHost_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      IID_ILockApplicationHost : aliased WinRt.IID := (955134381, 55631, 20092, (129, 250, 79, 68, 54, 80, 98, 129 ));

   -----------------------------------------------------------------------------
   -- type ILockApplicationHostStatics is interface and WinRt.IInspectable;

      function GetForCurrentView
      (
         this : access ILockApplicationHostStatics_Interface;
         RetVal : access Windows.ApplicationModel.LockScreen.ILockApplicationHost
      )
      return WinRt.Hresult is abstract;

      IID_ILockApplicationHostStatics : aliased WinRt.IID := (4103056270, 9175, 20067, (150, 161, 102, 111, 245, 45, 59, 44 ));

   -----------------------------------------------------------------------------
   -- type ILockScreenBadge is interface and WinRt.IInspectable;

      function get_Logo
      (
         this : access ILockScreenBadge_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function get_Glyph
      (
         this : access ILockScreenBadge_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function get_Number
      (
         this : access ILockScreenBadge_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function get_AutomationName
      (
         this : access ILockScreenBadge_Interface;
         RetVal : access WinRt.HString
      )
      return WinRt.Hresult is abstract;

      function LaunchApp
      (
         this : access ILockScreenBadge_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ILockScreenBadge : aliased WinRt.IID := (3914401241, 11263, 19888, (155, 79, 56, 36, 119, 139, 156, 154 ));

   -----------------------------------------------------------------------------
   -- type ILockScreenInfo is interface and WinRt.IInspectable;

      function add_LockScreenImageChanged
      (
         this : access ILockScreenInfo_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_LockScreenImageChanged
      (
         this : access ILockScreenInfo_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_LockScreenImage
      (
         this : access ILockScreenInfo_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      function add_BadgesChanged
      (
         this : access ILockScreenInfo_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_BadgesChanged
      (
         this : access ILockScreenInfo_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_Badges
      (
         this : access ILockScreenInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_DetailTextChanged
      (
         this : access ILockScreenInfo_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_DetailTextChanged
      (
         this : access ILockScreenInfo_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_DetailText
      (
         this : access ILockScreenInfo_Interface;
         RetVal : access GenericObject
      )
      return WinRt.Hresult is abstract;

      function add_AlarmIconChanged
      (
         this : access ILockScreenInfo_Interface;
         handler : GenericObject;
         RetVal : access Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function remove_AlarmIconChanged
      (
         this : access ILockScreenInfo_Interface;
         token : Windows.Foundation.EventRegistrationToken
      )
      return WinRt.Hresult is abstract;

      function get_AlarmIcon
      (
         this : access ILockScreenInfo_Interface;
         RetVal : access Windows.Storage.Streams.IRandomAccessStream
      )
      return WinRt.Hresult is abstract;

      IID_ILockScreenInfo : aliased WinRt.IID := (4120553052, 38673, 19913, (166, 48, 149, 182, 203, 140, 218, 208 ));

   -----------------------------------------------------------------------------
   -- type ILockScreenUnlockingDeferral is interface and WinRt.IInspectable;

      function Complete
      (
         this : access ILockScreenUnlockingDeferral_Interface
      )
      return WinRt.Hresult is abstract;

      IID_ILockScreenUnlockingDeferral : aliased WinRt.IID := (2122128086, 20995, 17383, (155, 214, 124, 57, 71, 209, 227, 254 ));

   -----------------------------------------------------------------------------
   -- type ILockScreenUnlockingEventArgs is interface and WinRt.IInspectable;

      function GetDeferral
      (
         this : access ILockScreenUnlockingEventArgs_Interface;
         RetVal : access Windows.ApplicationModel.LockScreen.ILockScreenUnlockingDeferral
      )
      return WinRt.Hresult is abstract;

      function get_Deadline
      (
         this : access ILockScreenUnlockingEventArgs_Interface;
         RetVal : access Windows.Foundation.DateTime
      )
      return WinRt.Hresult is abstract;

      IID_ILockScreenUnlockingEventArgs : aliased WinRt.IID := (1155973127, 30203, 19131, (159, 139, 130, 71, 72, 144, 12, 113 ));

   -----------------------------------------------------------------------------
   -- Class method declarations
   -----------------------------------------------------------------------------

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LockApplicationHost

   overriding procedure Initialize (this : in out LockApplicationHost);
   overriding procedure Finalize (this : in out LockApplicationHost);

   -----------------------------------------------------------------------------
   -- Static Interfaces for LockApplicationHost

   function GetForCurrentView
   return WinRt.Windows.ApplicationModel.LockScreen.LockApplicationHost;

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LockApplicationHost

   procedure RequestUnlock
   (
      this : in out LockApplicationHost
   );

   function add_Unlocking
   (
      this : in out LockApplicationHost;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_Unlocking
   (
      this : in out LockApplicationHost;
      token : Windows.Foundation.EventRegistrationToken
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LockScreenBadge

   overriding procedure Initialize (this : in out LockScreenBadge);
   overriding procedure Finalize (this : in out LockScreenBadge);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LockScreenBadge

   function get_Logo
   (
      this : in out LockScreenBadge
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStream;

   function get_Glyph
   (
      this : in out LockScreenBadge
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStream;

   function get_Number
   (
      this : in out LockScreenBadge
   )
   return IReference_UInt32.Kind;

   function get_AutomationName
   (
      this : in out LockScreenBadge
   )
   return WinRt.WString;

   procedure LaunchApp
   (
      this : in out LockScreenBadge
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LockScreenInfo

   overriding procedure Initialize (this : in out LockScreenInfo);
   overriding procedure Finalize (this : in out LockScreenInfo);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LockScreenInfo

   function add_LockScreenImageChanged
   (
      this : in out LockScreenInfo;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_LockScreenImageChanged
   (
      this : in out LockScreenInfo;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_LockScreenImage
   (
      this : in out LockScreenInfo
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStream;

   function add_BadgesChanged
   (
      this : in out LockScreenInfo;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_BadgesChanged
   (
      this : in out LockScreenInfo;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_Badges
   (
      this : in out LockScreenInfo
   )
   return IVectorView_ILockScreenBadge.Kind;

   function add_DetailTextChanged
   (
      this : in out LockScreenInfo;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_DetailTextChanged
   (
      this : in out LockScreenInfo;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_DetailText
   (
      this : in out LockScreenInfo
   )
   return IVectorView_HString.Kind;

   function add_AlarmIconChanged
   (
      this : in out LockScreenInfo;
      handler : GenericObject
   )
   return WinRt.Windows.Foundation.EventRegistrationToken;

   procedure remove_AlarmIconChanged
   (
      this : in out LockScreenInfo;
      token : Windows.Foundation.EventRegistrationToken
   );

   function get_AlarmIcon
   (
      this : in out LockScreenInfo
   )
   return WinRt.Windows.Storage.Streams.IRandomAccessStream;

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LockScreenUnlockingDeferral

   overriding procedure Initialize (this : in out LockScreenUnlockingDeferral);
   overriding procedure Finalize (this : in out LockScreenUnlockingDeferral);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LockScreenUnlockingDeferral

   procedure Complete
   (
      this : in out LockScreenUnlockingDeferral
   );

   -----------------------------------------------------------------------------
   -- RuntimeClass Initialization/Finalization for LockScreenUnlockingEventArgs

   overriding procedure Initialize (this : in out LockScreenUnlockingEventArgs);
   overriding procedure Finalize (this : in out LockScreenUnlockingEventArgs);

   -----------------------------------------------------------------------------
   -- Implemented Interfaces for LockScreenUnlockingEventArgs

   function GetDeferral
   (
      this : in out LockScreenUnlockingEventArgs
   )
   return WinRt.Windows.ApplicationModel.LockScreen.LockScreenUnlockingDeferral'Class;

   function get_Deadline
   (
      this : in out LockScreenUnlockingEventArgs
   )
   return WinRt.Windows.Foundation.DateTime;

end;
